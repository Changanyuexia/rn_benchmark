commits,release
"v0.5.3
Fixes, adds test for passthroughall.
Fixes by switching to `recursive-copy` instead of `fs-extra`
Test for
Fixes
A little refactor for
Fixes
Fixes
Working implementation of `permalink: false` to fix
Adds newest bugs link to readme
Unnecessary var
Cleanup
Fixes, normalizes front matter tags to always be an array when fetched. Maintains backwards compatibility.
Better debug error stack trace formatting
Config tests have side effects, need to be .reset() until refactored
Adds new plugin options to support new features for eleventy-plugin-syntaxhighlight v2.0.0
v0.5.4","Eleventy is a simpler Static Site Generator!
https://www.11ty.io/
Documentation at v0-5-4.11ty.io
Support Eleventy by starring us on GitHub! This will increase our project’s visibility on staticgen.com, a big giant list of static site generators.
Follow us on Twitter @​eleven_ty!
Changelog
Adds permalink: false option to bypass writing a template to the output directory. Set this in front matter, template or directory data files, or even a JS data file if you want to do conditional output of templates based on Environment variables. ()
Improved error messaging, specifically with:
Errors in configuration files ()
Missing Filters in Liquid templates (), note the opt-in to a strict_filters Liquid option: https://www.11ty.io/docs/languages/liquid/#optional%3A-use-your-own-options
Improved messaging about DEBUG mode when in DEBUG mode ()
Adds Linters feature to inspect output content. ()
Behind the scenes additions to addPlugin to facilitate more configuration options for eleventy-plugin-syntaxhighlight v2.0 https://github.com/11ty/eleventy-plugin-syntaxhighlight/releases/tag/v2.0.0
Documentation
The .eleventyignore docs page got lost when we moved from GitHub, it now exists here: https://www.11ty.io/docs/ignores/ ()
@kleinfreund added a lovely Environment variables example to the documentation (using JS Data Files)
Docs: https://www.11ty.io/docs/data-js/#example%3A-exposing-environment-variables
Bug fixes
Fixes major issue with --passthroughall flag ()
Docs: https://www.11ty.io/docs/copy/#passthrough-all-content
Tags in template objects will always be normalized to array form, if even using a single tag string in front matter data ()
Docs: https://www.11ty.io/docs/collections/#a-single-tag%3A-cat
Fixed an issue when crossover existed between multiple passthrough copy targets () (e.g. ./css/fonts and ./css/fonts/myFont.woff2, for example)
Milestone
Issues fixed in v0.5.4 Milestone
Dependency Semver Major Updates
None"
"v1.0.1
fix liquid template argument parsing
	- fixes undefined arguments in shortcodes and potentially other uses
	- fixes and
Cherry pick of 4c710d68965b0d0d19d9a6e7e76b1004f4e6e4e1
Cherry pick https://github.com/11ty/eleventy/pull/2369#issuecomment-1121560097
Bump dependencies (no major version bumps on deps, only devdeps)
v1.0.2
v1.0.2 code coverage","Eleventy v1.0.2
Full docs for v1.0.2 on our web site
This project would not be possible without our lovely community. Thank you to everyone that built something with Eleventy (×595 authors on our web site!), wrote a blog post about Eleventy, contributed code to core or plugins, documentation, asked questions, answered questions, braved The Leaderboards, participated on Discord, filed issues, attended (or organized!) a meetup, said a kind word on Twitter .
A super special thanks to Peter DeHaan for their tireless contributions on the Eleventy Issue tracker.
All of our supporters on Open Collective
Gold Sponsors: Sanity.io, Nordhealth, CloudCannon and Silver Sponsors: Set Creative Studio, Unabridged Software, PQINA, The Coders Guild, Bejamas, Nathan Smith, Flatirons Development, Monarch Air Group, Ben Nash, getform.io, OCEG, Mercury Jets
A full list of Backers can be found below!
Contribute on Open Collective
How else can you contribute to Eleventy?
Install or Upgrade
Install to your local project: npm install @11ty/eleventy
Already installed in your local project? Upgrade your version: npm update @11ty/eleventy
Read more about local project versus global installation
Features
Fixes for liquid argument parsing on shortcodes
Help from @epelc @lexoyo @denisenadal @mahnunchik @harttle
Milestone
All bug fix issues can be perused at the GitHub milestone:
Major Version Dependency Upgrades
There are no major version dependency updates between 1.0.2 and 1.0.1.
THANK YOU NOTES
Gold Sponsors: Sanity.io, Nordhealth, CloudCannon
Silver Sponsors: Set Creative Studio, Unabridged Software, PQINA, The Coders Guild, Bejamas, Nathan Smith, Flatirons Development, Monarch Air Group, Ben Nash, getform.io, OCEG, Mercury Jets
OpenCollective Monthly Backers: Viljami Salminen, Tyler Gaw, Peter deHaan, Melanie Sumner, Alejandro Rodríguez, Mat Marquis, Philip Borenstein, Jérôme Coupé, Max Böck, Bryce Wray, Kristof Michiels, Nicolas Hoizey, Mike Aparicio, Ben Myers, Katie Sylor-Miller, Mark Buskbjerg, mortendk, Aaron Hans, Lauris Consulting, John Meyerhofer, Todd Libby, Luke Bonaccorsi, Dimitrios Grammatikogiannis, Wellness Researched, Devin Clark, Eric Bailey, Dave Rupert, Manuel Matuzovic, Phil Hawksworth, shawn j sandy, Jenn Schiffer, Tianyu Ge, Kyosuke Nakamura, Hans Gerwitz, Makoto Kawasaki, Horacio Gonzalez, Matthew Tole, Ivan Buncic, Rob Sterlini, Mark Boulton, Søren Birkemeyer, Richard  Hemmer, Nick Nisi, Andrew Harvard, John SJ Anderson, Ryan Swaney, Tim Giles, Alistair Shepherd, Ivo Herrmann, Flaki, John Hall, Scott McCracken, James Steinbach, Miriam Suzanne, Bentley Davis, Angelique Weger, vince falconi, Martin Schneider, Stephanie Eckles, Frontend Weekly Tokyo, Ferpection, Josh Crain, Chris Burnell, Ximenav Vf., Juan Miguel, Rich Holman, Kasper Storgaard, Kevin Healy, Greg Gibson, Hidde, Michelle Barker, Alesandro Ortiz, David A. Herron, Paul Robert Lloyd, Andrea Vaghi, Bryan Robinson, Ashur Cabrera, Raymond Camden, John Meguerian, Joe Lamyman, Jeffrey A Morgan, Brett Nelson, Paul Welsh, Ingo Steinke, Melanie Richards, Dorin Vancea, Marco Zehe, Wes Ruvalcaba, Luc Poupard, Entle Web Solutions, Ken Hawkins, Ara Abcarians, Fershad Irani, Nikita Dubko, Aaron Gustafson, Chris, Sam, Benjamin Geese, Marcus Relacion, Netin nopeustesti, Bobby Ray, Christian Miles, Cthos, Sia Karamalegos, Daniel Ryan, Raphael Höser, Noel Forte, Saneef Ansari, Flemming Meyer, Colin Fahrion, Dan Burzo, Jon Kuperman, Dan Ott, Mobilemall.pk, Cheap VPS, David Darnes, Jon Roobottom, Dana Byerly, Oisín Quinn, Renkaatsopivasti, Windesol Sähkön Kilpailutus, Luke Mitchell, SignpostMarv, THE PADDING, Bob Monsour, Patrick Byrne, zapscribbles, Frank Reding, quinnanya, Richmond Insulation, Cory Birdsong, Aram ZS, Michel van der Kroef, Vinicius Depizzol, Andy Stevenson, HelppoHinta.fi, Tanner Dolby, jpoehnelt, Ingo Sobolewski, Andrew Weisbeck, Richmond Concrete, Tom, CelineDesign, Nic Chan, Duc Lam, Alex Zappa, Stephen Bell, Brett DeWoody, alistairtweedie, Meta Tier List, Robert Haselbacher, Lene"
"v0.8.2
A few more linter/transform tests.
forces uses of posix path separator in url normalization
Updates license year
Try again after was merged.
The only remaining test failure for Windows per https://travis-ci.org/11ty/eleventy/jobs/518833095
Ugh, okay one more time for
Fixes
Fixes
Fix getAllDirs not handling segments of equal name
Just another test for, why not
Fixes
Add test for async addCollection
Fixes
Update version to 0.8.3
Coverage stats for 0.8.3
Make tests work with out of order results.
Remove build status from the README (Windows tests on Jenkins are a little bit unreliable, but even so I’d rather keep those around)","Eleventy is a Simpler Static Site Generator.
v0.8.3 Documentation
Support Eleventy:
Starring us on GitHub! This will increase our project’s visibility on staticgen.com, a big giant list of static site generators.
Follow us on Twitter @​eleven_ty!
Join 15 other lovely people and become an Eleventy Open Collective Supporter!
Install
Install to your Local project (preferred): npm install @11ty/eleventy
Already installed in your local project? Upgrade your version: npm update @11ty/eleventy
Want to install globally? npm install -g @11ty/eleventy
Already installed globally? Upgrade your Global version: npm update -g @11ty/eleventy
Read more about local versus global installation
Changelog
Bug fixes
Fix for Nunjucks issue with too many Shortcodes (Maximum call stack exceeded)
Fix for permalinks in markdown files when markdownTemplateEngine is false
Regression around missing data files when directory names repeated in the path
Fix when using pagination in a layout and a Tried to use templateContent too early error would be thrown
Fix for url filter on Windows Thank you @AndrewAsquith!
Enhancements
Travis CI builds now run on Windows!
NPM Audits
None
Dependency Major Release Bumps
None
Administration
Issues fixed in v0.8.3 Milestone
All code changes from v0.8.2 to v0.8.3
Code coverage stats for v0.8.3"
"0.7.0 coverage
Remove unused imports
Fixes
Adds collection iteration test
Giant refactor of Eleventy.js to use new class syntax.
More travis operating systems.
Walk back Windows test boxes on travis as there are a few broken tests in there (needs revisiting)
Version 0.7.1 quick maintenance release.","Eleventy  is a Simpler Static Site Generator.
Documentation at v0-7-1.11ty.io
Support Eleventy by starring us on GitHub! This will increase our project’s visibility on staticgen.com, a big giant list of static site generators.
Follow us on Twitter @​eleven_ty!
Install
Local project: npm install @11ty/eleventy
Global: npm install -g @11ty/eleventy
Read more about local versus global installation
Upgrade
Local project: npm update @11ty/eleventy
Global: npm update -g @11ty/eleventy
Changelog
Adds Mac OS as a Travis CI test target.
Bug fixes
Requiring a module that doesn’t exist  Thanks @kleinfreund!
Fixes major performance regression in --watch performance
Milestone
Issues fixed in v0.7.1 Milestone
Dependency Major Release Bumps
None"
"New coverage stats
Adds tests for
Add collections.all refs to tests for
Fixes
Had to remove this test for Windows. Not sure why it’s there since path.resolve requires String arguments in the spec and errors (correctly) on Windows when undefined is passed in.
Assist for
inputDir passed to TemplatePassthrough
Fixes
Allows eleventy version checking and errors in downstream projects.

eleventyConfig.versionCheck(""v0.3.1"")
Fixes.
Adds tests for.
Ensures `TemplatePassthrough` target’s subdirectory structure is retained.
Fixes - Prevent partial matches when filtering tag(s).
Test for
Fixes
Couple more tests for
Fixes
v0.3.1","Eleventy is a simpler Static Site Generator!
https://www.11ty.io/
Getting Started Quick Guide
Support Eleventy by starring us on GitHub! This will increase our project’s visibility on staticgen.com, a big giant list of static site generators.
Changelog
Update .eleventy.js Configuration during --watch and Eleventy will reload everything for you transparently:
Gets the test suite passing on Windows 10 :
Fixes a bug with Passthrough Copy files and input directories that were not ""."":. Thanks @Wilto!
Adds an easy way to namespace plugins (a group of filters, tags, helpers, collections, etc) with the Configuration API:
Fixes a bug with collections and tags when tags were assigned as a string in front matter: tags: mytag. Thanks @Wilto!
Fixes a bug with templateEngineOverride and permalink adding markdown paragraphs.
Milestone
Bugs fixed in Milestone
Dependency semver Major Version Upgrades:
None"
"Couple of missed renames.
Link was wrong.
v0.2.2","Installation
npm install --save-dev @11ty/eleventy
WARNING npm package name has been renamed to use the @11ty scope. Install using @11ty/eleventy. Previous version (eleventy-cli) is now deprecated (but still works as is). Sorry, y’all—for proper code organization and future maintenance I needed to pull that bandaid off as soon as possible.
Links
README
List all issues closed
Release notes
Tagged content and collections! Add a tags list to your front matter and use the collections.tagName variables in your data. Read more about Collections and Tags
Adds friendly warning message if you don’t meet minimum Node version requirement (version 8+)
Worth noting explicitly that unlike Jekyll, files and directories that start with an underscore are processed.
Adds continuous integration with Travis CI
A little help from my friends
With a pull request from @aakoch—thanks!
For our version naming pattern, major and minor versions are combined with https://en.wiktionary.org/wiki/eleventy"
"v0.3.3
specify ejs on example
Add per template times to output
More caching, more speed.
* Trying to use a shallow clone when creating collections instead of deep (for speed)
* Adds eleventyConfig.setDynamicPermalinks and FRONT_MATTER.dynamicPermalink options to disable rendering of permalinks for speed
Only show per ms numbers with more than 10 templates
Default dynamicPermalinks to true, obvs
Remove deep clone code
Fixes
Adds better `page` docs, including examples for
Add version info to `fileSlug`.
Add an EleventyExtensionMap to map from keys in templateFormats to file extensions.
Add link to enhancement backlog
Backlog link needs to include closed issues.
Dry run language
Refactor to prepare for
We aren’t actually using copyTimes
Re-runs on changes to both _includes and _data directories when --watching. Fixes
Fixes. Now re-runs on changes to passthrough files/dirs
Directory needs to exist for
Test for
Get rid of unnecessary static
Rename class
Switch to Browsersync for --serve (seamless reloads when watch finishes). Works transparently with `pathPrefix` to emulate the subdirectory specified in your config file. Smart reloads CSS files: 1. If they are in _includes, reload the entire page (css files included directly in <style>). 2. If they are anywhere else, injects them without reload.
v0.3.4","Eleventy is a simpler Static Site Generator!
https://www.11ty.io/
Getting Started Quick Guide
Support Eleventy by starring us on GitHub! This will increase our project’s visibility on staticgen.com, a big giant list of static site generators.
Follow us on Twitter @​eleven_ty!
Changelog
Switches --serve mode to use browser-sync. Smarter reloads (and CSS) --serve automatically does a --watch (you don’t need both).
--watch now works with passthrough copy files () AND data files ().
Adds new page.fileSlug variable for easier clean permalinks ():
More inputPath => fileSlug examples:
2018-01-01-file.md       => file
dir/file.md              => file
Returns parent directory if an `index` template
index.md                 => """" (empty)
dir/index.md             => dir
dir/2018-01-01-index.md  => dir
Huge performance boost (switched an unnecessary deep clone to shallow)
Milestone
Bugs fixed in Milestone
Dependency semver Major Version Upgrades:
None"
"Made another commit to 0.11.0
Adds afterBuild/beforeBuild events, adds argument to beforeWatch event to pass in the files that changed.
v0.11.1","v0.11.1 Documentation
Install or Upgrade
Install to your local project: npm install @11ty/eleventy
Already installed in your local project? Upgrade your version: npm update @11ty/eleventy
Read more about local project versus global installation
How can you support Eleventy?
Star us on GitHub!
Follow us on Twitter @​eleven_ty!
Support us on Open Collective!
Thank you to everyone that contributed code, documentation, answered questions, filed issues, said a kind word on Twitter
The TL;DR List
New Build Events
afterBuild, beforeBuild and Changed Files argument passed to beforeWatch
Documentation: https://www.11ty.dev/docs/events/
Administration
Issues fixed in v0.11.1 Milestone
All code changes from v0.11.0 to v0.11.1"
"Release procedure notes. Would be better if this lived on 11ty.io but it’s going here for now.
Fixes, fixes
v0.8.1","Eleventy is a Simpler Static Site Generator.
v0.8.1 Documentation
Support Eleventy:
Starring us on GitHub! This will increase our project’s visibility on staticgen.com, a big giant list of static site generators.
Follow us on Twitter @​eleven_ty!
Join 14 other lovely people and become an Eleventy Open Collective Supporter!
Install
Install to your Local project (preferred): npm install @11ty/eleventy
Already installed in your local project? Upgrade your version: npm update @11ty/eleventy
Want to install globally? npm install -g @11ty/eleventy
Already installed globally? Upgrade your Global version: npm update -g @11ty/eleventy
Read more about local versus global installation
Changelog
Bug fixes
Eleventy was not paginating correctly with data: collections Fixes
Eleventy was not paginating correctly with data: collections.all Fixes
NPM Audits
None
Dependency Major Release Bumps
None
Administration
Issues fixed in v0.8.1 Milestone
All code changes from v0.8.0 to v0.8.1
Code coverage stats for v0.8.1"
"v0.8.1
Fix jenkins builds (just ordering problems in the tests)
Try again
Walk back, still a few failures.
Fixes
v0.8.2","Eleventy is a Simpler Static Site Generator.
v0.8.2 Documentation
Support Eleventy:
Starring us on GitHub! This will increase our project’s visibility on staticgen.com, a big giant list of static site generators.
Follow us on Twitter @​eleven_ty!
Join 14 other lovely people and become an Eleventy Open Collective Supporter!
Install
Install to your Local project (preferred): npm install @11ty/eleventy
Already installed in your local project? Upgrade your version: npm update @11ty/eleventy
Want to install globally? npm install -g @11ty/eleventy
Already installed globally? Upgrade your Global version: npm update -g @11ty/eleventy
Read more about local versus global installation
Changelog
Bug fixes
Eleventy was not applying linters and transforms to templates with layouts correctly Fixes
NPM Audits
None
Dependency Major Release Bumps
None
Administration
Issues fixed in v0.8.2 Milestone
All code changes from v0.8.1 to v0.8.2
Code coverage stats for v0.8.2"
"Benchmark test failure needs adjustment.
Fixes https://github.com/11ty/eleventy/issues/1701
Per note on https://www.npmjs.com/package/please-upgrade-node#options to have maximum compatibility with old node, switches to good ol’ concat. https://github.com/11ty/eleventy/issues/1701
v0.12.1","v0.12.1 Documentation
Install or Upgrade
Install to your local project: npm install @11ty/eleventy
Already installed in your local project? Upgrade your version: npm update @11ty/eleventy
Read more about local project versus global installation
How can you support Eleventy?
Star us on GitHub!
Follow us on Twitter @​eleven_ty!
Support us on Open Collective!
Thank you to everyone that contributed code, documentation, answered questions, filed issues, said a kind word on Twitter
The TL;DR List
Fix for error messaging when attempting to use Node 8
As of Eleventy v0.12.0, Node 10 is now required. Node 8 is end of life (EOL) and no longer supported by Node. There was a small bug in the 0.12.0 release that would not show friendly error messaging when attempting to use Node 8 with Eleventy. That has been fixed.
Administration
Issues fixed in v0.12.1 Milestone
All code changes from v0.12.0 to v0.12.1"
"v2.0.0
Status commit
Fixes
Need a default on the new arg
Fixing typos
Fixes
Fix for serverless pagination of objects
Update deps
Standardize on eleventyConfig everywhere
Fixes https://github.com/11ty/eleventy-plugin-bundle/issues/10
Revert a few changes to make the PR pure
Update dep
Addendum to to allow multiple URLs in a serverless pagination template (including one without a serverless path param)
Fixes
Adds support for `resolve: values` Array-based serverless pagination for https://github.com/11ty/eleventy/issues/2853#issuecomment-1474291154
Rename canary to alpha in release instructions per https://github.com/11ty/eleventy/issues/2758
v2.0.1-alpha.1
Update dependencies
Serverless pagination should never return -1 as the current page index to add
v2.0.1-alpha.2
Fixes
Fixes
Custom lodash build, fixes
Fixes
Publish the dependency graph in eleventy.after args
v2.0.1-alpha.3
v2.0.1-beta.1
Update dependencies
v2.0.1-beta.2
v2.0.1
Coverage","Eleventy v2.0.1 is now available! You can try it out in your project now:
npm install @11ty/eleventy@latest
Read more about project versus global installation.
New to Eleventy?
Eleventy is a flexible and production-ready site generator known for its zero-client JavaScript footprint, speedy sites, speedy builds, and full control over the output.
Build a blog from scratch in 6 minutes with Eleventy
Watch The State of Eleventy in Two Minutes
Read more about Eleventy’s project goals.
Features and Fixes
Fixed: this.eleventy in JavaScript template functions
Fixed: lodash security audits
Fixed: pagination targets with object bracket notation
Fixed: 11ty.js templates were too aggressively cached on watch/serve
Fixed: Handlebars partials were too aggressively cached on watch/serve
Fixed: Configuration reload fixes
New: Serverless pagination now works with Arrays and Objects Learn more: https://www.11ty.dev/docs/plugins/serverless/#dynamic-slugs-to-subset-your-pagination
Typo fixes by @deining in
Housekeeping
Full milestone/issue list: https://github.com/11ty/eleventy/milestone/43?closed=1
Full changelog: v2.0.0...v2.0.1
Thank You Notes
This project would not be possible without our lovely community. Thank you to everyone that built something with Eleventy (×684 authors on our web site!), wrote a blog post about Eleventy, contributed code, wrote a plugins, helped with documentation, asked questions, answered questions, braved The Leaderboards, participated on Discord, filed issues, attended (or organized!) a meetup, said a kind word on social media .
A huge thank you to Netlify, especially:  @biilmann, Chris Bach, Lauren Sell (alum), and Claire Knight, without whom this release would not have been possible.
A special thanks to @pdehaan for their tireless contributions on the Eleventy Issue tracker.
Yet more thanks to the all star Discord Moderators and Meetup Coordinators @BenDMyers, @clottman, @dleatherman, @darthmall, @nachtfunke, @siakaramalegos and @5t3ph.
All of our supporters on Open Collective
Contribute on Open Collective
How else can you contribute to Eleventy?
Open Collective Supporters
Gold Sponsors: Sanity.io, Nordhealth, CloudCannon, Transloadit
Silver Sponsors: Unabridged Software, PQINA, Bejamas, Nathan Smith, Monarch Air Group, Getform.io, Mercury Jets, OCEG
Backers: Tyler Gaw, Ariel Salminen, Peter deHaan, Melanie Sumner, Ben Nash, Alejandro Rodríguez, Mat Marquis, Philip Borenstein, Jérôme Coupé, Nicolas Hoizey, Mike Aparicio, Ben Myers, Katie Sylor-Miller, Mark Buskbjerg, mortendk, Aaron Hans, Lauris Consulting, John Meyerhofer, Todd Libby, shawn j sandy, Luke Bonaccorsi, Higby, Jenn Schiffer, Dimitrios Grammatikogiannis, Devin Clark, Eric Bailey, Manuel Matuzovic, Tim Giles, Kyosuke Nakamura, Rob Sterlini, Horacio Gonzalez, Hans Gerwitz, Makoto Kawasaki, Josh Crain, Richard  Hemmer, Nick Nisi, John SJ Anderson, Ryan Swaney, Alistair Shepherd, Ivo Herrmann, Flaki, Angelique Weger, John Hall, Scott McCracken, James Steinbach, Miriam Suzanne, Bentley Davis, Ara Abcarians, vince falconi, Martin Schneider, Stephanie Eckles, Frontend Weekly Tokyo, Dorin Vancea, Chris Burnell, Ximenav Vf., Rich Holman, Kasper Storgaard, Kevin Healy, Greg Gibson, Michelle Barker, Alesandro Ortiz, David A. Herron, Paul Robert Lloyd, Andrea Vaghi, Bryan Robinson, Ashur Cabrera, Raymond Camden, John Meguerian, Joe Lamyman, Dan Ryan, Sam, Brett Nelson, Paul Welsh, Ingo Steinke, Noel Forte, Melanie Richards, Marco Zehe, Wes Ruvalcaba, Luc Poupard, Entle Web Solutions, Ken Hawkins, Fershad Irani, Nikita Dubko, Aaron Gustafson, Chris, Christian Miles, Benjamin Geese, Marcus Relacion, Netin nopeustesti, Raphael Höser, Cthos, Sia Karamalegos, Jon Kuperman, Saneef Ansari, Michel van der Kroef, Flemming Meyer, Colin Fahrion, Dan Burzo, Dan Ott, Mobilemall.pk, Cheap VPS, David Darnes, Jon Roobottom, Dana Byerly, Oisín Quinn, Renkaatsopivasti, Windesol Sähkön Kilpailutus, Luke Mitchell, SignpostMarv, THE PADDING, Bob Monsour, Richmond Insulation, Patrick Byrne, zapscribbles, Frank Reding, quinnanya, Cory Birdsong, Aram ZS, Andy Stevenson, Robin Rendle, HelppoHinta.fi, Tanner Dolby, jpoehnelt, xdesro, Alex Zappa, Richmond Concrete, Alexander Wunschik, Tom, CelineDesign, Nic Chan, Duc Lam, Stephen Bell, Robert Haselbacher, Lene, Brett DeWoody, alistairtweedie, Meta Tier List, Iva Tech, Daniel Saunders, Josh Vickerson, Dan Urbanowicz, dan leatherman, Jens Grochtdreis, CBD Review, Eric Gallager, Softermii, Eric Carlisle, Claus Conrad, Anna E. Cook, David Luhr, Matt Obee, Kiekkotorni - Nikotiinipussit"
"v0.5.2
Fix incorrect debug log for TemplateEngine#cachePartialFiles

The `debug()` printed the keys of `this.partials`, but should instead print the local variable `partials`, which includes the found partials.
Working example of. Uses .js in _data directory but also allows usage of .js directory specific data files too. Things to think about:

1. Needs to work with .eleventyignore?
2. Conflicts with existing .js files that aren’t being used for this purpose. Do need a better file extension for these? `.data.js` :(
Use warnings debug log
Version bump
Fixes using configurable .11tydata.js files
Switch to use `.11tydata` for suffix which now supports both .js and .json data files. Allows consistent use of the suffix across .js and .json data files for
Change order of inclusion so that the .11tydata.js > .11tydata.json > .json data files
Add support for async data files
Class syntax
update liquid to ^5.1.0

https://github.com/harttle/liquidjs/issues/72
Adds benchmark code to template data JavaScript files
Change some copy
Clear require cache for JavaScript data files (if they change)
Giant TemplateWriter Refactor in preparation of (moves glob stuff into EleventyFiles)
Fixes
Scope leaking liquid test https://twitter.com/zachleat/status/1032397185005051904 cc @eduardoboucas
Fix to allow Eleventy to return things from addCollection that are not arrays of template objects. Think: arbitrary arrays, arbitrary objects, arbitrary strings, etc.
Tests for 202f6f41af239eda824f7dec0a612c711f1bf1db (return arbitrary types from UserConfig.addCollection)
Fixes
Fixes, adds transforms to paginated templates
v0.5.3","Eleventy is a simpler Static Site Generator!
https://www.11ty.io/
Documentation at v0-5-3.11ty.io
Support Eleventy by starring us on GitHub! This will increase our project’s visibility on staticgen.com, a big giant list of static site generators.
Follow us on Twitter @​eleven_ty!
Changelog
Giant new feature: Use arbitrary JavaScript files as Eleventy data sources. This means you can now fetch and use data at build time! Works with await/async/promises. GraphQL example included  and more at JavaScript Data Files.
New feature: return arbitrary object types from eleventyConfig.addCollection. Read more at Collections.
New features: adds --passthroughall command line flag to copy and/or process all files in the input directory. Read more at Passthrough Copy
Fixed: template/directory specific data files were not monitored for changes when using --watch or --serve.
Fixed bug with fileSlug not being included on collection item data (was previously only available as page.fileSlug)
Fixed bug with transforms not running on pagination template output.
Milestone
Bugs fixed in v0.5.3 Milestone
Dependency Semver Major Updates
liquidjs upgraded from ^4.0.0 to ^5.1.0"
"Fix panic conditions
Update CHANGELOG.md
Support a custom tmp directory location
Actually enforce upload file size limit ()
run gofumpt
router: add additional fields to remote file pull
go: update dependencies
Only set cpu limits if specified; closes pterodactyl/panel
Fix faulty handling of named pipes; closes pterodactyl/panel
Update CHANGELOG.md
Don't include files and folders with identical name prefixes when archiving; closes pterodactyl/panel
Add support for public key based auth
Send key correctly; don't retry 4xx errors
We don't return public keys
Include error in log output if one occurs during move","Fixed
Fixes file upload size not being properly enforced.
Fixes a bug that prevented listing a directory when it contained a named pipe. Also added a check to prevent attempting to read a named pipe directly.
Fixes a bug with the archiver logic that would include folders that had the same name prefix. (for example, requesting only map would also include map2 and map3)
Requests to the Panel that return a client error (4xx response code) no longer trigger an exponential backoff, they immediately stop the request.
Changed
CPU limit fields are only set on the Docker container if they have been specified for the server — otherwise they are left empty.
Added
Added the ability to define the location of the temporary folder used by Wings — defaults to /tmp/pterodactyl.
Adds the ability to authenticate for SFTP using public keys (requires Panel@1.8.0).
SHA256 Checksum"
"Fix permissions not being checked correctly for admins
Use the correct CPU period when throttling servers; closes pterodactyl/panel
Better archive detection logic; try to use reflection as last ditch effort if unmatched

closes pterodactyl/panel
Update CHANGELOG.md","Fixed
Fixes a bug causing CPU limiting to not be properly applied to servers.
Fixes a bug causing zip archives to decompress without taking into account nested folder structures.
SHA256 Checksum"
"Update CHANGELOG.md
parser(yaml): fix issues

Closes https://github.com/pterodactyl/panel/issues/4236
Closes https://github.com/pterodactyl/wings/pull/139
rpm: update to 1.7.0 ()
it's to its ()
backups: add an option to change gzip compression level ()
environment(docker): set outgoing ip correctly ()

Closes https://github.com/pterodactyl/panel/issues/3841
Update README.md","Fixed
YAML parser has been updated to fix some strange issues
Added
Added Force Outgoing IP option for servers to ensure outgoing traffic uses the server's IP address
Adds an option to control the level of gzip compression for backups
SHA256 Checksum"
"Update CHANGELOG.md
backup: fix restore erroring due to closed reader
activity: fix ip validity check ()
Update CHANGELOG.md","Fixed
Backups being restored from remote storage (s3) erroring out due to a closed stream.
Fix IP validation logic for activity logs filtering out valid IPs instead of invalid IPs
SHA256 Checksum"
"ci: remove use of deprecated `::set-output`
ci: cleanup
ci(docker): fix latest tag
ci: update go versions
environment(docker): improve logging and stacks
sftp: disable insecure protocols
Ensure files are closed after they are done being used
server(filesystem): fix Writefile being broken
ci: update push-artifact action
system: close Docker client once finished
router: close body once finished
router(transfer): decrease WaitForStop timeout
router(transfer): throw error if server fails to stop
activity: fix IP parsing, drop all columns with malformed ips
Update CHANGELOG.md","Changed
Release binaries are now built with Go 1.18.10
Timeout when stopping a server before a transfer begins has been reduced to 15 seconds from 1 minute
Removed insecure SSH protocols for use with the SFTP server
Fixed
Unnecessary Docker client connections being left open, causing a slow leak of file descriptors
Files being left open in parts of the server's filesystem, causing a leak of file descriptors
IPv6 addresses being corrupted by flawed port stripping logic for activity logs, old entries with malformed IPs will be deleted from the local SQLite database automatically
A server that times out while being stopped at the beginning of a transfer no longer causes the server to become stuck in a transferring state
SHA256 Checksum"
"Update CHANGELOG.md
[security] enforce process limits at a per-container level to avoid abusive clients impacting other instances
Apply container limits to install containers, defaulting to minimums if the server's resources are set too low
Update CHANGELOG.md","Added
[security] Adds support for limiting the total number of pids any one container can have active at once to prevent malicious users from impacting other instances on the same node.
Server install containers now use the limits assigned to the server, or a globally defined minimum amount of memory and CPU rather than having unlimited resources.
SHA256 Checksum"
"Update CHANGELOG.md
Improve support for block/mutex contention in pprof
Fix panic condition when no response is returned
Return context cancelations as a locker locked error
Pass a context through to the start/stop/terminate actions
Fix logic for context based environment stopping

Uses dual contexts to handle stopping using a timed context, and also terminating the entire process loop if the parent context gets canceled.
Add additional debug points to server start process
Fix failing test
Move the sink pool to be a shared tool
Simplify the event bus system; address pterodactyl/panel

If my debugging is correct, this should address pterodactyl/panel in its entirety by addressing a few areas where it was possible for a channel to lock up and cause everything to block
Don't trigger a panic condition decoding event stats; closes pterodactyl/panel
Remove unused function
Check for error before prefix; fixes abandoned routine; closes pterodactyl/panel

Due to the order of the previous logic in ScanReader, an error not caused by EOF would effectively get ignored since an error will always be returned with `isPrefix` equal to false, thus triggering the first break, and error checking is not performed beyond that point.

Thus, canceling an installation process for a server while this process was running would hang the routine and cause the loop to run endlessly, even with a canceled context.
Fix panic conditions","Fixed
Fixes error that would sometimes occur when starting a server that would cause the temporary power action lock to never be released due to a blocked channel.
Fixes a bug causing the CPU usage of Wings to get stuck at 100% when a server is deleted while the installation process is running.
Changed
Cleans up a lot of the logic for handling events between the server and environment process to make it easier to make modifications to down the road.
Cleans up logic handling the StopAndWait logic for stopping a server gracefully before terminating the process if it does not respond.
SHA256 Checksum"
"Update README.md
cmd(configure): fix panel url not being set

Fixes https://github.com/pterodactyl/panel/issues/5087
server(filesystem): handle individual compressed files ()
Update README.md
Update CHANGELOG.md","Fixed
Auto-configure not working ()
Individual files unable to be decompressed ()
SHA256 Checksum"
"Update CHANGELOG.md
config: add option to disable panel config updates ()
build(deps): bump golang.org/x/text from 0.3.7 to 0.3.8 ()

Bumps [golang.org/x/text](https://github.com/golang/text) from 0.3.7 to 0.3.8.
- [Release notes](https://github.com/golang/text/releases)
- [Commits](https://github.com/golang/text/compare/v0.3.7...v0.3.8)

---
updated-dependencies:
- dependency-name: golang.org/x/text
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps): bump golang.org/x/net ()

Bumps [golang.org/x/net](https://github.com/golang/net) from 0.0.0-20221004154528-8021a29435af to 0.7.0.
- [Release notes](https://github.com/golang/net/releases)
- [Commits](https://github.com/golang/net/commits/v0.7.0)

---
updated-dependencies:
- dependency-name: golang.org/x/net
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
server(filesystem): fix archiver path matching

Closes https://github.com/pterodactyl/panel/issues/4630
ci: update to go 1.19 and 1.20
server(filesystem): fix archive test
system: fix sink pool test
go: update dependencies
Update CHANGELOG.md","Added
Added a config option to disable Wings config.yml updates from the Panel (ec6d6d8)
Changed
Wings is now built with Go 1.19.7
Fixed
Fixed archives containing partially matched file names (43b3496)
SHA256 Checksum"
"Update CHANGELOG.md
Update CHANGELOG.md
Cleanup command running a bit
foundation for self-upgrade logic
organize imports with gopls format
bye bye command
[security] fix vulnerability when handling remote file redirects

Also adds the ability for an admin to just completely disable this service if it is not needed on the node.","Fixed
[Security] Fixes a remaining security vulnerability in the code handling remote file downloads for servers relating to redirect validation.
Added
Adds a configuration key at api.disable_remote_download that can be set to true to completely download the remote download system.
SHA256 Checksum"
"Update CHANGELOG.md
Trim ""~"" from container prefix; closes pterodactyl/panel
Modify backup process to utilize contexts and exponential backoffs

If a request to upload a file part to S3 fails for any 5xx reason it will begin using an exponential backoff to keep re-trying the upload until we've reached a minute of trying to access the endpoint.

This should resolve temporary resolution issues with URLs and certain S3 compatiable systems such as B2 that sometimes return a 5xx error and just need a retry to be successful.

Also supports using the server context to ensure backups are terminated when a server is deleted, and removes the http call without a timeout, replacing it with a 2 hour timeout to account for connections as slow as 10Mbps on a huge file upload.
Add backoff retries to API calls from Wings
Better support for retrying failed requests with the API

Also implements more logic error returns from the Get/Post functions in the client, rather than making the developer call r.Error() on responses.
Update test based on corrected error response logic
Update CHANGELOG.md","Fixed
Fixes the ~ character not being properly trimmed from container image names when creating a new server.
Changed
Implemented exponential backoff for S3 uploads when working with backups. This should resolve many issues with external S3 compatiable systems that sometimes return 5xx level errors that should be re-attempted automatically.
Implements exponential backoff behavior for all API calls to the Panel that do not immediately return a 401, 403, or 429 error response. This should address fragiligty in some API calls and address random call failures due to connection drops or random DNS resolution errors.
SHA256 Checksum"
"Update CHANGELOG.md

Signed-off-by: Matthew Penner <me@matthewp.io>
server(filesystem): fix archive creation with ignore

Signed-off-by: Matthew Penner <me@matthewp.io>
server(filesystem): fix archives in subdirectories

When creating an archive starting from a subdirectory instead of the
root of a server's filesystem, the walker would treat the paths as if
they where relative to the parent of the subdirectory, instead of as
descendants of the subdirectory.

Fixes https://github.com/pterodactyl/panel/issues/5030
Update CHANGELOG.md

Signed-off-by: Matthew Penner <me@matthewp.io>","Fixed
Backups missing content when a .pteroignore file is used
Archives originating from a subdirectory not containing any files ()
SHA256 Checksum"
"Update CHANGELOG.md
server(filesystem): fix file names when extracting archives ()
dockerfile: update to go 1.20.10 ()
sftp: log ip on inbound connection failure
ci: update go to 1.20.11 and 1.21.4
go: update dependencies
go: update dependencies
ci: update go to 1.20.12 and 1.21.5
ci: actions/upload-artifact v3 -> v4
ci(push): only upload artifacts built with go 1.20.12
Update README.md
go: update dependencies

Signed-off-by: Matthew Penner <me@matthewp.io>
config: fix docker Go API deprecation

Signed-off-by: Matthew Penner <me@matthewp.io>
ci: update to go 1.21.8 and 1.22.1

Signed-off-by: Matthew Penner <me@matthewp.io>
server(filesystem): rebuild everything imaginable

This wonderfully large commit replaces basically everything under the
`server/filesystem` package, re-implementing essentially everything.

This is related to
https://github.com/pterodactyl/wings/security/advisories/GHSA-494h-9924-xww9

If any vulnerabilities related to symlinks persist after this commit, I
will be very upset.

Signed-off-by: Matthew Penner <me@matthewp.io>
Update CHANGELOG.md

Signed-off-by: Matthew Penner <me@matthewp.io>
Update README.md

Signed-off-by: Matthew Penner <me@matthewp.io>","Changed
Release binaries are now built with Go 1.21.8
Updated Go dependencies
Fixed
SHA256 Checksum"
"Update CHANGELOG.md
Update README.md
Update README.md
go: update dependencies

This updates the docker client to include the fix added with
https://github.com/moby/moby/pull/45962 which solves a breaking change
to Go due to CVE-2023-29406.
ci: ubuntu-22.04, go1.19.11, go1.20.6
go: update dependencies
Update CHANGELOG.md","Changed
Updated Go dependencies (this resolves an issue related to http: invalid Host header with Docker)
Wings is now built with go1.19.11
SHA256 Checksum"
"Update CHANGELOG.md
Update README.md
chore: remove unnecessary use of fmt.Sprintf ()
chore: slice loop replace ()
workflows: update actions, use go 1.20.10 and 1.21.3
go: update dependencies
Update CHANGELOG.md","Changed
Release binaries are now built with Go 1.20.10 (resolves CVE-2023-44487)
Updated Go dependencies
SHA256 Checksum"
"Update README.md

Signed-off-by: Matthew Penner <me@matthewp.io>
router(server): fix panic on server deletion

Fixes https://github.com/pterodactyl/panel/issues/5028

Signed-off-by: Matthew Penner <me@matthewp.io>
server(filesystem): fix archive skipping directories

Fixes https://github.com/pterodactyl/panel/issues/5027

Signed-off-by: Matthew Penner <me@matthewp.io>
Update CHANGELOG.md

Signed-off-by: Matthew Penner <me@matthewp.io>","Fixed
Archives randomly ignoring files and directories ()
Crash when deleting or transferring a server ()
SHA256 Checksum"
"Bump PID limit to 512 by default
Update codeql-analysis.yml
Fix environment variables with the same prefix being skipped unintentionally ()

If you have two env variables (for example ONE_VARIABLE and ONE_VARIABLE_NAME) ONE_VARIABLE_NAME has prefix ONE_VARIABLE and will be skipped.

Co-authored-by: Jakob <dev@schrej.net>
installer: support 'start_on_completion' ()
archive: fix socket files aborting backups
change minimum go version to 1.16, add multiplatform docker image
server(fs): keep file mode when extracting archive
feat(logrotate): fix config with bad user

fixes https://github.com/pterodactyl/panel/issues/3452
docker: change final image from busybox to distroless

This should resolve any issues with missing ca-certificates or tzdata.

Fixes https://github.com/pterodactyl/panel/issues/3442
docker: fix build
break everything

- upgrade dependencies
- run gofmt and goimports to organize code
- fix typos
- other small tweaks
downloader: fix internal range check
Perhaps don't break _everything_ on people.
Add deprecation flag on the directory, don't remove it entirely
Update CHANGELOG.md","Fixed
Environment variable starting with the same prefix no longer get merged into a single environment variable value (skipping all but the first).
The start_on_completion flag for server installs will now properly start the server.
Fixes socket files unintentionally causing backups to be aborted.
Files extracted from a backup now have their preior mode properly set on the restored files, rather than defaulting to 0644.
Fixes logrotate issues due to a bad user configuration on some systems.
Updated
The minimum Go version required to compile Wings is now go1.16.
Deprecated
Both of these deprecations will be removed in Wings@2.0.0.
The Server.Id() method has been deprecated in favor of Server.ID().
The directory field on the /api/servers/:server/files/pull endpoint is deprecated and should be updated to use root instead for consistency with other endpoints.
SHA256 Checksum"
"Update CHANGELOG.md
Mark server as not transferring after archive failure
Fix user problems when running inside of Docker
Update Dockerfile to use busybox 1.33.0
typo in docker-compose file ()

minor typo i noticed while messing around
no need for additional decode ()

file paths used to be url-encoded twice, which is no longer the case.
Less obtuse logic for polling resource usage when attaching a container
cleanup; fix environment stats not reporting network TX correctly
[security] deny downloading files from internal locations
Update CHANGELOG.md","Fixed
Fixes servers not be properly marked as no longer transfering if an error occurs during the archive process.
Fixes problems with user detection when running Wings inside a Docker container.
Fixes filename decoding issues with multiple endpoints related to the file manager (namely move/copy/delete).
[Security] Fixes vulnerability allowing a malicious user to abuse the remote file download utilitity to scan or access resources on the local network.
Fixes network tx stats not correctly being reported (was previously reporting rx for both rx and tx).
Changed
Cleans up the logic related to polling resources for the server to make a little more sense and not do pointless io.Copy() operations.
SHA256 Checksum"
"Update CHANGELOG.md
Adding RPM specfile. ()

* Adding RPM specfile.

* Added systemd service and some scripting to make things nicer

* Updated systemd service.

* Updated for 1.5.0 and fixed mistake with license.
config: add ability to enable/disable server crash detection

fixes https://github.com/pterodactyl/panel/issues/3617

Co-authored-by: Alex <admin@softwarenoob.com>
actions(build-test): fix artifacts not being uploaded
Update CHANGELOG.md","Added
Global configuration option for toggling server crash detection (system.crash_detection.enabled)
RPM specfile
SHA256 Checksum"
"server: ensure last lines are always logged
fix send on closed channel for logging; closes
diagnostics: properly redact endpoints
events: don't explode when destroying a bus

Only attempt to close channels once, rather than per topic
they are subscribed to.
events: remove debug log
Update CHANGELOG.md","Fixed
Fixes sending to a closed channel when sending server logs over the websocket
Fixes wings diagnostics uploading no content with the redact endpoints option enabled
Fixes a panic caused by the event bus closing channels multiple times when a server is deleted
SHA256 Checksum"
"Update CHANGELOG.md
server: actually use StartOnCompletion and CrashDetectionEnabled
sftp: deny access if server is suspended ()
Update CHANGELOG.md","Fixed
SFTP access is now properly denied if a server is suspended.
Correctly uses start_on_completion and crash_detection_enabled for servers.
SHA256 Checksum"
"Update CHANGELOG.md
Prevent excessive memory usage when large lines are sent over the console
Quick note about the importance of the copy
Add test for scan reader
Sink pool cleanup and organization; better future support when we add more sinks
Add test coverage for sinks; prevent panic on nil channels
Improve power lock logic ()
Ensure a file uploaded using SFTP is properly owned at the end; closes pterodactyl/panel
Replace encoding/json with goccy/go-json for cpu and memory usage improvement

This new package has significant better resource usage, and we do a _lot_ of JSON parsing in this application, so any amount of improvement becomes significant
Re-implement ContainerInspect call in Wings to use more performant json encoder ()

* First pass at re-implementing the Docker inspect call to use more efficient json parser

* Improve logic
Update CHANGELOG.md
Reduce the size of the buffered reader to improve CPU performance","Fixed
Rewrote handler logic for the power actions lock to hopefully address issues people have been having when a server crashes and they're unable to start it again until restarting Wings.
Fixes files uploaded with SFTP not being owned by the Pterodactyl user.
Fixes excessive memory usage when large lines are sent through the console event handler.
Changed
Replaced usage of encoding/json throughout the codebase with a more performant encoder (goccy/go-json) to hopefully improve overall performance for JSON operations.
Added custom ContainerInspect function to handle direct calls to Docker's CLI and make use of the new JSON encoder logic. This should reduce the total number of memory allocations and be more performant overall in a hot pathway.
SHA256 Checksum"
"Update CHANGELOG.md
Correctly determine name for archive files when decompressing; closes pterodactyl/panel
Update CHANGELOG.md","Fixed
Fixes a bug that would cause the file unarchiving process to put all files in the base directory rather than the directory in which the files should be located.
SHA256 Checksum"
"Update CHANGELOG.md
Use ED25519 keys for SSH host key authentication purposes

closes pterodactyl/panel
Make uptime available in the stat output for a container
Update CHS Primary Link to chs.gg ()

Update CHS Primary Link to chs.gg
re-sync server config if container is already running

If wings is restarted while a container is already running, the server will be missing it's
configuration, specifically it's stop configuration.  This will cause the stop power action
to terminate the server due to no stop command being set.
Update CHANGELOG.md","Fixed
Fixes servers not properly re-syncing with the Panel if they are already running causing them to be hard-stopped when terminated, rather than stopped with the configured action.
Changed
Changes SFTP server implementation to use ED25519 server keys rather than deprecated SHA1 RSA keys.
Added
Adds server uptime output in the stats event emitted to the websocket.
SHA256 Checksum"
"Adjusted amazon-core require deps

By adding jquery/jquery-storageapi as a require dependency $.cookieStorage is always available. In some instances it is not available, depending on what scripts are used in any given instanc.e
Title underlines have been to short
Title underline fixed
AMAZON-28: Removed admin layout file because all it contained was reference to non-existing css file
AMAZON-16: Make sure URLs displayed are unique
AMAZON-29: Admin version data added
AMAZON-30: Charge on Order notification now uses success style instead of warning
AMAZON-17: Add configuration option for ""Store Name""
AMAZON-31: Added a feature to block Amazon checkout widget when quote grand total is 0
AMAZON-31: Shipping information plugin now ignores quote with grand total 0
AMAZON-30: Card charge notification removed
Updating supported versions of PHP per Magento documentation - http://devdocs.magento.com/guides/v2.1/install-gde/system-requirements-tech.html
AMAZON-31: Do not remove 'free' method in case it exists
AMAZON-31: Restore original validation line
AMAZON-29: Version info update
AMAZON-38: Forces extension explicitly use built in modernizr plugin
AMAZON-31: Fixed a condition that is no longer necessary
AMAZON-38: Refix the Modernizr requirement with adding support for both v2 and v3 APIs
AMAZON-29: Missing newline
AMAZON-29: Comments, internationalisation
AMAZON-43: Updated code safety, do not operate or order when payment != amazon
i18n
version bump
updated installation instructions
Update installation.rst

Fix typo.
Updated installation guide","This release incorporates:
Enhancements
Handling of orders with an order total of zero
Display module version in administrative back-end
Relaxation of Modernizr requirements, now accepts v2 and v3
Improved support of Japanese names
Removed disturbing message from checkout if capture on order placement is active
Add store name configuration option
Fixes
Issue in CompleteOrder.php interfering with other payment options
URLs did not respect store view configuration
Removed obsolete admin layout file
added missing dependency to jquery-storageapi"
"ASD-1193 adds default pending payment order status for express checkout
ASD-1193 sets processing order state anytime charge status is authorized or captured
ASD-1193 adds cron cleanup base files - wip
ASD-1193 adds open state cleanup logic
ASD-1193 adds canceled state cleanup logic
ASD-1193 phpcs fixes
ASD-1193 explicitely sets order status only when successful
ASD-1193 adds handling for pre-auth failures, and capture transactions
ASD-1193 phpcs fixes
ASD-1193 changes chargeId check to be regex uuid
ASD-1193 polishes stalled order identification
ASD-1193 renames CleanUp casing typo
ASD-1193 phpcs fixes
ASD-1193 - update to 30 minutes before cleaning up transactions
ASD-1193 - code review improvements
ASD-1193 - use correct log message
ASD-1193 - add log prefix, adjust behavior when session Open to always attempt to complete checkout session
release version update
ASD-1193 - couple cleanup items
Allow php8.3 support in composer.json
Update requirejs-config.js (Issue)

Fixes Amazon_Pay/js/amazon-product-add.js 404 (Not Found)
Update changelog for release
ASD-1193 - set payment status to processing so it can be invoiced
ASD-1193 - handle charge on order / automatic config that produced invoice could not be created error
phpcs changes","Changed php allowed versions to include 8.3
Fixed issue where orders could be processing but not capture payment
Fixed issue with amazon-product-add.js 404 not found (thanks @tim-breitenstein-it!)
Fixed issue where a variable could be undefined (thanks @dimitriBouteille!)
Fixed issue where incorrect message ""can't create invoice"" could be displayed"
"Account for whitespace/newline trimming on responses from
MagentoWebDriver's magentoCLI() function
GH-1129 - Adjust GraphQL config query to match rest endpoint behavior w/
omitPayloads
Undefined index 'charge_permission_id'

Async Error log was full of these.  

amazonAsyncIpnLogger.ERROR: Exception: Notice: Undefined index: charge_permission_id in /var/www/shop/prod/vendor/amzn/amazon-pay-magento-2-module/Model/AsyncManagement/Charge.php on line 213 in /var/www/shop/prod/vendor/magento/framework/App/ErrorHandler.php:61
Stack trace: /var/www/shop/prod/vendor/amzn/amazon-pay-magento-2-module/Model/AsyncManagement/Charge.php(213): Magento\Framework\App\ErrorHandler->handler() /var/www/shop/prod/vendor/amzn/amazon-pay-magento-2-module/Model/AsyncManagement/Charge.php(167): Amazon\Pay\Model\AsyncManagement\Charge->decline() /var/www/shop/prod/vendor/amzn/amazon-pay-magento-2-module/Model/AsyncUpdater.php(79): Amazon\Pay\Model\AsyncManagement\Charge->processStateChange() /var/www/shop/prod/vendor/amzn/amazon-pay-magento-2-module/Cron/ProcessAsync.php(71): Amazon\Pay\Model\AsyncUpdater->processPending() [internal function]: Amazon\Pay\Cron\ProcessAsync->execute() /var/www/shop/prod/vendor/magento/module-cron/Observer/ProcessCronQueueObserver.php(368): call_user_func_array() /var/www/shop/prod/vendor/magento/module-cron/Observer/ProcessCronQueueObserver.php(879): Magento\Cron\Observer\ProcessCronQueueObserver->_runJob() /var/www/shop/prod/vendor/magento/module-cron/Observer/ProcessCronQueueObserver.php(840): Magento\Cron\Observer\ProcessCronQueueObserver->tryRunJob() /var/www/shop/prod/vendor/magento/module-cron/Observer/ProcessCronQueueObserver.php(280): Magento\Cron\Observer\ProcessCronQueueObserver->processPendingJobs() /var/www/shop/prod/vendor/magento/framework/Event/Invoker/InvokerDefault.php(88): Magento\Cron\Observer\ProcessCronQueueObserver->execute() /var/www/shop/prod/vendor/magento/framework/Event/Invoker/InvokerDefault.php(74): Magento\Framework\Event\Invoker\InvokerDefault->_callObserverMethod() /var/www/shop/prod/vendor/magento/framework/Event/Manager.php(66): Magento\Framework\Event\Invoker\InvokerDefault->dispatch() /var/www/shop/prod/generated/code/Magento/Framework/Event/Manager/Proxy.php(95): Magento\Framework\Event\Manager->dispatch() /var/www/shop/prod/vendor/magento/framework/App/Cron.php(86): Magento\Framework\Event\Manager\Proxy->dispatch() /var/www/shop/prod/vendor/magento/module-cron/Console/Command/CronCommand.php(117): Magento\Framework\App\Cron->launch() /var/www/shop/prod/vendor/symfony/console/Command/Command.php(255): Magento\Cron\Console\Command\CronCommand->execute() /var/www/shop/prod/vendor/magento/framework/Interception/Interceptor.php(58): Symfony\Component\Console\Command\Command->run() /var/www/shop/prod/vendor/magento/framework/Interception/Interceptor.php(138): Magento\Cron\Console\Command\CronCommand\Interceptor->___callParent() /var/www/shop/prod/vendor/magento/framework/Interception/Interceptor.php(153): Magento\Cron\Console\Command\CronCommand\Interceptor->Magento\Framework\Interception\{closure}() /var/www/shop/prod/generated/code/Magento/Cron/Console/Command/CronCommand/Interceptor.php(77): Magento\Cron\Console\Command\CronCommand\Interceptor->___callPlugins() /var/www/shop/prod/vendor/symfony/console/Application.php(1009): Magento\Cron\Console\Command\CronCommand\Interceptor->run() /var/www/shop/prod/vendor/symfony/console/Application.php(273): Symfony\Component\Console\Application->doRunCommand() /var/www/shop/prod/vendor/magento/framework/Console/Cli.php(115): Symfony\Component\Console\Application->doRun() /var/www/shop/prod/vendor/symfony/console/Application.php(149): Magento\Framework\Console\Cli->doRun() /var/www/shop/prod/bin/magento(23): Symfony\Component\Console\Application->run() {main} [] []
Add logging if declined payment has no associated charge permission ID,
skip call to closeChargePermission
Retrieve fresh button config when store view changes
Version bump to 5.13.1 and update changelog","Fixed issue with invalid array reference if a transaction doesn’t have a charge permission
Fixed issue with GraphQL config query supporting omitPayloads
Fixed issue with switching stores to refresh the Amazon Pay button config"
"Update README.md
Minor changes to README.md and Beta callout
Remove reliance on legacy config value being set
Version bump
Update changelog
Version bump in readme
Refer to CHANGELOG.md for release notes
Add GH Issues link.
Update README.md
Update CHANGELOG.md
Remove di entry for removed plugin","Same functionality as 5.0.0, but with a minor fix to remove a dependency on a Legacy configuration value being set.
Please see and CHANGELOG.md for more information."
"version increase to 1.2.7 ()
Support Issue APS-40 ()

* update addresses APS-24 for 1.x

* Update - removed references to newer customer matcher interfaces and used originals.

* Update re: APS-35

* Update - restored old customer factory structure
version increase to 1.2.8 ()","This release incorporates:
Enhancements
-- this is a fix release only --
Fixes
Removed classes that are in later versions of the module and restored references to old customer classes that served the same function"
"update to version 2.1.3
Invalid JSON causes problems during unserialization

You can see this issue when trying to enable or disable a module via the magento script (`magento module:disable Module_Name`).
version increase","This release incorporates:
Enhancements
-- this is a fix release only --
Fixes
Invalid JSON in composer file"
"ASD-974 - Handle occasional Amazon authentication popup auto-closing,
MFTF 2.3/2.4
ASD-974 - Handle popup remaining open with no actionable items
ASD-974 - Remove invalid test action for MFTF/Magento 2.4.3
ASD-1048 - Remove references to Zend classes removed in Magento 2.4.6, update requirements for PHP 8.2
ASD-1020 - (wip) Testing conditions for second screen behavior
ASD-1020 - (wip) Better react to behavior of popup second screen
ASD-1020 - MFTF tweaks for address change/sign in failures
ASD-1020 - Revert MFTF changes (wait for Amazon loader)
ASD-1020 - Remove wait for Amazon loader from popup helper
ASD-1020 - Amazon Sign In fix for 2.4 MFTFs
ASD-1020 - Remove doubled click on AP Sign In button (MFTF 2.4)
ASD-1049 - Decrement coupon usages when cancelling order due to failure
of completeCheckoutSession
Version bump to 5.14.2 and update changelog","Removed usage of Zend libraries and updated requirements for PHP 8.2/Magento 2.4.6 compatibility
Fixed issue where coupon usage is not properly decremented when placing order fails"
"version increase 2.1.3 ()
asd-77: fix missing street address for German addresses
Increase version number to 2.1.4
Increase version number to 2.1.4","Fixes
Fixed a bug where German addresses were missing the street, reported in.
Version information
This release targets Magento 2 installations with version numbers between 2.2.6 and 2.2.x."
"ASD-723 - add to csp whitelist
ASD-719 - don't send stateOrRegion for a few specific countries due to amazon failing address validation if included
Remove unused function and clean up phpcs output
Version bump to 5.5.1 and update changelog
Remove any null values from addressData in PayNow payload generation","Add url to csp_whitelist.xml
Fix issue with the payment method button and UK addresses"
"fix slide link
fix typos
refactor examples
update READMEs in examples
update docs
update docs
fix typos in READMEs
fix typos in quickstarts
update
update docs
add random_state as argument to fit_predict
update docs
update READMEs about the data
update README
fix docstrings
add new eval metric for ope
run with new updates
refactor estimators
add random_state for seaborn.barplot
rerun after new updates
update docs
update READMEs
update
add continuous reward option
rerun after new updates
add multiclass to bandit reduction
refactor dataset module
add obp.dataset.multiclass
rerun with a new version
fix some docstring inconsistencies
update version","This release enhances the OBP package in the following ways.
add some new contents to the obp document: https://zr-obp.readthedocs.io/en/latest/index.html
In particular, you can use ""off-policy evaluation"" section as a textbook about this area
add obp.dataset.MultiClassToBanditReduction class for handling multi-class classification datasets as bandit feedback
this will allow researchers to run their synthetic experiments with some multi-class classification datasets easily
relevant quickstart and example will be added to the repository soon
add continuous reward option to obp.dataset.SyntheticBanditDataset
add squared error (se) option for the evaluation of OPE with obp.ope.OffPolicyEvaluation
fix some README and docstring inconsistencies
refactor the dataset and ope modules"
"pass all tests
fix
add opl examples
fix
add mypy-extensions
use predict_proa
fix docs
allow position is None
remove redundant exception
test offline estimation performance
add test offline learner performance
black
remove unused argument
remove unused statement
add staticmethod decorator
change reward_type to enum
remove unusued function
change policy_type to enum
noqa
fix flake8 error F541
fix flake8 error for ope/__init__.py
fix flake8 error for dataset/__init__.py
fix flake8 error for simulation/__init__.py
fix flake8 error for ope/__init__.py
ignore W605
apply black
replace expand_dims with np.newaxis
add flake8 to github actions
fix CONTRIBUTING.md
adopt auto in Enum
update version
lint
update README
modify docstring
add comment and fix argument order (generate_symmetic_matrix)
unify slot_weight and action_effect -> action_interaction
n_actions -> n_unique_action
result -> expected_reward_factual
remove exam weight from initialization
fix nits
add input validation of slate dataset
ignore E203
remove TODO comment
add slate ope estimators
fix confidence interval of slate ope
add comment of SIPS
fix type check issue in Windows
apply review of synthetic_slate
fix bugs; apply review of test_synthetic_slate
fix slate ope estimators and add validations
add slate ope tests
fix synthetic slate bug
add slate ope performance test
add contributors
fix column names related to evaluation_policy_pscore; add efficient bootstrap method
add meta_slate.py and test the meta module
Refactoring: add subclasses for linear and logistic policies
fix test
Enable to use a dict of estimated_rewards_by_regmodel
fix type check
modify comments
remove duplicate test cases
fix typo
fix typo
fix pscore_item_position calculation
minor fix
add contributors
bug fix
bug fix
bug fix
fix test
black
bug fix
minor fix
fix test
rm return_exact_uniform_pscore_item_position
fix test
rename from action_interaction_matrix to action_interaction_weight_matrix
rename from action_interaction_matrix to action_interaction_weight_matrix
refactor
fix test
minor fix
add generate_evaluation_policy_pscore and calc_on_policy_value
fix action_2d to action; fix function name of calc_on_policy_value
reflect comments on PR88
refactor based on PR88 comments and fix tests
fix typo
flake8
generalize click models and fix minor erros
add some tests about click models
fix eng in synthetic_slate.ipynb
minor fix
add decay_function
bug fix
relocate function
implement calc_ground_truth_policy_value function
add ValueError
bug fix
add tests and bug fix
fix flake8
fix ValueError
black
add tests and bug fix
implement obtain_pscore_given_evaluation_policy_logit function
add description
add ValueError
tdqm
typo
add tests and minor fix
fix
add is_factorizable option
fix calc_ground_truth_policy_value
refactor
test and fix
minor fix
make calc_pscore faster
fix bug
fix bug
tmp
action_interaction_reward_function
fix
fix
black
batch processing for calc_ground_truth_policy_value
test
fix test
minor fix
faster calc_ground_truth_policy_value
minor fix
minor fix
fix
bug fix
add OffPolicyEvaluation.visualaze_off_policy_estimates_of_multiple_policies
change font size of titles
change x lables
bug fix on batch processing
add pscore mock test
fix bug of update params (reward_counts should not be the mean, but the count
delete action/pscore/reward/estimated_rewards_by_model from check_ope_inputs
bug fix
docs: add buttons to open ipynb files in Colab
update version to 0.4.1","The changes are summarized below:
Add some functions to implement OPE for slate contextual bandit setting [1]
SlateSyntheticBanditFeedback ()
Slate OPE Estimators ()
Make OffPolicyEvaluation class more useful
add a method to visualize and compare OPE results of several different policies ()
Enable to use different estimated_rewards_by_reg_model values (this will make MRDR [2] easier to use with obp)
Fix some bugs and Refactoring
Epsilon-greedy algorithm ()
Type checks in OPE estimators ()
Linear and logistic policies ()
Welcome new contributors ()
references
[1] James McInerney, Brian Brost, Praveen Chandar, Rishabh Mehrotra, and Benjamin Carterette. 2020. Counterfactual Evaluation of Slate Recommendations with Sequential Reward Interactions. In Proceedings of the 26th ACM SIGKDD
International Conference on Knowledge Discovery and Data Mining. 1779–1788.
[2] Mehrdad Farajtabar, Yinlam Chow, and Mohammad Ghavamzadeh. 2018. More robust doubly robust off-policy evaluation. In Proceedings of the 35th International Conference on Machine Learning, PMLR 80, 1447–1456."
"Version bump (1.5.0) ()
Update Turkish translation ()
Update automatically ui/client version
Updated useragent
Cosmetic changes
Changed key pair id
Improved some data
Add challenge data to manifest request (only ARM devices)
Use a single loop
Simplified get_metadata and VideoId derive_parent
Version bump (1.5.1) ()","Implemented fix/workaround to get resolutions until to 1080p with ARM devices
Updated translations tr"
"Version bump (1.1.0)
Use localhost instead force IPv4 loopback
Fixed unicode decode error
Update README.md

Fixed links
Avoid mix the params variable

Has caused continuous profile switch when navigate between directories
due to same param name in listings.py get_param_watched_status_by_profile
Version bump (1.1.1)","Fixed critical bug caused continuous profile switching
Fixed unicode decode error to profile auto-selection"
"Version bump (1.12.11) ()
Fix to version suffix added from kodi
Version bump (1.12.12) ()","REPOSITORY CHANGED: The repository has been changed, to receive future updates
the add-on will try update it automatically to new v2.0, if for some reason this not
happens you can update it manually by downloading: repository.castagnait-2.0.0.zip
from Github Readme: https://github.com/CastagnaIT/plugin.video.netflix
Fix broken addon startup due to update error"
"Removed workaround for ""1 more item"" problem

netflix has fixed the API bug
Updated video profiles
Version bump (1.12.5) ()","Updated video profiles for HEVC/HEVC HDR
Fixed missing items in episodes lists and others submenus"
"Version bump (1.12.10) ()
Fixed genres/subgenres menus
[BACKPORT][LEIA] Migration to new repository
Reintroduced no cache for Top 10 menus
Version bump (1.12.11) ()","REPOSITORY CHANGED: The repository has been changed, to receive future updates
the add-on will try update it automatically to new v2.0, if for some reason this not
happens you can update it manually by downloading: repository.castagnait-2.0.0.zip
from Github Readme: https://github.com/CastagnaIT/plugin.video.netflix
Fix genres/subgenres menus due to website changes"
"Version bump (1.6.0) ()
Update README.md

Copied log rules also here
fix: Add search table on to sqlite db on fresh installs
Translate additional strings for Greek ()
Removed not more needed condition
Removed profile name from debug info
Version bump (1.6.1) ()","Fixed broken search menu on fresh installations
Updated el-gr translation"
"Not needed json conversions
Revert ""Fix for add/remove to My List""

This reverts commit f378774f2a60d4d63751573d941b4f8ac34154df.
Removed decorator catch_api_errors_decorator
Changes related to IPC over AddonSignals
Implemented new version number comparer
Fix wrong path due to last changes
Moved get impaired Kodi settings to common
Fixed wrong selection of impaired audio track

When Kodi preferred audio setting was set as 'media default'
and the video had two default audio tracks the choice fell on the wrong track
Version bump (1.15.1) ()","Fixed regression to ESN/Widevine window
Fixed wrong selection of audio track for impaired
Add latest changes to IPC
Minor changes"
"Version bump (1.18.7) ()
Update Simplified Chinese Translation ()
Update Romanian translation for 1.18.7 ()

Translated into Romanian 3 new strings for version 1.18.7
Fix to version suffix added from kodi
Update PtBR Language ()

Update PtBR Language
Version bump (1.18.8) ()","REPOSITORY CHANGED: The repository has been changed, to receive future updates
the add-on will try update it automatically to new v2.0, if for some reason this not
happens you can update it manually by downloading: repository.castagnait-2.0.0.zip
from Github Readme: https://github.com/CastagnaIT/plugin.video.netflix
Fix broken addon startup due to update error
Update translations zh_cn, ro, pt_br"
"Version bump (1.9.0) ()
Update Romanian translation for 1.9.0 ()

Translated new and modified strings for 1.9.0
Update nl_nl ()
Add NFAuthenticationKey for linux
Fixed possible unreferenced variables
Fixed possible unreferenced variable
Add new menu config no_use_cache
Add Top 10 for tv shows/movies
Avoid use cache to all Top 10 menus

Could cause wrong results when the TTL is high and netflix update the list
Fix for search results in JSON RPC plus history rewrite to avoid search dialog reopening onback
Version bump (1.9.1) ()","Add TV Shows/Movies Top 10
Add support to NFAuthenticationKey for linux
Fixed search results via JSON-RPC
Fixed an issue that cause to ask to clear search history again when you return to previous menu
Fixed possible wrong results on Top 10 menu due to cache TTL
Updated translations ro, nl"
"Version bump (1.12.14) ()
Partial backport of
Avoid escape unicode property
Update esn timestamp on reset
New manifest changes
Version bump (1.12.15) ()","IMPORTANT NOTICE: New changes to website is causing video quality to drop to 540p after about 20h,
this add-on update implements a workaround to fix this problem by changing ESNs every 20h.
The workaround works only when ""Manual ESN"" is not set, so if needed remove the previously Manual ESN set.
You can find the new setting under add-on Expert settings.
If necessary, you can manually generate new ESN's by selecting ""Reset ESN"" setting, or you can also disable the 540p workaround.
IMPORTANT NOTICE FOR ANDROID: Do NOT USE the ESN of the original app with the add-on, or will cause video quality drop
to 540p also on the original android app for an unknown period of time. This problem cannot be solved by the add-on,
there are no know solutions yet, so you can only report the 540p problem to customer service."
"Version bump (1.13.0) ()
Update French translation for v1.13.0 ()
Update Hungarian ()
Various fixes mainly for audio/subtitle with country code selection
Update Pt-BR translation ()

Update Pt-BR translation
Fixed/updated dependencies
Removed threaded send_signal

Slower devices are not always fast enough to send the signal in faster way while other operations are carried out,
this cause to ActionController to crash because receive the playback data after Kodi 'Player.OnPlay' event and will no longer manage events
Avoid expose response object between functions and better managed chunks
Partially reverted workaround of 918460443cb1818e3a000c520b42311a26d74b66
Try better handle HTTP ReadTimeout/ConnectionError errors
Removed leia CI
Add seasons art
Add note
Little conditions improvement
Update Chinese for 1.13.0 ()

* Update strings.po

* Restore as untranslated

Co-authored-by: Stefano Gottardo <gottardo.stefano.83@gmail.com>
Little condition improvement
Removed warning message of old upgrade
Removed delete cache folder on old upgrade
Version bump (1.13.1) ()","Add images to seasons list items
Implemented support to Kodi language setting case ""User interface language""
Fixed ""Prefer the audio/subtitle language with country code"" feature
Fixed possible dependencies errors on new installations
Fixed possible service crash on slower devices like RPI
Better managed data chunks in some cases could cause errors on starting playback
Tried to better handle HTTP ReadTimeout/ConnectionError errors
Updated translations fr, hu, pt-br, zh-cn"
"Version bump (15.2)
Updated request data
Added instructions to limit resolution
New Issue and Pull request templates
Descriptions for the newbies..
Fixed pull request template position
Preparations

This PR includes:
- New Makefile targets for testing
- A pylint configuration
- A codeconv configuration
- A tox configuration
- Remove existing broken tests
- Add Kodi stub files for integration tests
- Add a simply run script to test the plugin
- Improve addon.xml and README.md
Fix fanart size and icon transparency

https://github.com/CastagnaIT/plugin.video.netflix/issues/191#issuecomment-529259561
Fix pylint and flake8 issues

This is a set of fixes for known pylint and flake8 issues.
The goal is to enable pylint and tox by default so new code
is properly tested and conforms to pylint and flake8 checks.
Separate run tests in Makefile
Fixes
Fix Fanart resolution and icon.png (again)
First integration tests

This is the first set of integration tests.
Improve LibraryUpdateService: wait for settings to be written
Fix library.py _get_item when source is ""special://""

If the item path is ""special://"" we need to search both translated and untranslated paths in the kodi library, because it's possible to add a ""special://"" path to sources
https://github.com/CastagnaIT/plugin.video.netflix/issues/199#issuecomment-529958007
Removed mac uuid in favour of device uuid

This fixes problems with newer androids 9/10
that have random mac address and also with apple devices
Use randomized uuid with library autoupdate
Small fixes after pylint/flake cleanup
Fix perpetual_path_request after Pylint fixes
Add more Dutch translations and fix English spelling
Version bump (0.15.3)","Initial conversion to python 3
Initial integration tests
Implemented device uuid to avoid always asking credentials
Fixed a problem when library source is special:// or a direct path
Fixed run library update on slow system like RPI
Updated dutch language
Minor fixes"
"Version bump (1.16.1) ()
Fix some ARM devices recognized in wrong way

To some ARM devices platform.machine return e.g. ""aarch64"" instead ""arm""
and was recognized as standard linux instead of ChromeOS
and generated incorrect user agent, this had ripercussion to the ESN
that when play a video caused error ""This title is not available to watch instantly""
Get rid of consider-using-from-import
Implemented licensed manifest request
Temporary allow request manifest without DRM data

ATM is possible make the manifest request also without DRM data,
then we take advantage to allow a soft transition
Warning message for ISA old version installed
Removed some old stuff and cleanup
Removed some IPC signals
Video sorted lists query changes
Use regular pip install
Changes on workflow
Update Simplified Chinese Translation ()
Version bump (1.16.2) ()","Implemented new licensed manifest request (to have HD is mandatory to update InputStream Adaptive to last version)
Fixed ""This title is not available to watch instantly"" error on some ARM devices incorrectly identified
Fixed empty lists on menu/submenus due to website changes
Update translation zh_cn
Minor changes"
"Version bump (1.3.0)
Fixed add title color wrong behaviour
Version bump (1.3.1)","Note to RPI devices: credentials will be asked again a storage problem has been fixed
Fixed KeyError issue"
"Version bump (1.3.1)
Add Plot fallback to skin not support PlotOutline
Fixed UnicodeWarning error

globals.py:225: UnicodeWarning: Unicode equal comparison failed to convert both arguments to Unicode - interpreting them as being unequal
                                              if path not in sys.path:
Fixed unicodedecode error
Close socket safe way
Fixed pylint errors
Update spanish translation [es_ES] ()

* Add files via upload

* Add files via upload
Updated sv-se translation
modelgroup must always be in capital letters
Removed Title property simplifies things
Fixed upnext regression
Fixed UnicodeDecodeError on chinese OS and improved error output
Version bump (1.3.2) ()","Fixed some issues on chinese systems
Fixed errors on loading lists
Fixed missing plot in some skins
Fixed ESN generation (lower case issue)
Fixed UpNext regressions
Updated translations es, sv-se"
"Version bump (1.18.2) ()
Add switch to manifest v1
Version bump (1.18.3) ()","Add 1080P workaround for linux ARM devices
To enable it: On Expert settings, set ""MSL manifest version"" to ""Version 1"""
"Version bump (0.16.2)
Cookie debug output
Forgot to update description
Do not close output stream

This prevent the error:
ValueError: I/O operation on closed file
from the http server
Added sendSignal non-blocking workaround
Using non-blocking send signal
fix: sqlite3 library deadlock
fix flake8
Updated message request info
Added user ID token authentication
Handle http 401 error
Refresh session data at service startup to update authURL
Added OrderedDict in convert_to_string
Fixed servers shutdown

shutdown() must be done before server_close() in order to stop serve_forever

this fix: [WinError 10038] An operation was attempted on something that is not a socket
Removed ugly dependency workaround
Add carriage return to the supplemental message
Listing menu simplified a bit
Added IS_ADDON_FIRSTRUN

Can be used to avoid to execute parts of code on subsequent addon
invocations and so optimize a bit the startup time.

The value will remain stored thanks to reuseLanguageInvoker,
but if the addon is updated or disabled and so reenabled, this value will
also be reset.
Show sceduling info only after setup
Check addon upgrade only at first run
Initialize databases only at first startup

*for MySQL the check is performed in any case
flake8 fixes
Added folder exists method
Fixed edge case of getDirectory error

This fix the error of:
ERROR: XFILE::CDirectory::GetDirectory - Error getting ...
due to missing delimiter at the end of path
Removed unused mkdir data path

It never worked because data_path is a ""special"" address,
so it always generated an exception,
and in case the folder is created by init cache
Saves the current kodi profile name as global

-Avoid multiple rpc requests
-Avoid problems with the use of the addon after rename the current kodi profile
Fixed unicodedecode error on py2
ndb file cache no more used
Cache class changes

-Removed global hack
-ttl read directly from global settings
-General cleanup
Version bump (0.16.3)","Fixed an issue that causing addon freeze on export/update to library
Fixed an regression issue that causing http error 401
Fixed an issue that causing unicodedecode error at startup
Fixed an issue that in some cases prevented the export of a tv show season
Generally optimized addon speed
Many improvements to the code"
"Version bump (0.16.0) ()
Fix typo
Update translation jp kr ()

* Update KR stranslation

* Update ko_kr/ja_jp

* done for main user interface
* WIP for Settings

* Update translation for JP/KR

* Update Settings

* Still working on

* Update KR/JP translation

* KR/JP Translation - 0.16.0

* Fix typo

* Add ja ko to language tag in addon.xml
Added SPDX license identifier and copyright

Only to python files as required from addon-checker
Fixed wrong docstrings
Fixed unicodedecode error when using non ascii char on inputdialog
Fix for flake8
Update hungarian translation ()
Update pt_br strings.po 12/2/2019 ()

* Update pt_br strings.po 12/2/2019

Added minor corrections to the translation, like correct use of gender in portuguese and alters on forms of expression used in Portugal to the forms of expression used in Brazil.

* Update strings.po
Add Python 3.5 testing support
Fixed unicodedecode error on android device

Beelink GT1mini-2
in the ro.product.model instead of number 2 has a special char and this is the cause of the errors
Some fixes for non default Skins
Updated fr translation
Improved and fixed gui path
Override default timeout also in ipc over http
Add compare dict with excluded keys option
Fixed possible cases of fake data in player_state
Recognition of streams between episodes only for Kodi 19

This also fix some other problems:
-issue that resetting of the settings saved at db, caused by false data returned by player_status
-double db saving of settings caused by the delay by the Kodi player to perform the restored data
-in some cases incorrect management of the workaround used for forced subtitles, which could be applied even if the subtitle setting on Kodi settings wasn't actually on 'Forced only'
Code climate update config ()
code climate: avoid too many return statements
code climate: number of line exceeded
code climate: pep8 indent
code climate: exceeded arguments
Raised level of cognitive complexity

This project requires a higher complexity
Moved parental control data extraction to website
code climate: refactor nfsession
code climate: refactor library
prefetch_login is not as internal method
Subtitle property adj for future versions of InputStream Adaptive

-allow to show/set multiple property to each subtitle track
Fixed stream continuity after 34f3b70481df30d40b27c2892f64a7
Fixed wrong content type to lists of movies
Workaround to intercept skin widget calls

This freeze the add-on instance until service starts,
this is not a safe solution because depends on which window is open,
for now there is no better solution
Allow to distinguish dolby atmos streams
Updated user agent for windows
Updated some manifest parameters
Changed library context menu behaviour

Allow exports a single season in manual mode library update
Do not allow library operations to the single episodes
Version bump (0.16.1)","Allowed to export individual seasons to the library (manual mode)
Dolby atmos audio streams are now specified (Kodi 19)
Added workaround to fix skin widgets
Handled subtitle properties for next version of InputStream Adaptive
Introduced accurate handling of subtitles (Kodi 19)
Improved handling of subtitles (Kodi 18)
Improved return to main page from search dialog
Improved cancel login dialog after the logout
Improved timeout on IPC over HTTP
Fixed an issue that showed the wrong label while browsing movies·
Fixed ParentalControl/Rating GUI on custom skins·
Fixed an issue that cause unicodedecode error on some android devices
Fixed an issue that can cause unicodedecode error in user/password
Added japanese language
Updated kr, hu, pt_br, fr
Many improvements to the code"
"Version bump (0.15.5)
Increased default cache ttl
Fixed missing identifier in video_list_sorted
Cleanup and improved speed of add/remove to mylist
Fixed library full sync from '92 elements bug'
Added menu to force mylist update
Pylint fixes
Added option to highlight titles contained in my list
Updated Italian language
Fixed wrong position of append kwarg value
Catch a license error
Check mastertoken validity only to a manifest request
Added supplemental info about tvshow/movie
Fixed purge cache

wrong path of files
Added lenght of trailer video
Fixed InvalidVideoId error when play a trailer
Removed unused customexportname settings
Reworked settings general menu
Reworked settings library menu
Reworked settings expert menu

this also add two new options to show/reset the ESN
Fixed mixed languages of infolabels in cache

Caused when there are multiple profiles in different languages
Also childrens profiles now have a 'my list'
Fixed multiplication suppl. info to plot
Updated addon screenshots
Do not check setting if enabled

This check is not necessary becouse this function is executed by a
settings action that depend from mylist_library_sync setting

And causes the inability to start synchronization if
mylist_library_sync is activated at the same time without close the
settings screen
Sync changes made to tvshows in my list from other apps
Fixed wrong get_tvshows_id_list query
Added notification to completed library sync
Added owner/kids info to profiles descriptions
Force to use owner account profile to sync mylist

the authURL seems to specify also the profile used so for now allow
synchronization only on the main profile

in the future you can also implement an option to decide which profile
to synchronize the mylist
Enabled export NFOs on sync mylist to kodi library
Some fixes to translations
Updated italian translation
AuthURL is changed while the profile change is executed

Seem the cause of error:

HTTPError: 401 Client Error: Unauthorized for url:
https://www.------.com/api/shakti/v7bb27746/playlistop

when try to add/remove to mylist after switching to another profile
Clean and fixed generate esn

now manufacturer string is limited to 5 char
example with nvidia shield:
ro.product.manufacturer = 'NVIDIA'
ro.product.model = 'Shield android tv'
ro.nrdp.modelgroup = 'SHIELDANDROIDTV'
esn output:
old: NFANDROID2-PRV-SHIELDANDROIDTV-NVIDIASHIELD=ANDROID=TV
new: NFANDROID2-PRV-SHIELDANDROIDTV-NVIDISHIELD=ANDROID=TV
Version bump (0.15.6)","Added customizable color to titles already contained in mylist
Added menu to mylist menu to force update of the list
Added trailers video length
Added supplemental info to tvshow/movie plot (shown in green)
Added add/remove to my-list also in childrens profiles
Added owner/kids account profile infos to profiles menu items
Added notification when library auto-sync is completed (customizable)
Library auto-sync now take in account of changes made to mylist from other apps
Library auto-sync now can export automatically NFOs
Increased default cache ttl from 10m to 120m
Improved speed of add/remove operations to mylist
More intuitive settings menus
Updated addon screenshots
Fixed generate ESN on android
Fixed ""Perform full sync"" setting now work without close settings window
Fixed HTTPError 401 on add/remove to mylist
Fixed cache on sorted lists
Fixed library full sync when mylist have huge list
Fixed wrong cache identifier
Fixed videoid error when play a trailer
Fixed purge cache that didn't delete the files
Fixed mixed language of plot/titles when more profiles have different languages
Other fixes"
"Version bump (1.18.0) ()
Update Simplified Chinese Translation ()
JP/KR translation for v1.18.0 ()
Add missing videoid path to show_availability_message
Changes from website related to watched status sync
Version bump (1.18.1) ()","Fix problems to watched status sync due to website changes
Fix error when trying to play an episode not yet available
Update translations zh_cn, jp, kr"
"Version bump (0.16.1)
Update Dutch
Updated es translation
Update README.md

Simplified some parts
Removed per profile watched settings

No longer required
Language changes suggested by users
Updated it, de translation
Some python 3 fixes
Add season number in infolabel to season items
Updated pl translation
Handled not available metadata
Sqlite connections and multi threads a way to solve

In the latest kodi builds a problem between shared connections between different threads has been highlighted, which was not present before or was present in a rare cases always on linux devices (RPI and some Android). I don't understand why the problem's only just come up now.

This problem seem to be affected low power devices, can happen more easily than sqlite read/write with the same connection so causing side-effects to the sqlite module.

The main problem is that sqlite doesn't really support shared connections by several different threads and mishandles multiple readings/writings at same time.
Updated readme
Properties must not be shared with multiple kodi profiles
Get list of profiles by api
Removed html parser from profile name
Fixed missing profile on first login
is_logged_in must not be internal method
Corrected description
Hidden SSL setting - developers only
A hack way to speed up requests made by requests module

This allows you to speed up the first request (made by requests module)
about halving the time it takes to get a response

With some devices/os you can see a significant improvement at the first start of the addon
Version bump (0.16.2)","Improved add-on startup
Improved loading of profiles list
Added in expert setting a choice to speed up service or addon startup
Fixed an issue that causing addon misbehaviour using multiple Kodi profiles
Fixed an issue that causing addon breakage with sqlite connections
Fixed some python 3 issues on Android
Handled cases of metadata not available
Permanently removed sharing Kodi videos settings between profiles
Updated de, es, it translations
Minor improvements"
"Version bump (1.12.0) ()
Do not deny profile switch when will not performed
Better managed side effect of playback STRM from a shared path
Version bump (1.12.1) ()","Fixed an issue that not allow to use same profile to play videos with UpNext
Disabled UpNext when play STRM of a shared path (Wiki: Share STRM library with multiple devices - OPTION 2)"
"Version bump (0.15.3)
Fixed skipping sections

Netflix has changed the key to skipMarkers
this commit also fix the error:
Unknown format code 'd' for object of type 'float'
in some cases the return value was float,
removed superfluous time conversion
Fixed skipping dialog duration time
Update Portuguese (Brazil) language - pt_BR ()

Update translation pt_BR
Language: update translation de ()
Clear cache on addon upgrade
Added manifests cache bucket
Allow to exclude fallback to disk cache on key missing
Added custom eol argument
Saving the requested manifests to the cache
Purge cache when a content profile setting is changed
Do not limit obtaining data from my-list

this should fix the problem of add/remove to my-list
when there are over 92 elements
Added InputStream Helper settings to settings menu

Co-authored-by: Stefano Gottardo <gottardo.stefano.83@gmail.com>
Update Spanish Language File

Added missing message strings and changed some phrases to make it easier to understand.
Updated header data of request
Fixed expired mastertoken

When leaving a device turned on 24/24 it is necessary to verify that the
mastertoken is still valid before making requests
Implemented check for new mastertoken (todo)

TODO:
Currently no documentation on how to apply for renewal of the
mastertoken without a handshake
Version bump (0.15.4)","Added InputStream Helper settings in settings menu
Fixed add/remove to mylist on huge lists
Fixed expired mastertoken key issue
Fixed skipping sections due to netflix changes
Manifests now are requested only once
Updated pt-br, de, es translations
Minor improvements"
"Version bump (1.16.0) ()
Latest update of strings.po in gl_es ()

* Update strings.po

* actualizada data de edición de strings.po

Co-authored-by: naciohr <>
Updated video profiles
Allow browse network paths
Allow to always have play callbacks also with playlists

Fix broken addon action_controller services
Fix db query error introduced by
Removed wrong argument
Removed workaround for ""1 more item"" problem

netflix has fixed the API bug
Version bump (1.16.1) ()","Updated video profiles for HEVC/HEVC HDR
Add support to browse network paths with open file/folder dialog
Fixed missing items in episodes lists and others submenus
Fixed broken add-on services when play videos from playlist (only Kodi 20)
Update translations gl_es
Minor changes"
"Version bump (1.10.0) ()
Set right kodi python abi
Fixed sed regex
Execute a single db transaction for all add operations

This is needed to fix performance problem with slow storages,
that do not have enough speed performance to perform multiple
individual db writing operations, and cause long delay in loading lists
and in the worst cases raise AddonSignals call timeout error
Revert ""Fixed regression PIN request at each mainmenu loading""

This reverts commit 502affe44573683b30a1186d2bc00d10b03a025a.
Simplified a bit some directory code

*Fix problem that you can not change profile with autoselection enabled
Convert videoid once and use the same variables
Fixed wrong time position when player seek
Updated msl endpoints

New changes on msl endpoints
seems to cause no problems
Implemented clean library by directory
Ignore extrafanart invocations on each addon path

E.g. Black Glass Nova skin use extrafanart, and call multiple times the addon at each path,
mainly cause problem with the playback, but also makes multiple list loads
Add class to read/write properties to kodi home window
Use WndHomeProps to service status
Changes to directory behaviours and profile switch activation
Fixed error when no subtitles (on kodi 19)

currentsubtitle can be ""None"" but also an empty dict
Print debug metadata as json
Slight speeding up the loading of video list
Update resume time also on stop event

Let's give you a chance to update the list with the correct value, although it may fail with low-end devices
Improved watched status when nf sync is enabled
Ensuring that videos are set as watched

Except when netflix sync is enabled
Galician translation - new translation ()

* Galician translation

Adding Galician translation folder and strings.po

* Galician translation

Completing translator full name.

* Galician translation

Typo correction

* Galician translation

Updated language format to gl_es to comply with Kodi integration.

* Galician translation

Correction of addon Up Next name.
Correction of addon Open Connection name.
Correction of Double quote invalid coding.
Version bump (1.10.1) ()","Improved watched status, now videos will be marked as watched correctly (Kodi 19 all cases/Kodi 18 library only)
Improved loading video lists speed on slow hdd/sdcard
Updated some MSL endpoints
Implemented clean library by directory (Kodi 19)
Fixed problems with skins that cause add-on problems due to extrafanart
Fixed broken profile switch when profile autoselection was enabled
Fixed wrong time position sent to netflix server when player seek
Fixed notification error when playback a video with no subtitles (Kodi 19)
Add Galicial translation"
"Version bump (1.12.1) ()
Removed github data
Readd ci workflow
Fix check-translations
Removed threaded send_signal

Slower devices are not always fast enough to send the signal in faster way while other operations are carried out,
this cause to ActionController to crash because receive the playback data after Kodi 'Player.OnPlay' event and will no longer manage events
Avoid expose response object between functions and better managed chunks
Partially reverted workaround of 918460443cb1818e3a000c520b42311a26d74b66
Try better handle HTTP ReadTimeout/ConnectionError errors
Readd release workflow
Version bump (1.12.2) ()","Fixed possible service crash on slower devices like RPI
Better managed data chunks in some cases could cause errors on starting playback
Tried to better handle HTTP ReadTimeout/ConnectionError errors"
"Version bump 0.13.16
Add VP9 profies to fix PRK exception
Version bump 0.13.17","Add VP9 profiles to avoid PRK exception while downloading manifest
Android ESN generation enhanced"
"Version bump (1.12.2) ()
Enabled TCP Keep-Alive to Requests/urllib3
backport PR
Version bump (1.12.3) ()","Fixed HTTP ReadTimeout/ConnectionError errors
Fixed incorrect handling of MSL errors"
"Version bump (1.18.9) ()
Update README.md

fixed symbols in the res table
Update Simplified Chinese Translation for 1.18.9 ()

* Update Simplified Chinese Translation for 1.18.9

* Update Simplified Chinese Translation for 1.18.9

Delete unofficial id's

* Update Simplified Chinese Translation for 1.18.9

Corrected translation
Updated czech translation ()
Update strings.po ()

Update strings.po language Galician
Allow STRM workaround only for Kodi versions below 19.5
Force InputStreamAdaptive settings for Kodi v19 or below only
Fix MSL user authentication
Update README.md
Fix add/remove errors when my list is empty
Version bump (1.18.10) ()","Fixed MSL error when playing videos from non-owner Netflix profiles
Fixed setting type error at first plugin startup on Kodi 20
Fixed error when you add a tvshow/movie on an empty my list
Removed STRM resume workaround for Kodi v19.5 and v20 (fixed on Kodi)
Update translations zh_cn, cs_cz, gl_es"
"Version bump (1.20.1) ()
Fix to httpcore ReadError [Errno 11] Try again

At least to me happens with Wifi connection only
and randomly, no idea if there is an appropriate solution
Fix missing 4k HDR for some videos
Update Polish translation ()

* Update strings.po

* Update strings.po

* Update strings.po

* Update strings.po

* Update strings.po

* Update strings.po

* Update strings.po
Fix setting id name
Fix plot on listitem setInfo
Disabled pylint too-many-branches to _request
Updated italian translation
Updated german translation for version 1.20.2 ()

* Updated german translation

* Updated german translation
Hungarian translation update for 1.20.2 ()
update zh_tw translate ()
Add premiered date to tvshow nfo
Replaced deprecated NFO movie year with premiered
Replaced deprecated NFO episode year with premiered
Version bump (1.20.2) ()","Fixed 4k HDR
Fixed missing plot
Fix/workaround for error ""ReadError [Errno 11] Try again""
Fixed broken Clean cache menu
Fix year/premiered date on NFO files.
Only the year is available, required optional full resync for existing files, on new files will be add by default.
Update translations pl, it, de, hu, zh_tw"
"Version bump (1.18.8) ()
Fixed recommendations menu
Update FUNDING.yml
Fix ""double click"" on skip button

Needed for Kodi 20
Make mediaflag video codec settings dependent
Fix wrong default value argument
Add override setting for Stream selection type
Fixed default value for isa_streamselection_override setting
Updated callpath due to website changes
Fixed MSL error User entity association record...
Updated italian translation
Updated german translation for version 1.18.9 ()

* Updated german translation

* Fixed typo in german translation
update zh_tw translate ()
Hungarian lang upadated for 1.18.9 ()
Update Romanian translation for 1.18.9 ()

Translated into Romanian newly added strings for version 1.18.9
Update French translation for v1.18.9 ()
Update JP/KR translation for v1.18.9 ()
Add black bars setting (test)
Fix remind me context menu
Version bump (1.18.9) ()","Add new expert setting to override ""Stream selection type"" setting of InputStream Adaptive (Kodi 20)
Add new experimental setting ""Limit maximum height of black bars""
Fixed recommendations menu
Fixed ""Remind me"" context menu error
Fixed MSL error ""User entity association record ...""
Fixed ""double click"" problem on Skip button (Kodi 20)
Better match for video codec with skin mediaflag
Update translations it, de, zh_tw, hu, ro, fr, jp, kr"
"Version bump (1.19.0) ()
Changed license type to ""standard""
Fix trackid for add/remove mylist/remindme
Update Greek translation ()

* Update strings.po

added few translations

* Update strings.po
Add python versions to sonar CI
Keep databases open

Try to longer open and close database handles for each operation.

For sqlite a check if done if the library is threadsafe.
If it's not, then the old ""connect-statement-close"" method is used.
Updated android ESN generation
Add new expert setting to force MSL idtoken auth
Add AV1 codec support for dev test purpose only
Sync language translations
Updated codec profiles
Updated italian translation
Fixed trackid keyerrors
Version bump (1.19.1) ()","NOTE: DUE TO WEBSITE CHANGES ANDROID L3 DEVICES CAN PLAY VIDEOS FROM MAIN PROFILE ONLY
Fixed error ""License update not successful (no keys)"" on linux systems
Fixed add/remove the remind me to the videos
Fixed IPC timeout error when you share STRM library with MySQL
Speeded up database access
Updated Android ESN generation
Add Expert setting ""Force MSL with idtoken authentication""
can be used to try solve error: ""User authentication data does not match entity identity""
Add AV1 codec support, for development test purpose only (Kodi 20)
Update translations el_gr, it"
"Version bump (1.18.6) ()
Updated pl translation ()

Fix wrong abbreviations.
Add setting to mark started tv shows as seen
Fix pylint unnecessary-dunder-call
Fixed genres/subgenres menus
Removed update_videoid_bookmark
Add HDR type info to skin flags
Fixed lang id 30702
Updated italian translation
Fixed setSetting error at first startup
Updated czech translation ()
Hungarian lang updated for 1.18.7 ()
Updated german translation for version 1.18.7 ()

See
Changed provider names separator
Migration to new repository
Update zh_tw translate ()

* Update zh_tw strings.po missing translate 1091, 1117, 1122

* remove mistake
Update README.md

Update for new repository
Update README.md
Update French translation for v1.18.7 ()
Reintroduced no cache for Top 10 menus
Update strings.po ()
Version bump (1.18.7) ()","REPOSITORY CHANGED: The repository has been changed, to receive future updates
the add-on will try update it automatically to new v2.0, if for some reason this not
happens you can update it manually by downloading: repository.castagnait-2.0.0.zip
from Github Readme: https://github.com/CastagnaIT/plugin.video.netflix
Started tv shows are no longer marked as watched by default, this to prevent problems
with Skin filters, if you prefer it enable ""Marks started tv shows as watched"" from settings.
Fix genres/subgenres menus due to website changes
Add support to HDR/DolbyVision skin media flags (Kodi 20)
Update translations pl, it, cs_cz, hu, de, zh_tw, fr, gl_es"
"Version bump (1.20.2) ()
Make consistent supplemental plot info for all cases
Updated Hungarian translation ()
Update Simplified Chinese translation for 1.20.2 ()
Avoid escape unicode property
Use lowercase hdrType

due to https://github.com/xbmc/xbmc/pull/22192
CmpVersion improvements
Cleanup version comparers
Translate Romanian strings for version 1.20.2 ()

* Translate Romanian strings for version 1.20.2

Translated missing Romanian strings for version 1.20.2

* Fix missed character

Added a missed question mark.
Auto generate ESN's
[cookies] fixed and commented flwssn cookie removal

the code did not work the cookie was not removed. The code has been fixed but removing this cookie as of today seems to produce any change
[cookies] Cleanup
New manifest changes
Sync translations
Updated italian translation
Upated german translation ()
Update timestamp when the ESN is set for first time
Update Simplified Chinese translation for 1.20.3 ()
Version bump (1.20.3) ()","IMPORTANT NOTICE: New changes to website is causing video quality to drop to 540p after about 20h,
this add-on update implements a workaround to fix this problem by changing ESNs every 20h.
If necessary, you can open ""Widevine / ESN settings"" on the Expert settings, to manually generate new ESN's
by selecting the ""Reset"" button, or you can also disable the 540p workaround.
IMPORTANT NOTICE FOR ANDROID: Do NOT USE the ESN of the original app with the add-on, or will cause video quality drop
to 540p also on the original android app for an unknown period of time. This problem cannot be solved by the add-on,
there are no know solutions yet, so you can only report the 540p problem to customer service.
FOR ANDROID, KNOWN SIDE EFFECTS: You will receive a notification that a new device has logged in every time ESN changes.
Add new 540p workaround setting to ""Widevine / ESN settings"" on the Expert settings
Supplemental plot info are now consistent in all use cases
Fix a possible website JSON parsing problem on login/refresh session
Fix ""hdrType"" TypeError (Kodi 20)
Update translations hu, zh_cn, ro, it, de"
"Version bump (1.20.6) ()
[api_paths] Replaced regularSynopsis with synopsis

Currently website return always english language only for this property
more likely website bug, has been also removed from website use
Cleanup/fix ListItem setInfo and properties deprecations
Version bump (1.20.7) ()","Workaround/fix for wrong plot language due to website bug
Cleanup/fix ListItem deprecated methods/properties (Kodi 20)"
"Version bump (1.22.2) ()
Revert some changes
Add __getitem__ to PickleableCookieJar
pylint fixes
Version bump (1.22.3) ()","Removed HTTPX module (http2) to fix compatibility with python >= 3.11
Restored Requests module (details)
Fix cookies errors of 1.22.2"
"Version bump (1.23.1) ()
update zh_tw translation ()
fix: Showing ""Browse subgenres"" folder coming from ""Previous page""
fix: wrong response count in lists causes showing ""Next page""
Fix bug if perpetual_range_selector is None
[infolabels] Make sure that parsed persons have a name
[action_controller] fix missing on_avchange callbacks

Fix zoom with ads streams
[device_utils] check ro.com.google.clientidbase for xiaomi boxes
[navigation] Use setResolvedUrl to play promo trailer

This fix kodi crash when you play promo trailer
on titles that are not yet available
e.g. titles on menu ""new and popular"", and submenu ""coming next week""
Version bump (1.23.2) ()","Fix/workaround for Kodi crash when play a promo trailer
Fix wrong ESN generation for Xiaomi tv boxes
Fix missing video zoom when video starts after ADS
Fix ""TypeError: Actor"" error that prevent to show video list
Fix wrong ""Next page"" shown when there are no more videos
Fix missing ""Browse subgenres"" folder when returning from a next page
Update translation zh_tw"
"Version bump (1.20.3) ()
Update Pt-br translation ()

* Update Pt-br addon Netflix

Update Pt-br addon Netflix

* Update strings.po

* Update strings.po

* Update strings.po

* Update strings.po
Do not reload msl data from file

This seems to be the cause of the Kodi crash on android
for some reason the wv crypto session become closed after RestoreKeys
and when crypto_session.Encrypt is called for the manifest req kodi crashes
Fix method return description
Use secrets to generate init vector
Fixes to menu settings conditions

On kodi v19.5 has not been added the resume fix
so we kept the workaround enabled for all v19
Fix for skin mediaflags wrong info on episodes
Add audio offset setting (Kodi 21)
Sync translations
Followup of fca21c1b57ea22913059dca201ce6f312f6a83d0
Try improving sqlite set_value with a single query
Allow logout also when not logged
Improvements for authkey login/logout
Replaced MSL idtoken auth with netflixid on android
Allow audio offset also on Kodi 20

Has been added support in to Kodi 20 final release
Updated italian translation
Updated german translation ()
Update Swedish translation ()
Version bump (1.20.4) ()","NOTICE FOR ANDROID DEVICES: Due to new changes to the website, many Android devices will not be able to play videos
with this addon, at the moment there are no solutions, we hope this is a temporary problem.
On android, replaced MSL idtoken auth with netflixid auth (for ""Email or password is incorrect"" error problem)
Add new audio offset setting
Fix Kodi crash on Android when play a video
Fix STRM resume workaround for Kodi v19.5
Fix wrong mediaflag info on episodes
Update translations it, de, pt_br, sv_se"
"Version bump (1.20.7) ()
[Readme] Notice for stopped support for Kodi v18
[Readme] Removed Kodi v18 badge
Fixed kodi library update
Version bump (1.20.8) ()","Fix Kodi library update when you add/remove tv shows and movies
Fix wrong path added to Kodi sources from library setting"
"Version bump (1.23.0) ()
Update README.md
[Readme] Updated repository link
[Readme] add kodi v21 badge
[VideosList] add trackIds data

Fix add/remove to my list context menu on search by language
[navigation][search] Fix page redirect that can fails

When path redirect fails the context menus that use page refresh
cause side effects for example when you use ""add to my list"" it open again the search menu
[infolabels] Fixed case of no watched status data
Version bump (1.23.1) ()","Fix missing Add/Remove to my list context menu on Search results
Fix misbehavior of Add/Remove context menu in my list on search pages that ask for new search
Fix titles wrongly marked as watched due to no watched status data"
"Version bump (1.22.0) ()
MSL website updates
Update strings.po polish ()

* Update strings.po polish

* Update strings.po
Fix broken polish translation
Updated german translation ()
Update Galician translation ()
MLS updates
Fix wrong mime type to proxy manifest response
Ads are not supported yet
Replaced MSL idtoken auth with netflixid on android

This restore an old android workaround that allow to workaround to the problem of the error ""Email or password is incorrect""
as we have already determined in the past, this is a generic error that does not have the true meaning of incorrect credentials

Downsides: L3 devices more likely will not works, also some L1 could not
works
Disabled auto generate esn for android L3 devices
Add custom error message for MSL 1044 error due to license error
Version bump (1.22.1) ()","NOTICE FOR ANDROID: Has been readd an old workaround to fix ""incorrect password"" error,
If you are using a L1 device you have to login again, however some L1 devices may still not works.
If you are using a L3 device you have, you have to disable ESN 1080p workaround from Expert setting after login again.
After the upgrade the add-on should disable the ESN 1080p workaround automatically but better check before re-login.
NOTICE FOR MAC: Video playback still not works. No solution has been found yet.
NOTICE FOR WINDOWS: Video playback still not works. No solution has been found yet.
ADS PLAN: Is officially not supported, this until support for ads is implemented appropriately.
Re-add workaround for ""invalid password"" error on android L1 devices
Add warning message for unsupported videos with ads contents
Update translations po, de, gl_es"
"Version bump (1.7.0) ()
Deleted unused global COOKIES
Improved speed of add-on sequential executions

Saved about 250ms in add-on sequential executions
(e.g. when browsing lists)
Removed is_profile_session_active not working anymore
Improved initial fetch data and better managed profile issues
Removed cookie check fallback

Long forgotten, the old system used on v0.14
referred to this: https://github.com/CastagnaIT/plugin.video.netflix/commit/ac939c83f94aacd9a0a44f61bf21234c10df341c#diff-d9b1c04f1ba34affea80b51845c48a27
Fixed select first unwatched issue on Kodi 18.x
Removed unused variable
Included option to enable nf watched status sync to library (one way)

This feature is added one-way, i.e. it only sends changes to the netflix service but does not update the Kodi library if the watched statuses are changed externally.

The NF metadata API currently seem does not provide real-time updated data,
so you cannot use it to synchronize the watched status of the videos.

And there is also a second problem,
the profile switch is only executed at the beginning of the sync, and immediately restored (nf manages one profile at a time).
So the metadata requests are obtained associated with the last selected profile, and this will cause a mix of bookmark data from other profiles.
Renamed modules folder to packages and some other cleaning
Fixed PEP8 in g global variable
Removed double translatePath
Avoid exception in cookie clear
Set crypto handler in a better way
Moved imports out
Removed unnecessary pass
Removed old broken code
Improved comment
Small fix and improved comments
Add results per page setting
Moved update_loco_context and update_videoid_bookmark to nfsession
Renamed api folder to utils

*and paths.py to api_paths.py
Moved esn.py to utils
Moved get_esn to esn.py
Converted logging as stand alone class
Moved cookies.py to utils
Unified all exceptions classes
Removed old Lolomo code
When http error 401 happen try refresh session only with shakti endpoint
Misc changes
Fixed wrong naming
Changed args to file_exists
Removed disable_modal_error_display setting
Removed wrong 1e-6 multiplication

wrong calculation
Improved profile list and context menus
Update pull_request_template.md ()

`CONTRIBUTING` and `Pull Requests` was not working and i made a tiny tweak too :)
Removed hardcoded plugin id
Moved watched status sync setting to main settings page
Fixed cache service regression

The service cache must not be reinitialized every time
Invalidate cache when page results setting change
Fixed pylint too-many-branches
Updated italian translation
Changes for Code Climate
Update README.md

Some clarification to resolutions problems and some hint
Update README.md

Add small text to numerical references
Removed double execution of clean library
Protect settings when auto-update is running
Updated el_GR translation for 1.7.1 ()

* el_GR strings.po for 1.7.0

* Minor change in the disclaimer

* Additional strings for translation
Update the French translation for v1.7.1 ()

* Update the French translation for v1.7.1

Also update some old strings related to auto-selection of profiles
to be consistent with the wording used by the new features.

* Shorten some strings after review comments
Update pr_BR Translation ()
Update JP/KR tranlsation (1.7.1) ()
Updated hun lang ()
Polish 1.7.1 ()

* Update PL to 1.7

Up PL to 1.7

* Update strings.po
Updated german Translation for version 1.7.1 ()

See
Translate Romanian strings for 1.7.1 ()

Translated new and updated strings to Romanian for version 1.7.1
Removed partial HUB integration code
Protect nfsession service from possible errors
Update CZ language ()

* Update CZ language

* Update CZ language
Update strings.po ()
Add Hebrew translation ()

* Hebrew translation

* Update strings.po

Some fixes

* Replaced \r\n and \n with [CR]

* Fixing a typo

* Fixing phrasing

* Update strings.po

* Fixing missing msgstr and other adjustments

Fixing missing msgstr fields
Rephrasing several gender-specific text to gender neutral

Co-authored-by: Stefano Gottardo <gottardo.stefano.83@gmail.com>
Add Hebrew language to video content and related info
Version bump (1.7.1) ()","Added Profiles menu with new profiles context menus:
Set for auto-selection
Set for library playback
These two options now are managed only from the Profiles list
Added setting to enable nf watched status sync with library (one way)
Added expert setting to customize results per page
Fixed add-on inaccessibility when the current used profile no more exists
Fixed feature ""Select first unwatched"" on Kodi 18.x
Fixed failure to update nf watched status (seem works better now)
Little speed improvement on add-on sequential executions
Better handled types of exceptions with IPC
Removed disable_modal_error_display expert setting
Some code cleaning with other improvements
Add Hebrew translation
Updated translations it, el, fr, pr_br, jp, kr, hu, po, de, ro, cz, zh_cn"
"Version bump (1.22.1) ()
Update README.md

Changed Windows/MacOS ticks from resolutions reference table due to currently broken for undefined time
Replaced HTTPX to Requests module

Our local old httpx version have problems with new pyhton versions e.g. 3.11
update the httpx to last version (0.25) cause folowing errors
httpcore.RemoteProtocolError: Server disconnected
at least while testing on android, that make almost unusuable the addon
so for now has been reverted to Requests module.
With this will be lost http2 compatibility but since the login is broken, should be not a problem.
NOTE: KeepAlive fix has been not reintroduced intentionally.
Version bump (1.22.2) ()","Removed HTTPX module (http2) to fix compatibility with python >= 3.11
Restored Requests module (details)"
"Relative path calculation for parsing of multiple POMs from one multi-module Maven project (fixes)
Use jackson BOM to keep dependency versions synchronized, tweak SemanticallEqual
Option to suppress failure of parsing of an individual source file. (fixes)
Add test verifying static import of field (fixes)

Also renamed ""staticMethod"" to ""statik"" so that it isn't misleading.
Fixing TreeBuilder to handle generic types and arrays ()
Enum new class parsing (fixes, fixes, fixes)
Revert introduction of Jackson BOM into rewrite-xml (fixes)","Fixes
Parsing of whitespace in J.NewClass that is associated with an enum constructor invocation.
Fixing TreeBuilder to handle generic types and arrays
Ability to add static import on static field (not just method)
Improvements
Option to suppress failure of parsing of an individual source file."
"update SelectRecipeExamples to select tests which has both before and after
Add FindRepository and AddSettingsPluginRepository recipes for Gradle ()
Support upgrading versions of dependencies that include configuration closures","What's Changed
Add FindRepository and AddSettingsPluginRepository recipes for Gradle by @shanman190 in
Full Changelog: v7.40.1...v7.40.2"
"fix: PrimitiveWrapperClassConstructorToValueOf correctly converts new Floats having double constructor args. Fixes
Exclude some things from gradle-logging ()

* Exclude some things from gradle-logging

* Just remove StaticLoggerBinder

* Update rewrite-gradle/build.gradle.kts

Co-authored-by: Sam Snyder <sam@moderne.io>

Co-authored-by: Sam Snyder <sam@moderne.io>","Fixes
Remove logging classes from rewrite-gradle by @jbrisbin in
Full Changelog: v7.16.0...v7.16.1"
"add path field for recipe example
Support git origin URLs that start with org- ()

* Support git origin URLs that start with org-

Fixes https://github.com/moderneinc/moderne-cli/issues/319

* Propose alternative implementation using URIish

* Handle sub organizations

* Remove custom handling of leading slashes
Add tests to cover additional cases: fully qualified names ()

* Add tests to cover additional cases: fully qualified names

* Link to issue

---------

Co-authored-by: François Poyer <francois.poyer@eurecia.com>
Co-authored-by: Tim te Beek <timtebeek@gmail.com>","What's Changed
Support git origin URLs that start with org- by @timtebeek in
Add tests to cover additional cases: fully qualified names by @fpoyer in
New Contributors
@fpoyer made their first contribution in
Full Changelog: v7.40.4...v7.40.5"
"GitProvenance Support for non build environments without .git config ()

Currently, GitProvenance is mainly calculated using the information that is
inside the .git config. Only there is a special behavior when Jenkins is
the BuildEnvironment.

However, there is no .git config in GitLab, GitHub and Drone when
a repository is checkout and the required Git metadata is on
environment variables.

Therefore, this patch adds BuildEnvironment#buildGitProvenance() to
force an implementation for CI BuildEnvironments. If they need
.git config information, such as Jenkins or Travis, they throw
IncompleteGitConfigException.

A new CustomBuildEnvironment class has also been added to support
the use case of fetching external repositories from a GitHub repository.
enhancement: add classpath to part provider to avoid type missing cases
DataFlow: Support for data/taint flow from arguments to subject ()

Supports cases like `StringBuilder` where methods like `append`
taint the `StringBuilder` via the MethodInvocation subject
Support for git fecth with depth > 0 from BuildEnv ()

* Support for git fecth with depth > 0 from BuildEnv

In GitHub, you can fetch repositories with a particular ""depth"".
This creates a .config file with the Git metadata required to
publish repositories.

Specially, this is useful for cases where the repository
that is fetched is not the same than the one that runs GitHub Actions.","What's Changed
Enhancement: add classpath to part provider to avoid type missing cases by @kunli2  in 71ef846
DataFlow: Support for data/taint flow from arguments to subject by @JLLeitschuh in
Support for git fetch with depth > 0 from BuildEnv by @rpau 82a3dba)
Full Changelog: v7.37.2...v7.37.3"
"UpgradeDependencyVersion handling of dependencies within dependencyManagement ()
fix: use lowercase `json` for accept check ()

Follows convention from YML/ XML `accept` methods
Pin resilience4j-retry version temporarily ()

Due to https://github.com/resilience4j/resilience4j/issues/1472, `resilience4j-all:1.7.1` pom is broken and there is no `resilience4j-bom:1.7.1` released either. Does it make sense to stay on a healthy version instead of this partially broken release?
Produce examples of Recipe execution for use in documentation. CLoses  ()
Update README.md with relevant links, move developer info to CONTRIBUTORS.md
[] NoWhitespaceAfter, NoWhitespaceBefore ()
polish, checkstyle-files reformatting","Enhancements:
New Recipe: Remove unnecessary whitespace appearing after a token
New Recipe: Remove unnecessary whitespace preceding a token
Produce examples of Recipe execution for use in documentation
Fixes:
resilienace4j is pinned to 1.7.0 due to a missing bom in resilience4j 1.7.1
The JSON parser now uses a lower case .json suffix in its accept check."
"Add missing nullability annotation
Fix NPE when managed dependency does not have a version. Fixes
Update TabsAndIndentsVisitor to handle multi-line comments where the start tag precedes the end tag. (fixes:)
Added missing methods for closure args ()
Revert ""Update TabsAndIndentsVisitor to handle multi-line comments where the start tag precedes the end tag. (fixes:)""

This reverts commit 007f2639463a93b192ab0e023a85feec337ac706.
Add better error reporting when downloading maven dependencies.
Update TabsAndIndentsVisitor to handle multi-line comments where the negative shift exceeds the available whitespace. (fixes:)
Polish multi-comment indent fix end tag of multi-line comment precedes the start tag. (issue:)
Refine error handling in MavenPomDownloader
Fix release check in pom downloader.
Fix, MinimumSwitchCases fails to handle a switch case that contains only a default case
back to most simple fix for indenting multi-line comments when the start tag left of the end tag. (issue:)
Rename Tree.withException and do not log exception twice. Fixes
Less verbose execeptions from pom downloader
Fix, MethodNameCasing behaves incorrectly when encountering encounters a method with a parameter of unknown type
Surface downloading exceptions when resolving dated snapshots
Revert ""Surface downloading exceptions when resolving dated snapshots""

This reverts commit 45272b0b414b24132b9f940607c258613282adad.
fix: check provided scoped dependency () ()

Co-authored-by: Thomas Zub <t.zub@lvm.de>
NPE on ManageDependencies using latest.patch / fixes
Add back the single argument constructor for EncodingDetectingInputStream
Correct logic that merges maven metadata. Fixes
Remove ManageDependencies version option
ManagedDependencies doesn't create version comparator from existing version (which may have hyphen in it)
ManageDependencies only manages first-order dependencies
ManageDependencies doesn't resolve dependencies ever
License header
Option to skip model updating on ManageDependencies
Fix test
Kotlin->Java test conversion in rewrite-maven
Kotlin->Java test conversion in rewrite-maven
Fix license headers
Kotlin->Java test conversion in rewrite-maven
Kotlin->Java test conversion in rewrite-maven
Do not call visitMarkers twice in XML Printer.
Fix broken formatting in tests
Add Anchor and Alias support to the Yaml model and JsonPathMatcher  ()

Yaml Anchor / Alias support

- Add a new `EntryKey` interface for `Mapping.Entry.key` values which are either scalar or alias blocks.
- Update `YamlParser` to handle `Mapping.Entry.key` as an instance of `EntryKey`
- New `ReplaceAliasWithAnchorValueVisitor`.
- Update `JsonPathMatcher` to replace alias trees with their associated anchor value before searching.
- Update `CoalesceProperties` to prevent transforming documents having anchor/alias pairs.
- Update `org.openrewrite.yaml.DeleteProperty` to prevent deleting properties from documents having anchor/alias pars.
Improved YamlPrinter behavior for scalars with double-quoted values containing escape sequences () ()
Make IntelliJ style constructor public so that Environment can activate it
Remove incomplete file I didn't mean to check in
Add recipe to find Quarks with parsing errors ()
UseDiamondOperatorTest RewriteTest conversion
Do not attempt to change the value of implicit version properties. Fixes
Render search markers in Javadocs. Fixes
Render search markers in Javadocs. Fixes
Add recipe to find Quarks with parsing errors ()
Ensure that lombok is available anywhere in the project ()
Remove ControlFlowIndentation recipe from common static analysis. It is made redundant by the inclusion of the NeedBraces recipe
Fix, ControlFlowIndentation recipe aggressively reformats more than it should
Added recipe to remove an existing Gradle Dependency ()
Use JavaType.Uknown instead of null in JavaType. Enhance FindMissingTypes to flag types that have Unknown components. Fix tests which this revealed to be using incorrect Java sources
Cleanup
Finish polishing JavaType, consistently using 'Unknown' instead of null anywhere that a type field cannot legitimately be null
Add Recipe which activates a rewrite style in a Gradle project
Update UseDiamondOperator (fixes:) ()

* Update UseDiamondOperator to verify that the parameterized types are semantically equal  (fixes:)
 - check MethodDeclaration.returnTypeExpression for context when the new class is a return expression.
 - check Assignment type when a new class is an assignment
 - check MethodInvocation the associate parameter type when the new class is an argument
Finish migrating Maven tests, add PrintMavenAsDot
Add missing license headers
UseDiamondOperator is aware of vararg parameters when checking method invocation arguments.
Guard against null throwable in ParseExceptionResult
Fix MavenSettingsTest
UseDiamondOperator prevent IOB and unnecessary casts by verifying new-class has a null body and the target parameter types are not empty when visiting method-invocations and returns.
Maven basedir property should be relative to each pom.xml in a multi-module project.
Test for deriving metadata from file repository","What's Changed
Added missing methods for closure args to match Gradle API by @scuba10steve in
fix: check provided scoped dependency () by @thomaszub in
Add Anchor and Alias support to the Yaml model and JsonPathMatcher  by @pway99 in
Improved YamlPrinter behavior for scalars with double-quoted values containing escape sequences by @nmck257 in
Add recipe to find Quarks with parsing errors by @shanman190 in
Ensure that lombok is available anywhere in the project by @shanman190 in
Added recipe to remove an existing Gradle dependency by @scuba10steve in
Update UseDiamondOperator (fixes:) by @pway99 in
Update TabsAndIndentsVisitor to handle multi-line comments where the negative shift exceeds the available whitespace (issue:) by @pway99 in 7013d52
Fix release check in pom downloader by @tkvangorder in 1be5557
Fix, MinimumSwitchCases fails to handle a switch case that contains only a default case by @sambsnyd in 8066721
Fix, MethodNameCasing behaves incorrectly when encountering encounters a method with a parameter of unknown type by @sambsnyd in 864b237
Fix NPE on ManageDependencies using latest.patch / fixes by @jkschneider in cc0696a
Make IntelliJ style constructor public so that Environment can activate it by @sambsnyd in 09e3119
Render search markers in Javadocs. Fixes by @tkvangorder in 1a2f576, abd6507
Fix, ControlFlowIndentation recipe aggressively reformats more than it should by @sambsnyd in 3d0e1bb
Remove ControlFlowIndentation recipe from common static analysis. It is made redundant by the inclusion of the NeedBraces recipe by @sambsnyd in d7fa597
New Contributors
@scuba10steve made their first contribution in
Full Changelog: v7.30.0...v7.30.1"
"Fix GroovyVisitor not visiting GString type. Add a DelegatingGroovyTypeVisitor to make it easy to apply type affecting JavaVisitor to Groovy ASTs
Added license to DelegatingGroovyTypeVisitor.
Add Gradle Security Recipe Converting HTTP -> HTTPS
Polish
Updated JsonPathMatcher regex expressions to use unary expressions to set scope. ()","Update
The release of 7.21.2 was interrupted due to an outage by maven central.
Enhancements
Add Gradle Security Recipe Converting HTTP -> HTTPS 1fa399e
Fixes
Return all matches of RegexExpressions in JsonPathMatcher.
Contributors
@LLeitschuh 1fa399e
Full Changelog: v7.21.1...v7.21.2"
"Fix Groovy annotations with implicit value argument, misprinting of method declarations with annotations on parameters
Fix IOB in JavaVersion#getMajorVersion when version is from maven compiler source.
fixes
Polish. Added assert to cover maven compiler java version 8 without prefix of `1.` in UsesJavaVersionTest.
Expression unwrap
Make RecipeIntrospectionUtils.getPrimaryConstructor() operate correctly when it was loaded by a different classloader than JsonCreator
Polish
Fix: DataFlow not being commputed for starting at AssignmentOperation ()
Added method to collect class field names from super classes.
Add Discord link
Improved behavior of RemoveRedundantDependencyVersions when deserialized with empty-string options instead of null ()
Return the correct results from a JsonPath that ends with a wildcard. Fixed disabled JsonPathMatcher tests.
fixes
HCL getAttributeValue/withAttributeValue/getAttribute (issue)
Added test to relocate the property update with common infix ()
HCL JsonPathMatcher

binary and unary expressions
DeleteContent (issue)
MoveContentToFile (issue)
FindContent (issue)
Fixed java doc parsing issue related to multiline trailing whitespace mixed with javadoc margins. ()

fixes
Add instructions for how to build rewrite
Add username/password configuration to init script example
Fix import of MavenArtifactRepository
Properly tested init script for changing build to use corporate repositories
Guard against null JavaType$Method declaringType in ExternalSinkModels and ExternalFlowModels. ()
Polish
Remove dependency on okhttp, polish
F2 Cleanup of ControlFlow and DataFlow ()
Preserving parent associations in multi-module maven projects using CI-friendly versions ()
Use resolved properties
ChangeParentPom now runs RemoveRedundantDependencyVersion both before and after applying the new parent to the maven model ()
Cast J to NameTree in visitParameterizedType of JavadocVisitors. ()","What's Changed
Fix: DataFlow not being commputed for starting at AssignmentOperation by @JLLeitschuh in
Improved behavior of RemoveRedundantDependencyVersions when deserialized with empty-string options instead of null by @nmck257 in
Added test to relocate the property update with common infix by @ashakirin in
Fix Javadoc parsing issue related to trailing whitespace. by @traceyyoshima in
Guard against null JavaType$Method declaringType in DataFlow models by @traceyyoshima in
Cleanup of ControlFlow and DataFlow by @JLLeitschuh in
ChangeParentPom now runs RemoveRedundantDependencyVersion both before and after applying the new parent to the maven model by @nmck257 in
Cast J to NameTree in visitParameterizedType of JavadocVisitors. by @traceyyoshima in
New Contributors
@ashakirin made their first contribution in
Full Changelog: v7.26.0...v7.26.1"
"Updated JsonPathMatcher regex expressions to use unary expressions to set scope. ()
DelegatingGroovyVisitor can now maximize code re-use when applying a JavaVisitor to a Groovy AST
Implemented `acceptJava` on GroovyTypes.
fixes
fix invalid RemoveUnusedLocalVariablesTest test.
Fix SimplifyConstantIfBranchExecution Bugs ()

* Fix SimplifyConstantIfBranchExecution Bugs

There were several cases where the `SimplifyConstantIfBranchExecution`
recipie was incorrect.

This fixes those cases and simplifies removing unneeded blocks into
it's own visitor.

* Cleanup RemoveUnneededBlock

* Changes from review feedback

* Refactor `J.Block.empty()` out to single use method call
Add Maven Security Recipe Converting HTTP -> HTTPS ()

* Add Maven Security Recipe Converting HTTP -> HTTPS

* Update from review feedback
fixed detection of private methods with generic types in RemoveUnusedPrivateMethods. ()

fixes","Enhancements
Add Gradle Security Recipe Converting HTTP -> HTTPS
Visit groovy types in JavaVisitors.
Fixes
Return all matches of RegexExpressions in JsonPathMatcher.
Fix SimplifyConstantIfBranchExecution Bugs.
Fix invalid RemoveUnusedLocalVariablesTest test. 82e21af.
Prevent RemoveUnusedPrivateMethods from removing methods with generic types.
Contributors
@LLeitschuh 1fa399e
Full Changelog: v7.21.1...v7.21.3"
"Fix bug in loop break in Refactor
Fix name of rule that made change in Change
Fix resetting andThen() in CompositeRefactorVisitor

* Also fix rule name determination for Change (visitor.getName() instead of visitor.getClass().getName())
* Add new property to automatically turn on cursor `-Dorg.openrewrite.debug`
Fix formatting of ClassDecl when adding import
Fix binding of styles to profiles
Convert OrderImportTest to new syntax","Enhancements
Added -Dorg.openrewrite.debug to always have cursoring on. This makes it easier to set conditional breakpoints on a particular class name in visitors that don't otherwise enable cursoring.
Add methods to allow for binding of styles of profiles to parser.
Fixes
CompositeRefactorVisitor not clearing andThen() of delegates on next().
AddImport stripping first ClassDecl javadocs."
"Add metedata plugin to bom project
Disable failing test
Remove confusing comment
Parse field annotations correction in Groovy. Fixes
Implement annotation default parameter values as a list of strings
Fix compile errors I introduced, whoops
Add JavaType.Method constructor without defaultValue for backwards compatibility
New Maven `RemoveDuplicateDependencies` recipe ()

* New Maven `RemoveDuplicateDependencies` recipe

New Maven recipe to remove duplicates from the dependencies sections (but managed and actual).

Also optimizes `MavenVisitor#findDependency()`.

Fixes

* Change recipe to use cursor messaging rather than context

Co-authored-by: Tyler Van Gorder <tkvangorder@users.noreply.github.com>
FindTags throws ClassCastException (fixes)","What's Changed
New Maven RemoveDuplicateDependencies recipe by @knutwannheden in
FindTags throws ClassCastException 2f55b5c (Fixes)
Parse field annotations correction in Groovy. b28d77d (Fixes)
Full Changelog: v7.34.1...v7.34.2"
"Better assert message for new files when spec defines path.
MavenResolutionResult managed references
Revert ""Add Control Flow visualization utilities ()""

This reverts commit 23bfbd5b02749da5c5796c0809290b01b88ea772.
compileOnly graphviz in rewrite-maven
Update MethodNameCasing to prevent name space conflicts with existing method. (fixes)
graphviz dependency in maven test scope.
Add remaining dependency rewrite recipes for Gradle ()
RewriteTest calculation of sourceSpec path when in a dir","Enhancements
Better error handling in RecipeScheduler by @tkvangorder in
Adapting visitors
Propagate recipe exceptions to Result
Add RemoveMethodCallVisitor by @JLLeitschuh in
Add RemoveUnneededAssertion Recipe by @JLLeitschuh in
Yaml ChangePropertyKey enhancements by @nmck257 in
Added static helper to create a plain text source file by @tkvangorder in
Support tfvars files for HCL parsing by @rmadamanchi in
Add support for classifier and extension to Gradle dependency notations by @shanman190 in
Autodetect can be run as a Recipe
Add support for classifier and extension to Gradle dependency notations
Fixes
Update Gradle ChangeDependency recipes to allow empty string for config by @kmccarp in
Print JavaDoc.LineBreak in place of new lines in Space for @link and @see by @traceyyoshima in
Fix potential NPE when using DeleteStatement visitor
Fix SimplifyConstantIfBranch not being exhaustive by @JLLeitschuh in
RemoveUnusedLocalVariables can identify some non-side effecting methods 18a1817
GitProvenance is not correctly deriving the branch name when a local branch does not exist by @tkvangorder
Fix Control Flow when types are absent by @JLLeitschuh in
Fix even more control flow failures by @JLLeitschuh in
API Breaking Change: Remove Dataflow from JavaVisitor by @JLLeitschuh in
Fix file handles staying open any longer than is necessary 0f4dc06
Buffering input stream and fixing package-info.java warning
JavaDoc lineBreak index is not incremented.
Fix Control Flow when types are absent
Fix ReplaceLambdaWithMethodReference bug where the lambda body is a return statement and the return expression is not a MethodCall
IllegalStateException on misconfigured flow option on FindMethods
HideUtilityClassConstructor can make potentially breaking changes to classes.
Fix Basic block has no nodes!' error in ControlFlow be5c2ba
UpgradeDependencyVersion does not correctly upgrade artifacts when glob expressions are used.
MethodNameCasing is renaming method invocations but does not rename method declaration
API Breaking Change: Remove Dataflow from JavaVisitor
UnusedThrows is removing exceptions that it shouldn't
StringIndexOutOfBoundsException during JavaSourceSet.declarableFullyQualifiedName
RemoveImports and non-static wildcards
New Contributors
@rmadamanchi made their first contribution in
Full Changelog: v7.26.1...v7.27.1"
"Suppress any exceptions which might pop up from closing jgit
refactor: Adds part provider to produce part
enhancement: Improve ChainStringBuilderAppendCalls to support more edge cases like parentheses
GitProvenance Support for non build environments without .git config ()

Currently, GitProvenance is mainly calculated using the information that is
inside the .git config. Only there is a special behavior when Jenkins is
the BuildEnvironment.

However, there is no .git config in GitLab, GitHub and Drone when
a repository is checkout and the required Git metadata is on
environment variables.

Therefore, this patch adds BuildEnvironment#buildGitProvenance() to
force an implementation for CI BuildEnvironments. If they need
.git config information, such as Jenkins or Travis, they throw
IncompleteGitConfigException.

A new CustomBuildEnvironment class has also been added to support
the use case of fetching external repositories from a GitHub repository.","What's Changed
GitProvenance Support fo build environments without .git config by @rpau in ed6d241
Enhancement: Improve ChainStringBuilderAppendCalls by @kunli2 in 62241a3
Refactor: Adds part provider to produce part by @kunli2 in 01b493a
Full Changelog: v7.37.1...v7.37.2"
"Parse repositories from settings.xml (fixes)
Fixing TypeUtils.isString() ()
Failing test for sprint-boot-configuration-processor
Relative path calculation for parsing of multiple POMs from one multi-module Maven project (fixes)","Fixing TypeUtils.isString()
Relative path calculation for parsing of multiple POMs from one multi-module Maven project (fixes)"
"Fix JavaVisitor.visitVariableDeclarations() visits the type expression twice, potentially causing bugs for type visitors
visitParameterized() visits the class type twice, other types visited out of order
Polish type generation of JavaSourceSet in JavaParsers.
Adds `JavaSourceSet` marker with the name of the scope and an empty class path.
Renamed `SKIP_SOURCE_SET_MARKER` to SKIP_SOURCE_SET_TYPE_GENERATION`.
fixes

Peer review remediation: only set `sourceSetProvenance` when it is null in `getSourceSet`.","Fixes
Fix spending time and memory extracting types from extended Java classpath when that has been explicitly disabled 490350a
Fix JavaVisitor.visitParameterized() visits the class type twice, other types visited out of order 740243d"
"Remove MavenDownloader constructor which should not be used
Switch MavenCache to use URI instead of URL. URL is technically mutable so it should not be used as part of a cache key
Add in memory cache for Maven parent pom resolution
Add disabled tests reproducing issue
Increase HTTP request timeout in MavenDownloader from 10s to 1m","Increase HTTP request timeout in MavenDownloader from 10s to 1m a1cbc9b
Add in memory cache for Maven parent pom resolution 4b75461
Switch MavenCache to use URI instead of URL. URL is technically mutable so it should not be used as part of a cache key 5a5ca9a"
"Groovy method invocations and map expressions with no or partial parentheses
Remove HiddenField, RemoveUnusedImports, and RemoveUnusedPrivateMethods from common static analysis recipes until, and are fixed","Fixes:
Remove HiddenField, RemoveUnusedImports, and RemoveUnusedPrivateMethods from the common static analysis recipe until, and are fixed"
"Update for compatibility with JDK 11.0.9, should still work with older JDK 11 versions
Remove approval step from build_deploy_releases
Add disabled test case exercising issue 68
Add disabled test reflecting my enhanced understanding of issue 68
Fix formatting of single line comments before modifiers (fixes)
Finnaly fix by properly merging intermediate results in RemoveUnusedImports.StaticMethodsByType.visitMethodInvocation()
Update addAnnotation methods to use SemanticallyEqual ()","Fixes RemoveUnusedImports removes imports of static methods invoked from the argument lists of other method invocations
Fixes Single line comments before modifiers cause modifiers to be skipped by the parser
Enhances SemanticallyEquals usage in AddAnnotations"
"Fix broken test.
Add test demonstrating ternary in for each loop issue ()

Related https://github.com/openrewrite/rewrite/issues/2128
Fix semantic version comparators ()

* Fix semantic version comparators

* Fix semantic version comparators

Co-authored-by: Tyler Van Gorder <tkvangorder@users.noreply.github.com>
UpgradeDependencyVersion should do nothing for exotic versions.","What's Changed
Add test demonstrating ternary in for each loop issue by @JLLeitschuh in
Fix semantic version comparators by @tkvangorder in
Full Changelog: v7.27.2...v7.27.3"
"Cast J to NameTree in visitParameterizedType of JavadocVisitors. ()
support tfvars files for HCL parsing ()
GitProvenance is not correctly deriving the branch name when a local branch does not exist ()

* The remote branch name returned by JGit is prefixed with ""remotes/""
* Add a test to exercise no local branch

Co-authored-by: Tyler Van Gorder <tkvangorder@users.noreply.github.com>","What's Changed
Fix: GitProvenance is not correctly deriving the branch name when a local branch does not exist
Fix: tfvars extension is now considered a valid HCL extension
New Contributors
@rmadamanchi made their first contribution in"
"Fix HasSourcePath returns false-negative results ()
Add SinkFlow::getSinkCursors ()
Fix bug in MethodMatcher#matches(Expression) where J.NewClass was not considered as a possible match ()
PlainTextParser publishes parser event ()
Change dependency classifier recipe ()
Fix When rewrite-java-11 or rewrite-java-17 are on the classpath running jdk8, recipe loading can fail
Polish
Allow visitors to schedule another visit by invoking `doAfterVisit(this)` by changing `TreeVisitor.afterVisit` to a `CopyOnWriteArrayList`.  (issue https://github.com/openrewrite/rewrite-logging-frameworks/issues/64)
fix: instantiate GradleWrapper once per recipe run. ()
Added support for `JavaType.Method` to `TypeUtils.isOfType`. ()
Added support to check for semantic equivalence and compare method type of method invocations instead of the type of the arguments. ()
Recipe.validate accepts execution context ()
Added support to auto format multi catch control parens ()

fixes
Add Taint Tracking Support via Data Flow API ()

* Add Taint Tracking Support via Data Flow API

Takes the export of CodeQL's data flow models and leverages them in OpenRewrite
for taint tracking support.

* Add Local Value Flow Support

* Optimize ExternalFlowModel import logic and add support for constructors

* Further Optimize ExternalFlowModel loading using exclusively types in use

* Added support for multiple parameters and varargs

* Add some optimizations for loading ExternalFlowModels

* Update from code review

* Additional code cleanup

* Update rewrite-java/src/main/java/org/openrewrite/java/internal/beta/CallMatcher.java

Co-authored-by: Patrick Way <pway99@users.noreply.github.com>

* Minor refactoring and add Licenses

* Rename CallMatcher to InvocationMatcher

Co-authored-by: Shyam Mehta <shyam.mehta@hotmail.com>
Co-authored-by: Patrick Way <pway99@users.noreply.github.com>
Fix, GroovyParser stores absolute paths to sources it parses ()
Replace ExternalFlowModels jackson csv mapping with a BufferedReader and logic to instantiate FlowModels.
Update ExternalFlowModels#loadCvs exception to include source path.","What's Changed
Add SinkFlow::getSinkCursors by @JLLeitschuh in
Fix bug in MethodMatcher#matches(Expression) where J.NewClass was not considered as a possible match by @JLLeitschuh in
PlainTextParser publishes parser event by @fabapp2 in
Change dependency classifier recipe by @BoykoAlex in
fix: instantiate GradleWrapper once per recipe run. by @natedanner in
Added support for JavaType.Method to TypeUtils.isOfType. by @traceyyoshima in
Added support to check for semantic equivalence of method invocations in SemanticallyEqual by @traceyyoshima in
refactor: validate should allow for execution context by @natedanner in
Added support to auto format multi catch control parens by @traceyyoshima in
Add Taint Tracking Support via Data Flow API by @JLLeitschuh in
Fix, GroovyParser stores absolute paths to sources it parses by @sambsnyd in
Full Changelog: v7.24.0...7.24.1"
"Fix ExplicitCharsetOnStringGetBytes name
Updated binaryExpression to return all matches from a unaryExpression in JsonPathMatcher. ()

Updated binary logical operator to account for empty lists.
fixes
Added type cache to gradle parser builder. ()
Add Gradle wrapper recipe ()

* Add Gradle wrapper recipe

* Add distributionUrl to UpdateGradleWrapper recipe
Fix GroovyVisitor not visiting GString type. Add a DelegatingGroovyTypeVisitor to make it easy to apply type affecting JavaVisitor to Groovy ASTs","Enhancements
Add Gradle wrapper recipe
Fixes
Return all matches from binary expression in JsonPathMatches.
Added type cache to Gradle parser builder.
Contributors
Full Changelog: v7.21.0...v7.21.1"
"chore: add some examples
fix a bug of load reciple example yaml
Fix a bug of that parameters in the yaml somehow can be null
ChangePackage skipped on FQCN annotation arguments ()
Javadoc link to array not preserved ()

* Javadoc link to array not preserved

* Update rewrite-java-test/src/test/java/org/openrewrite/java/AddLicenseHeaderTest.java

Co-authored-by: Tim te Beek <timtebeek@gmail.com>

* Add expected to fail for now

---------

Co-authored-by: Michael Duerig <michael.duerig@magnolia-cms.com>
Co-authored-by: Tim te Beek <timtebeek@gmail.com>
Co-authored-by: Tim te Beek <tim@moderne.io>
Show diff on RewriteTest comparison failures ()

* Show diff on RewriteTest comparison failures

I've spent a bit too much time looking for whitespace changes on long before/after blocks. This ought to help, even if it's crude. Figured get feedback on if we want something like this first, and see from there how best to phrase this in the message.

* Introduce a DelegateSourceFileForDiff to use Result.diff()
AppendToSequence twice skips one ()

* Replicate issue where AppendToSequence twice skips one

* Update issue link

* Add expected to fail for now
feat: add visit for constructor calls () ()

* feat: add visit for constructor calls ()

* Apply suggestions from code review

* Update rewrite-java/src/main/java/org/openrewrite/java/DeleteMethodArgument.java

* Revert J.MethodCall; Thomas was right

---------

Co-authored-by: Tim te Beek <timtebeek@gmail.com>
Co-authored-by: Tim te Beek <tim@moderne.io>
Add sporadically failing multi-module ChangeParentPom tests ()

* Add sporadically failing multi-module ChangeParentPom tests

* Demonstrate the issue with a single RepeatedTest

* Remove nested class for multi module test

* Adopt LinkedHashMap for specBySourceFile to fix unit test
Change AST -> LST ()

For some recipes based on this request:
https://moderneinc.slack.com/archives/C01VADFPJQZ/p1683572711182819

Co-authored-by: Mike Sol <mike-solomon@users.noreply.github.com>
FindCallGraph
Add an example comment to Trigger a build
Add guard for loading yaml source, gracefully handling the loading error. ()

* Add guard for loading yaml source, gracefully handling the loading error.
Gradle Recipe AddDependency without version ()

* Add possibility to add a dependency without a version.

* Add Nullable to version, classifier can be present in map notation without version and add some tests for this case
Prevent MinimumSwitchCases from throwing template errors on Groovy sources
Fixes serialization issues with Exception#cause ()

* Fixes serialization issues with Exception#cause

Context: https://github.com/openrewrite/rewrite/pull/3199
Revert ""Fixes serialization issues with Exception#cause ()""

This reverts commit 2eb32f33ad7fca2f0b86647c43b95ef2e10f2b61.
Add `SearchResults.mergingFound` ()

Signed-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>
Fix type attribution when a method invocation is being used as a dependency
Visit parentheses around literals, binaries, and ternaries in G island
Add placeholder to keep space between Groovy String curly braces ()","What's Changed
ChangePackage skipped on FQCN annotation arguments by @timtebeek in
Javadoc link to array not preserved by @mduerig in
Show diff on RewriteTest comparison failures by @timtebeek in
AppendToSequence twice skips one by @timtebeek in
feat: add visit for constructor calls () by @thomaszub in
Add sporadically failing multi-module ChangeParentPom tests by @timtebeek in
Change AST -> LST by @mike-solomon in
Add guard for loading yaml source, gracefully handling the loading error. by @kunli2 in
Gradle Recipe AddDependency without version by @nicolasb29 in
Add SearchResults.mergingFound by @JLLeitschuh in
Add placeholder to keep space between Groovy String curly braces by @shanman190 in
New Contributors
@nicolasb29 made their first contribution in
Full Changelog: v7.40.6...v7.40.7"
"Update addAnnotation methods to use SemanticallyEqual ()
Add disabled test exercising issue 72
Fix OrderImports removing some static imports, fixed ChangeType not updating the type of changed J.MethodInvocations. Fixes
Fix AddImport to handle static method imports better ()

Great work, @tkvangorder !
AutoFormat better handles type parameters ()","Fix AddImport to handle static method imports better ()
Fix OrderImports removing some static imports, fixed ChangeType not updating the type of changed J.MethodInvocations ()
AutoFormat better handles type parameters ()"
"MavenDownloader was exiting on first download failure.
Polish, bump self usage of rewrite plugin to latest.release
Test reproducing []
Polish, moving test for [] next to logically similar test of whitespaceOnBlankLineBetweenBodyAndTags
Snappy compression type cache keys ()
Polish, moving tests for [] into []
Add condition to cover when a method selectType is a Type.Unknown. ()

fixes
Update ChangeParentPom to prevent version downgrades when allowVersionDowngrades is false. Fix ()","What's Changed
Snappy compression is used for type cache keys reducing the heap size of the cache by roughly 50%.
TypeMapping throws an exception parsing a MethodInvocation from an ErrorType.
Update ChangeParentPom to prevent version downgrades when allowVersionDowngrades is false.
Full Changelog: v7.17.0...v7.17.1"
"Add tests to cover additional cases: fully qualified names ()

* Add tests to cover additional cases: fully qualified names

* Link to issue

---------

Co-authored-by: François Poyer <francois.poyer@eurecia.com>
Co-authored-by: Tim te Beek <timtebeek@gmail.com>
polish RecipeExample
Correct and successfully test that we have the correct gradle-wrapper.jar file
Fixes circular references serializing markers ()

* Fixes circular references when the markers are
serialized.

This error appears when we build the rewrite repository

Caused by: java.lang.RuntimeException: java.io.UncheckedIOException: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Direct self-reference leading to cycle (through reference chain: java.util.ArrayList[272]->org.openrewrite.text.PlainText[""markers""]->org.openrewrite.marker.Markers[""markers""]->java.util.ArrayList[5]->org.openrewrite.marker.Markup$Warn[""exception""]->java.lang.RuntimeException[""cause""]->org.gradle.api.artifacts.ResolveException[""cause""])
	at io.moderne.gradle.DelegatingSerializingProjectParser.unwrapInvocationException(DelegatingSerializingProjectParser.java:172)
	at io.moderne.gradle.DelegatingSerializingProjectParser.writeAstFile(DelegatingSerializingProjectParser.java:64)
	at io.moderne.gradle.ModerneAstTask.run(ModerneAstTask.java:91)
chore: add some examples","What's Changed
Recipe example schema update
Fixes circular references serializing markers by @rpau in
Full Changelog: v7.40.5...v7.40.6"
"Use jackson version from org.openrewrite.build.language-library plugin
update `XPathMatcher` to support conditional tag match ()

* update XPathMatcher to support conditional tag match
Introduce a visitor to extract examples from a rewrite recipe unit test. ()

* Add ExamplesExtractor visitor
Add OpenRewrite gradle plugin
Rewrite rewrites Rewrite ()

This adds an EndOfLineAtEndOfFile recipe, this recipe is applied
to this recpie using the rewrite plugin.

Dogfood :tada:

Signed-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>
`ShortenFullyQualifiedTypeReferences` should not modify Javadoc
`ShortenFullyQualifiedTypeReferences` should not shorten `java.lang`

The reason being that the package could contain another type by that name and that the `java.lang` qualifier was used to disambiguate.
remove semicolons from RemoveUnusedVisitorTest ()
UpgradeDependencyVersion for Gradle now updates the dependency model, supports updating variables in version numbers, and can update both string and map dependency notations
chore : update ExamplesExtractor and fix bugs
MavenPomDownloader support download snapshot timestamp version ()

* MavenPomDownloader support download snapshot timestamp version

* fix format

Co-authored-by: Tim te Beek <timtebeek@gmail.com>

* handleSnapshotTimestampVersion

* Touch up and link to issue

---------

Co-authored-by: Tim te Beek <timtebeek@gmail.com>
Co-authored-by: Tim te Beek <tim@moderne.io>
`VariableNameUtils#generateVariableName()` now visits tree from `scope`

A client recipe using `VariableNameUtils#VariableNameUtils()` may already have modified the LST element when calling the method and this modification may have an impact on the result. To address this, the visitor will now visit the element held by the cursor rather than the element already linked by the parent element.

To use this feature the client recipe should use `Cursor#Cursor(Cursor, Object)`.
Allow `JavaTemplate` to replace `J.FieldAccess` in annotation

`JavaTemplate` can now also replace a `J.FieldAccess` which is used as an argument to an annotation parameter. In any case this currently works when the annotation is declared on a class or a method. More work is required to also make this work as expected in other locations.

Fixes:
Update DocumentExample annotation and the according changes in ExamplesExtractor
Handle shortened form of Maven `parent.version` and `project.artifactId`
ClasspathScanningLoader should catch Throwable not errors ()

Specifically for `java.lang.NoClassDefFoundError`
`NoStaticImport` ignores static members from local compilation unit

Only change the method invocation if there is a corresponding import.

Fixes:
Revert ""`NoStaticImport` ignores static members from local compilation unit""

This reverts commit 49b29f5fa27aec1e65d752d277739e6d6f904259.
During parsing of Maven poms, treat failure to resolve dependencies like other parsing failures, allowing parsing of other sources to continue.
DependencyStringNotationConverter to static utility class
Polish
Prevent UnnecessaryCatch from removing `catch (Exception e)` blocks, unless specifically opted-in, as that can frequently result in messing up exception handling for unchecked exceptions
Use DependencyStringNotationConverter to improve UpgradeDependencyVersion. Thanks, Shannon
Add `ShortenFullyQualifiedTypeReferences` to `cleanup.yml`
Update Environment#listRecipeDescriptors to support maintainers and examples on documents
Add recipe SelectRecipeExamples to automatically select recipe examples
Add license headers for SelectRecipeExamples
NoStaticImport recipe updates inner calls ()

* NoStaticImport recipe updates inner calls

* Remove second argument

* Do not replace if receiverType is the same as surrounding class

* Verify behaviour for calls to super

* Add suggested unit tests, which will break

* Also check one level above current class

* Add test using Runnable

* Also remove local imports

* Document that there's a case we're not yet covering

---------

Co-authored-by: Victor C <victor.c@incentivio.com>
Co-authored-by: Tim te Beek <timtebeek@gmail.com>
Co-authored-by: Tim te Beek <tim@moderne.io>
Prevent NPEs on Gradle build files for NoStaticImport
Do not apply NoStaticImport if class extends receiverType
Implement prerelease versions according to Maven rules ()

The version qualifiers in Maven versions are case-insensitive. Adjusting the code accordingly and also matching `CR` as an alias for `RC` (this is for example used by the Quarkus project).

Fixes:
update SelectRecipeExamples to select tests which has both before and after","What's Changed
update XPathMatcher to support conditional tag match by @kunli2 in
Introduce a visitor to extract examples from a rewrite recipe unit test. by @kunli2 in
Rewrite rewrites Rewrite     by @JLLeitschuh in
remove semicolons from RemoveUnusedVisitorTest by @sullis in
MavenPomDownloader support download snapshot timestamp version by @JoeCqupt in
ClasspathScanningLoader should catch Throwable not Exception to catch Error by @blipper in
NoStaticImport recipe updates inner calls by @Cimballi in
Implement prerelease versions according to Maven rules by @knutwannheden in
During parsing of Maven poms, treat failure to resolve dependencies like other parsing failures, allowing parsing of other sources to continue. by @sambsnyd in 6886dee
Handle shortened form of Maven parent.version and project.artifactId by @jkschneider in defbc7c
New Contributors
@JoeCqupt made their first contribution in
@Cimballi made their first contribution in
Full Changelog: v7.40.0...v7.40.1"
"RemoveDependency now updates the model as well as the underlying XML
Add disabled test reproducing issue
Handle snapshot version resolution (fixes)
Maven resolver substitutes versions recursively (fixes)","Handle snapshot version resolution (fixes)
Maven resolver substitutes versions recursively (fixes)"
"chore: update copyRight to 2023 for antlr generated files
Improve YAML Recipe testing and add JavaRecipeLifecycleTest ()

Related: https://github.com/openrewrite/rewrite/discussions/2849
Add `IsLikelyTest` and `IsLikelyNotTest` Recipes ()

Enables applicability tests to be applied exclusively to, or excluding
test sourcs.

Resolves https://github.com/openrewrite/rewrite/discussions/2849
Closes
Add recipe to replace Stream.toList() with Stream.collect() ()

* Add recipe to replace Stream.toList() with Stream.collect()

* Fixed tests

* Code simplification
fix: a bug in UseSystemLineSeparator if not getting for line separator
Cleanup `RecipeScheduler` and associated logic ()

Co-authored-by: Kun Li <kun@moderne.io>
Revert ""Cleanup `RecipeScheduler` and associated logic ()""

This reverts commit 606769c00f49be5e76c655d281e84b35ba29532b.
Added Test Cases for ReplaceApacheCommonsLang3ValidateNotNullWithObjectsRequireNonNull ()

* Added recipe to replace Apache validate.notNull with objects.requireNonNull

* Update java-best-practices.yml

* Update java-best-practices.yml

* Added testCases for ReplaceApacheCommonsLang3ValidateNotNullWithObjectsRequireNonNull recipe

* Add commons-lang3 for tests to match type

* Limited ReplaceApacheCommonsLang3ValidateNotNullWithObjectsRequireNonNull recipe to one Argument methods

* Change order of applied recipes

As seen in https://github.com/openrewrite/rewrite-migrate-java/blob/e9aaf04dd5a90509baee77e9cc215a2b084a09b4/src/main/resources/META-INF/rewrite/no-guava.yml#L104

* Update ReplaceApacheCommonsLang3ValidateNotNullWithObjectsRequireNonNullTest.java

* Update whitespace

---------

Co-authored-by: Jonathan Schnéider <jkschneider@gmail.com>
Co-authored-by: Tim te Beek <tim@moderne.io>
Use CI_SERVER_HOST to get GitLab host name ()

As per https://docs.gitlab.com/ee/ci/variables/predefined_variables.html

Because GraalVM has issues resolving hostname.
```
JNA: Problems loading core IDs: java.lang.Object
Exception in thread ""main"" java.lang.NoClassDefFoundError: java/lang/Object
	at org.graalvm.nativeimage.builder/com.oracle.svm.core.jni.functions.JNIFunctions.FindClass(JNIFunctions.java:343)
	at org.graalvm.nativeimage.builder/com.oracle.svm.core.jni.JNIOnLoadFunctionPointer.invoke(JNILibraryInitializer.java)
	at org.graalvm.nativeimage.builder/com.oracle.svm.core.jni.JNILibraryInitializer.callOnLoadFunction(JNILibraryInitializer.java:71)
	at org.graalvm.nativeimage.builder/com.oracle.svm.core.jni.JNILibraryInitializer.initialize(JNILibraryInitializer.java:132)
	at org.graalvm.nativeimage.builder/com.oracle.svm.core.jdk.NativeLibrarySupport.addLibrary(NativeLibrarySupport.java:174)
	at org.graalvm.nativeimage.builder/com.oracle.svm.core.jdk.NativeLibrarySupport.loadLibrary0(NativeLibrarySupport.java:130)
	at org.graalvm.nativeimage.builder/com.oracle.svm.core.jdk.NativeLibrarySupport.loadLibraryAbsolute(NativeLibrarySupport.java:89)
	at java.base@19.0.1/java.lang.ClassLoader.loadLibrary(ClassLoader.java:57)
	at java.base@19.0.1/java.lang.Runtime.load0(Runtime.java:785)
	at java.base@19.0.1/java.lang.System.load(System.java:2011)
	at com.sun.jna.Native.loadNativeDispatchLibraryFromClasspath(Native.java:1045)
	at com.sun.jna.Native.loadNativeDispatchLibrary(Native.java:1015)
	at com.sun.jna.Native.<clinit>(Native.java:221)
	at org.openrewrite.marker.ci.POSIXUtil.<clinit>(POSIXUtil.java:23)
	at org.openrewrite.marker.OperatingSystemProvenance.hostname(OperatingSystemProvenance.java:69)
	at org.openrewrite.marker.ci.GitlabBuildEnvironment.build(GitlabBuildEnvironment.java:44)
	at org.openrewrite.marker.ci.BuildEnvironment.build(BuildEnvironment.java:30)
	at org.openrewrite.marker.GitProvenanceBuilder.fromProjectDirectory(GitProvenanceBuilder.java:23)
```
Allow null start cursor to Dataflow
Error messaging on classpathFromResources
More hostname checks before relying on JNI
Remove deprecated constructors on Maven recipes
Fix file pattern match on dependenciesFromResources
Better regex for dependenciesFromResources
Optimize dependenciesFromResources
Use our log-less fork of object differ. Fixes","What's Changed
Eliminate log spam from ObjectDiffer by @jkschneider and @sambsnyd in a3bd2f6
Fix JavaParser.dependenciesFromResources() sometimes failing to load a jar on the first attempt by @jkschneider in ed9ccd4
Improve YAML Recipe testing and add JavaRecipeLifecycleTest by @JLLeitschuh in
Add IsLikelyTest and IsLikelyNotTest Recipes by @JLLeitschuh in
Add recipe to replace Stream.toList() with Stream.collect() by @AresEkb in
Added Test Cases for ReplaceApacheCommonsLang3ValidateNotNullWithObjectsRequireNonNull by @srmalkan in
Use CI_SERVER_HOST to get GitLab host name by @timtebeek in
Full Changelog: v7.36.0...v7.36.1"
"Update ExternalFlowModels#loadCvs exception to include source path.
Add xml methods to SourceSpecs (fixes)
fix: UpdateGradleWrapper now adds missing gradle files. ()

Add/Update GradleWrapper recipes revalidate
Remove ExplicitLambdaArguments from default list of cleanup recipes.
Remove ExplicitLambdaArgumentTypes from default list of common static analysis issues.
fix: use systems separators when comparing paths. ()
fix: add missing dependency. ()
ChangePropertyValue#getVisitor to public visibility
Add method params and class fields to `localVariables` in `UseLambdaForFunctionalInterface#shadowsLocalVariable`. ()

fixes
Align method parameters ()

* Added support for alignment of multiline method parameters.

* Added auto-detection for alignment of multiline method params to the first argument.
Include source path in groovy parsing errors so it is easier to identify the specific file which failed to parse
Implement Guards in Flow Analysis ()

* Begin adding Guard Logic

* Updated guard logic

* Begin adding control flow analysis computation with proper tests

* Control flow supports short circuit

* Attempt control flow through binary expression outside 'if' block

* Additional ControlFlow model internal verifications

* Fix control flow analysis

* Don't create a condition node where truthy and falsy are the same

* Handle single statement boolean expressions as basic blocks

* Add support for || in conditional

* Add support for throws

* Add Control Flow Analysis to Data Flow

* Added ternary support

* Add support for while loops

* Do-while attempt for control flow

* Add support for do-while and begin attempting for loops

* Add support for `for` loops

* Fix the test

* Get negation working!!!!

* Add license

* Better support negation

* Add support for constructor calls

* Actually fix De Morgan's law test

* Minor cleanup

* Wrote tests/added support for other constructs to prevent parsing errors (generics, for-each, casts, array accesses, etc.)

* Annotated erroneous (switch statement) test case

* Get continue and break mostly working

* Finish fixing continue and break statements

* Fix for each loop accessing identifier

* Cleanup and documentation

Co-authored-by: Shyam Mehta <shyam.mehta@hotmail.com>
Do not change lambda on chained method invocations. ()

fixes
Add missing `@Incubating` on `ControlFlowBasicBlockVisitor` ()
Fix, GroovyParser doesn't handle single line comments containing a multi-line comment opener
Fix, Maven - local repository location does not respect settings.xml ()
Ensure maven local repository from settings ends up in execution context so maven pom downloader can find it
Remove unneeded dependency on commons-io
Add support for synchronized block in control flow ()
Add Barrier & Sanitizer support & additional default taint steps ()

* Add Barrier & Sanitizer support & additional default taint steps

* Add license file
Ensure MavenExecutionContextView.setMavenSettings() accounts for local repository on settings object
Polish
Delete DelegatingGroovyVisitor. Now that I actually tried to use it for something I realize it double-visits. Terrible for performance, fatal for any mutating visitor which depends on the visit-exactly-once property
Fix GroovyVisitor.visitGString() failing to visit the type
Revert ""Revert ""Decreased yaml coalescing occurrences () ()""""

This reverts commit c2f7421978cca45ab31526cc2c384acaf6318353.
Add disabled tests for issue
Update ChangePropertyKey to auto-format modified mappings. (issue)
Implement GroovyParser support for try/catch/finally blocks. Closes ()
Fix handling of whitespace at the end of Groovy and Java source files
Added `RenameClass` recipe. ()

fixes
Update applicable prefixes when necessary in ChangePackage. ()

fixes
Fix simplify if branch execution when jumps are present ()

Fixes https://github.com/openrewrite/rewrite-java-security/issues/34
Update SimplifyConstantIfBranchExecution remove unnecessary visit and test which is no-longer valid
Added support for combining single try catches into multi-catches. ()

Added support for combining existing multi-catches.
Added support to detect if combining catches will change application behavior due to subtypes.
Added mapping for identifiers to account for combined catches that cause subtypes to be unnecessary.
Do not make change if there may be a change in application behavior.
Extracted `CombineSemanticallyEqualCatchBlocksVisitor` from anonymous inner class.
Fix Control Flow exception when an exit jump is present ()
Update SimplifyConstantIfBranchExecution remove unreachable blocks and some polish
Fix failing to correctly parse groovy method invocations where the first argument is a map literal NOT being used for named parameters
Fix GroovyParser handling of GStrings which contain characters that can be misiterpreted as string openers
Fix Gradle recipes refuse to run on build scripts not named build.gradle
Fix non-exiting conditional if case ()
Impossible Control Flow computation fails gracefully ()

Instead of throwing an exception when control flow can't be computed
return `Optional.empty`.
Support for trailing commas in groovy collection literals
Fix Groovy parsing of GStrings that contain empty constant expressions
Fix the licensing plugin adding an unwanted header into the shell scripts used in AddGradleWrapper, UpdateGradleWrapper
Polish
GroovyParser support for method declarations that omit parameter types
GroovyParser support for method parameter default values
GroovyParser support for map access syntax
Polish
GroovyParser support for return statements that do not return a value
Fix GroovyParser throwing StringIndexOutOfBounds if source ends with a literal double, long, or float
GroovyParser force numeric arguments to primitive types","What's Changed
fix: UpdateGradleWrapper now adds missing gradle files + re-validation  by @natedanner in
fix: use systems separators when comparing paths. by @natedanner in
fix: add missing dependency. by @natedanner in
Prevent namespace conflicts on class fields and method decl params in UseLambdaForFunctionalInterface. by @traceyyoshima in
Align method parameters by @traceyyoshima in
Implement Guards in Flow Analysis by @JLLeitschuh in
Do not change lambda on chained method invocations. by @traceyyoshima in
Add missing @Incubating on ControlFlowBasicBlockVisitor by @JLLeitschuh in
Maven - local repository location does not respect settings.xml  by @nmck257 in
Add support for synchronized block in control flow by @smehta23 in
Add Barrier & Sanitizer support & additional default taint steps by @JLLeitschuh in
Implement GroovyParser support for try/catch/finally blocks. Closes by @sambsnyd in
Added RenameClass recipe. by @traceyyoshima in
Update applicable prefixes when necessary in ChangePackage. by @traceyyoshima in
Fix simplify if branch execution when jumps are present by @smehta23 in
Added semantically equivalent comparison to SemanticallyEqual. by @traceyyoshima in
Fix Control Flow exception when an exit jump is present by @JLLeitschuh in
Fix non-exiting conditional if case by @JLLeitschuh in
Impossible Control Flow computation fails gracefully by @JLLeitschuh in
New Contributors
@smehta23 made their first contribution in
Full Changelog: 7.24.1...v7.24.2"
"Skip UTF-8 BOM characters in XMLLexer.
Parsing listener","Features
Added ParsingEventListener and ParsingExecutionContextView to set it, which gives you access to diagnostic information at every successful parsing of a source file input."
"Add recipe examples to recipe and recipe descriptors ()


Co-authored-by: Tim te Beek <tim@moderne.io>
Clone JavaParser.Builder in JavaTemplate","What's Changed
Clone JavaParser.Builder in JavaTemplate, the lack of which caused test failures in rewrite-testing-frameworks when those recipes operated on groovy sources by @jkschneider in acffb53
Full Changelog: v7.39.0...v7.39.1"
"Issue 1698: adding additional checks for internal class imports ()
Ignore `FileAlreadyExistsException` in `dependenciesFromResources()`
Prevent FindAndReplace from making unwanted recursive replacements
Fix compilation error
Move ParseError into tree subpackage for consistency with other tree types
Missed a rename in the last commit
Fix parsing of Groovy GStrings which include property access not inside curly braces","What's Changed
Prevent FindAndReplace from making unwanted recursive replacements by @sambsnyd in bfc44dd
Ignore FileAlreadyExistsException in dependenciesFromResources() by @knutwannheden in 39c383e
Fix parsing of Groovy GStrings which include property access not inside curly braces by @sambsnyd in ad60832
Full Changelog: v8.1.4...v8.1.5"
"Fix archive pathing for Gradle wrappers < 6.6
Fix UnnecesarryParenthesis throwing if the style it is looking for is not present
Enable RemoveBuildPlugin to remove plugins applied by ID with the apply syntax
Feature/update wrapper enhancements ()

* Clean up UpdateGradleWrapper such that it only upgrades wrappers and is a little easier to read

* Render gradlew and gradlew.bat scripts from gradle distribution. Fixes gh-2618

* Move a couple of tests from AddGradleWrapper and remove old ones that are duplicates

* Add isBlank check to handle null and empty Semver validation

* Fix the tests...
Fix memory leak in `Space#flyweights` implementations ()

The `Space#flyweights` implementations all had a memory leak due to the way the `WeakHashMap` was being used: The values all had a hard reference to the key. As a result these entries can never get collected. Additionally, there was no length limitation on the whitespace, so very long spaces could end up in the flyweights table with a very low probability of ever getting reused.
Fix nullability issues on `Xml.DocTypeDecl` ()

Signed-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>
Fix multiple adds of the Gradle wrapper jar due to not looking at the correct file types
No JsonIdentityInfo on Tree ()
Drop applicability from openrewrite.json
More accurate type checking ()

The `FindMissingTypes` doesn't quite detect all missing types. This is an attempt at cleaning some of these cases up.
Issue 1698: adding additional checks for internal class imports ()","What's Changed
Feature/update wrapper enhancements by @shanman190 in
Fix memory leak in Space#flyweights implementations by @knutwannheden in
Fix nullability issues on Xml.DocTypeDecl by @JLLeitschuh in
No JsonIdentityInfo on Tree by @jkschneider in
More accurate type checking by @knutwannheden in
Additional checks for internal class imports by @tclayton-newr in
Full Changelog: v8.1.3...v8.1.4"
"Add `isAcceptable()` call to `Preconditions` methods ()

* Add `isAcceptable()` call to `Preconditions` methods

When constructing a precondition using `Preconditions#and()`, `or()`, or `not()` then the returned visitor must also call `isAcceptable()` on the input visitor(s) in order to avoid any `ClassCastException` in case the input visitor overrides `visit(Tree, P)` and as a result probably doesn't call `isAcceptable()` on itself.

* Add explanatory comment

* Add test case to `IsOrIsNotLikelyTestTest`
Move markers from gradle tooling model into rewrite-gradle, use org.openrewrite.gradle.toolingapi.Assertions#withToolingApi ()

* Extract DependencyVersionSelector
* Move markers from gradle tooling model into rewrite-gradle, use org.openrewrite.gradle.toolingapi.Assertions#withToolingApi
* Prepare for upgrading transitive gradle dependencies","What's Changed
Move markers from gradle tooling model into rewrite-gradle, use org.openrewrite.gradle.toolingapi.Assertions#withToolingApi by @jkschneider in
Full Changelog: v8.17.0...v8.17.1"
"Allow for simple re-usable `AddPropertyVisitor` ()
Prevent NPE on nullable CSV row fields
Replace single-source applicability with precondition in DoesNotIncludeDependency
Remove deprecated `J.Lambda.Parameters.Padding.getParameters()` call
Parse troublesome Yaml with new workaround in workaround for underying parser bug ()

* Parse troublesome Yaml as test

* Prevent IndexOutOfBoundsException with new workaround

* Switch to `getPointer()` as suggested
Remove existing version constraints when updating transitive dependency versions
Make withType() overloads a bit safer when working with method invocations
Named preconditions check classes
Whitespace
Have UpgradeDependencyVersion avoid making any changes within a constraints block.
Parse dynamically typed variables that use the ""final"" keyword
Add recipe to replace Annotation ()

* Add general recipe to replace an annotation with another based on an annotation matcher and JavaTemplate

* Apply suggestions from Knut regarding usage of ShortenFullyQualifiedTypeReferences and in consequence remove not needed parameters
refactor: Update Gradle wrapper ()

Use this link to re-run the recipe: https://app.moderne.io/recipes/org.openrewrite.gradle.UpdateGradleWrapper?organizationId=T3BlblJld3JpdGU%3D

Co-authored-by: Moderne <team@moderne.io>
Allow UpgradeDependencyVersion to operate successfully on gradle configurations that we do not type attribute.

Co-authored-by: Ryan Walker <ryanwalker7@gmail.com>
Polish ReplaceAnnotation recipe, ensure it can type attribute the annotations it produces correctly.
Add more support for preconditions filtering
Fix ReplaceAnnotationTest
Add annotation test

See:
Add missing lombok dependency for ReplaceAnnotationTest","What's Changed
Parse troublesome Yaml with new workaround in workaround for underying parser bug by @timtebeek in
Add recipe to replace Annotation by @MBoegers in
refactor: Update Gradle wrapper by @shanman190 in
Full Changelog: v8.27.1...v8.27.2"
"Plugin configuration can be null ()
Add repositoryAccessFailed event to ResolutionEventListener and MavenPomDownloader","What's Changed
Add repositoryAccessFailed event to ResolutionEventListener and MavenPomDownloader by @sambsnyd in 95917e3
Full Changelog: v8.13.7...v8.13.8"
"Fixing swallowed compilation errors due to package name / path mismatch when using `dependsOn`. ()

Co-authored-by: Tim te Beek <tim@moderne.io>
Use public class names, if available ()
Make unit test work correctly on Windows ()

The String representation of a path is related to the OS (or more
correctly the underlying file system implementation). Compare the path
without converting to String.
Add `AddNullMethodArgument` recipe ()

* Add `AddNullMethodArgument` recipe

When changing a method we often add a nullable argument. Sometimes overriding it as to not break existing consumers. With this recipe we can migrate more quickly by adding a null value as the argument.

* fix test: Method matcher does not match null as Integer

* Apply suggestions from code review

Co-authored-by: Tim te Beek <tim@moderne.io>
Co-authored-by: Shannon Pamperl <shanman190@gmail.com>

* fix compilation

* add explicit cast

* Consistently use ListUtils.insert

* Use `""java.lang.Integer""` instead of `Integer.class.getName()`

* Dont try to shorten fully qualified

---------

Co-authored-by: Tim te Beek <tim@moderne.io>
Co-authored-by: Shannon Pamperl <shanman190@gmail.com>
Fix build warning about generated equals/hash ()
Make @Issue repeatable ()

Use a nested interface for the container class to avoid it being shown
in typical code completion of the IDE.
Flip equals to prevent NPE for nullable plugin.groupId","What's Changed
JavaParser should favor public classes when naming source inputs by @ammachado in
Make unit test work correctly on Windows by @Bananeweizen in
Add AddNullMethodArgument recipe by @pstreef in
Fix build warning about generated equals/hash by @Bananeweizen in
Make @issue repeatable by @Bananeweizen in
Flip equals to prevent NPE for nullable plugin.groupId by @timtebeek in 4c176e2
Full Changelog: v8.18.0...v8.18.1"
"fixed inner class ()

* fixed inner class

* Don't add imports for nested types in same CU

---------

Co-authored-by: Knut Wannheden <knut@moderne.io>
Fix java parsers not actually running any of the tck tests
Use more idiomatic, configuration-cache compatible tck configuration.
Thanks Shannon
`J.Identifier#annotations` is sometimes `null`

The root cause of this still needs to be identified.
Add `@JsonPropertyOrder` annotation to `Recipe`
Document JGit 5.x is necessary for Java 8","What's Changed
Fix java parsers not actually running any of the tck tests
Use more idiomatic, configuration-cache compatible tck configuration.
J.Identifier#annotations is sometimes null
Add @JsonPropertyOrder annotation to Recipe
Document JGit 5.x is necessary for Java 8
Full Changelog: v8.8.2...v8.8.3"
"Revert ""The `managedReference` fields are no longer required"" ()

This reverts commit 006a99bf321e7f652c7acd52a4d54d37c0bc7036.
Remove newline from CreatePropertiesFile example value

Breaks markdown docs as noted in https://github.com/openrewrite/rewrite-recipe-markdown-generator/pull/95
Use  as runtime dependency ()
New `AnnotationService` ()

* New `AnnotationService`

* Deprecate `getAllAnnotations()` methods

* Optimize `JavaVisitor#service()`

* Optimize `JavaVisitor#service()`

* Polish

* Add `@deprecated` Javadoc tags","What's Changed
Use antlr4-runtime as runtime dependency by @knutwannheden in
New AnnotationService by @knutwannheden in
Full Changelog: v8.11.4...v8.11.5"
"Prevent exceptions on missing GradleProject markers ()

* Prevent exceptions on missing GradleProject markers

* Restore updating gradle settings in isolation
Upgrade plugin versions in gradle.properties ()

* Adding a unit test for globs updating properties of plugin versions

* Removing default version setter to align with groovy visitor
Add @Getter
Update UpdateGradleWrapper.java to fix doc whitespace
`AddDependencyVisitor`: Report Maven download exceptions as warnings
Faster scanning in `JavaSourceSet` ()

Avoid calling `ClassGraph` twice and avoid some unnecessary memory allocations.
No need to override now default Java 21 in ci.yml

- https://github.com/openrewrite/rewrite/pull/3627
- https://github.com/openrewrite/gh-automation/pull/44
Reduce log spam from MavenPomDownloader.

Only send downloadError event when all repositories have failed to be accessed.","What's Changed
Upgrade plugin versions in gradle.properties by @ajohnsonz in
Faster scanning in JavaSourceSet by @knutwannheden in
Reduce log spam from MavenPomDownloader by @sambsnyd in f9e5e8e
Full Changelog: v8.14.0...v8.14.1"
"Fix the inappropriate application of dependency management sections during dependency resolution.
Add dedicated `JavaPrinter#printStatementTerminator()` ()

`visitStatement()` now also calls `visitMarkers()` for the markers on the `JRightPadded` object.
Override `printStatementTerminator()` in `GroovyPrinter`
feat: If DeclarativeRecipe only has already-initialized recipes, don't require initialization ()","What's Changed
Add dedicated JavaPrinter#printStatementTerminator() by @knutwannheden in
feat: If DeclarativeRecipe only has already-initialized recipes, don't require initialization by @kmccarp in
Full Changelog: v8.28.0...v8.28.1"
"bump snappy-java version to address dependency vulnerability report
improved Autodetect interpretation of annotations for continuationIndent.
fixes
Fix a few more missing types in tests
Put recipe internal markers into the ""markers"" package to ensure they are classloaded appropriately on the saas
License headers
Support templating annotation values on variables

Add support for replacing annotation parameter values where the annotation is declared on a variable (or parameter).

Fixes:
Polish test

Don't use field which requires disabling type checking.
Limit Spaces recipe to work only on Java files to avoid making breaking changes to Kotlin or Gradle files
Handle varargs in ReloadableJava17JavadocVisitor ()
fix: Add option annotation to interfaceFullyQualifiedName in FindImplementations ()
polish FindImplementations","What's Changed
Handle varargs in ReloadableJava17JavadocVisitor by @timtebeek in
fix: Add option annotation to interfaceFullyQualifiedName in FindImplementations by @kmccarp in
Full Changelog: v8.6.1...v8.6.2"
"Add `ImportService#shortenFullyQualifiedTypeReferencesIn()` ()

* Add `ImportService#shortenFullyQualifiedTypeReferencesIn()`

Extends `ImportService` with `shortenFullyQualifiedTypeReferencesIn()` so that other languages extending `J` can provide a customized implementation.

* Add some Javadoc
Update UpdateMovedRecipe.java ()

Typo fix
Add modifiers to TypeParameter for kotlin ()
Add BitbucketBuildEnvironment for better progress indicators ()

As per https://support.atlassian.com/bitbucket-cloud/docs/variables-and-secrets/
Do not log `ClassCastException` in MavenParser in case of malformed POM ()

* [] WIP, Wrote the test and the fix

(cherry picked from commit b8545e186e957df9058ce5444a20d24718f46024)

* [] Small optimisations

* Test ParseError by directly invoking the MavenParser

---------

Co-authored-by: Tim te Beek <tim@moderne.io>","What's Changed
Update UpdateMovedRecipe.java by @mike-solomon in
Add modifiers to TypeParameter for kotlin by @kunli2 in
Add BitbucketBuildEnvironment for better progress indicators by @timtebeek in
Do not log ClassCastException in MavenParser in case of malformed POM by @api-from-the-ion in
New Contributors
@api-from-the-ion made their first contribution in
Full Changelog: v8.9.3...v8.9.4"
"Account for Unicode characters in Yaml FormatPreservingReader ()

* Replicate issue with Yaml Unicode suffix parsing

https://github.com/openrewrite/rewrite/issues/2062

* Account for double byte unicode characters

* Add license to ChangeTextToSam.java
Add missing latest release test for UpdateMavenWrapper. Account for empty strings in both UpdateGradleWrapper and UpdateMavenWrapper for versions
Polish
Fix the test
Visit markers on RemoteVisitor ()
Checking RecipeIntrospectionUtils in rewrite-test ()
Improve recipe descriptions ()

* Improve recipe descriptions

I'm working through the recipes trying to make sure that the descriptions and
params make sense grammatically and things are spelled correctly. This PR is
mostly dedicated to YAML recipes with 1 minor JSON recipe included.

* Add missing dot

---------

Co-authored-by: Mike Sol <mike-solomon@users.noreply.github.com>
Co-authored-by: Tim te Beek <tim@moderne.io>
Add matchOverrides on several core Java recipes operating on methods
Update ChangeKey.java

Minor consistency fix with recipe description
Polish name of NormalizeLineBreaks
Space flyweight synchronization
Revert ""Space flyweight synchronization""

This reverts commit c75ead0ed463b9df751c3d15ab3126f1d373f998.
Add LstProvenance marker, datatable, search recipe
License headers
Polish version descriptions across the board. Set newVersion to `latest.release` where ever it makes sense
Prevent JavaParser.runtimeClasspath() from attempting to turn paths into jars or remote URLs into Paths","What's Changed
Visit markers on RemoteVisitor by @kmccarp in
Checking RecipeIntrospectionUtils in rewrite-test by @joanvr in
Improve recipe descriptions by @mike-solomon in
Full Changelog: v8.1.10...v8.1.11"
"Ensure that an edit which deletes a source file does not result in null being passed into the next recipe
Bring back ""unused"" classes which were actually used
Add 409 and other non retryable status codes to isClientSideException() ()

* Add 409 and other non retryable status codes to isClientSideException() to add the responses as empty in maven pom cache

* Simplify client-side error method

* Update ordering of conditions to be easier to read

Co-authored-by: Tim te Beek <tim@moderne.io>

---------

Co-authored-by: Kevin Carpenter™️ <kevin@moderne.io>
Co-authored-by: Tim te Beek <tim@moderne.io>
Prevent NPE on namedStyle.styles.iterator() ()
Allow successive find and replace operations on the same file
bump org.eclipse.jgit to 6.7.+ to fix dependency vulnerability report.
Revert ""bump org.eclipse.jgit to 6.7.+ to fix dependency vulnerability report.""

This reverts commit 45946c2e127000b7ad53da2157f439f2f80676e7.
Precompile `MavenRepositoryMirror` matching logic ()
No recursive application of Maven mirrors ()

* No recursive application of Maven mirrors

As [documented](https://maven.apache.org/guides/mini/guide-mirror-settings.html) (and verified by manual testing) it is always the first matching Maven mirror that should get selected, when finding a mirror for a particular repository. I.e. the mirrors should not be applied recursively.

Additionally, this commit will use the precomputed mirrors (from the `ExecutionContext`) whenever possible, as computing the mirrors is somewhat expensive.

* Add test case
Fix issue with duplicate `relativePath` on `ChangeParentPom` ()

* Fix issue with duplicate relativePath tag and increase coverage for relative path and change maven child module

* Apply suggestions from code review

Co-authored-by: Tim te Beek <timtebeek@gmail.com>

---------

Co-authored-by: Tim te Beek <timtebeek@gmail.com>
Add test to guard against future regressions

Fixes https://github.com/openrewrite/rewrite/issues/3532

Failed in previous versions, but not anymore. By adding this test now we ensure it keeps working.
AddPlugin changes; make `version` optional and add `filePattern` ()

* make version optional for org.openrewrite.maven.AddPlugin

* add filePattern

* also call super.isAcceptable()

* Apply suggestions from code review

---------

Co-authored-by: Tim te Beek <timtebeek@gmail.com>
Fix auto-detection of method declaration parameter alignment

Fixes:
Use method declaration parameters to check for continuation indentation

Fixes:
Align closing parentheses of method declaration parameters list
Support rarely used but valid varargs dependency notation in UpgradeDependencyVersion
Add IncrementProjectVersion which increments the major, minor, or patch versions of a semver-versioned maven project
Cleanup UnnecessaryParenthesesVisitor
Set AddGradleEnterpriseGradlePlugin server URL example to https://scans.gradle.com/ ()
Fix cursor messaging being incorrect in visitors applied with doAfterVisit()
Re-add BuildToolFailure for backwards compatibility
Better formatting for method parameter lists

Issue: openrewrite/rewrite-kotlin
Remove uses of `String#toCharArray()` ()

When looping over the contents of a `String` it is typically better to work with `String#charAt()`.
Show warnings in `MavenDownloadingExceptions` previously in `UncheckedMavenDownloadingException` ()

* Warn for exceptions in MavenDownloadingExceptions

* Drop unused UncheckedMavenDownloadingException.java

* Suppress unused warning

* Show warnings in message of ParseExceptionResult

* Minimize changes
Update ChangeType recipe to support kotlin alias import ()

* Update ChangeType recipe to support kotlin alias import","What's Changed
Add 409 and other non retryable status codes to isClientSideException() by @pstreef in
Prevent NPE on namedStyle.styles.iterator() by @timtebeek in
Precompile MavenRepositoryMirror matching logic by @knutwannheden in
No recursive application of Maven mirrors by @knutwannheden in
Fix issue with duplicate relativePath on ChangeParentPom by @jonesbusy in
AddPlugin changes; make version optional and add filePattern by @Wallman in
Set AddGradleEnterpriseGradlePlugin server URL example by @alextu in
Remove uses of String#toCharArray() by @knutwannheden in
Show warnings in MavenDownloadingExceptions previously in UncheckedMavenDownloadingException by @timtebeek in
Update ChangeType recipe to support kotlin alias import by @kunli2 in
New Contributors
@pstreef made their first contribution in
@Wallman made their first contribution in
Full Changelog: v8.5.1...v8.5.2"
"Do not skip proto3 files, as it warns about out of date LSTs ()

* Do not skip proto3 files, as it warns about out of date LSTs

* Update the _one_ test that we have
Another fix for `TypeUtils#isAssignable()`

A type like `List<? extends String>` is not assignable to e.g. `List<String>` (without cast).
Align `SpacesVisitor#postVisit()` with other formatting visitors

Using the root cursor is typically a bad idea, as it is globally shared in a recipe run.
CreateTextFile should override files of different type ()

* CreateTextFile should override files of different type

* Address review comments to override any file
Streamline local Maven repo URI closes ()

* Streamline local Maven repo URI closes

* Apply suggestions from code review

* Add missing import and rename test class

* Delete MavenRepositoryTest

---------

Co-authored-by: Tim te Beek <timtebeek@gmail.com>
Co-authored-by: Tim te Beek <tim@moderne.io>
Make `Assertions#validateTypes()` public

`FindMissingTypes#findMissingTypes()` should possibly build on the service model to allow other languages to supply their own type validations.","What's Changed
CreateTextFile should override files of different type by @timtebeek in
Streamline local Maven repo URI closes by @fabapp2 in
Full Changelog: v8.9.0...v8.9.1"
"Migrate moved recipes ()

* Migrate moved recipes

Following https://github.com/openrewrite/rewrite/commit/387a405814ae0868d8ff8c9d21510e7f3d88b22a & https://github.com/openrewrite/rewrite-static-analysis/commit/38823f3a21c5c5ec681fc0c7555baeb140fd11dc

* Remove now also migrated test

* Fix additional test
Improve SimplifyMethodChain documentation
fix: RemoteFile/RemoteArchive can now handle multiple threads trying to download the same file without error. ()

* fix: RemoteFile/RemoteArchive can now handle multiple threads trying to download the same file without error.

* don't use upper case locals.

* fixup

* prevent heap blow up.
Add annotations field to identifier, add languageExtension type and keyword field to modifier
Update J.Identifier and J.Modifier constructor invocations to include new fields
Tweak annotation on identifier parsing/visiting/printing
Restore now deprecated constructors pending module migrations ()

* Restore now deprecated constructors pending module migrations

* Add all args constructors too
The `classpath` configuration is not in the Gradle project configurations map, so we should just skip updating GAV coordinates for that configuration in particular ()
Prevent NPE on null Space of unknown origin ()

Seen in CLI
```
Running recipe in github.com/Netflix/conductor@main
org.openrewrite.internal.RecipeRunException: java.lang.NullPointerException: Cannot invoke ""org.openrewrite.java.tree.Space.getComments()"" because ""space"" is null
	at org.openrewrite.TreeVisitor.visit(TreeVisitor.java:329)
	at org.openrewrite.TreeVisitor.visit(TreeVisitor.java:184)
	at org.openrewrite.RecipeScheduler$RecipeRunCycle.lambda$editSources$3(RecipeScheduler.java:231)
	at io.micrometer.core.instrument.AbstractTimer.recordCallable(AbstractTimer.java:147)
	at org.openrewrite.table.RecipeRunStats.recordEdit(RecipeRunStats.java:56)
	at org.openrewrite.RecipeScheduler$RecipeRunCycle.lambda$editSources$4(RecipeScheduler.java:228)
	at org.openrewrite.RecipeScheduler$RecipeRunCycle.lambda$mapForRecipeRecursively$5(RecipeScheduler.java:330)
	at io.moderne.serialization.ModerneLargeSourceSet.edit(Unknown Source)
	at io.moderne.serialization.ModerneLargeSourceSet.edit(Unknown Source)
	at org.openrewrite.RecipeScheduler$RecipeRunCycle.mapForRecipeRecursively(RecipeScheduler.java:323)
	at org.openrewrite.RecipeScheduler$RecipeRunCycle.editSources(RecipeScheduler.java:201)
	at org.openrewrite.RecipeScheduler.scheduleRun(RecipeScheduler.java:76)
	at org.openrewrite.Recipe.run(Recipe.java:279)
	at org.openrewrite.Recipe.run(Recipe.java:275)
	at org.openrewrite.Recipe.run(Recipe.java:271)
	at io.moderne.modjava.commands.run.Run.call(Run.java:151)
	at io.moderne.modjava.commands.run.Run.call(Run.java:38)
	at picocli.CommandLine.executeUserObject(CommandLine.java:2041)
	at picocli.CommandLine.access$1500(CommandLine.java:148)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2461)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2453)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2415)
	at picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2273)
	at picocli.CommandLine$RunLast.execute(CommandLine.java:2417)
	at picocli.CommandLine.execute(CommandLine.java:2170)
	at io.moderne.modjava.ModJava.main(ModJava.java:28)
Caused by: java.lang.NullPointerException: Cannot invoke ""org.openrewrite.java.tree.Space.getComments()"" because ""space"" is null
	at org.openrewrite.java.JavaVisitor.visitSpace(JavaVisitor.java:155)
	at org.openrewrite.java.JavaVisitor.visitRightPadded(JavaVisitor.java:1293)
	at org.openrewrite.java.JavaVisitor.visitCompilationUnit(JavaVisitor.java:463)
	at org.openrewrite.java.tree.J$CompilationUnit.acceptJava(J.java:1520)
	at org.openrewrite.java.tree.J.accept(J.java:59)
	at org.openrewrite.TreeVisitor.visit(TreeVisitor.java:278)
	... 25 more
Error:  java.lang.NullPointerException: Cannot invoke ""org.openrewrite.java.tree.Space.getComments()"" because ""space"" is null
org.openrewrite.internal.RecipeRunException: java.lang.NullPointerException: Cannot invoke ""org.openrewrite.java.tree.Space.getComments()"" because ""space"" is null
	at org.openrewrite.TreeVisitor.visit(TreeVisitor.java:329)
	at io.moderne.serialization.ModerneLargeSourceSet.a(Unknown Source)
	at io.moderne.serialization.ModerneLargeSourceSet.edit(Unknown Source)
	at io.moderne.serialization.ModerneLargeSourceSet.edit(Unknown Source)
	at org.openrewrite.RecipeScheduler$RecipeRunCycle.mapForRecipeRecursively(RecipeScheduler.java:323)
	at org.openrewrite.RecipeScheduler$RecipeRunCycle.editSources(RecipeScheduler.java:201)
	at org.openrewrite.RecipeScheduler.scheduleRun(RecipeScheduler.java:76)
	at org.openrewrite.Recipe.run(Recipe.java:279)
	at org.openrewrite.Recipe.run(Recipe.java:275)
	at org.openrewrite.Recipe.run(Recipe.java:271)
	at io.moderne.modjava.commands.run.Run.call(Run.java:151)
	at io.moderne.modjava.commands.run.Run.call(Run.java:38)
	at picocli.CommandLine.executeUserObject(CommandLine.java:2041)
	at picocli.CommandLine.access$1500(CommandLine.java:148)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2461)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2453)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2415)
	at picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2273)
	at picocli.CommandLine$RunLast.execute(CommandLine.java:2417)
	at picocli.CommandLine.execute(CommandLine.java:2170)
	at io.moderne.modjava.ModJava.main(ModJava.java:28)
Caused by: java.lang.NullPointerException: Cannot invoke ""org.openrewrite.java.tree.Space.getComments()"" because ""space"" is null
	at org.openrewrite.java.JavaVisitor.visitSpace(JavaVisitor.java:155)
	at org.openrewrite.java.JavaVisitor.visitRightPadded(JavaVisitor.java:1293)
	at org.openrewrite.java.JavaVisitor.visitCompilationUnit(JavaVisitor.java:463)
	at org.openrewrite.java.tree.J$CompilationUnit.acceptJava(J.java:1520)
	at org.openrewrite.java.tree.J.accept(J.java:59)
	at org.openrewrite.TreeVisitor.visit(TreeVisitor.java:278)
	... 20 more
```
Fix serialization issues relating to J.Identifier and J.Modifier backwards-compatibilty constructors
Added unpinned version test ()

* Added unpinned version test

* added overrideManagedVersion parameter

* explicity adding the JsonCreator constructor

* Marked old constructor as deprecated and using the new one in the tests.

* Marked old constructor as deprecated and using the new one in the tests.

* fixed behavior for maps

* fixed gstring
Add plugin block after any buildscript block in `build.gradle` files.
Add data table to capture Gradle wrappers in use
Add test case for correctness in finding any Gradle wrapper","What's Changed
fix: RemoteFile/RemoteArchive can now handle multiple threads trying to download the same file without error. by @natedanner in
Restore now deprecated constructors pending module migrations by @timtebeek in
Don't process the classpath configuration by @shanman190 in
Prevent NPE on null Space of unknown origin by @timtebeek in
Added unpinned version test by @joanvr in
Full Changelog: v8.1.12...v8.1.13"
"Add missing lombok dependency for ReplaceAnnotationTest
Do not throw if ReplaceStringLiteralWithConstant value not found ()
Fix failure to template annotations being applied to final method parameters.

I couldn't find any coverage or purpose for the bit of AnnotationTemplateGenerator I removed. I can't see how it could ever have been correct so likely it was vestigial.
Change DependencyStringNotationConverter to not throw an exception when presented with something that isn't a GAV coordinate.
Fix FindTags running on the saas.

When serializing/deserializing the recipe jackson would get confused between the field named ""xPath"" and the lombok-generated getter ""getXPath()"". This would lead to null pointer exceptions and the recipe doing nothing useful.
Update FindTags example search query to one that will show results on most maven poms
Use `ImportService` in `ReplaceAnnotation`

Using `ImportService#shortenFullyQualifiedTypeReferencesIn()` rather than directly `ShortenFullyQualifiedTypeReferences` has the advantage that it will allow a language-specific implementation to be used (e.g. for Kotlin), whenever the source file being modified is not a Java source.
fix: Recognize bundle POM packaging type as jars when verifying recipe dependency downloads ()

* Recognize bundle POM packaging type as jars when verifying dependency downloads

* Unit tests and formatting

* Copyright date

---------

Co-authored-by: Tim te Beek <tim@moderne.io>
Add `JLeftPadded.Location.WILDCARD_BOUND`

This particular location definition was missing.
Added classifier support to DependencyUseStringNotation recipe ()

Co-authored-by: Jente Sondervorst <jente.sondervorst@colruytgroup.com>
ChangeParentPom will no longer try to preserve ""global"" properties which didn't actually come from the old parent; see https://maven.apache.org/pom.html#Properties
fixing usages of deprecated constructor
Strengthen override method determination for generic parameters ()","What's Changed
Do not throw if ReplaceStringLiteralWithConstant value not found by @timtebeek in
fix: Recognize bundle POM packaging type as jars when verifying recipe dependency downloads by @bryceatmoderne in
Added classifier support to DependencyUseStringNotation recipe by @Jenson3210 in
Strengthen override method determination for generic parameters by @jkschneider in
Full Changelog: v8.27.2...v8.27.3"
"Avoid calling `ExecutionContext#putMessage()`
Stop over eager exclude of UseStaticImport ()

Fixes https://github.com/openrewrite/rewrite-testing-frameworks/blob/39dc67cab9a2d32ed000e5ad1348d31cae3979cd/src/test/java/org/openrewrite/java/testing/junit5/AssertToAssertionsTest.java#L318 after https://github.com/openrewrite/rewrite/pull/3729","What's Changed
Stop over eager exclude of UseStaticImport by @timtebeek in
Full Changelog: v8.9.8...v8.9.9"
"Avoid trailing blanks in SingleLineComment ()

Fixes.
Allow loading recipes from inner classes
Update json parser to support multiple-bytes-unicodes ()

* Update json parser to support multiple-bytes-unicodes","What's Changed
Update JSON parser to support multiple-bytes-unicodes by @kunli2 in
Full Changelog: v8.7.0...v8.7.1"
"Do not log `ClassCastException` in MavenParser in case of malformed POM ()

* [] WIP, Wrote the test and the fix

(cherry picked from commit b8545e186e957df9058ce5444a20d24718f46024)

* [] Small optimisations

* Test ParseError by directly invoking the MavenParser

---------

Co-authored-by: Tim te Beek <tim@moderne.io>
Resolve dependency version after type and classifier ()

When resolving a dependency then a transitive dependency could be a managed dependency with a placeholder classifier. This placeholder must then be resolved before the version can be resolved, as it otherwise won't be found and results in a `MavenDownloadingException`.
Ignore methods with type parameters in UseStaticImport ()

Fixes.
Remove default `jar` packaging when using `ChangePackaging` ()
Replicate `FindAndReplace` `No group with name {name}` ()

* Replicate `FindAndReplace` `No group with name {name}`

As per https://github.com/openrewrite/rewrite/issues/3377#issuecomment-1614637746

* Escape dollar signs when not using a regex

* Apply suggestions from code review

Co-authored-by: Joan Viladrosa <joan@moderne.io>

---------

Co-authored-by: Joan Viladrosa <joan@moderne.io>
Load services through class loader of caller

The caller supplies the service type using which `JavaSourceFile#service()` can instantiate a service of the desired type and also make sure it gets loaded using the corresponding class loader.
reorder constructor arguments too ()
Add missing visit J.TypeParameter.modifiers method in JavaVisitor
Add safe null check for visiting J.TypeParameter's modifiers
Support intersection type casts ()

* Support intersection type casts

Fixes:

* Add missing `ReloadableJava21JavadocVisitor`

* Complete type attribution for `var` variables

* Completed Java 8, 11, and 21

* Let `J.IntersectionType` implement `Expression`

* Extend `JavaTypeVisitor` for `Intersection`

* Implement `TypeUtils#isAssignableTo()` for `Intersection`","What's Changed
Resolve dependency version after type and classifier by @knutwannheden in
Ignore methods with type parameters in UseStaticImport by @Bananeweizen in
Remove default jar packaging when using ChangePackaging by @ammachado in
Replicate FindAndReplace No group with name {name} by @timtebeek in
Reorder constructor arguments too by @joanvr in
Support intersection type casts by @knutwannheden in
Full Changelog: v8.9.4...v8.9.5"
"GroovyParser handles Jenkinsfile, and fix inside parentheses of ternary/binary/literal
avoid creating an empty file if nothing will be written to it. ()

* avoid creating an empty file if nothing will be written to it.

* add test

* license
rewrite escaped groovy method names, add gradle dependencies with the default scope using the escaped method name syntax ()

Co-authored-by: Michael Nielson <michael.nielson@collectivemedicaltech.com>
Handle unnecessary parentheses minimum spacing for throw
Fix a bug of ChangeType with star import
bump snappy-java version to address dependency vulnerability report","What's Changed
Avoid creating an empty file if nothing will be written to it. by @pstreef in
Rewrite escaped groovy method names by @safetytrick in
New Contributors
@safetytrick made their first contribution in
Full Changelog: v8.6.0...v8.6.1"
"Feat:token length estimator ()

* calculate token len for class and method definition

* changed datatable to take in name instead of whole code snippet

---------

Co-authored-by: juju <justine.gehring@gmail.com>
Fix the plugin default groupId ()

The default groupId for Maven plugins is not the one from the current
pom but `org.apache.maven.plugins`.

Noticed while working on the update recipes for Quarkus 3.7.
Maintain existing quote style
Revert ""The `managedReference` fields are no longer required"" ()

This reverts commit 006a99bf321e7f652c7acd52a4d54d37c0bc7036.","What's Changed
Fix the plugin default groupId by @gsmet in
Revert ""The managedReference fields are no longer required"" by @timtebeek in
Full Changelog: v8.11.3...v8.11.4"
"Handle `JavaType.Intersection` in `DefaultJavaTypeSignatureBuilder` ()

Fixes:
Add recipes to create new files ()

* Add recipes to create new files

* Add the relative path option to Recipe

* Fix file creation tests; pending Java class replacement

* Fix CreateJavaClassTest failures

* Suggestions from PR

* Refactoring the create java class to create empty classes instead

* Formatting changes

* Directly use Path where possible

* Also override files when content is not empty

* Also set prolog on XML files

---------

Co-authored-by: Tim te Beek <tim@moderne.io>
Only run recipe a single cycle when possible ()

* Use a `Set` for `RecipeScheduler.RecipeRunCycle#madeChangesInThisCycle`

Use a `Set` (specifically a `Set` based on `IdentityHashMap`) to track the recipes that made changes in a cycle. This improves performance a bit, because the recipe instances are typically the same and then there is no need to query the same recipe repeatedly for `causesAnotherCycle()`.

Also attempt to revert 0902de56473f03f11bf1b2262a0039bec16f40f8 so that the recipe scheduler when possible stops after the first cycle.

* Handle recipes adding messages
Avoid calling `ExecutionContext#putMessage()`
Avoid calling `ExecutionContext#putMessage()`","What's Changed
Add recipes to create new files by @ammachado in
Only run recipe a single cycle when possible by @knutwannheden in
Full Changelog: v8.9.7...v8.9.8"
"Add more evenst to Maven ResolutionEventListener
Perform same newGroupId and newArtifactId validations for Gradle ChangeDependency recipe ()
Add support for gradle dependency versions to be updated in gradle.properties ()

* Upgrade versions defined in `gradle.properties`

As reported through https://rewriteoss.slack.com/archives/C01A843MWG5/p1699263596812209
Test provided by Matt Johnson there, who was not able to open this PR himself due to policy issues.

* feat: convert to ScanningRecipe and add initial scanners

* Add the properties visitor that updates the property based on a matching GA from the build file

* Remove unused PropertiesVisitor in the scanner and fix formatting

* Refactor gradleProject into the accumulator object

* Use resolvedVersion from dependency resolver instead of plain text

* Address PR comments and add more unit tests

* Update rewrite-gradle/src/main/java/org/openrewrite/gradle/UpgradeDependencyVersion.java

* Update rewrite-gradle/src/main/java/org/openrewrite/gradle/UpgradeDependencyVersion.java

* Update rewrite-gradle/src/main/java/org/openrewrite/gradle/UpgradeDependencyVersion.java

* Update rewrite-gradle/src/main/java/org/openrewrite/gradle/UpgradeDependencyVersion.java

* Remove unused imports

* Apply formatter and minor polish

* Refactor the parsing logic into the scanner to deal with MapEntry as well as GString and optimize performance by using a map instead of a list

* Adding support for GString variables in map notation

* Adding mavenCentral to unit tests to avoid the ""unable to download metadata"" issue

---------

Co-authored-by: Tim te Beek <tim@moderne.io>
Co-authored-by: Shannon Pamperl <shanman190@gmail.com>
Plugin configuration can be null ()","What's Changed
Perform same newGroupId and newArtifactId validations for Gradle ChangeDependency recipe by @shanman190 in
Add support for gradle dependency versions to be updated in gradle.properties by @ajohnsonz in
Plugin configuration can be null by @timtebeek in
New Contributors
@ajohnsonz made their first contribution in
Full Changelog: v8.13.6...v8.13.7"
"Recipes must be public to be loaded by ClasspathScanningLoader
Polish
Add missing `visitArrayType()` to Javadoc parsers for Java 8 and 11

Issue:
Merge NormalizeMavenVariables into PrefixlessExpressions ()

Due to overlap, and the latter replacing more instances.
Remove `JsonParserVisitor#indexes` ()

The `JsonParserVisitor#indexes` array requires an additional 4 bytes of memory per code point in the source code (only in case the source has at least one surrogate). Rather than doing that, the parser can have two cursors which are kept in sync when advancing through the source code: One code point cursor and one code unit cursor. The former is to align with the indexes of the ANTLR tokens and the latter is to be able to read from the underlying source string.
Unroll `List.stream()` call for performance
Fix failing `EnvironmentTest`
Fix printing of false Javadoc attributes

This to ensure parse-to-print idempotency.
Allow for trailing tabs characters in Javadoc
Fix type attribution of `ReplaceConstantWithAnotherConstant`
Fix parsing of unicode escape sequences in YAML ()

* Fix parsing of unicode escape sequences in YAML

A YAML scalar value can contain unicode escape sequences like `\u0051`. Currently, this throws off the parser.

* Fix `MappingTest#escapeSequences()`

* Polish test
Improve performance of `UsesType` ()

`UsesType` is extensively used as a predicate by recipes and it is thus important to be efficient.

Typically, `UsesType` is used in one of three ways:
 1. To do an exact match on a type
 2. To match all types in a given package
 3. To match all types in a given package or subpackages

For 1 the code was already optimized in the past (see https://github.com/openrewrite/rewrite/commit/071185a5b10a207bff46c69d16c18db695be0f0d). For 2 and 3 the code currently creates a regex pattern and uses that for the matching. Both the pattern creation and matching can be expensive. Thus, this PR optimizes these two cases by doing a simple prefix match.
MavenArtifactDownloader download from local repositories
Added recipe options as JSON to FindRecipes. ()

* Added recipe options as JSON to FindRecipes.

* Use Jackson to construct JSON to deal with escaping

---------

Co-authored-by: Knut Wannheden <knut@moderne.io>","What's Changed
Merge NormalizeMavenVariables into PrefixlessExpressions by @timtebeek in
Remove JsonParserVisitor#indexes by @knutwannheden in
Fix parsing of unicode escape sequences in YAML by @knutwannheden in
Improve performance of UsesType by @knutwannheden in
Added recipe options as JSON to FindRecipes. by @traceyyoshima in
Full Changelog: v8.7.2...v8.7.3"
"Reduce log spam from MavenPomDownloader.

Only send downloadError event when all repositories have failed to be accessed.
Fix application of mirrors/auth to repositories whose URLs involve property substitution
Don't have IDE.properties affect the Gradle build when not running in IDE.
Simplify and add tests for MavenRepositoryMirror.apply()
Find Committers on freshly cloned repositories ()

* When a repository is freshly cloned and no other actions have been taken (like pull) ORIG_HEAD is not available. Using HEAD as a fallback works to find the committers.

* null check on ref","What's Changed
Find Committers on freshly cloned repositories by @pstreef in
Full Changelog: v8.14.1...v8.14.2"
"Prevent JavaParser.runtimeClasspath() from attempting to turn paths into jars or remote URLs into Paths
Fixup some issues with map notation updates and forcibly change the version as coordinates have changed and invalidated the update path
Add ability to change a Gradle plugin
Turn YAML files with unicode into ParseErrors ()
Remove 3 recipes (SimplifyBooleanReturn, SimplifyBooleanExpression, and UnnecessaryParentheses) and move them to rewrite-static-analysis
Migrate moved recipes ()

* Migrate moved recipes

Following https://github.com/openrewrite/rewrite/commit/387a405814ae0868d8ff8c9d21510e7f3d88b22a & https://github.com/openrewrite/rewrite-static-analysis/commit/38823f3a21c5c5ec681fc0c7555baeb140fd11dc

* Remove now also migrated test

* Fix additional test","What's Changed
Turn YAML files with unicode into ParseErrors by @timtebeek in
Migrate moved recipes by @timtebeek in
Full Changelog: v8.1.11...v8.1.12"
"Make `Assertions#validateTypes()` public

`FindMissingTypes#findMissingTypes()` should possibly build on the service model to allow other languages to supply their own type validations.
Update description of UpdateMovedRecipe
AddProperty accumulater should be public as it is visible outside of package scope
Maven local could be in a different location ()

* Maven local could be in a different location

* Check if file is found in default maven local

* Fix skip, add comment

* formatting

* formatting

Co-authored-by: Tim te Beek <tim@moderne.io>

* add equals case with ~/.m2/repository

---------

Co-authored-by: Tim te Beek <tim@moderne.io>","What's Changed
Maven local could be in a different location by @pstreef in
Full Changelog: v8.9.1...v8.9.2"
"Support intersection type casts ()

* Support intersection type casts

Fixes:

* Add missing `ReloadableJava21JavadocVisitor`

* Complete type attribution for `var` variables

* Completed Java 8, 11, and 21

* Let `J.IntersectionType` implement `Expression`

* Extend `JavaTypeVisitor` for `Intersection`

* Implement `TypeUtils#isAssignableTo()` for `Intersection`
Support optional version selector in ParentPomInsight ()
Change annotation attribute name to support Swagger migration ()

* Change annotation attribute name to support Swagger migration

* Update ChangeAnnotationAttributeName.java

* Make all fields required

* Extract annotation matcher to field
allow initialize the recipe multiple times ()

* allow initialize the recipe multiple times to properly load the recipes from YamlResourceLoader

* fixed test

* fixed lazy validation
Groovy: Fix parsing of parenthesized ranges
fixed possible NPE when required methodPatternChain not provided ()
More idiomatic parentheses handling in Groovy parser
Parse files that start with Jenkinsfile as Groovy
Tentative fix for missing ""//"" operator on `XPathMatcher` ()

* Tentative fix for missing ""//"" operator on `XPathMatcher`

* Remove empty comment line

---------

Co-authored-by: Tim te Beek <tim@moderne.io>
AutoFormat bug with method parameter alignment when using tabs ()

* Test case reproducing autoformat bug for continuation indents and constructor arguments

* Properly calculate indentation when using tabs

* Fix off-by-1-error

---------

Co-authored-by: Knut Wannheden <knut@moderne.io>
Update preconditions hint in yaml recipes ()","What's Changed
Support optional version selector in ParentPomInsight by @timtebeek in
Change annotation attribute name to support Swagger migration by @timtebeek in
allow initialize the recipe multiple times by @joanvr in
fixed possible NPE when required methodPatternChain not provided by @joanvr in
Tentative fix for missing ""//"" operator on XPathMatcher by @ammachado in
AutoFormat bug with method parameter alignment when using tabs by @shanman190 in
Update preconditions hint in yaml recipes by @timtebeek in
Full Changelog: v8.9.5...v8.9.6"
"Improved newVersion description ()

* Improved newVersion description

* Update UpgradeDependencyVersion.java

* Update UpgradeDependencyVersion.java
FindBuildMetadataTest
`UsesMethod` should rely on `TypesInUse` ()

If `UsesMethod` does not find any reference to the desired method in `TypesInUse` then it should return rather than traversing the entire LST in an attempt to find a match.

This change is being made for performance reasons, because this visitor is used very frequently as a precondition by recipes.
Minor performance improvement for `ReloadableJava17Parser`
Fix valid value capitalization on AddGradleEnterprise
Fix AppendToTextFile strategy casing
Prevent NPE and surface the cause as a ParserErrorResult in YamlParser. ()
Find text case-insensitive by default
Limit Java AutoFormat to apply itself only to Java source files as it will mis-format other languages
Polish Gradle Enterprise recipes names and descriptions ()

* Fix metadata in Add GE  Maven extension recipe

* Rename AddGradleEnterprise recipe

To have a consistent naming with AddGradleEnterpriseMavenExtension recipe.
UpdateMovedRecipe for AddGradleEnterpriseGradlePlugin

Following
Improve OrderImports description ()

* Improve OrderImports description

When I originally looked at this recipe, I was a bit confused on
what it does as the description was very generic. I think that
providing more information would help people who view this recipe
in our docs or in the saas who won't necessarily take the time to
dig into the code.

* Update rewrite-java/src/main/java/org/openrewrite/java/OrderImports.java

Co-authored-by: Knut Wannheden <knut@moderne.io>

---------

Co-authored-by: Mike Sol <mike-solomon@users.noreply.github.com>
Co-authored-by: Knut Wannheden <knut@moderne.io>
String fields are null by default. ()
Prevent UnnecessaryParentheses from running on non-java languages
Fixed nullpointer exception. ()
chore(metrics): Add timer to configuring a recipe ()
Fix SearchResults.mergingFound duplicating description ()

Signed-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>
ClasspathScanningLoader prevent high cardinality tag
Fix RecipeTest.recipe(InputStream yaml) variant did not search the classpath for imperative recipes
Account for Unicode characters in Yaml FormatPreservingReader ()

* Replicate issue with Yaml Unicode suffix parsing

https://github.com/openrewrite/rewrite/issues/2062

* Account for double byte unicode characters

* Add license to ChangeTextToSam.java","What's Changed
UsesMethod should rely on TypesInUse by @knutwannheden in
Prevent NPE and surface the cause as a ParserErrorResult in YamlParser. by @traceyyoshima in
Polish Gradle Enterprise recipes names and descriptions by @alextu in
Improve OrderImports description by @mike-solomon in
String fields are null by default. by @alexkir28 in
Fixed nullpointer exception. by @alexkir28 in
chore(metrics): Add timer to configuring a recipe by @kmccarp in
Fix SearchResults.mergingFound duplicating description by @JLLeitschuh in
Account for Unicode characters in Yaml FormatPreservingReader by @timtebeek in
New Contributors
@alexkir28 made their first contribution in
Full Changelog: v8.1.8...v8.1.9"
"Fix documentation discrepancy ()

Change overwrite example to 'true'
Add HasBuildToolVersion ()

* Add HasBuildToolVersion

* Update HasBuildToolVersion.java

* Slightly tweak range to catch more cases with tests
bug: yaml: DeleteProperty: do not remove unrelated empty sequences ()

fixes
Allow for simple re-usable `AddPropertyVisitor` ()","What's Changed
Add HasBuildToolVersion by @timtebeek in
bug: yaml: DeleteProperty: do not remove unrelated empty sequences by @aleksandrserbin in
Allow for simple re-usable AddPropertyVisitor by @BoykoAlex in
New Contributors
@aleksandrserbin made their first contribution in
Full Changelog: v8.27.0...v8.27.1"
"Print idempotence for prefix of varargs parameters in Javadoc
Gradle `AddDependencyVisitor` should not use default Maven repos ()

When downloading Maven metadata the `AddDependencyVisitor` should not configure any default repos and must therefore use the `MavenPomDownloader(ExecutionContext)` constructor.
Improve maven ResolutionEventListener with new event for repository discovery, additional information when downloads fail","What's Changed
Improve maven ResolutionEventListener with new event for repository discovery, additional information when downloads fail by @sambsnyd  in 7041060
Gradle AddDependencyVisitor should not use default Maven repos by @knutwannheden in
Full Changelog: v8.13.4...v8.13.5"
"Fixed property usage pattern matching search results ()

* Fixed property usage pattern matching search results

* format

* use actual regular expression for propertyPattern

* added javadoc

* fixed wrong usage of tag parameter instead of super visitor return

* fixed tests with regular expression
Check for null anchor in yaml printer. ()
Refactor `RewriteTest` to also work without JGit

In the `rewrite` repo we still have an issue with JGit which causes test assertions to fail with different `LinkageError`s. This commit refactors the test harness to be safer against that type of problem.
Does Groovy parser trim final line terminator?
Sort out classloader issues on saas relating to static state on this recipe
Remove unused annotation parameter imports ()

* Remove unused annotation parameter imports

* Add more test cases

---------

Co-authored-by: Adriano Machado <admachad@redhat.com>
Ignore local pom if the jar file does not exist. ()

* Ignore local pom if the jar file does not exist.

* Update rewrite-maven/src/main/java/org/openrewrite/maven/internal/MavenPomDownloader.java

Co-authored-by: Knut Wannheden <knut@moderne.io>

* Update rewrite-maven/src/main/java/org/openrewrite/maven/internal/MavenPomDownloader.java

Co-authored-by: Knut Wannheden <knut@moderne.io>

* Update rewrite-maven/src/main/java/org/openrewrite/maven/internal/MavenPomDownloader.java

* fixed tests & check for size 0 & added tests

---------

Co-authored-by: Knut Wannheden <knut@moderne.io>
Co-authored-by: Joan Viladrosa <joan@moderne.io>
Add explicit Maven plugin version for reproducibility ()

* Add explicit Maven plugin version for reproducibility

Fixes https://github.com/openrewrite/rewrite/issues/2735

* Add ExplicitPluginVersion class to prevent existing upgrades

* Ensure version tag is placed before plugin configuration

* Do not override parent managed plugin version

* Shorten ExplicitPluginVersion and match artifactId fallback too

* Polish

* Apply suggestions from code review
Make onlyIfUsing parameter of AddDependency recipes optional
Exclude `ResolvedDependency#dependencies` in `hashCode()` ()","What's Changed
Check for null anchor in yaml printer. by @traceyyoshima in
Remove unused annotation parameter imports by @ammachado in
Ignore local pom if the jar file does not exist. by @pstreef in
Add explicit Maven plugin version for reproducibility by @timtebeek in
Exclude ResolvedDependency#dependencies in hashCode() by @knutwannheden in
Full Changelog: v8.8.0...v8.8.1"
"Add cache name to InMemoryMavenPomCache to prevent gauges from overwriting one another ()
Change InMemoryMavenPomCache nickname's name and move it to the cache name
Ensure that an edit which deletes a source file does not result in null being passed into the next recipe","What's Changed
Ensure that an edit which deletes a source file does not result in null being passed into the next recipe by @sambsnyd in 4577169
Full Changelog: v8.5.0...v8.5.1"
"Dont directly set context, but use defaults for the gradle/non gradle constructor ()

* Dont directly set context, but use defaults for the gradle/non gradle constructor

* use equals
`MavenVisitor` should not return incorrect `ResolutionResult` for multi module maven projects ()

* fix find maven dependencies for multi module maven projects

* revert to see if build is succesfull

* Defensive copy in addClasspathEntry so that it won't attempt to add an element to a read-only list

* Make `JavaParser.Builder#addClasspathEntry()` public

* Basic JSP support ()

* Improve `UsesField`

* Improve `UsesField` a bit more

* Fix RenameVariable for variables referenced through type casts ()

* Fix RenameVariable for variables referenced through type casts

* Add unit test

* Be explicit about null handling and types

---------

Co-authored-by: Tim te Beek <tim@moderne.io>

* Java version equality should not be based on id.

Plugins create a JavaVersion per source set, but if they have the same fields excluding id they should be considered equal.

* `MethodMatcher`: Improve construction time performance

Avoid expensive regular expressions for simple and common cases.

* `MethodMatcher`: Optimize performance of common argument matching

* `XPathMatcher`: Implement attribute value conditions like `/a[@b='c']` ()

Fixes:

* Fix class cast exception in MarkIndividualDependency

* Add table and version matcher to Maven FindProperties ()

The valuePattern allows use as DevCenter measurement, while the table enables custom visualizations. Target use is the `<jenkins.version>` used in Jenkins plugins.

* ensuring connection timeouts get wrapped by MavenDownloadingException ()

* ensuring connection timeouts get wrapped by MavenDownloadingException

* polish

* removed a condition which I believe no longer made sense, and was causing tests to fail with latest changes

* Apply suggestions from code review

* adjusting so that IOExceptions can get caught and wrapped into MavenDownloadingException

* clarifying checked exception types for `sendRequest` and related methods

---------

Co-authored-by: Tim te Beek <tim@moderne.io>

* HasMiniumJavaVersion

* Remove explicit `Properties.File#getContent()` method

While indeed the LST should not be modified by modifying a `List` returned by a getter, it is also not right for a getter to return a new list every time (e.g. by wrapping an internal field using `Collections.unmodifiableList()`.

This commit removes the explicit getter and wither and instead has these generated by Lombok. Further, the initial contents, as populated by the parser, are now wrapped using `Collections.unmodifiableList()` to avoid any situations, where the contents are directly modified.

* Add dependency now works with empty maven projects ()

* Printable Recipe Datatables  ()

* Added method to export datatable information as csv to RecipeRun class

* Wrapped column value in quotes to escape commas in value

* Refactored streams to iterative loops. Log exceptions through Execution Context error handler

* Added formatCsv method. Added logic to ensure directories exist before creating files

* Refactored export logic to be more testable. Added test for csv printing logic

* Failing test cases for Quarkus version matching using `metadataPattern`s

* Add another test case.

* Get the new tests passing

* License headers

* Optimize `JavaParser.Builder#addClasspathEntry()`

* Allow null argument to CommitMessage.message()

* Fix precondition application in UpgradeDependencyVersion.

I'm a bit confused as to how this recipe succeeded before I made this change. The whole visitor, not just the precondition, was wrapped in Preconditions.or().

* Refresh resolved dependencies if possible

---------

Co-authored-by: U808771 <U808771@mobi.ch>
Co-authored-by: Sam Snyder <sam@moderne.io>
Co-authored-by: Knut Wannheden <knut@moderne.io>
Co-authored-by: Jonathan Schnéider <jkschneider@gmail.com>
Co-authored-by: René Grob <rene.grob76@gmail.com>
Co-authored-by: Tim te Beek <tim@moderne.io>
Co-authored-by: Nick McKinney <mckinneynicholas@gmail.com>
Co-authored-by: Adriano Machado <60320+ammachado@users.noreply.github.com>
Co-authored-by: Ryan Hudson <43145457+ryan-hudson@users.noreply.github.com>
Detect erroneous visitor caching in MavenVisitor.getResolutionResult()
Fix MavenPomDownloader assuming that maven central and local should be added even on the code path used by other tools that don't have those defaults.
Optimize the `MavenVisitor#isXyzTag()` a bit

While `XPathMatcher` hasn't been optimized more, this micro optimization can be beneficial.
Fix prefer to update value only in parent pom if it is a multi-module build
Slightly optimize `LatestRelease`
Correct guard in `RemoveRedundantDependencyVersions`
`SpacesVisitor`: Add space between annotations ()

* `MinimumViableSpacingVisitor`: Add space between annotations

Adds a space between annotations for all cases where an `addAnnotation()` coordinate exists, which can be used together with `JavaTemplate` to add an annotation.

Fixes:

* Polish

* Move logic to `SpacesVisitor`
Disable `ChangeParentPomTest.RetainVersions#bringsDownRemovedProperty()`
Add missing `@With` to `Xml.JspDirective#beforeTypePrefix` field ()
Fix AddProperty so it works for ChangeParentPom's usecase
Account for indicating that a parent is NOT found in the local repository via <relativePath/>
XPathMatcher does not support paths containing ""//"" and conditions ()

* testcases

* my testcases are working but relative paths in general dont

* safety commit

* safety commit

* most examples work

* extracted condition for readability

* delete condition block from part for comparisson of elementname

* changed tagForCondition on the correct element

* reformatted code

* Polish code style

* Polish: remove a comment

* Polish: Remove some Stream API usages

---------

Co-authored-by: Knut Wannheden <knut@moderne.io>
Parse `.csproj` as XML","What's Changed
MavenVisitor should not return incorrect ResolutionResult for multi module maven projects by @motu55 in
SpacesVisitor: Add space between annotations by @knutwannheden in
Add missing @With to Xml.JspDirective#beforeTypePrefix field by @knutwannheden in
XPathMatcher does not support paths containing ""//"" and conditions by @SilasSchaprian in
New Contributors
@SilasSchaprian made their first contribution in
Full Changelog: v8.23.1...v8.23.2"
"Support upgrading versions of dependencies that include configuration closures
Skip relativePaths containing colon as that fails on Windows ()

Fixes

artemis-pom-2.28.0.pom contains a weird relative path:
https://repo1.maven.org/maven2/org/apache/activemq/artemis-pom/2.28.0/artemis-pom-2.28.0.pom

```xml
<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.apache.activemq</groupId>
    <artifactId>artemis-pom</artifactId>
    <packaging>pom</packaging>
    <version>2.28.0</version>
    <parent>
        <groupId>org.apache</groupId>
        <artifactId>apache</artifactId>
        <version>27</version>
        <relativePath>org.apache:apache</relativePath>
    </parent>
```

This worked okay-ish on Linux/Mac, as passing the relativePath into `Paths.get(relativePath, ""pom.xml"")` will just result in a null `maybeLocalPom`. On Windows however, a colon is not valid to pass into Paths.get(..), and it fails with the reported exception.

Since we were effectively ignoring the relative path on Mac/Linux before, we might as well skip it entirely for Windows as well.
NoStaticImport recipe updates getClass calls ()

* NoStaticImport recipe updates inner calls

* Remove second argument

* Do not replace if receiverType is the same as surrounding class

* Verify behaviour for calls to super

* Add suggested unit tests, which will break

* Also check one level above current class

* Add test using Runnable

* Also remove local imports

* Document that there's a case we're not yet covering

* NoStaticImport recipe updates getClass() calls

* NoStaticImport recipe updates getClass() calls

* Do not replace if method is in java.lang.Object

---------

Co-authored-by: Victor C <victor.c@incentivio.com>
Co-authored-by: Tim te Beek <timtebeek@gmail.com>
Co-authored-by: Tim te Beek <tim@moderne.io>
fix an NPE of ExamplesExtractor
Move GroovyParser out of static field as that caused issues on the saas
chore: fix escape character in a text block
clean up: remove ExamplesExtractor since it has been moved to rewrite-build-gradle-plugin
Perform recipe SelectRecipeExamples on rewrite itself to select recipe examples
Rename package name of @DocumentExample, remove internal from the package name","What's Changed
Skip relativePaths containing colon as that fails on Windows by @timtebeek in
NoStaticImport recipe updates getClass calls by @Cimballi in
Renamed package name of @DocumentExample, removed internal from the package name
Full Changelog: v7.40.2...v7.40.3"
"Add FindParseToPrintInequality
Polish
Add timestamp fields to LstProvenance data table","What's Changed
Add timestamp field to LstProvenance marker/data table
Full Changelog: v8.1.14...v8.1.15"
"Rename package name of @DocumentExample, remove internal from the package name
Remove transient keyword from recipe attribution, as I suspect it may be why we aren't always seeing this attribution
Make UpgradeDependencyVersion.getVisitor() public
Standardize build configuration in language-parser-builder
Make `JavaTemplate#matches()` return `false` on parse errors

As a temporary workaround for problems during the parsing of a `JavaTemplate` in the context of matching, the `matches()` logic now suppresses any caught runtime exceptions and simply returns `false`. These exceptions will have to be looked at and addressed individually.
`JavaTemplate` support for `J.AssignmentOperation`

When the templated expression is the RHS of a `J.AssignmentOperation`.
`JavaTemplate` support for `J.Parentheses` and `J.Throw`

Produce correct code when the templated expression appears in these contexts.
`JavaTemplate` support for `J.Assignment` in `J.Annotation`

When the templated expression appears in the context of an annotation assignment RHS, the `BlockStatementTemplateGenerator` logic must not add a trailing semicolon.
Fix NPE in FinalizePrivateFields.
Temporarily disable MinimumSwitchCases, ModifierOrder, and SimplifyBooleanReturn in CommonStaticAnalysis.
Revert ""Temporarily disable MinimumSwitchCases, ModifierOrder, and SimplifyBooleanReturn in CommonStaticAnalysis.""

This reverts commit 06c8a9ef623bb6c7ed92ee608bd11802d53fe947.
Fix autodetection of space after comma style

The same problem is also fixed for the space before comma detection (where the last element must be ignored).

Additionally, the detection of these two statistics is now also applied to method declaration parameters, constructor call arguments, and lambda parameters.

Fixes:
Fix recipe contributors' information missed on saas
update for doc
CONTRIBUTING.md need JDK8 and gradle remark ()

* add note to CONTRIBUTING.md about JDK8 and gradle to make onboarding easier

* Minor changes

---------

Co-authored-by: Tim te Beek <timtebeek@gmail.com>
changeManagedDependencyWithDynamicVersion now accepts 2.1.2
Fix parsing processing instructions with hrefs that contain a `?` in the XmlParser. ()

fixes
Prevent RenameVariable from renaming several sorts of things that are not, in fact, variables
Added Semicolon marker to java to use in groovy, kotlin and javascript.
add parameters to recipe example
Update BuildTool marker with wrapper version changes ()
Fix `AnnotationMatcher` matching of type literals for nested types

In the case of nested types the actual type will have `$` in the fully-qualified name, which needs to be compared using `TypeUtils.fullyQualifiedNamesAreEqual()`.
Add guard against short form of url assignment for maven repositories
Also handle Groovy String interpolation for method invocation form
Add recipe to add gradle enterprise maven extension to maven projects ()

* add recipe to add GradleEnterpriseMavenExtension to maven projects
---------

Co-authored-by: Sam Snyder <sam@moderne.io>
update RecipeExample schema to support multiple sources for an example
add path field for recipe example","What's Changed
CONTRIBUTING.md need JDK8 and gradle remark by @MBoegers in
Fix parsing processing instructions with hrefs that contain a ? in the XmlParser. by @traceyyoshima in
Update BuildTool marker with wrapper version changes by @shanman190 in
Add recipe to add gradle enterprise maven extension to maven projects by @kunli2 in
Add support for multiple sources for recipe example
New Contributors
@MBoegers made their first contribution in
Full Changelog: v7.40.3...v7.40.4"
"Remove excessive message when parsing java files
Remove excessive message when parsing maven files
Add `AbstractRefasterJavaVisitor` ()

This is a base class used by Refaster-based recipes as generated by the `rewrite-templating` annotation processor. It contains some simple utility methods to simplify the generation of the recipes.
Delay the resolution of classpath in `JavaParser.Builder` ()

Instead of directly resolving artifact names to classpath entries inside `JavaParser.Builder#classpath(String...)` this is now delayed until `build()` is called for the first time. This has the advantage that constructing a builder is cheap even when the `classpath(String...)` method gets invoked. As a result a recipe can initialize a `JavaTemplate` (with a customized `JavaBuilder`) in a field initializer of its visitor without incurring a rather big overhead.
Polish `AbstractRefasterJavaVisitor` API
Fix `ShortenFullyQualifiedTypeReferences#modifyOnly()` API

This API is now also used by `AbstractRefasterJavaVisitor`.
yaml parser support unicode ()

* Support multi-byte unicode in Yaml parser
Add plain text mask support to PlainTextParser","What's Changed
Add AbstractRefasterJavaVisitor by @knutwannheden in
Delay the resolution of classpath in JavaParser.Builder by @knutwannheden in
yaml parser support unicode by @kunli2 in
Full Changelog: v8.4.1...v8.4.2"
"Maven local could be in a different location ()

* Maven local could be in a different location

* Check if file is found in default maven local

* Fix skip, add comment

* formatting

* formatting

Co-authored-by: Tim te Beek <tim@moderne.io>

* add equals case with ~/.m2/repository

---------

Co-authored-by: Tim te Beek <tim@moderne.io>
Fix FindPlugin sometimes reporting a plugin not having a version number when one is available
do not overwrite the repo if it's not the default local one ()

* do not overwrite the repo if it's not the default local one

* Simplify check and add test

* remove duplicated createDirectories

---------

Co-authored-by: Peter Streef <p.streef@gmail.com>
Add `ImportService#shortenFullyQualifiedTypeReferencesIn()` ()

* Add `ImportService#shortenFullyQualifiedTypeReferencesIn()`

Extends `ImportService` with `shortenFullyQualifiedTypeReferencesIn()` so that other languages extending `J` can provide a customized implementation.

* Add some Javadoc","What's Changed
do not overwrite the repo if it's not the default local one by @joanvr in
Add ImportService#shortenFullyQualifiedTypeReferencesIn() by @knutwannheden in
Full Changelog: v8.9.2...v8.9.3"
"Parse `.csproj` as XML
Marker equality should not be based on ID. Much more useful to treat these as values, so that hash sets can be used to de-duplicate.
Add Maven version of UpgradeTransitiveDependencyVersion recipe
Ensure that MergeYaml can add a new complex entry to a sequence
Add missing `visit()` methods to `XmlVisitor` ()

* Add `XmlVisitor#visitTagClosing()`

* Add `XmlVisitor#visitAttributeValue()`

* Add `XmlVisitor#visitDocTypeDeclExternalSubsets()`

* Adjust `CountLinesVisitor`
Add missing `YamlVisitor#visitDocumentEnd()` ()

This is for `Yaml.Document.End` LST elements.
Add `Xml.Document#getPrefixUnsafe()`

As for all other `Xml` subtypes with a `prefixUnsafe` field, also `Xml.Document` should provide a corresponding getter.
Add `Xml.Document#getCharsetName()`

Similarly to `getPrefixUnsafe()` there should also be a `getCharsetName()` method.
Allow GradleWrapper to be created solely from a URI.

The intent is to support recipe development at organizations which require dependencies like gradle to come from their internal artifact repositories.
ChangeParentPom should not add dependency management sections for dependencies whose versions are not managed by the parent pom
Fix incorrect change I made to Pom.resolve() which could lead to repositories with unresolved placeholders being used
Fix shouldNotAddToDependencyManagement to include details which would be required for maven to build this project
Disable test because it is failing in CI
Add Scope.asGradleConfigurationName() function so I don't have to copy and paste it into multiple different recipes that operate on Maven and Gradle sources.
Enhance ChangeDependencyArtifactId and GroupId to update the GradleProject marker in accordance with the changes they make.

This is intended to facilitate the composition of these recipes together with model-dependent dependency manipulations like UpgradeDependencyVersion
Have UpgradeDependencyVersion scanner collect information on all dependency variables.

It is not known up-front what dependencies will be getting upgraded when this recipe is being used as a component of another recipe. For example, find and fix vulnerable dependencies.
fix jarPattern in JavaParser ()

Signed-off-by: Kun Chang <curtis@mail.ustc.edu.cn>
Co-authored-by: Tim te Beek <tim@moderne.io>
Test case for XPath Matcher matches too many tags when using relative Paths and conditions ()

* testcase

* check if condition is from partBefore to ensure correct matching
Extract find committers method ()
fixing issue where ChangeParentPom would add any referenced maven-default properties (aka things not necessarily defined in the parent) to the pom's properties.
new test case would previously add this: `<project.build.directory>null</project.build.directory>`
Improve performance of `JsonParser`

For large JSON documents the parser could be extremely slow. Now it is much faster.

Also `JsonPathMatcher` is faster for some use cases now.
One more performance improvement for `JsonParserVisitor`
Final performance improvement for `JsonParserVisitor`
Last improvement to `JsonParserVisitor` performance","What's Changed
Add missing visit() methods to XmlVisitor by @knutwannheden in
Add missing YamlVisitor#visitDocumentEnd() by @knutwannheden in
fix invalid jarPattern in JavaParser by @ckcd in
Test case for XPath Matcher matches too many tags when using relative Paths and conditions by @SilasSchaprian in
Extract find committers method by @pstreef in
New Contributors
@ckcd made their first contribution in
Full Changelog: v8.23.2...v8.23.3"
"Add test case for correctness in finding any Gradle wrapper
WIP
Fix LstProvenanceTable description
Apply user-defined styles to plugin applications
Revert ""WIP""

This reverts commit c6aea31a94ab572a12b05c4c193a8be89ffc20e4.
Find and FindAndReplace accept multiple file path filters
Add a FindMultiselect recipe for UI testing
Short circuit to not append empty strings ()

StringBuilder runs through all the logic to ensure capacity, put the string given coder & bytes, none of which are needed for the fairly common case of printing empty prefixes.
Adding the Moderne CLI as a valid build tool ()
Add support for JAXB XJB xml files ()

Co-authored-by: Adriano Machado <admachad@redhat.com>
Ensure that even system-installed artifacts are resolved. ()

When running Maven on Linux from a system maintainer-installed package
and adding a dependency to a recipe that is also a dependency of Maven
itself (e.g. slf4j-api), then the system-installed version is used (e.g.
file:/usr/share/java/slf4j-api.jar). Unfortunately, this path is not
matched be the regular expression, since no version is added to the file
name. This results in an incomprehensible error ""Unable to find runtime
dependencies beginning with: slf4j-api"" that gives no clue what's wrong.
Therefore, its better to also output the current class path being
scanned.
Fixed java doc on MethodMatcher for `All method invocations`.
Add LST model type to FindSourceFiles data table
Add ParseError#erroneous
Take license header into account when adding gradle plugin ()

* take license header into account
fixed valid and docs ()
File pattern not a required field for text search
Fix CRLF newlines in AddImport ()

* Checking new lines

* added some more tests

* Replace newlines with a negative look behind

Co-authored-by: Shannon Pamperl <shanman190@gmail.com>

---------

Co-authored-by: Tim te Beek <tim@moderne.io>
Co-authored-by: Shannon Pamperl <shanman190@gmail.com>
Drop BuildToolFailure marker, recipe and table ()

* Drop BuildToolFailure marker, recipe and table

For https://github.com/moderneinc/moderne-cli/issues/459

* Drop FailureLogAnalyzerTest too
ExpectedToFail test case for
Add Maven dependency before only comments in <dependencies> ()

* Add Maven dependency before only comments in <dependencies>

Fixes

* Drop JUnit pioneer again

* Restore original order; drop unused import
Require parse-to-print idempotence ()

Co-authored-by: Tim te Beek <tim@moderne.io>
Add FindParseToPrintInequality","What's Changed
Short circuit to not append empty strings by @timtebeek in
Adding the Moderne CLI as a valid build tool by @rpau in
Add support for JAXB XJB xml files by @ammachado in
Ensure that system-installed artifacts can be resolved while constructing JavaParser classpath by @haumacher in
Take license header into account when adding gradle plugin by @joanvr in
fixed valid values and docs for Gradle Enterprise recipes by @joanvr in
Fix CRLF newlines in AddImport by @joanvr in
Drop BuildToolFailure marker, recipe and table by @timtebeek in
Add Maven dependency before only comments in  by @timtebeek in
Require parse-to-print idempotence by @jkschneider in
New Contributors
@ammachado made their first contribution in
@haumacher made their first contribution in
Full Changelog: v8.1.13...v8.1.14"
"Fix UpdateStaticAnalysisPackageTest
[rewrite8 migration] Add recipe to update moved recipe in pom.xml
Fix failing test changePomXmlConfiguration
Add path filter to Find
The `ProtoParser` must not return `null` values ()

The `Parser` API contract requires the implementation to return a stream of non-`null` `SourceFile` objects.

Since `proto3` sources are not really erroneous, just currently not supported by the parser, it doesn't really make sense to return a `ParseError` object, so instead the parser simply skips these sources.
Add case-insensitive option to find text
Fix failing test on `main`

Related: https://github.com/openrewrite/rewrite/issues/3325

Signed-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>
Refactor `MethodMatcher` and extract Interface ()

Extracts a majority of the logic of `MethodMatcher` into an interface `SimpleMethodMatcher`.

Simplifies the `SimpleMethodMatcher` into 3 basic predicates:
 - `matchesTargetType`
 - `matchesMethodName`
 - `matchesParameterTypes`

A custom implementation of `SimpleMethodMatcher` can implement those predicates however they choose.

Signed-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>
Revert ""Refactor `MethodMatcher` and extract Interface ()""

This reverts commit 959ffa9cc0a91409e6ed0401cf3ed357f84bb1a1.
Match a dynamic Spring version ()

* Match a dynamic Spring version

Fixes

* Use Matcher.find()
Defensive coding on TreeVisitor#withMarkers
Allow `RewriteTest` to assert variable types

Adds a new `TypeValidation#variableDeclarations` option (for now defaulting to `false`, since there are still a few violations to fix).

The reason for this is twofold: The Java 10 `var` keyword and the fact that some recipes manipulate the `JavaType.Variable` and this validation checks for incorrect manipulations.
Don't use static DefaultJavaTypeSignatureBuilder#TO_STRING
Prevent java AutoFormat from reformatting entire Groovy/Kotlin/etc sources.
Con still be used to format individual snippets
Remove static DefaultJavaTypeSignatureBuilder
Set repositoryUrl to optional as it was designed
Add option to allow the user to opt out of adding a Gradle wrapper when one is missing ()
Add support for upgrading multiple Gradle wrappers at different locations ()
Fix field visibility issue created during commit
Fixing runTimeout being ignored ()
Minor grammar and spelling fixes
reverted changes on java autoformat ()
Disable Failing Tests

Related https://github.com/openrewrite/rewrite/issues/3343

Signed-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>
Add `FindMethodsVisitor` and refactor `FindMethods` ()
Isolated Change: Cleanup `MethodMatcher` ()
Revert ""Isolated Change: Cleanup `MethodMatcher` ()""

This reverts commit 5a375e5b91342719ed4ef7c5d32f9a70becd80e9.
Revert ""Revert ""Isolated Change: Cleanup `MethodMatcher` ()""""

This reverts commit 1531998e08614caf80d61e22114194b9bd01b556.
Revert ""Add `FindMethodsVisitor` and refactor `FindMethods` ()""

This reverts commit 425f72f2149dc770356f40117f314d821b06c9c1.
[rewrite8 migration]update migration guide URL
Rename FindText to FindComments to better reflect its actual functionality
Fix find secrets test
Reduce memory overhead of `JavaType` implementations ()

When Jackson deserializes an array into a `List` it by default creates an `ArrayList` with the default capacity (10) and populates it with the values. For `JavaType.Method` that is typically quite wasteful, since it uses lists for parameter names, parameter types, thrown exceptions, and annotations and these lists are very often shorter.

One alternative is to register a custom `ValueInstantiator` for `ArrayList` which creates lists with a smaller capacity (e.g. 4 or even just 1).

Another alternative, as done in this commit, is to change the internal representation to use arrays and create a corresponding `@JsonCreator` annotated constructor.
Attempt to fix UpgradeGradleWrapper not deserializing on the saas
Fix AutoFormat issue of extraneous spaces added for annotated return type ()

* Fix AutoFormat issue of extraneous spaces added for annotated return type

* Add handle prefix of 1st annotation
Ensure that ParseError are printable
Print markers in parse errors
Add more regex options to Find recipe
Add more regex options to Find recipe
Remove Recipe.NOOP ()
Use pluginRepositories for finding new versions of plugins, and repositories for project dependencies
Add missing license headers
Bump snappy-java version to latest to suppress dependency vulnerability
Revert ""Disable Failing Tests""

This reverts commit 79cff476f2a04e8164af1b2d49752128160f8a41.
Use plugin repositories for finding plugin dependencies
Clear root cursor messages after each cycle
Fix archive pathing for Gradle wrappers < 6.6","What's Changed
The ProtoParser must not return null values by @knutwannheden in
Match a dynamic Spring version by @timtebeek in
Add option to allow the user to opt out of adding a Gradle wrapper when one is missing by @shanman190 in
Add support for upgrading multiple Gradle wrappers at different locations by @shanman190 in
Fixing runTimeout being ignored by @joanvr in
Add FindMethodsVisitor and refactor FindMethods by @JLLeitschuh in
Isolated Change: Cleanup MethodMatcher by @JLLeitschuh in
Reduce memory overhead of JavaType implementations by @knutwannheden in
Fix AutoFormat issue of extraneous spaces added for annotated return type by @kunli2 in
Remove Recipe.NOOP by @jkschneider in
New Contributors
@joanvr made their first contribution in
Full Changelog: v8.1.2...v8.1.3"
"Fix IsOwaspSuppressionsFile assuming that the file must be named ""suppressions.xml"".

That name is a convention within Moderne, but not a default or convention anywhere else. convention
Provide setters for `DeclarativeRecipe` recipe and preconditions lists.
Make DeclarativeRecipe.getRecipeList() final so no one is tempted to override it and mess up preconditions handling
Added quoted marker to represent escaped identifiers. ()
`UsesType`: Performance improvement
Change HasSourcePath from a Visitor into a Recipe for use in yaml preconditions ()

* ChangeText needs a relativePath to be of use

Or so I'm told.

* Replace ChangeText `relativePath` with hint about preconditions

* Turn HasSourcePath into a Recipe

* Apply suggestions from code review
Added Recipe for removing Empty XML tags ()

* Added Recipe for removing Empty XML tags

Added the recipe to check for and remove empty tags with no children.
Added a test for this recipe.

* added recipe

Added recipe to remove empty and self-closing tags in xml tree.

* Restored ExecutionContextParameterName.java

I changed this file really early by mistake, and forgot to remove this change from origin main.

* Restored build.gradle.kts in rewrite-xml

* added missing curly brace

* Delete Unit)

* Add Gradle license headers

* Revert unintended changes

* Remove `isSelfClosing` and inline `isEmptyTag` & visitor

* Verify empty parents are already removed

* Reuse existing RemoveContentVisitor

* Inline `RemoveEmptyTagsVisitor`, as we already have `RemoveContentVisitor`

* Remove excess cast

* Apply suggestions from code review

---------

Co-authored-by: Tim te Beek <tim@moderne.io>
Changing word in find methods recipe's description for better search ()

Co-authored-by: juju <justine.gehring@gmail.com>
Improve performance of Java parser
Tweak DeclarativeRecipe.initialize() to avoid possible NPE.
If MavenSettings specify http headers include those headers on HTTP requests issued by MavenPomDownloader and MavenArtifactDownloader.","What's Changed
If MavenSettings specify http headers include those headers on HTTP requests issued by MavenPomDownloader and MavenArtifactDownloader. by @sambsnyd in d0704ac
Added quoted marker to represent escaped identifiers. by @traceyyoshima in
Change HasSourcePath from a Visitor into a Recipe for use in yaml preconditions by @timtebeek in
Added Recipe for removing Empty XML tags by @TheMarvelFan in
Changing word in find methods recipe's description for better search by @justine-gehring in
New Contributors
@TheMarvelFan made their first contribution in
@justine-gehring made their first contribution in
Full Changelog: v8.10.0...v8.10.1"
"Document JGit 5.x is necessary for Java 8
Type validation for before sources in `RewriteTest` ()

* Apply type validations to before sources

Rename `SourceSpec.EachResult` to `SourceSpec.ValidateSource` as it now applies to before sources as well.

Currently, the before source validation can only be completely disabled (no fine-grained options independent of the validation of the after sources).

* Fix failing `TabsAndIndents` test case

* Use separate options to validate before source

* Default the `before` validations to the `after` validations

To avoid many ""regressions"".

* Make factory methods package private

* Correct more type attribution errors and adjust some tests

* Also fix tzpe attribution in other Javadoc parsers

* Rename `beforeTypeValidationOptions()` to `typeValidationOptions()`

... and `typeValidationOptions()` to `afterTypeValidationOptions()`.

* Follow through with `RecipeSpec` method rename

* Exclude 3 test cases from Java 8

* Correct `@MinimumJava11` annotation

Was annotated as `@Tag(""java17"")` rather than `@Tag(""java11"")`.
Enable variable declaration type attribution ()

The type attribution of variable declarations is now enabled by default.
Allow for deserialized `JavaType.Unknown` instances

These can't be compared with referential equality against `JavaType.Unknown.getInstance()`.
Tweak name and description of Gradle plugin management recipes
Update Revved up by Develocity badge ()
Info on committer activity ()
Allow FindAnnotations annotationPattern to not start with '@'
Match `JavaType.GenericTypeVariable` in `TypeUtils#isAssignableTo()` ()

Fix the assignability test for generic type variable types.
Fix after visitor cursor propagation ()

* Unit test for Autoformat top visitor

* Fix bug in `TreeVisitor#visit()`

When the `TreeVisitor` calls any scheduled after visitors, it must make sure that the cursor it sets on the after visitors doesn't end up having a parent cursor with the same value.

* Revert change to `Cursor#fork()` again

---------

Co-authored-by: Knut Wannheden <knut@moderne.io>
More corrections to `TypeUtils#isAssignableTo()`
Make `TypeUtils#isAssignable()` a bit stricter
Proof of concept for preconditions on declarative recipes ()

* Proof of concept for preconditions on declarative recipes

* Delete unused file

* Also apply preconditions to scanning phase, as that lets them narrow queries

* License headers

* Polish

* Reject ScanningRecipe from being preconditions

* Also exclude AdHocScanningRecipe from serialization requirement
`Null` type is assignable to `String` type
Improve `isAssignableTo()` for primitive types
Fix title case
Load preconditions from yaml
Add ""IsInRepository"" recipe for use as a precondition
License headers
Fixed error when no file matcher was present ()

Co-authored-by: U808771 <U808771@mobi.ch>
update method type ()
Fix bug in glob pattern matching ()

* add failing test case for glob pattern

* fix comparison bug
Fix warnings","What's Changed
Type validation for before sources in RewriteTest by @knutwannheden in
Enable variable declaration type attribution checking by @knutwannheden in
Update Revved up by Develocity badge by @runningcode in
Info on committer activity by @jkschneider in
Match JavaType.GenericTypeVariable in TypeUtils#isAssignableTo() by @knutwannheden in
Fix after visitor cursor propagation by @BoykoAlex in
Add support for Preconditions in declarative recipes by @sambsnyd in
Fixed error when no file matcher was present by @motu55 in
update method type on DeleteMethodArgument by @joanvr in
Fix bug in glob pattern matching by @Wallman in
New Contributors
@runningcode made their first contribution in
@motu55 made their first contribution in
Full Changelog: v8.8.3...v8.8.4"
"Exclude `ResolvedDependency#dependencies` in `hashCode()` ()
Optimize `TreeVisitor#visitMarkers()`
Performance optimization for `JavaVisitor#visitIdentifier()`

This method is called so often, so it pays of to optimize it a bit at a low level.
Also optimize `JavaVisitor#visitSpace()`
If Snappy cannot be loaded, fall back on not using it to optimize type cache access
`RecipeSpec` methods `recipeFromYaml`, `recipeFromResource`, and `recipeFromResources` now memoize Recipes to avoid repeated redundant Environment instantiation / classpath scanning ()

Co-authored-by: Tim te Beek <tim@moderne.io>
fixed inner class ()

* fixed inner class

* Don't add imports for nested types in same CU

---------

Co-authored-by: Knut Wannheden <knut@moderne.io>","What's Changed
If Snappy cannot be loaded, fall back on not using it to optimize type cache access by @sambsnyd in 0e0edf0
RecipeSpec recipe caching by @nmck257 in
fixed inner class by @joanvr in
Full Changelog: v8.8.1...v8.8.2"
"fix: profile specific plugins were not matched ()
Also update Maven managed dependency by default ()
refactor: Use of `@EqualsAndHashCode` on `Recipe`

Use this link to re-run the recipe: https://app.moderne.io/recipes/org.openrewrite.java.recipes.RecipeEqualsAndHashCodeCallSuper?organizationId=T3BlblJld3JpdGU%3D

Co-authored-by: Moderne <team@moderne.io>
Revert ""refactor: Use of `@EqualsAndHashCode` on `Recipe`""

This reverts commit eaa8871e33e9edb200feb7b7349bf13dbfe67410.
Fix parsing of Groovy sources containing extra parentheses on Java 8","What's Changed
Fix parsing of Groovy sources containing extra parentheses on Java 8 by @sambsnyd in c9daa70
Also update Maven managed dependency by default in ChangeDependencyGroupIdAndArtifactId by @timtebeek in
Full Changelog: v8.15.0...v8.15.1"
"Fix parsing of Groovy GStrings which include property access not inside curly braces
Optimize `LatestVersion#countVersionParts()` ()

Using `Scanner` has the downsides of using regexp and also allocating a 1KiB `HeapCharBuffer` every time.
Fix double generate bug for adding a property to gradle.properties, add caching and parallel only to the root gradle.properties, and remove the extra whitespace from adding a generic property to an empty file
First serialize `@c` property of `Tree` objects

By first serializing the `@c` property the Jackson deserializer doesn't need to buffer as much data before knowing what type of object is being deserialized.

Curiously enough the same optimization doesn't appear to have any beneficial effect for the `JavaType` objects.
Avoid unnecessary lambda allocations

In LSTs there are a *lot* of `Space` and `Markers` objects, although most of them are empty. This commit avoids allocating a lambda every time an empty `Space` or `Markers` object is being visited to reduce memory pressure.
Annotate `Tree` and `JavaType` with `@JsonIgnoreProperties` ()

During deserialization the `@c` property appears to be treated as an unknown property, which adds some extra overhead.
Better handling of statements in context-free `JavaTemplate`s

Statements should typically not be inserted into the class body but inside an initializer body (or method body). The class body is for now reserved for method declarations, but this can still be improved in the future.

The template used by `SimplifyBooleanReturn` is now declared as context-free.

Fixes:
Improve performance of `TypeUtils#isAssignableTo()`

This method is used by the `UsesType` visitor and therefore used a lot. Removing use of `Stream` to improve performance.
Improve performance of `StringUtils#aspectjNameToPattern()`

Used internally by `MethodMatcher` and thus performance critical.
Allow context-free templates to replace fields
Add array-based `unsafeSet()` methods to `JavaType` implementations ()

This allows to cut down on the allocations of lists and arrays, as the internal representation is now array-based.

Using this new overloads in `UnsafeJavaTypeVisitor`.
Refactor `MethodMatcher#matchesTargetType` ()

Extracts `MethodMatcher#matchesTargetType` into `TypeUtils#isOfTypeWithName`.

This makes is easier for external actors to implement cusotm `MethodMatcher`
implementations without copying and pasting logic out of `MethodMatcher`.

Signed-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>
Fix dependenciesFromResources sometimes picking the wrong jar if there are multiple jars whose suffix match the artifactName
My proposal for ensuring recipe validation happens exactly once per run: Make it the responsibility of whatever is going to run the recipe, not RecipeScheduler ()
Fix by getting rid of LazyValidated, which causes ClassCastExceptions whenever it is not valid
Cache the GradleWrapper validation and any initial remote archive download by uri ()

Co-authored-by: Shannon Pamperl <shanman190@gmail.com>
Co-authored-by: Sam Snyder <sam@moderne.io>
Fix NPE ()

getMethodType() is nullable and must be checked at every invocation.

java.lang.NullPointerException: Cannot invoke
""org.openrewrite.java.tree.JavaType$Method.hasFlags(org.openrewrite.java.tree.Flag[])""
because the return value of
""org.openrewrite.java.tree.J$MethodInvocation.getMethodType()"" is null
at org.openrewrite.java.search.SemanticallyEqual$SemanticallyEqualVisitor.visitMethodInvocation
(SemanticallyEqual.java:874)

Co-authored-by: Tim te Beek <tim@moderne.io>
Add maven resolution time recording
Guard against NPE in MavenResolutionResult#unsafeSetModules
`ShortenFullyQualifiedTypeReferences` should handle equal types
Allow templates to replace `J.NewClass` with expression

`J.NewClass` implements both the `Expression` and `Statement` interfaces. But since there is no overload of `visitNewClass()` in the visitor of `JavaTemplateJavaExtension`, what is expected will always be another statement.
Fix `@Nullable` annotation on `ClasspathScanningLoader`

Was incorrectly referring to `javax.annotation.Nullable`.
Allow AddProperty reuse ()

* Allow AddProperty reuse

- Use PropertiesVisitor for the returned visitor
- Have PropertiesVisitor.visitFile return Properties.File
- Remove now excess casts

* Add test to demonstrate former issue & guard against changes

* Revert ""Allow AddProperty reuse""

This reverts commit 8e10e2c854c145a08d667aa36c9a4dee5ae1c8f0.

* Switch to & return PropertiesIsoVisitor in AddProperty

* Revert ""Add test to demonstrate former issue & guard against changes""

This reverts commit f9647fca5257cdaea6a30a7bb88e060ef890fdba.
added QualifyThisVisitor ()

* added QualifyThisVisitor

* whitespace

* whitespace

* Verify already qualified identity check noops

---------

Co-authored-by: Tim te Beek <tim@moderne.io>
Add `UpdateMavenWrapper` recipe including checksum verification ()

* Add `UpdateMavenWrapper` recipe including checksum verification

Fixes gh-1565 and gh-2996

* Add missing license headers

* Ensure cmd files are using crlf line endings","What's Changed
Optimize LatestVersion#countVersionParts() by @knutwannheden in
Annotate Tree and JavaType with @JsonIgnoreProperties by @knutwannheden in
Add array-based unsafeSet() methods to JavaType implementations by @knutwannheden in
Refactor MethodMatcher#matchesTargetType by @JLLeitschuh in
Make recipe validation the responsibility of the caller by @sambsnyd in
Cache the GradleWrapper validation and any initial remote archive download by uri by @jkschneider in
Fix NPE caused by org.openrewrite.staticanalysis.CombineSemanticallyEqualCatchBlocks by @Bananeweizen in
Allow AddProperty reuse by @timtebeek in
added QualifyThisVisitor by @nmck257 in
Add UpdateMavenWrapper recipe including checksum verification by @shanman190 in
New Contributors
@Bananeweizen made their first contribution in
Full Changelog: v8.1.5...v8.1.6"
"replace enableDefaultRepositories ()
Dont directly set context, but use defaults for the gradle/non gradle constructor ()

* Dont directly set context, but use defaults for the gradle/non gradle constructor

* use equals","What's Changed
Dont directly set context, but use defaults for the gradle/non gradle constructor by @pstreef in
Full Changelog: v8.23.0...v8.23.1"
"Drop HasSourcePath in favor of FindSourceFiles ()

* Drop HasSourcePath in favor of FindSourceFiles

* Demonstrate feature from HasSourcePath not present in FindSourceFiles

* Add to PathUtilsTest

* Gradle wrapper 8.5

* Only document limitation for now

* Restore match when pattern is empty
Added support for escaped identifiers to TypeTree.build. ()
Don't push to GE Build Cache without Creds ()

This was breaking my attempt to run the CodeQL scanner for OpenRewrite from my fork.
https://github.com/JLLeitschuh/rewrite-1/actions/runs/7094115471/job/19308794549#step:4:98

Signed-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>
Allow FindAndReplace to remove matches ()
Detect teamcity build environment ()

Fixes
Replace `org.junit.platform.commons.util.StringUtils` with `org.openrewrite.internal.StringUtils` ()
Add OrderPomElements to Apache Maven best practices
Reuse MavenTagInsertionComparator.canonicalOrdering
FindLiterals IndexOutOfBounds on empty string literals
`AddPropery` now accepts a comment ()

* `AddPropery` now accepts a comment

* Remove deprecated constructor from `AddProperty`

Co-authored-by: Tim te Beek <timtebeek@gmail.com>

* Remove unused import

Co-authored-by: Tim te Beek <timtebeek@gmail.com>

---------

Co-authored-by: Tim te Beek <timtebeek@gmail.com>
Updated RenameVariable to not update JavaDoc param names. ()

* Updated RenameVariable to not update Javadoc param names.

* Update rewrite-java-test/src/test/java/org/openrewrite/java/RenameVariableTest.java

---------

Co-authored-by: Tim te Beek <tim@moderne.io>
Consider templates returning input as no match ()

* Consider templates returning input as no match

When a `JavaTemplate` is applied to a non-Java LST it may end up returning the input itself. In this case `JavaTemplate#match()` should return `false`.

* Adjust test case
Added support for continuations in properties.
Polish FindImplementations to remove unused parameter and better describe the actual behavior of the recipe.
fix: IsInRepository is now checking for allowed repositories ()
fix: update `helpText` for `FindAndReplace` recipe to denote support for multiline strings ()

Provides necessary hints for clients understand the capabilities.
`PreconditionBellwether` must call `isAcceptable()` ()

When a precondition visitor extends an `XyzIsoVisitor` class (like `JavaIsoVisitor`) and there overrides the `visit()` method, then this will result in a `ClassCastException` when the visitor is given a source file which is not of that type.
Fixed whitespace on entities and char refs in XmlParser. ()

* Fixed whitespace on entities and char refs in XmlParser.

* Polish. Updated MavenParserTest#malformedPom.
Added a few type validation checks to FindMissingTypes.
Update method types on method names changed by ChangeMethodName, ChangePackage, and ChangeType.
Update method type of method names in ChangeMethodTargetToStatic, ChangeMethodTargetToVariable, and SimplifyMethodChain. Update type on clazz field in ImplementInterface.
Prevent ClassCastException in HasJavaVersion
Revert ""Prevent ClassCastException in HasJavaVersion""

This reverts commit 2a8cfc34f0f2e0c29d4d9b937c59227df0cbdd09.
Replaced old method type on names of J.MethodInvocation and J.MethodDeclaration in JavaTemplateJavaExtension.
Replace old types on J.Identifiers in DeleteMethodArgument, ReorderMethodArguments, ChangeStaticFieldToMethod, DependencyUseMapNotation, and RemoveImplements.
Fix for AddPlugin when plugin version is managed ()
Disable Java `SpacesVisitor` for non-Java sources ()

* Disable java SpacesVisitor to make breaking changes on other code files like Groovy

* Preserve prefix in `SimplifyBooleanExpressionVisitor`

* Add another test case

* Small cleanup to `UnwrapParentheses`

* Further simplify `SimplifyBooleanExpressionVisitor`

* Limit `MethodParamPad` to Java sources

---------

Co-authored-by: Knut Wannheden <knut@moderne.io>
Add a new `WORKING_DIRECTORY` message to `ExecutionContext` ()

* Add a new `WORKING_DIRECTORY` message to `ExecutionContext`

This directory can be written to by the recipes being executed and the directory will automatically get deleted at the end of the recipe execution.

* Validate that working directory exists

* Instead use `WorkingDirectoryExecutionContextView`

* Add two separate factory methods

* Add two separate factory methods

* Add some Javadoc","What's Changed
Added support for escaped identifiers to TypeTree.build. by @traceyyoshima in
Don't push to GE Build Cache without Creds by @JLLeitschuh in
Allow FindAndReplace to remove matches by @timtebeek in
Detect teamcity build environment by @timtebeek in
Replace org.junit.platform.commons.util.StringUtils with org.openrewrite.internal.StringUtils by @ammachado in
AddProperty now accepts a comment by @ammachado in
Updated RenameVariable to not update JavaDoc param names. by @traceyyoshima in
Consider templates returning input as no match by @knutwannheden in
Added support for continuations in properties. by @traceyyoshima in
fix: IsInRepository is now checking for allowed repositories by @kmccarp in
fix: update helpText for FindAndReplace recipe to denote support for multiline strings by @sjungling in
PreconditionBellwether must call isAcceptable() by @knutwannheden in
Fixed whitespace on entities and char refs in XmlParser. by @traceyyoshima in
Added a few type validation checks to FindMissingTypes. by @traceyyoshima in
Replaced old method type on names of J.MethodInvocation and J.MethodDeclaration in JavaTemplateJavaExtension. by @traceyyoshima in
Change original method types on method invocation names along with methodType field. by @traceyyoshima in
Fix for AddPlugin when plugin version is managed by @ammachado in
Disable Java SpacesVisitor for non-Java sources by @kunli2 in
Add a new WORKING_DIRECTORY message to ExecutionContext by @knutwannheden in
Full Changelog: v8.11.0...v8.11.1"
"Add a new `WORKING_DIRECTORY` message to `ExecutionContext` ()

* Add a new `WORKING_DIRECTORY` message to `ExecutionContext`

This directory can be written to by the recipes being executed and the directory will automatically get deleted at the end of the recipe execution.

* Validate that working directory exists

* Instead use `WorkingDirectoryExecutionContextView`

* Add two separate factory methods

* Add two separate factory methods

* Add some Javadoc
Provide static `deleteWorkingDirectory(ExecutionContext)` method
Skip updating Gradle when already updated ()
Find JavaVersion markers on any source file ()

Necessary for proper functioning of this recipe & tests:
- https://github.com/openrewrite/rewrite-spring/pull/460
Revert: Add a new `WORKING_DIRECTORY` message to `ExecutionContext` () ()

Revert the commits ff6ce91299650963c7cc522d56e8e7204130f177 and 30c0df15015a43bdbb27c236990d753ce4f18b05
Skip updating Maven when already updated
Skip nested classes for document examples ()

Since there's often more than one, and all got a `@DocumentExample`
Add guards against matching build tool for the edit phase
Change UpdateGradleWrapper to prefer to keep the existing distributionUrl.

Still uses services.gradle.org to query for available Gradle distributions, so it is possible for dynamic version selectors to fill in a wrapper *not* available on the internal repository. This is because Gradle distributions are typically hand-uploaded to bespoke places within internal artifact repositories, so there is no consistent way to query their availability.
refactor: OpenRewrite recipe best practices ()

Use this link to re-run the recipe: https://app.moderne.io/recipes/builder/zFyM6NDNL?organizationId=T3BlblJld3JpdGU%3D

Co-authored-by: Moderne <team@moderne.io>
Fix `StackOverflowError` in `MavenPomDownloader` ()

When building gridgain/gridgain@main there is a `StackOverflowError` because the root project references `parent/pom.xml` as its parent and the latter contains `<relativePath/>`. But that actually means that Maven should *not* look for the parent in the current project.
Improve diagnostics on RawPom parse failures ()
`AddPluginVisitor`: Improve error message on parse failure
Allow for static imports from unqualified types

Groovy apparently allows static imports to refer to a member of an unqualified type (as in `import static Foo.BAR`) if that type is imported or in the same package.
An empty String is not numeric as it leads to parse failure
Handle XML escapes in tag values ()

Fixes
switch around mkdirs exists to avoid race condition ()
The `managedReference` fields are no longer required
Polish. Clarified messaging of methodType checks in FindMissingTypes.
Update rewrite-java/src/main/java/org/openrewrite/java/search/FindMissingTypes.java

Co-authored-by: Tim te Beek <tim@moderne.io>
Update rewrite-java/src/main/java/org/openrewrite/java/search/FindMissingTypes.java

Co-authored-by: Tim te Beek <tim@moderne.io>
Added support for annotations in fully qualified type names. ()

* Added support for annotations in fully qualified type names.

* Add `J.AnnotatedType#getAllAnnotations()`

Also removed some code from `J.MethodDeclaration#getAllAnnotations()` and `J.VariableDeclarations#getAllAnnotations()` as that returned type annotations rather than annotations on the variable / method.

---------

Co-authored-by: Knut Wannheden <knut@moderne.io>","What's Changed
Skip updating Gradle when already updated by @shanman190 in
Find JavaVersion markers on any source file by @timtebeek in
Revert: Add a new WORKING_DIRECTORY message to ExecutionContext () by @knutwannheden in
Skip nested classes for document examples by @timtebeek in
refactor: OpenRewrite recipe best practices by @timtebeek in
Fix StackOverflowError in MavenPomDownloader by @knutwannheden in
Improve diagnostics on RawPom parse failures by @timtebeek in
Handle XML escapes in tag values by @timtebeek in
switch around mkdirs exists to avoid race condition by @joanvr in
Clarified messaging of methodType checks in FindMissingTypes. by @traceyyoshima in
Added support for annotations in fully qualified type names. by @traceyyoshima in
Full Changelog: v8.11.1...v8.11.2"
"Find Committers on freshly cloned repositories ()

* When a repository is freshly cloned and no other actions have been taken (like pull) ORIG_HEAD is not available. Using HEAD as a fallback works to find the committers.

* null check on ref
Add null check. A non null ref can point to a null objectId: ()

* Add null check. A non null ref can point to a null objectId:

SymbolicRef[HEAD -> refs/heads/main=0000000000000000000000000000000000000000(-1)]

* cleanup","What's Changed
Add null check. A non null ref can point to a null objectId: by @pstreef in
Full Changelog: v8.14.2...v8.14.3"
"Update jaxlib version number to 0.1.76

PiperOrigin-RevId: 415050863
Add checkify rule for while_loop.
Bump jax version after jax release

PiperOrigin-RevId: 415064518
[x64] make jax.experimental.loops consistent with default dtype
[x64] make x64_context tests work with updated default dtypes
Add missing gmres test (part of)
Upstream mesh utils to JAX core.

Co-authored-by: James Bradbury <jekbradbury@google.com>
Co-authored-by: Anselm Levskaya <levskaya@google.com>
PiperOrigin-RevId: 415136597
[JAX] Avoid building arity-1 tuples in XLA lowering.

This simplifies the emitted IR, and makes the generated HLO more closely match the future MHLO.

PiperOrigin-RevId: 415152442
Replace the jax_gsda_out flag with jax_parallel_functions_output_gda

PiperOrigin-RevId: 415177485
Finish jax2tf no_xla documentation
Rollback of: [JAX] Avoid building arity-1 tuples in XLA lowering.

This simplifies the emitted IR, and makes the generated HLO more closely match the future MHLO.

PiperOrigin-RevId: 415249444
[x64] make lax_numpy_test.py pass with 32-bit defaults
[jax] Add log message when cache entries are written.

PiperOrigin-RevId: 415330490
Add gcs support to serialization/deserialization of GDA

PiperOrigin-RevId: 415356134
Docstring for `GlobalDeviceArray` and `Shard`.

Co-authored-by: Skye Wanderman-Milne <skyewm@google.com>
PiperOrigin-RevId: 415367576
Add `contiguous_submeshes` option to `mesh_utils.create_device_mesh()`.

Unless you're using GlobalDeviceArrays, the device mesh passed to pjit
must be composed of contiguous submeshes for each process (i.e. each
process's local devices must all be next to each other in the full
mesh and form a rectangular submesh). This change teaches
`create_device_mesh` how to output meshes that satisfy this
constraint in some common cases.

This isn't the default behavior because the resulting meshes are a
little awkward and magical, and eventually we'd like using
GlobalDeviceArrays to be the common use case.
[x64] make random_test pass with jax_default_dtype_bits=32
[sparse] fix issue with duplicate indices in BCOO.__mul__
[x64] fix jax2tf_test for default_dtype
Testing: avoid hard-coding random seeds
Add some initial filecheck tests for JAX->MHLO lowering.

The coverage of this test suite is not complete, but it's a start.

PiperOrigin-RevId: 415560462
Clarify a comment in ParsedPartitionSpec.eq_given_rank

Previous one used an overly lax definition of ""semantic equality"".

PiperOrigin-RevId: 415567823
examples tests: avoid use of private jax utilities
[JAX] Add a dialect option to jit(...).lower(...).compiler_ir().

The dialect allows the user to select between HLO and MHLO output.

PiperOrigin-RevId: 415591372
[sparse] Update bcoo_dot_general GPU translation rule.
Co-authored-by: Jake VanderPlas <jakevdp@google.com>
[MLIR] Keep MLIR IR longer as a Python ir.Module object rather than a string, until it is time to compile it.

Attach a meaningful module name, which is useful in logging, etc.

PiperOrigin-RevId: 415617591
[MLIR] Support all fill_modes in GPU MLIR lowering for scatter_add.

PiperOrigin-RevId: 415617659
[hcb] Simplifications to the host_calback API

* dropping support for special AD handling for hcb.id_tap and id_print.
  From now on, only the primals are tapped. The old behavior can be
  obtained (for a limited time) by setting the JAX_HOST_CALLBACK_AD_TRANSFORMS
  environment variale, or the --flax_host_callback_ad_transforms flag.
  Additionally, added documentation for how to implement the old behavior
  using JAX custom AD APIs.

This allows us to make some significant cleanup in the internals.
Copybara import of the project:

--
8abdd9eceb7bba66de4d3a2554e50b9bbf0b8aec by Tianjian Lu <tianjianlu@google.com>:

[sparse] Update bcoo_dot_general GPU translation rule.
Co-authored-by: Jake VanderPlas <jakevdp@google.com>
PiperOrigin-RevId: 415878536
Refactor the lowering of remat.

Replace the XLA-specific lowering with the same logic written
with LAX primitives. This will allow reusing the logic for
different lowerings, e.g., jax2tf or MLIR.

This is a new attempt at, which was rolled-back in
due to test failures.
[JAX] Include JAX operator type in MHLO locations.

PiperOrigin-RevId: 416031506
fix: thread fill_value option
[JAX] Uniquify MLIR module names.

Some clients of JAX expect unique module names so they can disambiguate computation instances in profiling and tracing data.

PiperOrigin-RevId: 416043734
test: add tests for argwhere, flatnonzero
Add `is_fully_replicated` API to GDA

PiperOrigin-RevId: 416159926
[sparse] add sparse rule for lax.sub_p
Handle the edge case where two `pjit.FROM_GDA` singletons are created.
log tracing and compilation times
add simple test
test: use appropriate args in flatnonzero
tests: pass list to np.stack, not generator
tests: fix shape inference dimension
tests: cover 0 dim case
Adds rtol to jax2tf/converters_eval tests.

Adds `rtol` to the ModuleSpec and adjust for PixelCNN++ so that it passed. Also adds a comment explaining why PixelCNN++ has relative high tolerances.

PiperOrigin-RevId: 416257321
Tweak documentation on error handling for host_callback.call()
jnp.array: remove unused device argument
style: whitespace alignment

Should fix flake8 error.

Spacing to just after the `(` on above line in line 1061. This matches the formatting of line 978.
style: add spaces around operator (and after comma)
handle trivial case for ppermute batching rule

fixes
add jax.block_until_ready function

fixes
Include compute capability 8.0 SASS in jaxlib wheels.

Drop compute capability 6.1 to avoid growing the wheel size.

Also fix an unrelated build error due to a gcc warning in boringssl.
fix leak checker interaction with custom_jvp

fixes
add jax.block_until_ready to docs and changelog

also unrelatedly fix a couple of the uses of rst in changelog.md (though
many others remain)
make ravel_pytree unraveler dtype-polymorphic

fixes
jnp.array: use jax-style promotion for list inputs
testArray: add missing jit
Use .__mro__ instead of .mro() when enumerating superclasses of a type.

mro() has a different signature on metaclasses, but __mro__ is a cached tuple property that appears to have the same signature everywhere. As far as I can tell, it always exists.

PiperOrigin-RevId: 416410647
Add debugging flag for dumping the JAX-generated MHLO/HLO IR to a file.

While HLO dumping is redundant with XLA's XLA_FLAGS=--xla_dump_to=... feature, MHLO dumping is useful since XLA only ever sees and dumps the IR after it has been canonicalized and converted to HLO. Some debugging tasks require easy access to the MHLO as well.

PiperOrigin-RevId: 416435598
Add a `fast_path` to GDA for faster GDA construction. Local indices
and replica ids are computed during compilation time (not runtime) and the
results are cached.

PiperOrigin-RevId: 416445427
[hcb] Add support for remat2 to host_callback

A callback under ad_checkpoint.checkpoint will be invoked
twice when taking the gradient: once during the forward pass
and once again during the backward pass when the residuals
for the forward pass are rematerialized.
tests: remove trailing whitespace
jnp.array: use jax-style promotion for list inputs
Pass in the cached `global_mesh.local_devices` if gda fast path is enabled.

PiperOrigin-RevId: 416666888
doc: move stub section to bottom of FAQ
Add item() method to abstract arrays
Don't replace with gda mesh_axes unless FROM_GDA is specified.

PiperOrigin-RevId: 416689925
[MLIR] Change signature of lowering rules.

Refactoring only, no functional changes intended.

Previously the MLIR lowering rule signature was

```
def rule(ctx, avals_in, avals_out, *args, **jaxpr_params):
```

where `ctx` was a module-wide context.

Change it to

```
def rule(ctx, *args, **jaxpr_params)
```

where `ctx` is a per-rule context object. The previous parameters are now available as `ctx.module_context`, `ctx.avals_in`, and `ctx.avals_out`.

This change makes it easier to add new per-rule context information without having to refactor all of the lowering rules to accept a new argument. One example is a shape environment for dynamic shapes. Another example, which motivated this work, is that I want to include the primitive name as part of the rule context.

PiperOrigin-RevId: 416698663
[jax2tf] Simplify the shape_poly support.

The goal is to make is shareable outside of jax2tf.
Fix mistake in recent remat lowering refactoring

PiperOrigin-RevId: 416771513
Add a comment clarifying why `gda_ppspec` is returned.

PiperOrigin-RevId: 416788515
Change primitive arguments to parallel and sparse primitives to make parameters hashable.

An upcoming change adds a cache keyed on (primitive, params), but to do that, we need the params to be hashable.

PiperOrigin-RevId: 416793521
Ensure that pdot parameters are hashable.

PiperOrigin-RevId: 416804949
[MLIR] Add a `@mlir.cache_lowering` decorator that lowers a primitive out-of-line as a reusable function.

Some primitives have very large lowerings. This is particularly true for lowerings that use `mlir.lower_fun` (e.g., the threefry PRNG kernel) or some XLA fallback lowerings. In this case it makes sense to lower such computations once for each signature as an out of line function that we can call multiple times.

XLA will inline these functions early in compilation at the moment, but this avoids the need to repeatedly trace, e.g., the threefry kernel when emitting MHLO.

PiperOrigin-RevId: 416818325
[MLIR] Remove non-word characters from MLIR module names.

This ensures that the XLA module name matches the MHLO module name. Some users expect the input and output module names to match.

PiperOrigin-RevId: 416845848
Make sure while_loop cond generates an error even if it returns False.
Replace TODO with a different one

PiperOrigin-RevId: 416931545
Add build time support for AOT compilation to TF graphs.

PiperOrigin-RevId: 417392920
Add NaN checkify rule to all lax primitives.
custom_prng: generalize indexing of PRNGKeyArray

Co-authored-by: Roy Frostig <frostig@google.com>
[mhlo] Remove tuple from mhlo whileOp

This includes the following changes
 - Importing XLA HLO --> MHLO
 - Exporting MHLO --> XLA HLO
 - Legalizing tf control from during legalization from tf --> MHLO
 - Fixing the legalization of custom tf ops
 - Lowering Tensorflow dialect's communication ops to MHLO
 - Jax lowering to MHLO
 - MHLO's legalize control flow pass

PiperOrigin-RevId: 417534873
Fix straight-through estimator example in docs ()
[JAX] Requires indices to be sorted and of int32 in `_sparse_bcoo_matvec` test.

PiperOrigin-RevId: 417695937
Fix SyntaxError in jax_to_ir

Co-authored-by: Ayaka Mikazuki <ayaka@mail.shn.hk>
Annotate api_boundary
Add is_leaf to tree_{leaves,structure}.

PiperOrigin-RevId: 417783880
add limit to number of tracer provenance lines

fixes
small changes to checkify

Co-authored-by: Lena Martens <lenamartens@google.com>
replace deprecated jax.ops.index_* functions with the new index update operators
[sparse] add size attribute to sparse objects
docs: add FAQ section about jit compilation & numerics
fix indexing with ellipsis & boolean mask
[sparse] mark sparse objects as unhashable
[sparse] make sparse.todense() work for scalars
link directly to the documentation for the jnp.ndarray.at property
support null shape in jax.random.poisson
Add `where=` arg to jax.nn.{softmax, log_softmax, normalize}.

This change adds a `where=` argument (analogous to `jnp.sum`) that can be used to specify which elements to include in the calculation.
Internal change

PiperOrigin-RevId: 418960726
Clean up backwards-compatibility support for remat lowering

In we changed the lowering of remat to use LAX primitives,
but we left in some of the old code and an internal flag
_USE_LAX_REMAT_LOWERING to enable us to revert to the old behavior
in case of test failures.

Now we remove that flag and the old lowering.
Fix test failures under Numpy 1.22.
[JAX] Avoid building arity-1 tuples in XLA lowering.

This simplifies the emitted IR, and makes the generated HLO more closely match the future MHLO.

PiperOrigin-RevId: 419625471
Add division by zero check.
Drop support for NumPy 1.18.

Per NEP-29, we can drop NumPy 1.18 support on Dec 22, 2021.

The next NumPy deprecation will be 1.19 on Jun 21, 2022.

PiperOrigin-RevId: 419651428
Update sphinx-related packages
Implement InferTypeOpInterface on TransposeOp (NFC)

This provide a convenient builder which does not require to provide the result
type.

PiperOrigin-RevId: 419740257
[sparse] add getitem stub in JAXSparse
add staging logic for polymorphic shapes in jaxprs

Co-authored-by: Dougal Maclaurin <dougalm@google.com>
remove axis name logic from Primitive / bind

Instead, just give AxisPrimitive its own bind function. This way the
logic is nicely separated by concerns. In addition, this factorization
will let us more easily experiment with other ways to find the top trace
(e.g. for assert_p in checkify).
Add missing annotations to lax
clean up WrappedFun.call_wrapped refs on exception

Functions decorated by linear_util.transformation or
transformation_with_aux are coroutines (with two yields). They can raise
exceptions, either before or after they yield the first time.

linear_util.WrappedFun.call_wrapped, which is responsible for driving
these coroutines, holds references to them.

These coroutines often manipulate global trace state (i.e.
core.thread_local_state.trace_state attributes) through context managers
(e.g. core.new_main or core.extend_axis_env). These context managers use
try/finally to clean up their state changes.

When an exception is raised in a linear_util.transformation coroutine,
it is raised into call_wrapped. If call_wrapped doesn't then clean up
all the references it has to coroutines, the cleanup finally clauses may
not execute until too late.

To ensure the finally clauses are called at the right time (before
exiting call_wrapped, basically as soon as possible) we need to clean up
the references to the coroutines in call_wrapped.

We had cleaned up these coroutine references when the coroutines raised
exceptions in their first part (i.e. before their first yield) in.
But we didn't do a similar cleanup for their second part (i.e. after
their first yield and before their second).

Co-authored-by: Roy Frostig <frostig@google.com>
introduce custom_vmap and a corresponding custom_vmap_p primitive

Adds an impl and a batching rule for the primitive.

Co-authored-by: Matthew Johnson <mattjj@google.com>
JVP rule for custom_vmap

Co-authored-by: Matthew Johnson <mattjj@google.com>
custom batching vmap tests
custom batching jvp tests
jnp.searchsorted: properly handle NaNs
Fix host_callback docs

There was a missing ':' causing invalid rendering of the docs.
Fix exception handling logic in C++ dispatch code.

The dispatch code was always raising its own exception when an exception
occurred during hashing of static arguments, even if the exception which
occurred was something like a KeyboardInterrupt.

fixes

PiperOrigin-RevId: 420292886
Temporarily revert a small part of https://github.com/google/jax/pull/8955 (in
partial_eval.py's _inline_literals) and skip new tests.

Some code seems to depend on whether we generate fresh invars (i.e. jaxpr input
binders) in that code. I'm not sure if it's a bug in the new JAX code or a bug in
the user code, but I'd like to un-break things while investigating.

PiperOrigin-RevId: 420296461
Fix a bug that promoted t to a complex in odeint, and modify a test so it would have caught it

In odeint, raise error if t is not an array of floats
Add scatter OOB error.
Suppress memorysanitizer for code that calls LAPACK kernels.

PiperOrigin-RevId: 420325456
[JAX] xmap: specify shardings only on the named dimensions in the weak mode.

PiperOrigin-RevId: 420341381
[sparse] generalize metadata argument in BCOO primitives
Lift non-contiguous mesh restriction for fully replicated values

PiperOrigin-RevId: 420423427
simpler jaxpr eqn params to bind params conversion

Final-style higher-order primitives, like call_p, xla_call_p (underlying
jit), xla_pmap_p (underlying pmap), and xmap_p (underlying xmap) have
slightly different bind signatures (while tracing) from their signatures
when they appear in jaxprs. In particular, their trace-time binds are
parameterized by a Python callable (or really a lu.WrappedFun)
representing the function to be applied, while in jaxpr eqns they are
parameterized by a jaxpr representing the same.

As a result, to round-trip from jaxpr to Python traceable, in
core.eval_jaxpr we have to convert from one parameter signature to the
other. (Basically we had to take the jaxpr and turn it into a Python
callable, via lu.wrap_init(partial(core.eval_jaxpr, call_jaxpr, ...)).)

However due to historical path dependence these conversion mechanisms
were all slightly distinct and kind of a mess. There was a case analysis
for call_jaxpr and map_jaxpr in core.eval_jaxpr_eqn (a helper function
created only because of this complexity), and there was a separate table
only used for the xmap rule.

In this PR we uniformized things! We basically only have a table (to
simplify core.eval_jaxpr), but instead of having it as a table we just
attached the rules to the different primitive classes (CallPrimitive,
MapPrimitive, and XmapPrimitive) to make things less error-prone (we
have a few different CallPrimitive instantiations, like call_p,
xla_call_p, named_call_p, and remat_call_p, and this way we don't have
to remember to populate the table separately for each).

This was actually a warmup simplification before we attempt to simplify
custom derivatives (to unify custom_jvp_call_p and
custom_jvp_call_jaxpr_p).

Co-authored-by: Roy Frostig <frostig@google.com>
Internal change

PiperOrigin-RevId: 420436636
add JAX_BACKEND_TARGET env var, fixes
Fix the index for fully replicated values. Each dimension of the aval should have an index. For example, if an aval has a shape (4, 4) then each dimension of the aval maybe sharded or replicated. Hence each dimension will have an index associated with it. For fully replicated avals, the dimensions are always replicated hence index is always `slice(None)`.

PiperOrigin-RevId: 420524929
Re-applying after it was rolled back.

PiperOrigin-RevId: 420545623
Re-applying after it was rolled back.

PiperOrigin-RevId: 420548165
Rolling forward again...

PiperOrigin-RevId: 420551242
[mhlo] Remove tuples from mhlo If/Case op.

PiperOrigin-RevId: 420554920
fix jaxpr type checking error messages

The pretty-printing changes a few months ago defined variable names
based on the state in JaxprPpContext instances. But that meant incorrect
variable names could be printed in jaxpr type checking error messages.

This commit correctly threads through the context so as to provide
error messages with coherent variable names.
fix broken links and update texts in thinking_in_jax.ipynb
Fix DeviceArray class reference
Enable JAX->MLIR lowering by default.

Before this change, JAX produces HLO using the XLA:Python builder APIs. After this change JAX produces MHLO using MLIR:Python APIs, and converts the MHLO to HLO for compilation with XLA. This is a lateral shift that should have little immediate impact, but unlocks a number of interesting opportunities in the future (e.g., mixing MLIR dialects within a JAX program).

[XLA:Python] Pass MLIR input as a std::string to work around https://github.com/pybind/pybind11/issues/2765. A better fix would be to update pybind11 but that is hitting Windows-related hurdles; for now, just avoid relying on reference lifetime extension.

Brax: update test seeds to avoid test failures. Additional constant folding (canonicalization) in the MHLO lowering path seems to cause small numerical differences.
PiperOrigin-RevId: 420755696
Fix spurious ""donated buffers were not usable"" warning when using MLIR.

PiperOrigin-RevId: 420782796
Disable a pjit test that is failing on GPU.

PiperOrigin-RevId: 420854561
Do shard indices calculations only once in callbacks by using GDA fast path because indices calculation is expensive as it happens on the global mesh (if the global mesh is large). The second calculation happens in _create_local_shards which is avoided if GDA fast path is enabled.

PiperOrigin-RevId: 420855232
Speed up deserialization by not doing the shard indices calculation twice. This calculation is expensive because it happens on the global mesh size scale.

PiperOrigin-RevId: 420855444
de-duplicate util.memoize and util.cache

The only difference between the two was that
jax.config.jax_check_tracer_leaks disables the caching under util.cache
but not under util.memoize.

We could add that as an option on the same function if it turns out to
be important, but it seems unnecessary. Moreover there are only two
callers (in dtypes.py and in batching.py).

Co-authored-by: Skye Wanderman-Milne <skyewm@google.com>
[JAX] Fix spurious inequality for two apparently equal PyTreeDefs.

When constructed via one path we were filling in the .custom field of nodes that weren't custom types.

Fixes https://github.com/google/jax/issues/9066

PiperOrigin-RevId: 420858917
Add tests for 0d fully replicated scalar input to pjit.

PiperOrigin-RevId: 420884601
Copybara import of the project:

--
4fcdadbfb3f4c484fd4432203cf13b88782b9311 by Matthew Johnson <mattjj@google.com>:

add jax.ensure_compile_time_eval to public api

aka jax.core.eval_context

COPYBARA_INTEGRATE_REVIEW=https://github.com/google/jax/pull/7987 from google:issue7535 4fcdadbfb3f4c484fd4432203cf13b88782b9311
PiperOrigin-RevId: 420928687
checkify: tweak some organization and names
introduce custom_transpose and a corresponding primitive

Includes rules for impl, transpose, abstract eval, and xla/mlir
translation.
Benchmarks for GDA. Also move `create_global_mesh` to test_utils since it was replicated in a lot of places.

PiperOrigin-RevId: 421142813
enable custom transformation ""stacking""

Make custom transformation wrappers such as `custom_jvp` behave
interchangeably when directly composed. For example, enable the
following usage:

```
@jax.custom_jvp
@jax.custom_transpose
def f(x): ...

@f.def_transpose
def f_t(y): ...

@f.defjvp
def f_jvp(x, tx): ...
```

In particular:

* Forward `def*` methods on custom transformations.

* Have unary `def*` methods return their argument so that, when used
  as decorators, they do not replace their target with `None`.

* Fix a bug in the use of `functools.update_wrapper`: previously a
  wrapper would overwrite its own attributes with those of the target
  callable (including its reference to the target callable).
fix a custom_vjp post_process bug, related cleanups

related to, doesn't completely fix it
Resolves issue 8744
[JAX] Add support for generating ""equation profiles"" in JAX.

An ""equation profile"" is a pprof profile that maps equations in a jaxpr to the Python stack traces at which they were generated. Pprof can be used a number of ways to analyze and visualize the result.

For example, for a profile from a Resnet-50 training step from Flax, we can identify the most common primitives:
```
$ pprof --tags /tmp/myprof
Main binary filename not available.
 primitive: Total 6062.0
            1509.0 (24.89%): mul
             936.0 (15.44%): add
             589.0 ( 9.72%): reshape
             492.0 ( 8.12%): div
             485.0 ( 8.00%): broadcast_in_dim
             330.0 ( 5.44%): reduce_sum
             322.0 ( 5.31%): integer_pow
             230.0 ( 3.79%): add_any
             174.0 ( 2.87%): convert_element_type
             160.0 ( 2.64%): select
             158.0 ( 2.61%): conv_general_dilated
             116.0 ( 1.91%): sub
             110.0 ( 1.81%): eq
             110.0 ( 1.81%): neg
             104.0 ( 1.72%): max
              53.0 ( 0.87%): rsqrt
              52.0 ( 0.86%): rev
              49.0 ( 0.81%): custom_jvp_call_jaxpr
              49.0 ( 0.81%): gt
               5.0 (0.082%): xla_call
               4.0 (0.066%): min
               3.0 (0.049%): dot_general
               3.0 (0.049%): lt
               2.0 (0.033%): cos
               2.0 (0.033%): exp
               2.0 (0.033%): iota
               2.0 (0.033%): log
               2.0 (0.033%): psum
               2.0 (0.033%): reduce_max
               2.0 (0.033%): stop_gradient
               1.0 (0.016%): argmax
               1.0 (0.016%): reduce_window_max
               1.0 (0.016%): select_and_scatter_add
               1.0 (0.016%): transpose
               1.0 (0.016%): xla_pmap
```

Or the lines of code that generated the most equations:
```
$ pprof  --text /tmp/myprof
Main binary filename not available.
Type: equations
Showing nodes accounting for 6038, 99.60% of 6062 total
Dropped 5 nodes (cum <= 30)
      flat  flat%   sum%        cum   cum%
      1537 25.35% 25.35%       1537 25.35%  _compute_stats
      1484 24.48% 49.84%       1484 24.48%  _normalize
       849 14.01% 63.84%       6062   100%  __call__
       644 10.62% 74.46%        644 10.62%  <unknown>
       483  7.97% 82.43%        483  7.97%  <unknown>
       392  6.47% 88.90%       6061   100%  train_step
       324  5.34% 94.24%        324  5.34%  <unknown>
       161  2.66% 96.90%        161  2.66%  <unknown>
        57  0.94% 97.84%       4292 70.80%  loss_fn
        52  0.86% 98.70%         52  0.86%  schedule
        39  0.64% 99.34%         39  0.64%  softmax_cross_entropy
         8  0.13% 99.47%         30  0.49%  compute_metrics
         6 0.099% 99.57%         61  1.01%  cross_entropy_loss
         1 0.016% 99.59%       1321 21.79%  apply_gradients
         1 0.016% 99.60%       6062   100%  train_and_evaluate
         0     0% 99.60%       6062   100%  <unknown>
         0     0% 99.60%       6062   100%  __init__
         0     0% 99.60%       3872 63.87%  _call_wrapped_method
         0     0% 99.60%       6062   100%  _run_and_get_tests_result
         0     0% 99.60%       6062   100%  _run_code_in_main
         0     0% 99.60%       6062   100%  _run_in_app
         0     0% 99.60%       6062   100%  _run_main
         0     0% 99.60%       3872 63.87%  apply
         0     0% 99.60%        161  2.66%  apply_updates
         0     0% 99.60%       6062   100%  main
         0     0% 99.60%       6062   100%  main_function
         0     0% 99.60%       6062   100%  run
         0     0% 99.60%       6062   100%  runTests
         0     0% 99.60%       6062   100%  run_filename_as_main
         0     0% 99.60%       6062   100%  run_tests
         0     0% 99.60%       3872 63.87%  scope_fn
         0     0% 99.60%       6062   100%  test_train_and_evaluate
         0     0% 99.60%       1159 19.12%  update_fn
         0     0% 99.60%       3872 63.87%  wrapped_fn
         0     0% 99.60%       3872 63.87%  wrapped_module_method
         0     0% 99.60%       3872 63.87%  wrapper
```

I highly recommend the pprof HTTP visualization, using --tagleaf to introduce pseudoframes for each primitive, and to use the ""flame"" visualization.
```
pprof --tagleaf=primitive --http=:8080 myprof
```

[XLA:Python] Add helpers to Traceback and for working with pprof profiles.

* Define hash and equality operators on Tracebacks.
* Add functions for converting JSON to and from pprof profile protocol buffers.
* Add a helper method that exposes PyCode_Addr2Line to Python.

PiperOrigin-RevId: 421395346
add `random.default_prng_impl` to retrieve the default PRNG implementation
[jax2tf] Add jax2tf_associative_scan_reductions flag

This flag allows users to match the JAX performance for
associative reductions in CPU.
See README.md for details.
PartitionSpec: allow partially specified sharding

PiperOrigin-RevId: 421603194
Optimizations for GDA to make creating GDA faster.

* Use math to figure out the replica id. Using `_hashed_index` (note that this is a function and not `_HashableIndex` which is a class which does not exist anymore) is 1.5 - 2 times slower than using math. markdaoust@ helped with the math here (going to office has its own perks :) )

* Get rid of `_HashableIndex` class and replace it with a function `_hashed_index`. Dataclass is extremely slow.

* Only calculate global_mesh.local_devices once. Even though its a cached property (but its after python 3.8)

```
name                                           old time/op             new time/op             delta
gda_construction_callback_(4, 2)_['x', 'y']    4.77ms ± 5%             4.74ms ± 5%     ~           (p=0.316 n=14+17)
gda_construction_raw_(256, 8)_['x', 'y']       17.9ms ± 5%              9.0ms ± 2%  -49.92%          (p=0.008 n=5+5)
indices_replica_id_calc_(256, 8)_['x', 'y']    11.4ms ± 2%              2.9ms ± 2%  -74.52%          (p=0.008 n=5+5)
gda_construction_callback_(4, 2)_[None]        34.0ms ±20%             30.5ms ± 2%     ~             (p=0.413 n=5+4)
gda_construction_raw_(256, 8)_[None]           15.9ms ± 2%              7.7ms ± 3%  -51.56%          (p=0.008 n=5+5)
indices_replica_id_calc_(256, 8)_[None]        9.39ms ± 3%             1.74ms ± 2%  -81.44%          (p=0.008 n=5+5)
gda_construction_callback_(4, 2)_['x']         8.87ms ± 2%             8.92ms ± 3%     ~             (p=0.841 n=5+5)
gda_construction_raw_(256, 8)_['x']            16.4ms ± 2%              7.7ms ± 1%  -52.66%          (p=0.008 n=5+5)
indices_replica_id_calc_(256, 8)_['x']         9.85ms ± 1%             1.90ms ± 2%  -80.68%          (p=0.008 n=5+5)
gda_construction_callback_(4, 2)_['y']         15.9ms ± 3%             16.0ms ± 5%     ~             (p=0.690 n=5+5)
gda_construction_raw_(256, 8)_['y']            15.8ms ± 3%              7.6ms ± 1%  -52.04%          (p=0.008 n=5+5)
indices_replica_id_calc_(256, 8)_['y']         9.29ms ± 1%             1.78ms ± 1%  -80.79%          (p=0.008 n=5+5)
gda_construction_callback_(4, 2)_[('x', 'y')]  4.65ms ± 2%             4.62ms ± 3%     ~            (p=0.440 n=5+10)
gda_construction_raw_(256, 8)_[('x', 'y')]     18.6ms ± 3%              9.7ms ± 5%  -47.76%          (p=0.008 n=5+5)
indices_replica_id_calc_(256, 8)_[('x', 'y')]  11.8ms ± 4%              3.5ms ± 2%  -70.28%          (p=0.008 n=5+5)
gda_construction_raw_(128, 8)_['x', 'y']       8.54ms ± 1%             4.03ms ± 2%  -52.84%          (p=0.008 n=5+5)
indices_replica_id_calc_(128, 8)_['x', 'y']    5.40ms ± 4%             1.10ms ± 1%  -79.69%          (p=0.008 n=5+5)
gda_construction_raw_(4, 2)_['x', 'y']          173µs ± 1%              193µs ± 3%  +11.63%          (p=0.008 n=5+5)
indices_replica_id_calc_(4, 2)_['x', 'y']       127µs ± 1%              147µs ± 1%  +15.57%          (p=0.008 n=5+5)
```

PiperOrigin-RevId: 421623147
lax.sort: regularize handling of -0.0 and -NaN
searchsorted: use correct ordering for complex inputs
jnp.unique: properly handle NaN values
Add ensure_compile_time_eval docstring to docs
einsum: clarify use of precision.
Split lax_control_flow_test into three separate tests.

Split the custom root and custom linear solve tests into separate test files.

Disable two slow custom linear solve tests.
Add a few jit decorators to slow tests in lax_control_flow_test.

PiperOrigin-RevId: 421901487
Canonicalize parsed partition spec before passing to lower_mesh_computation. Creates a new data structure `CanonicalizedParsedPartitionSpec` which strips empty tuples from the end of parsed partitions to canonicalize the specs so that `P(None)` and `None` for example in in_axis_resources are equivalent.

I have been bit by this 3 times and its about time I fix this. This also fixes a bug where fully replicated values are allowed with non-contiguous meshes (in this case P(None) and None) were not equal.

PiperOrigin-RevId: 421918164
Checkify: add way to disable categories of errors.

By default only user_asserts are lifted into the checked function.
Speed up check_jaxpr().

(check_jaxpr() is only used when debugging.)

Don't eagerly pretty print jaxprs: only do so if we are going to raise an error.
Don't eagerly form error messages. Delete typecheck_assert.

PiperOrigin-RevId: 422594126","GitHub commits.
Breaking changes:
Support for NumPy 1.18 has been dropped, per the [deprecation policy](https://jax.readthedocs.io/en/latest/       deprecation.html). Please upgrade to a supported NumPy version.
The host_callback primitives have been simplified to drop the special autodiff handling for hcb.id_tap and        id_print. From now on, only the primals are tapped. The old behavior can be obtained (for a limited time) by setting  the JAX_HOST_CALLBACK_AD_TRANSFORMS environment variable, or the --flax_host_callback_ad_transforms flag.   Additionally, added documentation for how to implement the old behavior using JAX custom AD APIs ({jax-issue}).
Sorting now matches the behavior of NumPy for 0.0 and NaN regardless of the bit representation. In        particular, 0.0 and -0.0 are now treated as equivalent, where previously -0.0 was treated as less than    0.0. Additionally all NaN representations are now treated as equivalent and sorted to the end of the array.   Previously negative NaN values were sorted to the front of the array, and NaN values with different internal  bit representations were not treated as equivalent, and were sorted according to those bit patterns ({jax-            issue}).
{func}jax.numpy.unique now treats NaN values in the same way as np.unique in NumPy versions 1.21 and      newer: at most one NaN value will appear in the uniquified output ({jax-issue}9184).
Bug fixes:
host_callback now supports ad_checkpoint.checkpoint ({jax-issue}).
New features:
add jax.block_until_ready ({jax-issue}`)
Added a new debugging flag/environment variable JAX_DUMP_IR_TO=/path. If set, JAX dumps the MHLO/HLO IR it      generates for each computation to a file under the given path.
Added jax.ensure_compile_time_eval to the public api ({jax-issue}).
jax2tf now supports a flag jax2tf_associative_scan_reductions to change the lowering for associative reductions,  e.g., jnp.cumsum, to behave like JAX on CPU and GPU (to use an associative scan). See the jax2tf README for more      details ({jax-issue})."
"Update version + changelog
Fix a typo in jax2tf README.

PiperOrigin-RevId: 467136397
Remove _ prefix from functions in jax._src.dtypes.

to_inexact_dtype and to_complex_dtype are used across the JAX code base,
so they shouldn't have _ prefixes.
Increase Bazel sharding of long-running CPU tests.
Increase Bazel sharding of scipy_signal_test on CPU.
jax.numpy: improve support for boolean inputs
[Pax] Support checkpoint policies in pipeline layer.

PiperOrigin-RevId: 467253061
[XLA:Python] Add support for executing portable PJRT executables from Python.

Add an optional `device` argument to execute that allows the user to trigger the `ExecutePortable` path. Plumb the `compile_portable_executable` compilation option through to Python.

[JAX] Handle compile_portable_executable option in compilation cache.

PiperOrigin-RevId: 467253489
Fix typo in debugging docs
Make all pmap tests pass with Array! I am skipping all soft pmap tests for now.

PiperOrigin-RevId: 467264992
skip redundant `asarray` conversion in LAX numpy rewriting-take helper
Add functionality for ""pure"" callbacks

Also avoids using CPP dispatch path when host callbacks are involved

PiperOrigin-RevId: 467270949
Tests: require pillow>=9.1.0 & remove backward compatibility
defer to custom eltype for `gather` lowering rule

This also adds an `mlir.delegate_lowering` helper that takes optional
replacements to the lowering context and restores/updates it on
return. This is used to define a gather lowering rule in tests here,
by calling out to the base gather lowering rule. I picked it off of a
working branch that uses it as well (for key-eltyped lowering rules).
Pass host callbacks to `backend.compile_replicated`

PiperOrigin-RevId: 467299712
Use --no-implicit-optional for type checking

This makes type checking PEP 484 compliant (as of 2018).
mypy will change its defaults soon.

See:
https://github.com/python/mypy/issues/9091
https://github.com/python/mypy/pull/13401
Allow debug prints in staged out custom derivative functions

PiperOrigin-RevId: 467344265
simplify slicing jaxprs a little

Co-authored-by: Sharad Vikram <sharad.vikram@gmail.com>
Add shape checks for lax.fft.

Fixes https://github.com/google/jax/issues/4734
Import .bazelrc.user to allow users to override bazel options easily.
Initial implementation of eager pmap

Co-authored-by: Sharad Vikram <sharad.vikram@gmail.com>
Co-authored-by: Matthew Johnson <mattjj@google.com>
Working multihost eager pmap

Co-authored-by: Sharad Vikram <sharad.vikram@gmail.com>
Co-authored-by: Skye Wanderman-Milne <skyewm@google.com>
Initial transpose implementation

Co-authored-by: Matthew Johnson <mattjj@google.com>
Cleaning up eager pmap implementation

Co-authored-by: Matthew Johnson <mattjj@google.com>
un-skip polar/qdwh decomp tests skipped on gpu in ad6ce74

On an A100 machine, these tests seem to run fine now. See https://github.com/google/jax/issues/8628#issuecomment-1215651697.
Remove jit-of-pmap in callback test

PiperOrigin-RevId: 467738629
Point to the conda-forge jaxlib wheels in the JAX readme.
Bump XLA version.

Fixes https://github.com/google/jax/issues/9771
pre-commit hook: update flake8, mypy, & jupytext
[jax2tf] lax.reduce_window (enable_xla=False): bug fix and improvements.

* Fixes https://github.com/google/jax/issues/11804: we only supported `lax.reduce_window` without batch and channel dimensions, which is wrong. This is supported, and in fact something that most users use (this case is actually not explained in the [operational semantics for XLA::ReduceWindow](https://www.tensorflow.org/xla/operation_semantics#reducewindow)). I have fixed this and clarified a number of test cases with batch and channel dimensions.

* Also, @sdenton4 gave a failing example in a Colab using polymorphic dimensions. I've added this as a test case to make sure it works now.

* Adds support for explicit padding using the existing padding logic from convolutions.

* Fixes https://github.com/google/jax/issues/11874: we were not handling SAME padding for `lax.add` correctly, since we used `tf.nn.avg_pool`, which does not include non-padding tokens (see issue for more details). I resolved it by adding manual padding and added some additional tests for this.

* Ensures we call eval_shape on a shape containing polynomials before calling a TF op.

* Fixes https://github.com/google/jax/issues/11929#issuecomment-1216261697: we weren't running any of the shape_poly_test.py tests for `enable_xla=False`.

PiperOrigin-RevId: 467879449
Allow collectives in manually sharded computations

... at least when the manual sharding applies to the whole mesh, because
that's all that XLA can support right now. This is especially important
when computing gradients of xmapped functions (when manual lowering is
enabled), since AD often introduces many `psum`s.

PiperOrigin-RevId: 467895089
Add support for giving sharding instances as input to with_sharding_constraint.

PiperOrigin-RevId: 467924064
build.py fixes.

* Add aarch64 as a known target_cpu value.
* Only pass --bazel_options to build actions since they can make ""bazel
  shutdown"" fail.
* Pass the bazel startup options to ""bazel shutdown"".

Issue https://github.com/google/jax/issues/7097
Fixes https://github.com/google/jax/issues/7639
Fix common typo: Tuple[X] -> Tuple[X, ...]
Fix XLA fallback to avoid checking the mesh conditions

The warning about not using the full mesh manually is mainly to improve error messages
(otherwise an XLA error is generated). But the MLIR lowering fallback uses axis_env
unconditionally, so we have to go around that check.

PiperOrigin-RevId: 467941551
Fix JIT cacheing context defaults
Recommend using the cuda-nvcc package from the ""nvidia"" conda channel to fetch ptxas.
add dtype arg to jnp.stack and friends

Since the np.stack group is getting a dtype argument in numpy 1.24, they
should also have it in JAX.

Because they are just wrappers of np.concatenate, the changes are small.
Bump pmap_test size to handle new eager tests

PiperOrigin-RevId: 467967021
Bump test tolerance for eigenvalue test.

This test fails by a small amount on Linux aarch64.
Increase jax.distributed timeout to 5 min
Lower bessel_i1e primitive to chlo.bessel_i1e.

PiperOrigin-RevId: 467996329
Add a backend field to `mlir.ModuleContext` so that host callback lowering can use the correct backend

PiperOrigin-RevId: 468024979
Move tensorflow/core/platform/{default, google, windows} to tensorflow/tsl/platform/...

PiperOrigin-RevId: 468025286
Add support for returning arrays from `full_like` that match the sharding of the input Array.

PiperOrigin-RevId: 468053219
Make checkify tests pass with Array and add methods on Array that are present on DA.

PiperOrigin-RevId: 468058909
Internal change

PiperOrigin-RevId: 468068879
delete old remat implementation

moved lowering rule logic from remat_impl.py (now deleted) to ad_checkpoint.py
Update WORKSPACE

to include the addition of use_global_device_ids in AllReduceOp.
Update XLA commit.

Fixes build error:
Label
 '@org_tensorflow//tensorflow/tsl/platform/default:build_config.bzl' is
 invalid because 'tensorflow/tsl/platform/default' is not a package.
Include ABI tag in jaxlib wheels.

Currently JAX wheels end up with names like:
jaxlib-0.3.15-cp39-none-manylinux2014_x86_64.whl

This PR changes the wheel names to:
jaxlib-0.3.15-cp39-cp39-manylinux2014_x86_64.whl

i.e., we include the CPython ABI tag. This simply reflects the status
quo in the wheel name, and does not change what jaxlib needs.
Bump xla_client version to gate use_global_device_ids usage.

PiperOrigin-RevId: 468209500
Re-bump shard count for `pmap_test`

PiperOrigin-RevId: 468239588
Expose pure callback and enable rank polymorphic callbacks
Skip testSizeOverflow to stop eager pmap failure

PiperOrigin-RevId: 468242947
Add support for doing grad of `pjit` (similar to what `jit` supports). Resolve in_shardings in `_pjit_call_impl` (that were UNSPECIFIED) before lowering to XLA. Then check if the device assignment is same across shardings in `lower_sharding_computation`.

PiperOrigin-RevId: 468251065
test: fix testStack for numpy 1.24 or newer
Add weak type support to Array. Also make all api_test.py tests pass with Array. I have disabled the `float0` test for now until I investigate.

PiperOrigin-RevId: 468264910
Set `jax_eager_pmap` to True

PiperOrigin-RevId: 468265661
Replace JAX client side implementation of RoundNearestEven with higher efficiency op RoundNearestEvenOp

PiperOrigin-RevId: 468302607
Sparse direct solver using QR factorization from cuSOLVER. This is the jaxlib implementation. We will want to combine this with the sparse libraries already existing in JAX.

PiperOrigin-RevId: 468303019
Revert: Sparse direct solver using QR factorization from cuSOLVER. This is the jaxlib implementation. We will want to combine this with the sparse libraries already existing in JAX.

Reason: Breaks JAX tests.
PiperOrigin-RevId: 468346430
Replace pspec with the original sharding that's already present from which pspec was extracted.

PiperOrigin-RevId: 468352837
remove custom_jvp_call_jaxpr_p and its rules

They were superfluous! Instead use the ""new"" mechanism for converting from
jaxpr params to bind params (in).

This change languished until we could land / and friends. But now
we can!
Copybara import of the project:

--
887b7ce2cb3d6d8aedac5cc273e137f1c876e3c7 by Matthew Johnson <mattjj@google.com>:

remove custom_jvp_call_jaxpr_p and its rules

They were superfluous! Instead use the ""new"" mechanism for converting from
jaxpr params to bind params (in).

This change languished until we could land / and friends. But now
we can!

PiperOrigin-RevId: 468373797
Catch ModuleNotFoundError instead of ImportError.

We frequently use the pattern
try:
  import m
except ImportError:
  # do something else.

This suppresses errors when the module can be found but does not import
successfully for any reason. Instead, catch only ModuleNotFoundError so
missing modules are allowed but buggy modules still report errors.
Sparse direct solver via QR factorization CUDA implementation.

PiperOrigin-RevId: 468467698
Apply suggestions from code review

Co-authored-by: Matthew Johnson <mattjj@google.com>
roll-forward deletion of custom_jvp_call_jaxpr_p

PiperOrigin-RevId: 468499658
Re-disable testSizeOverflow

PiperOrigin-RevId: 468507077
Internal change

PiperOrigin-RevId: 468509799
Take the pjit XLA compilation path for `Arrays`. In the test, `astype` happens in a sharded fashion without the round trip to host.

PiperOrigin-RevId: 468510366
clean up some dead code, from bad merge
Array bug: make pytype_aval_mapping return a ConcreteShapedArray
roll-forward deletion of custom_jvp_call_jaxpr_p

PiperOrigin-RevId: 468522879
Fix jax_cuda_visible_devices for distributed GPU clusters.

We were incorrectly assuming that the local device ordinals formed a dense set.

Fixes https://github.com/google/jax/issues/11882

PiperOrigin-RevId: 468529654
Update XLA commit.
jnp.remainder: match numpy's behavior for integer zero denominator
Add PyShardedToken for sharded execution.

This avoids creating too many python objects, which adds overhead.

PiperOrigin-RevId: 468536900
rolling forward deletion of custom_jvp_call_jaxpr_p yet again...

PiperOrigin-RevId: 468541924
Use c++ weakref LRU cache implementation as a drop in replacement for jax's
weakref_lru_cache.

PiperOrigin-RevId: 468550018
Be more selective about which MLIR pieces we build.

Reduces the size of the installed jaxlib by around 20MB.
Add array test counterparts to dtypes_test.

PiperOrigin-RevId: 468568788
Add support for interoperability via dlpack for Array and also make pickle_tests and lax_numpy_test pass with Array.

PiperOrigin-RevId: 468568917
fix custom_object_test for new Array type
More tests for transpose
sketch: setup for new key array implementation based on eltypes

Co-authored-by: Matthew Johnson <mattjj@google.com>
introduce key-element-type arrays and overhaul the Python PRNG key array type

Before this change, the Python PRNG key array was a pytree type
wrapping a `uint32` array. This was a stopgap that misbehaved under
`vmap`, `scan`, and even `jax.tree_map`. For a while, we thought we
might rely on something like the typeclass mechanisms in development
(e.g. `vmappable`) to move away from a pytree.

We're now taking a different approach: introducing key element types
into our IR and other internal machinery. During staging, we map
user-facing PRNG key arrays to abstract arrays such element type.

This leans heavily on our recently-introduced extended element type
capabilities.

As a consequence, `vmap`, `scan`, etc. now work.

A sample of changes made to introduce key-element-type arrays:

* Introduce a new element type (`prng.KeyTy`), with the requisite IR
  type mapping and device result handlers, as well as lowering rules
  for dtype-polymorphic primitive operations.

* Introduce primitives for basic RNG operations: `random_seed`,
  `random_bits`, `random_split`, `random_fold_in`. These primitives
  essentially delegate to the underlying PRNG implementation (directly
  so in their impl rules, and by translating their staged-out form in
  lowering rules).

* Also introduce `random_wrap` and `random_unwrap` for ""unsafe""
  conversion from/to the base `uint32` array. We need this backwards
  compatibility, and it's useful for tests.

* Introduce some `vmap`-based helpers to adapt PRNG impls (which
  define basic `random_bits`, `split`, etc. on scalars) to the above
  batch-polymorphic primitives. Most of the primitives are vectorized,
  but `random_fold_in` is a broadcasting binary op.

* Update the `gamma` primitive rules to account for key-element-type
  abstract arrays (nice simplification here).

* Give PRNG implementation short string names (""tags"") for IR
  pretty-printing.

* Update `lax.stop_gradient` to handle opaque dtypes.

* Fix up loop MLIR lowering, which assumed that shaped arrays of all
  dtypes have the same physical shape.

* Add new tests (exercising staging, jaxprs, lowerings, ...)

A sample of changes made to rework Python-level PRNG key arrays:

* Mimic `isinstance(x, KeyArray)` checks on abstract key arrays and
  tracers that carry them.

* Patch (only a subset of) standard device array attributes onto PRNG
  key arrays.

* Implement various conversion handlers (sharding, constant-creation,
  `device_put`).

* Accept PRNG key arrays as input to `lax_numpy.transpose`.

* Update tests and rename some internals.

A sample of extra changes along the way:

* Disallow AD on key-typed arrays in the main API.

* Hoist `random_bits`'s named-shape-handling logic, which used to only
  take place in the threefry PRNG's `random_bits` implementation, up
  to the new `random_bits` traceable, so that we apply it consistently
  across PRNG implementations.

This change leaves some unwanted `lax` and `jax.numpy` operations
superficially available on key arrays during tracing/staging
(e.g. under `jit`), though not outside of it. We ultimately want to
disallow these and raise useful errors, and I'm leaving that for
follow-up work. For now, applying such operations under `jit` may
result in downstream errors in the middle-end instead.

Everything here is still guarded by `config.jax_enable_custom_prng`,
whose default setting hasn't changed (it is off).
defer to custom eltype for sharded result handling, use this to handle sharded key arrays
add key array checks on entry to `random.{orthogonal,generalized_normal,ball}`
enable several non-threefry RNG tests without `config.jax_enable_custom_prng`
teach jax2tf about custom eltypes, key arrays, and random key primitives

Specifically:

* Introduce a `physical_avals` view as a custom eltype method. This is
  analogous to the existing `aval_to_ir_types`, but where the output
  is an aval with a non-custom eltype (and hence a direct
  correspondence to TF and to lowerings).

* Change jax2tf to continue tracing with logical avals, but to
  maintain TF tensors of corresponding physical shape/dtype, and to
  translate to TF operations based on physical avals where relevant.

* Fix up various TF impl rules to follow physical avals. To this end,
  add a ""physical"" mode to jax2tf's `_convert_jax_impl` helper, which
  carries out the conversion using physical rather than logical avals.

* Write TF impl rules for `random_{seed,split,fold_in,bits}`
  primitives. To this end, factor out the part of these primitives'
  impl rules that operates on the base array and convert that, pass it
  through `_convert_jax_impl` in physical mode.

* Teach the jax2tf test harness how to unwrap key-array-typed outputs
  into physical `uint32` arrays that it can use in comparison tests.
Copybara import of the project:

--
0cf7b33e9e166f21a05bbddb04f95dad89a5f7a9 by Jake VanderPlas <jakevdp@google.com>:

jnp.remainder: match numpy's behavior for integer zero denominator

PiperOrigin-RevId: 468621345
Increase the threshold to use tuple_args to 2000 args for TPUs.

PiperOrigin-RevId: 468675921
Disabled dlpack bfloat16 test for JAX<->cupy.

cupy does not appear to support bfloat16.
Add the autosharding error test back but disable it for now.

PiperOrigin-RevId: 468699560
Internal change

PiperOrigin-RevId: 468712508
make slicing compilation a little faster

For the common special case of int or slice-of-int/None indexing, we can
generate a lax.slice rather than a lax.gather. That makes compilation a little
faster, and makes the generated jaxpr a bit more wieldy too, to process in
transformations and to read when pretty-printed.
Make monoid_reducer implementation consistent with annotation
Enable `jax_array` on CPU for the entire JAX test suite!

PiperOrigin-RevId: 468726200
Add support to test gpu jaxlib nightly in CI instead of prebuilt jax/jaxlib
Avoid import-time dependency on jax.experimental
[sparse] Add batch count and batch stride to matrix descriptors.

PiperOrigin-RevId: 468760351
Add copy_p to jax.lax namespace
Use `.device()` to get the device and platform from the device and fix TODO to point to github issue

PiperOrigin-RevId: 468769708
Add padding rule for copy_p
[sparse] add trivial sparse rule for lax.copy_p
Add config.jax_array to _trace_context so that in can be used in lu.cache key.

PiperOrigin-RevId: 468824719
roll-forward

... with a small adjustment, resetting the `random.PRNGKeyArray` type
during Python typechecking.

PiperOrigin-RevId: 468835674
roll-forward

... with a small adjustment, resetting the `random.PRNGKeyArray` type
during Python typechecking.

PiperOrigin-RevId: 468840334
Make eager pmap tests pass with `Array`. Also add a slow path for Array in `pmap` similar to what SDA has. This is required for eager pmap. Adding a slow path removes the need for doing sharding checks in api.py because SDA doesn't do those checks and if the sharding does not match with pmap sharding, then it just defaults to the slow path (exactly like SDA).

PiperOrigin-RevId: 468843310
[ROCm] Enhance hipsparse to reach parity with cusparse based on commit https://github.com/google/jax/commit/d37b711dd46b19baf75d990e14493c80586fcd37.
Update no_xla_limitations.md
Relax test tolerance to fix GPU CI failure.
target_total_secs has type `int` but used as type `None`

""filename"": ""benchmarks/benchmark.py""
""warning_type"": ""Incompatible variable type [9]"",
""warning_message"": "" target_total_secs is declared to have type `int` but is used as type `None`.""
""warning_line"": 86
""fix"": int to Optional[int]
Increase some test shardings to reduce CI timeouts under asan/tsan/msan.

PiperOrigin-RevId: 469173324
Add `upgrade=True` to jax_array flag so that its marked as transient flag which will eventually be set to True.
Add checkpointing support for Array similar to GDA.

PiperOrigin-RevId: 469271107
roll-forward, take 2

Now with:
* resetting the `random.PRNGKeyArray` type during Python typechecks
* zeroing JVP rules for random primitives
* temporarily skipping vmap-of-pmap test with keys under `config.jax_array`

PiperOrigin-RevId: 469276609
remove 'BUG' title prefix from bug report template

We auto-label with ""bug"" to this end.
Remove deprecated array.tile() method
[JAX] Prepare not to export jax._src by default.

Currently
```
import jax
```
populates `jax._src` in the names exported from JAX. This change prepares for not exporting `jax._src` by default.

In particular, explicitly import modules from jax._src and refer to those imports rather than assuming jax._src contents will be around later. This is a common pattern in tests.

This change does not yet remove any exported names.

Issue https://github.com/google/jax/issues/11951

PiperOrigin-RevId: 469480816
Enable fast path in the Array constructor. This means that the rearranging of `_arrays` according to the device_assignment won't happen when fastpath is enabled because we assume that jax transformations will return the right arrangement.

PiperOrigin-RevId: 469492283
Shut down preemption sync manager if enabled.

PiperOrigin-RevId: 469497215
lax.squeeze: ensure DeviceArray is returned
Fix JVP rule for lax.pow()
Suppress msan failure in PRNG code.

Use np.zeros instead of np.empty for code that builds an IR constant.

PiperOrigin-RevId: 469566082
in ad_checkpoint WrapHashably.__eq__, check _both_ are hashable

fixes
Allow `to_py()` on Array if the sharding is fully replicated.

PiperOrigin-RevId: 469617855
fix bug issue template yaml parsing error
Avoid more direct references to jax._src without imports.

Change in preparation for not exporting jax._src by default.

PiperOrigin-RevId: 469725340
Internal change

PiperOrigin-RevId: 469730523
Fix testUnaryWeakTypes
Return Arrays if config.jax_array is enabled always.

PiperOrigin-RevId: 469780136
Re-enable lax_numpy test that triggered a nonterminating LLVM compilation.

LLVM bug was fixed in https://github.com/llvm/llvm-project/commit/12b203ea7c65071f9fc02d420b28d58dcdc5ad4a

PiperOrigin-RevId: 469781517
Update to pxla dispatch path to handle ordered effects with a single device

PiperOrigin-RevId: 469785153
Upgrade logistic (sigmoid) function into a lax primitive.

This allows us to lower it to `mhlo.logistic`, which allows XLA to generate more efficient code.

PiperOrigin-RevId: 469789339
test `jax.eval_shape` with key array inputs/outputs
Add callbacks to docs
Upgrade logistic (sigmoid) function into a lax primitive.

This allows us to lower it to `mhlo.logistic`, which allows XLA to generate more efficient code.

PiperOrigin-RevId: 469841487
Add context to `__array__` of Array just like DA.

PiperOrigin-RevId: 469874479
support `jax.experimental.array.Array` as a base array for key arrays

Only handle host-locally sharded `Array`s for now (like in SDAs under
`pmap`). Leaving global sharding for a follow up.

Also re-enable a previously skipped test as a result.

Co-authored-by: Yash Katariya <yashkatariya@google.com>
PiperOrigin-RevId: 469885160
`__repr__` if an Array is fully replicated. Its the same for `_value` so it makes sense to do the same for `__repr__`.

PiperOrigin-RevId: 469892350
[JAX] Deprecate .to_py() property on arrays. Implement __array__ instead.

.to_py() was something of an accidental export from the JAX array classes. There are other mechanisms to turn a JAX array into a NumPy array, including `np.asarray(x)` and `jax.device_get(x)`. Deprecate this mechanism because it is redundant.

PiperOrigin-RevId: 469984029
[sparse] add support for bcoo equivalent of lax.slice
Introduce class PyShardedBuffer that contains a vector of PjRtBuffer and cache it in GDA.

PiperOrigin-RevId: 470024839
Fix jax2tf GDA bug.

PiperOrigin-RevId: 470036308
Annotate TypeAlias

Why? This is required according to https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases, and something about the change in https://github.com/google/jax/pull/12018 resulted in mypy errors from this line.

PiperOrigin-RevId: 470046276
minimal result-handling support for single-device key array `pjit` outputs

Co-authored-by: Yash Katariya <yashkatariya@google.com>
PiperOrigin-RevId: 470054082
pmap_test: disable DeviceBufferToArray when jax_array=True
generate lax.slice instead of lax.gather for more indexing cases
Add option to generate perfetto trace without generating link
Copybara import of the project:

--
d5ee729a7f5d583c8e212c6a9f1b98221b13cbdc by Jake VanderPlas <jakevdp@google.com>:

generate lax.slice instead of lax.gather for more indexing cases

PiperOrigin-RevId: 470094833
combine gpu tests
Add support for MeshPspecSharding local_sharded_result_handler because SDA outputs from pjit can produce a MeshPspecSharding.

PiperOrigin-RevId: 470119499
Add runtime type check in named_scope to ensure that name is a string.

PiperOrigin-RevId: 470177071
[jax2tf] Improves support for lax.gather (enable_xla=False).

We were initially only handling `mode = lax.GatherScatterMode.PROMISE_IN_BOUNDS` (from https://github.com/google/jax/pull/10653), but there are two problems with this:

* In eager or graph mode, TF throws an error for out-of-bounds indices. This was undocumented, so I've added a limitation and documented this in the g4doc.

* `PROMISE_IN_BOUNDS` is semantically the same as `FILL_OR_DROP` (for the forward pass). In fact. JAX's `.set()` uses `FILL_OR_DROP`. I've now changed it so that both modes are supported (only `CLIP` is not supported).

I have also added more tests for OOB behavior for enable_xla = False, and a few more tests.

PiperOrigin-RevId: 470215381
Update IREE backend name from ""dylib"" to ""llvm-cpu"".
Switch from pocketfft to ducc

All credit goes to Martin Reinecke <martin@mpa-garching.mpg.de>.
Fixes for PocketFFT->ducc migration.

* Rename modules from pocketfft to ducc.
* Fix up strides at their generation point rather than where they are
  consumed.
Migrate from MLIR-HLO's CHLO to StableHLO's CHLO

Unlike StableHLO which is meant to coexist with MHLO, StableHLO's CHLO is meant to replace MLIR-HLO's CHLO.

This change is the final step towards enabling adoption of StableHLO. If we keep two copies of CHLO, then some users won't be able to depend on both MLIR-HLO and StableHLO, and that is a useful possibility to enable both in the short and in the long term.

C++:
  1) C++ dependency changes from `//third_party/tensorflow/compiler/xla/mlir_hlo` (includes CHLO, among other things) to `//third_party/tensorflow/compiler/xla/mlir_hlo/stablehlo:chlo_ops` (in CMake, from `ChloDialect` to `ChloOps`).
  2) .h include changes from `#include ""third_party/tensorflow/compiler/xla/mlir_hlo/include/mlir-hlo/Dialect/mhlo/IR/chlo_ops.h""` to `#include ""third_party/tensorflow/compiler/xla/mlir_hlo/stablehlo/stablehlo/dialect/ChloOps.h""`.
  3) To register the CHLO dialect in C++, you'll need to depend on `//third_party/tensorflow/compiler/xla/mlir_hlo/stablehlo:register`, include `#include ""third_party/tensorflow/compiler/xla/mlir_hlo/stablehlo/stablehlo/dialect/Register.h""` and call `mlir::stablehlo::registerAllDialects(registry)`.
  4) C++ usage doesn't change - StableHLO's CHLO is an exact copy of MLIR-HLO's CHLO.

Python:
  5) Python dependency changes from `//third_party/py/mlir:mhlo_dialect` (includes CHLO, among other things) to `//third_party/py/mlir:chlo_dialect` (in CMake, from `MLIRHLOPythonModules` to `StablehloUnifiedPythonModules`).
  6) Python imports don't change.
  7) To register the CHLO dialect in Python, you'll need to change `chlo.register_chlo_dialect(context)` to `chlo.register_dialect(context)`.
  8) Python usage doesn't change - StableHLO's CHLO is an exact copy of MLIR-HLO's CHLO.
PiperOrigin-RevId: 470265566
Bump XLA version.
Upgrade logistic (sigmoid) function into a lax primitive.

This allows us to lower it to `mhlo.logistic`, which allows XLA to generate more efficient code.

PiperOrigin-RevId: 470300985
Add missing header to ducc build file.
[JAX] Handle non-contiguous GPU IDs in NCCL collectives.

Fixes https://github.com/google/jax/issues/12119

PiperOrigin-RevId: 470335156
Only check process_count when using GDA in multi-process.

PiperOrigin-RevId: 470567159
Enable one gpu per process in multinode GPU CI
Check if the buffer shape matches the excepted shard shape by Array.

PiperOrigin-RevId: 470732792
Fix typo in debugging docs
Add batching rules for state primitives and for_loop

Co-authored-by: Sharad Vikram <sharad.vikram@gmail.com>
Use tensorflow/compiler/xla/stream_executor instead of tensorflow/stream_executor

PiperOrigin-RevId: 470804752
Remove `device_replica_id_map` from the Sharding interface because the standalone function should be more than enough to use. The major use-case of this is for checkpointing and accessing addressable_shards which accesses the standalone function makes it work.

PiperOrigin-RevId: 470820443
Use cases_from_list to limit number of tests
Enable custom_jvp/vjp in eager pmap

PiperOrigin-RevId: 470855724
Make jit == pjit. This means that the lowering and execution paths of jit and pjit are merged.

A fallback to `lower_xla_callable` is taken when pmap appears in the jaxpr during the jit lowering path.

Added support for `keep_unused`, `committed` and `core.Token` to pxla.py.

PiperOrigin-RevId: 470896270
Add a correct jaxpr substitution for the cond primitive

The default rule only searches for jaxprs stashed immediately in params,
but cond keeps a tuple of jaxprs, so we missed them.
Make the jaxpr_replicas function explicitly for pmap primitive.

PiperOrigin-RevId: 471023776
Remove the fallback to `lower_xla_callable` that exist for `jit(pmap)` cases when `Array` was enabled and add minimal support to `lower_sharding_computation`.

The `jit(pmap)` codepath is added to `lower_sharding_computation` to delete the `lower_xla_callable` codepath when `jax.Array` is enabled by default. This will help in cleaning up the codebase and get rid of tech debt.

* Round trip through host for `Array`'s that have PmapSharding and come through the `jit` path (exactly like SDAs).

* For other cases i.e. when `num_replicas > 1`, default to the `_execute_replicated` path in dispatch.py from `lower_sharding_computation`. This is exactly same to what happens in `lower_xla_callable`.

PiperOrigin-RevId: 471033420
Init local variables

It's UB to use uninitialized values as arguments.

PiperOrigin-RevId: 471084634
access rules through a hidden attribute of opaque dtype
add `dtype` property to key arrays
avoid unnecessary lifting to aval in `jax.random.poisson`
Fix typo in `jax.debug.print()` documentation.

PiperOrigin-RevId: 471096544
[Rollback] Make the jaxpr_replicas function explicitly for pmap primitive.

PiperOrigin-RevId: 471098631
Rollback of upgrade logistic (sigmoid) function into a lax primitive.

PiperOrigin-RevId: 471105650
Some minor changes to make_array_from_callback to use the device_indices_map method and calculate the indices just once. Also set the `_committed` attribute of shards to what the parent Array has.

PiperOrigin-RevId: 471167295
add `key_data` to `jax.random` for key array unwrapping

This is often useful in testing and debugging. Its more dangerous
inverse, wrapping, remains internal only.","GitHub commits.
Bugs
Fix corner case issue in gradient of lax.pow with an exponent of zero ()
Breaking changes
jax.checkpoint, also known as jax.remat, no longer supports the concrete option, following the previous version's deprecation; see JEP 11830.
Changes
Added jax.pure_callback that enables calling back to pure Python functions from compiled functions (e.g. functions decorated with jax.jit or jax.pmap).
Deprecations:
The deprecated DeviceArray.tile() method has been removed. Use jax.numpy.tile ().
DeviceArray.to_py() has been deprecated. Use np.asarray(x) instead."
"[MLIR] Make two dtype fixes.

* when converting from a non-bool type to a boolean, lower it as x != 0 rather than convert(x, i1). Convert has truncation semantics, but we are expecting XLA's x != 0 semantics instead.
* revert https://github.com/google/jax/pull/8825 and part of https://github.com/google/jax/pull/8810. PR https://github.com/google/jax/pull/8828 means that we now will never have a non-canonical preferred_element_type, and so the output type is once again always equal to the preferred element type.

PiperOrigin-RevId: 414716056
[x64] add new jax_default_dtype_bits flag
[x64]: improve dtype mismatch errors for lax functions
Relax test tolerance for slogdet gradient test.

The next jaxlib releases seems to produce slightly different numerical results here, but we believe they are due to an overly tight tolerance/overly sensitive test.
Before this change, the local_to_global in the path of dispatching the pjitted_function causes a huge regression in t5x. This change gets rid of the local_to_global conversion and uses the precomputed input_avals (which is a combination of global and local avals respectively if the input is a GDA or not).

The avals of args to the pjitted_function will also also similar pattern (global if arg is a GDA and local otherwise).

PiperOrigin-RevId: 414811992
[x64] minor weak_type changes to linalg.py
Ensure semantically equivalent PartitionSpecs are considered equivalent when
checking GDA's mesh_axes and pjit's in_axis_resources match.

For example, P() and P(None) both mean fully replicated, which triggers an
error before this change.

PiperOrigin-RevId: 414861824
detect and err on transformation of AOT-compiled function calls
Restructures jax2tf converters eval directory.

Makes the following improvements:
* Renames directory to `converters_eval` and improves names of Python files.
* Updates README to better describe contents of the directory.
* Adds `no_xla_limitations.md` doc containing current limitations of running the jax2tf converter with `enable_xla=False` and a description of each partially supported op (with some TODOs for those I haven't done yet).

PiperOrigin-RevId: 415005456
[sparse] add jvp rule for bcoo_spdot_general
Update jaxlib version number to 0.1.76

PiperOrigin-RevId: 415050863
Add checkify rule for while_loop.
Bump jax version after jax release

PiperOrigin-RevId: 415064518
[x64] make jax.experimental.loops consistent with default dtype
[x64] make x64_context tests work with updated default dtypes
Add missing gmres test (part of)
Upstream mesh utils to JAX core.

Co-authored-by: James Bradbury <jekbradbury@google.com>
Co-authored-by: Anselm Levskaya <levskaya@google.com>
PiperOrigin-RevId: 415136597
[JAX] Avoid building arity-1 tuples in XLA lowering.

This simplifies the emitted IR, and makes the generated HLO more closely match the future MHLO.

PiperOrigin-RevId: 415152442
Replace the jax_gsda_out flag with jax_parallel_functions_output_gda

PiperOrigin-RevId: 415177485
Finish jax2tf no_xla documentation
Rollback of: [JAX] Avoid building arity-1 tuples in XLA lowering.

This simplifies the emitted IR, and makes the generated HLO more closely match the future MHLO.

PiperOrigin-RevId: 415249444
[x64] make lax_numpy_test.py pass with 32-bit defaults
[jax] Add log message when cache entries are written.

PiperOrigin-RevId: 415330490
Add gcs support to serialization/deserialization of GDA

PiperOrigin-RevId: 415356134
Docstring for `GlobalDeviceArray` and `Shard`.

Co-authored-by: Skye Wanderman-Milne <skyewm@google.com>
PiperOrigin-RevId: 415367576
Add `contiguous_submeshes` option to `mesh_utils.create_device_mesh()`.

Unless you're using GlobalDeviceArrays, the device mesh passed to pjit
must be composed of contiguous submeshes for each process (i.e. each
process's local devices must all be next to each other in the full
mesh and form a rectangular submesh). This change teaches
`create_device_mesh` how to output meshes that satisfy this
constraint in some common cases.

This isn't the default behavior because the resulting meshes are a
little awkward and magical, and eventually we'd like using
GlobalDeviceArrays to be the common use case.
[x64] make random_test pass with jax_default_dtype_bits=32
[sparse] fix issue with duplicate indices in BCOO.__mul__
[x64] fix jax2tf_test for default_dtype
Testing: avoid hard-coding random seeds
Add some initial filecheck tests for JAX->MHLO lowering.

The coverage of this test suite is not complete, but it's a start.

PiperOrigin-RevId: 415560462
Clarify a comment in ParsedPartitionSpec.eq_given_rank

Previous one used an overly lax definition of ""semantic equality"".

PiperOrigin-RevId: 415567823
examples tests: avoid use of private jax utilities
[JAX] Add a dialect option to jit(...).lower(...).compiler_ir().

The dialect allows the user to select between HLO and MHLO output.

PiperOrigin-RevId: 415591372
[sparse] Update bcoo_dot_general GPU translation rule.
Co-authored-by: Jake VanderPlas <jakevdp@google.com>
[MLIR] Keep MLIR IR longer as a Python ir.Module object rather than a string, until it is time to compile it.

Attach a meaningful module name, which is useful in logging, etc.

PiperOrigin-RevId: 415617591
[MLIR] Support all fill_modes in GPU MLIR lowering for scatter_add.

PiperOrigin-RevId: 415617659
[hcb] Simplifications to the host_calback API

* dropping support for special AD handling for hcb.id_tap and id_print.
  From now on, only the primals are tapped. The old behavior can be
  obtained (for a limited time) by setting the JAX_HOST_CALLBACK_AD_TRANSFORMS
  environment variale, or the --flax_host_callback_ad_transforms flag.
  Additionally, added documentation for how to implement the old behavior
  using JAX custom AD APIs.

This allows us to make some significant cleanup in the internals.
Copybara import of the project:

--
8abdd9eceb7bba66de4d3a2554e50b9bbf0b8aec by Tianjian Lu <tianjianlu@google.com>:

[sparse] Update bcoo_dot_general GPU translation rule.
Co-authored-by: Jake VanderPlas <jakevdp@google.com>
PiperOrigin-RevId: 415878536
Refactor the lowering of remat.

Replace the XLA-specific lowering with the same logic written
with LAX primitives. This will allow reusing the logic for
different lowerings, e.g., jax2tf or MLIR.

This is a new attempt at, which was rolled-back in
due to test failures.
[JAX] Include JAX operator type in MHLO locations.

PiperOrigin-RevId: 416031506
fix: thread fill_value option
[JAX] Uniquify MLIR module names.

Some clients of JAX expect unique module names so they can disambiguate computation instances in profiling and tracing data.

PiperOrigin-RevId: 416043734
test: add tests for argwhere, flatnonzero
Add `is_fully_replicated` API to GDA

PiperOrigin-RevId: 416159926
[sparse] add sparse rule for lax.sub_p
Handle the edge case where two `pjit.FROM_GDA` singletons are created.
log tracing and compilation times
add simple test
test: use appropriate args in flatnonzero
tests: pass list to np.stack, not generator
tests: fix shape inference dimension
tests: cover 0 dim case
Adds rtol to jax2tf/converters_eval tests.

Adds `rtol` to the ModuleSpec and adjust for PixelCNN++ so that it passed. Also adds a comment explaining why PixelCNN++ has relative high tolerances.

PiperOrigin-RevId: 416257321
Tweak documentation on error handling for host_callback.call()
jnp.array: remove unused device argument
style: whitespace alignment

Should fix flake8 error.

Spacing to just after the `(` on above line in line 1061. This matches the formatting of line 978.
style: add spaces around operator (and after comma)
handle trivial case for ppermute batching rule

fixes
add jax.block_until_ready function

fixes
Include compute capability 8.0 SASS in jaxlib wheels.

Drop compute capability 6.1 to avoid growing the wheel size.

Also fix an unrelated build error due to a gcc warning in boringssl.
fix leak checker interaction with custom_jvp

fixes
add jax.block_until_ready to docs and changelog

also unrelatedly fix a couple of the uses of rst in changelog.md (though
many others remain)
make ravel_pytree unraveler dtype-polymorphic

fixes
jnp.array: use jax-style promotion for list inputs
testArray: add missing jit
Use .__mro__ instead of .mro() when enumerating superclasses of a type.

mro() has a different signature on metaclasses, but __mro__ is a cached tuple property that appears to have the same signature everywhere. As far as I can tell, it always exists.

PiperOrigin-RevId: 416410647
Add debugging flag for dumping the JAX-generated MHLO/HLO IR to a file.

While HLO dumping is redundant with XLA's XLA_FLAGS=--xla_dump_to=... feature, MHLO dumping is useful since XLA only ever sees and dumps the IR after it has been canonicalized and converted to HLO. Some debugging tasks require easy access to the MHLO as well.

PiperOrigin-RevId: 416435598
Add a `fast_path` to GDA for faster GDA construction. Local indices
and replica ids are computed during compilation time (not runtime) and the
results are cached.

PiperOrigin-RevId: 416445427
[hcb] Add support for remat2 to host_callback

A callback under ad_checkpoint.checkpoint will be invoked
twice when taking the gradient: once during the forward pass
and once again during the backward pass when the residuals
for the forward pass are rematerialized.
tests: remove trailing whitespace
jnp.array: use jax-style promotion for list inputs
Pass in the cached `global_mesh.local_devices` if gda fast path is enabled.

PiperOrigin-RevId: 416666888
doc: move stub section to bottom of FAQ
Add item() method to abstract arrays
Don't replace with gda mesh_axes unless FROM_GDA is specified.

PiperOrigin-RevId: 416689925
[MLIR] Change signature of lowering rules.

Refactoring only, no functional changes intended.

Previously the MLIR lowering rule signature was

```
def rule(ctx, avals_in, avals_out, *args, **jaxpr_params):
```

where `ctx` was a module-wide context.

Change it to

```
def rule(ctx, *args, **jaxpr_params)
```

where `ctx` is a per-rule context object. The previous parameters are now available as `ctx.module_context`, `ctx.avals_in`, and `ctx.avals_out`.

This change makes it easier to add new per-rule context information without having to refactor all of the lowering rules to accept a new argument. One example is a shape environment for dynamic shapes. Another example, which motivated this work, is that I want to include the primitive name as part of the rule context.

PiperOrigin-RevId: 416698663
[jax2tf] Simplify the shape_poly support.

The goal is to make is shareable outside of jax2tf.
Fix mistake in recent remat lowering refactoring

PiperOrigin-RevId: 416771513
Add a comment clarifying why `gda_ppspec` is returned.

PiperOrigin-RevId: 416788515
Change primitive arguments to parallel and sparse primitives to make parameters hashable.

An upcoming change adds a cache keyed on (primitive, params), but to do that, we need the params to be hashable.

PiperOrigin-RevId: 416793521
Ensure that pdot parameters are hashable.

PiperOrigin-RevId: 416804949
[MLIR] Add a `@mlir.cache_lowering` decorator that lowers a primitive out-of-line as a reusable function.

Some primitives have very large lowerings. This is particularly true for lowerings that use `mlir.lower_fun` (e.g., the threefry PRNG kernel) or some XLA fallback lowerings. In this case it makes sense to lower such computations once for each signature as an out of line function that we can call multiple times.

XLA will inline these functions early in compilation at the moment, but this avoids the need to repeatedly trace, e.g., the threefry kernel when emitting MHLO.

PiperOrigin-RevId: 416818325
[MLIR] Remove non-word characters from MLIR module names.

This ensures that the XLA module name matches the MHLO module name. Some users expect the input and output module names to match.

PiperOrigin-RevId: 416845848
Make sure while_loop cond generates an error even if it returns False.
Replace TODO with a different one

PiperOrigin-RevId: 416931545
Add build time support for AOT compilation to TF graphs.

PiperOrigin-RevId: 417392920
Add NaN checkify rule to all lax primitives.
custom_prng: generalize indexing of PRNGKeyArray

Co-authored-by: Roy Frostig <frostig@google.com>
[mhlo] Remove tuple from mhlo whileOp

This includes the following changes
 - Importing XLA HLO --> MHLO
 - Exporting MHLO --> XLA HLO
 - Legalizing tf control from during legalization from tf --> MHLO
 - Fixing the legalization of custom tf ops
 - Lowering Tensorflow dialect's communication ops to MHLO
 - Jax lowering to MHLO
 - MHLO's legalize control flow pass

PiperOrigin-RevId: 417534873
Fix straight-through estimator example in docs ()
[JAX] Requires indices to be sorted and of int32 in `_sparse_bcoo_matvec` test.

PiperOrigin-RevId: 417695937
Fix SyntaxError in jax_to_ir

Co-authored-by: Ayaka Mikazuki <ayaka@mail.shn.hk>
Annotate api_boundary
Add is_leaf to tree_{leaves,structure}.

PiperOrigin-RevId: 417783880
add limit to number of tracer provenance lines

fixes
small changes to checkify

Co-authored-by: Lena Martens <lenamartens@google.com>
replace deprecated jax.ops.index_* functions with the new index update operators
[sparse] add size attribute to sparse objects
docs: add FAQ section about jit compilation & numerics
fix indexing with ellipsis & boolean mask
[sparse] mark sparse objects as unhashable
[sparse] make sparse.todense() work for scalars
link directly to the documentation for the jnp.ndarray.at property
support null shape in jax.random.poisson
Add `where=` arg to jax.nn.{softmax, log_softmax, normalize}.

This change adds a `where=` argument (analogous to `jnp.sum`) that can be used to specify which elements to include in the calculation.
Internal change

PiperOrigin-RevId: 418960726
Clean up backwards-compatibility support for remat lowering

In we changed the lowering of remat to use LAX primitives,
but we left in some of the old code and an internal flag
_USE_LAX_REMAT_LOWERING to enable us to revert to the old behavior
in case of test failures.

Now we remove that flag and the old lowering.
Fix test failures under Numpy 1.22.
[JAX] Avoid building arity-1 tuples in XLA lowering.

This simplifies the emitted IR, and makes the generated HLO more closely match the future MHLO.

PiperOrigin-RevId: 419625471
Add division by zero check.
Drop support for NumPy 1.18.

Per NEP-29, we can drop NumPy 1.18 support on Dec 22, 2021.

The next NumPy deprecation will be 1.19 on Jun 21, 2022.

PiperOrigin-RevId: 419651428
Implement SciPy's RegularGridInterpolator

Resolves .
Update sphinx-related packages
Implement InferTypeOpInterface on TransposeOp (NFC)

This provide a convenient builder which does not require to provide the result
type.

PiperOrigin-RevId: 419740257
[sparse] add getitem stub in JAXSparse
add staging logic for polymorphic shapes in jaxprs

Co-authored-by: Dougal Maclaurin <dougalm@google.com>
remove axis name logic from Primitive / bind

Instead, just give AxisPrimitive its own bind function. This way the
logic is nicely separated by concerns. In addition, this factorization
will let us more easily experiment with other ways to find the top trace
(e.g. for assert_p in checkify).
Add missing annotations to lax
clean up WrappedFun.call_wrapped refs on exception

Functions decorated by linear_util.transformation or
transformation_with_aux are coroutines (with two yields). They can raise
exceptions, either before or after they yield the first time.

linear_util.WrappedFun.call_wrapped, which is responsible for driving
these coroutines, holds references to them.

These coroutines often manipulate global trace state (i.e.
core.thread_local_state.trace_state attributes) through context managers
(e.g. core.new_main or core.extend_axis_env). These context managers use
try/finally to clean up their state changes.

When an exception is raised in a linear_util.transformation coroutine,
it is raised into call_wrapped. If call_wrapped doesn't then clean up
all the references it has to coroutines, the cleanup finally clauses may
not execute until too late.

To ensure the finally clauses are called at the right time (before
exiting call_wrapped, basically as soon as possible) we need to clean up
the references to the coroutines in call_wrapped.

We had cleaned up these coroutine references when the coroutines raised
exceptions in their first part (i.e. before their first yield) in.
But we didn't do a similar cleanup for their second part (i.e. after
their first yield and before their second).

Co-authored-by: Roy Frostig <frostig@google.com>
introduce custom_vmap and a corresponding custom_vmap_p primitive

Adds an impl and a batching rule for the primitive.

Co-authored-by: Matthew Johnson <mattjj@google.com>
JVP rule for custom_vmap

Co-authored-by: Matthew Johnson <mattjj@google.com>
custom batching vmap tests
custom batching jvp tests
jnp.searchsorted: properly handle NaNs
Fix host_callback docs

There was a missing ':' causing invalid rendering of the docs.
Fix exception handling logic in C++ dispatch code.

The dispatch code was always raising its own exception when an exception
occurred during hashing of static arguments, even if the exception which
occurred was something like a KeyboardInterrupt.

fixes

PiperOrigin-RevId: 420292886
Temporarily revert a small part of https://github.com/google/jax/pull/8955 (in
partial_eval.py's _inline_literals) and skip new tests.

Some code seems to depend on whether we generate fresh invars (i.e. jaxpr input
binders) in that code. I'm not sure if it's a bug in the new JAX code or a bug in
the user code, but I'd like to un-break things while investigating.

PiperOrigin-RevId: 420296461
Fix a bug that promoted t to a complex in odeint, and modify a test so it would have caught it

In odeint, raise error if t is not an array of floats
Add scatter OOB error.
Suppress memorysanitizer for code that calls LAPACK kernels.

PiperOrigin-RevId: 420325456
[JAX] xmap: specify shardings only on the named dimensions in the weak mode.

PiperOrigin-RevId: 420341381
[sparse] generalize metadata argument in BCOO primitives
Lift non-contiguous mesh restriction for fully replicated values

PiperOrigin-RevId: 420423427
simpler jaxpr eqn params to bind params conversion

Final-style higher-order primitives, like call_p, xla_call_p (underlying
jit), xla_pmap_p (underlying pmap), and xmap_p (underlying xmap) have
slightly different bind signatures (while tracing) from their signatures
when they appear in jaxprs. In particular, their trace-time binds are
parameterized by a Python callable (or really a lu.WrappedFun)
representing the function to be applied, while in jaxpr eqns they are
parameterized by a jaxpr representing the same.

As a result, to round-trip from jaxpr to Python traceable, in
core.eval_jaxpr we have to convert from one parameter signature to the
other. (Basically we had to take the jaxpr and turn it into a Python
callable, via lu.wrap_init(partial(core.eval_jaxpr, call_jaxpr, ...)).)

However due to historical path dependence these conversion mechanisms
were all slightly distinct and kind of a mess. There was a case analysis
for call_jaxpr and map_jaxpr in core.eval_jaxpr_eqn (a helper function
created only because of this complexity), and there was a separate table
only used for the xmap rule.

In this PR we uniformized things! We basically only have a table (to
simplify core.eval_jaxpr), but instead of having it as a table we just
attached the rules to the different primitive classes (CallPrimitive,
MapPrimitive, and XmapPrimitive) to make things less error-prone (we
have a few different CallPrimitive instantiations, like call_p,
xla_call_p, named_call_p, and remat_call_p, and this way we don't have
to remember to populate the table separately for each).

This was actually a warmup simplification before we attempt to simplify
custom derivatives (to unify custom_jvp_call_p and
custom_jvp_call_jaxpr_p).

Co-authored-by: Roy Frostig <frostig@google.com>
Internal change

PiperOrigin-RevId: 420436636
add JAX_BACKEND_TARGET env var, fixes
Fix the index for fully replicated values. Each dimension of the aval should have an index. For example, if an aval has a shape (4, 4) then each dimension of the aval maybe sharded or replicated. Hence each dimension will have an index associated with it. For fully replicated avals, the dimensions are always replicated hence index is always `slice(None)`.

PiperOrigin-RevId: 420524929
Re-applying after it was rolled back.

PiperOrigin-RevId: 420545623
Re-applying after it was rolled back.

PiperOrigin-RevId: 420548165
Rolling forward again...

PiperOrigin-RevId: 420551242
[mhlo] Remove tuples from mhlo If/Case op.

PiperOrigin-RevId: 420554920
fix jaxpr type checking error messages

The pretty-printing changes a few months ago defined variable names
based on the state in JaxprPpContext instances. But that meant incorrect
variable names could be printed in jaxpr type checking error messages.

This commit correctly threads through the context so as to provide
error messages with coherent variable names.
fix broken links and update texts in thinking_in_jax.ipynb
Fix DeviceArray class reference
Enable JAX->MLIR lowering by default.

Before this change, JAX produces HLO using the XLA:Python builder APIs. After this change JAX produces MHLO using MLIR:Python APIs, and converts the MHLO to HLO for compilation with XLA. This is a lateral shift that should have little immediate impact, but unlocks a number of interesting opportunities in the future (e.g., mixing MLIR dialects within a JAX program).

[XLA:Python] Pass MLIR input as a std::string to work around https://github.com/pybind/pybind11/issues/2765. A better fix would be to update pybind11 but that is hitting Windows-related hurdles; for now, just avoid relying on reference lifetime extension.

Brax: update test seeds to avoid test failures. Additional constant folding (canonicalization) in the MHLO lowering path seems to cause small numerical differences.
PiperOrigin-RevId: 420755696
Fix spurious ""donated buffers were not usable"" warning when using MLIR.

PiperOrigin-RevId: 420782796
Disable a pjit test that is failing on GPU.

PiperOrigin-RevId: 420854561
Do shard indices calculations only once in callbacks by using GDA fast path because indices calculation is expensive as it happens on the global mesh (if the global mesh is large). The second calculation happens in _create_local_shards which is avoided if GDA fast path is enabled.

PiperOrigin-RevId: 420855232
Speed up deserialization by not doing the shard indices calculation twice. This calculation is expensive because it happens on the global mesh size scale.

PiperOrigin-RevId: 420855444
de-duplicate util.memoize and util.cache

The only difference between the two was that
jax.config.jax_check_tracer_leaks disables the caching under util.cache
but not under util.memoize.

We could add that as an option on the same function if it turns out to
be important, but it seems unnecessary. Moreover there are only two
callers (in dtypes.py and in batching.py).

Co-authored-by: Skye Wanderman-Milne <skyewm@google.com>
[JAX] Fix spurious inequality for two apparently equal PyTreeDefs.

When constructed via one path we were filling in the .custom field of nodes that weren't custom types.

Fixes https://github.com/google/jax/issues/9066

PiperOrigin-RevId: 420858917
Add tests for 0d fully replicated scalar input to pjit.

PiperOrigin-RevId: 420884601
Copybara import of the project:

--
4fcdadbfb3f4c484fd4432203cf13b88782b9311 by Matthew Johnson <mattjj@google.com>:

add jax.ensure_compile_time_eval to public api

aka jax.core.eval_context

COPYBARA_INTEGRATE_REVIEW=https://github.com/google/jax/pull/7987 from google:issue7535 4fcdadbfb3f4c484fd4432203cf13b88782b9311
PiperOrigin-RevId: 420928687
checkify: tweak some organization and names
fix id_tap jit example
introduce custom_transpose and a corresponding primitive

Includes rules for impl, transpose, abstract eval, and xla/mlir
translation.
Benchmarks for GDA. Also move `create_global_mesh` to test_utils since it was replicated in a lot of places.

PiperOrigin-RevId: 421142813
enable custom transformation ""stacking""

Make custom transformation wrappers such as `custom_jvp` behave
interchangeably when directly composed. For example, enable the
following usage:

```
@jax.custom_jvp
@jax.custom_transpose
def f(x): ...

@f.def_transpose
def f_t(y): ...

@f.defjvp
def f_jvp(x, tx): ...
```

In particular:

* Forward `def*` methods on custom transformations.

* Have unary `def*` methods return their argument so that, when used
  as decorators, they do not replace their target with `None`.

* Fix a bug in the use of `functools.update_wrapper`: previously a
  wrapper would overwrite its own attributes with those of the target
  callable (including its reference to the target callable).
fix a custom_vjp post_process bug, related cleanups

related to, doesn't completely fix it
Add a jax2tf bfloat16 backprop test
Fix tf backprop through bfloat16 jax2tf
Remove trailing whitespace
Resolves issue 8744
[JAX] Add support for generating ""equation profiles"" in JAX.

An ""equation profile"" is a pprof profile that maps equations in a jaxpr to the Python stack traces at which they were generated. Pprof can be used a number of ways to analyze and visualize the result.

For example, for a profile from a Resnet-50 training step from Flax, we can identify the most common primitives:
```
$ pprof --tags /tmp/myprof
Main binary filename not available.
 primitive: Total 6062.0
            1509.0 (24.89%): mul
             936.0 (15.44%): add
             589.0 ( 9.72%): reshape
             492.0 ( 8.12%): div
             485.0 ( 8.00%): broadcast_in_dim
             330.0 ( 5.44%): reduce_sum
             322.0 ( 5.31%): integer_pow
             230.0 ( 3.79%): add_any
             174.0 ( 2.87%): convert_element_type
             160.0 ( 2.64%): select
             158.0 ( 2.61%): conv_general_dilated
             116.0 ( 1.91%): sub
             110.0 ( 1.81%): eq
             110.0 ( 1.81%): neg
             104.0 ( 1.72%): max
              53.0 ( 0.87%): rsqrt
              52.0 ( 0.86%): rev
              49.0 ( 0.81%): custom_jvp_call_jaxpr
              49.0 ( 0.81%): gt
               5.0 (0.082%): xla_call
               4.0 (0.066%): min
               3.0 (0.049%): dot_general
               3.0 (0.049%): lt
               2.0 (0.033%): cos
               2.0 (0.033%): exp
               2.0 (0.033%): iota
               2.0 (0.033%): log
               2.0 (0.033%): psum
               2.0 (0.033%): reduce_max
               2.0 (0.033%): stop_gradient
               1.0 (0.016%): argmax
               1.0 (0.016%): reduce_window_max
               1.0 (0.016%): select_and_scatter_add
               1.0 (0.016%): transpose
               1.0 (0.016%): xla_pmap
```

Or the lines of code that generated the most equations:
```
$ pprof  --text /tmp/myprof
Main binary filename not available.
Type: equations
Showing nodes accounting for 6038, 99.60% of 6062 total
Dropped 5 nodes (cum <= 30)
      flat  flat%   sum%        cum   cum%
      1537 25.35% 25.35%       1537 25.35%  _compute_stats
      1484 24.48% 49.84%       1484 24.48%  _normalize
       849 14.01% 63.84%       6062   100%  __call__
       644 10.62% 74.46%        644 10.62%  <unknown>
       483  7.97% 82.43%        483  7.97%  <unknown>
       392  6.47% 88.90%       6061   100%  train_step
       324  5.34% 94.24%        324  5.34%  <unknown>
       161  2.66% 96.90%        161  2.66%  <unknown>
        57  0.94% 97.84%       4292 70.80%  loss_fn
        52  0.86% 98.70%         52  0.86%  schedule
        39  0.64% 99.34%         39  0.64%  softmax_cross_entropy
         8  0.13% 99.47%         30  0.49%  compute_metrics
         6 0.099% 99.57%         61  1.01%  cross_entropy_loss
         1 0.016% 99.59%       1321 21.79%  apply_gradients
         1 0.016% 99.60%       6062   100%  train_and_evaluate
         0     0% 99.60%       6062   100%  <unknown>
         0     0% 99.60%       6062   100%  __init__
         0     0% 99.60%       3872 63.87%  _call_wrapped_method
         0     0% 99.60%       6062   100%  _run_and_get_tests_result
         0     0% 99.60%       6062   100%  _run_code_in_main
         0     0% 99.60%       6062   100%  _run_in_app
         0     0% 99.60%       6062   100%  _run_main
         0     0% 99.60%       3872 63.87%  apply
         0     0% 99.60%        161  2.66%  apply_updates
         0     0% 99.60%       6062   100%  main
         0     0% 99.60%       6062   100%  main_function
         0     0% 99.60%       6062   100%  run
         0     0% 99.60%       6062   100%  runTests
         0     0% 99.60%       6062   100%  run_filename_as_main
         0     0% 99.60%       6062   100%  run_tests
         0     0% 99.60%       3872 63.87%  scope_fn
         0     0% 99.60%       6062   100%  test_train_and_evaluate
         0     0% 99.60%       1159 19.12%  update_fn
         0     0% 99.60%       3872 63.87%  wrapped_fn
         0     0% 99.60%       3872 63.87%  wrapped_module_method
         0     0% 99.60%       3872 63.87%  wrapper
```

I highly recommend the pprof HTTP visualization, using --tagleaf to introduce pseudoframes for each primitive, and to use the ""flame"" visualization.
```
pprof --tagleaf=primitive --http=:8080 myprof
```

[XLA:Python] Add helpers to Traceback and for working with pprof profiles.

* Define hash and equality operators on Tracebacks.
* Add functions for converting JSON to and from pprof profile protocol buffers.
* Add a helper method that exposes PyCode_Addr2Line to Python.

PiperOrigin-RevId: 421395346
add `random.default_prng_impl` to retrieve the default PRNG implementation
[jax2tf] Add jax2tf_associative_scan_reductions flag

This flag allows users to match the JAX performance for
associative reductions in CPU.
See README.md for details.
PartitionSpec: allow partially specified sharding

PiperOrigin-RevId: 421603194
Optimizations for GDA to make creating GDA faster.

* Use math to figure out the replica id. Using `_hashed_index` (note that this is a function and not `_HashableIndex` which is a class which does not exist anymore) is 1.5 - 2 times slower than using math. markdaoust@ helped with the math here (going to office has its own perks :) )

* Get rid of `_HashableIndex` class and replace it with a function `_hashed_index`. Dataclass is extremely slow.

* Only calculate global_mesh.local_devices once. Even though its a cached property (but its after python 3.8)

```
name                                           old time/op             new time/op             delta
gda_construction_callback_(4, 2)_['x', 'y']    4.77ms ± 5%             4.74ms ± 5%     ~           (p=0.316 n=14+17)
gda_construction_raw_(256, 8)_['x', 'y']       17.9ms ± 5%              9.0ms ± 2%  -49.92%          (p=0.008 n=5+5)
indices_replica_id_calc_(256, 8)_['x', 'y']    11.4ms ± 2%              2.9ms ± 2%  -74.52%          (p=0.008 n=5+5)
gda_construction_callback_(4, 2)_[None]        34.0ms ±20%             30.5ms ± 2%     ~             (p=0.413 n=5+4)
gda_construction_raw_(256, 8)_[None]           15.9ms ± 2%              7.7ms ± 3%  -51.56%          (p=0.008 n=5+5)
indices_replica_id_calc_(256, 8)_[None]        9.39ms ± 3%             1.74ms ± 2%  -81.44%          (p=0.008 n=5+5)
gda_construction_callback_(4, 2)_['x']         8.87ms ± 2%             8.92ms ± 3%     ~             (p=0.841 n=5+5)
gda_construction_raw_(256, 8)_['x']            16.4ms ± 2%              7.7ms ± 1%  -52.66%          (p=0.008 n=5+5)
indices_replica_id_calc_(256, 8)_['x']         9.85ms ± 1%             1.90ms ± 2%  -80.68%          (p=0.008 n=5+5)
gda_construction_callback_(4, 2)_['y']         15.9ms ± 3%             16.0ms ± 5%     ~             (p=0.690 n=5+5)
gda_construction_raw_(256, 8)_['y']            15.8ms ± 3%              7.6ms ± 1%  -52.04%          (p=0.008 n=5+5)
indices_replica_id_calc_(256, 8)_['y']         9.29ms ± 1%             1.78ms ± 1%  -80.79%          (p=0.008 n=5+5)
gda_construction_callback_(4, 2)_[('x', 'y')]  4.65ms ± 2%             4.62ms ± 3%     ~            (p=0.440 n=5+10)
gda_construction_raw_(256, 8)_[('x', 'y')]     18.6ms ± 3%              9.7ms ± 5%  -47.76%          (p=0.008 n=5+5)
indices_replica_id_calc_(256, 8)_[('x', 'y')]  11.8ms ± 4%              3.5ms ± 2%  -70.28%          (p=0.008 n=5+5)
gda_construction_raw_(128, 8)_['x', 'y']       8.54ms ± 1%             4.03ms ± 2%  -52.84%          (p=0.008 n=5+5)
indices_replica_id_calc_(128, 8)_['x', 'y']    5.40ms ± 4%             1.10ms ± 1%  -79.69%          (p=0.008 n=5+5)
gda_construction_raw_(4, 2)_['x', 'y']          173µs ± 1%              193µs ± 3%  +11.63%          (p=0.008 n=5+5)
indices_replica_id_calc_(4, 2)_['x', 'y']       127µs ± 1%              147µs ± 1%  +15.57%          (p=0.008 n=5+5)
```

PiperOrigin-RevId: 421623147
lax.sort: regularize handling of -0.0 and -NaN
searchsorted: use correct ordering for complex inputs
jnp.unique: properly handle NaN values
cache initial-style jaxpr transformations
Add ensure_compile_time_eval docstring to docs
einsum: clarify use of precision.
Split lax_control_flow_test into three separate tests.

Split the custom root and custom linear solve tests into separate test files.

Disable two slow custom linear solve tests.
Add a few jit decorators to slow tests in lax_control_flow_test.

PiperOrigin-RevId: 421901487
Canonicalize parsed partition spec before passing to lower_mesh_computation. Creates a new data structure `CanonicalizedParsedPartitionSpec` which strips empty tuples from the end of parsed partitions to canonicalize the specs so that `P(None)` and `None` for example in in_axis_resources are equivalent.

I have been bit by this 3 times and its about time I fix this. This also fixes a bug where fully replicated values are allowed with non-contiguous meshes (in this case P(None) and None) were not equal.

PiperOrigin-RevId: 421918164
[sparse] add bcoo_sort_indices
Checkify: add way to disable categories of errors.

By default only user_asserts are lifted into the checked function.
lax.dynamic_update_slice: fix batching rule
jax2tf: disable shape_poly_test for dynamic_update_slice
Speed up check_jaxpr().

(check_jaxpr() is only used when debugging.)

Don't eagerly pretty print jaxprs: only do so if we are going to raise an error.
Don't eagerly form error messages. Delete typecheck_assert.

PiperOrigin-RevId: 422594126
add caching to partial_eval_jaxpr

follow-up to
Copybara import of the project:

--
06deb73c9be01cedc000efe7b3eb72d68615471a by Matthew Johnson <mattjj@google.com>:

cache initial-style jaxpr transformations

COPYBARA_INTEGRATE_REVIEW=https://github.com/google/jax/pull/9196 from mattjj:issue3847 06deb73c9be01cedc000efe7b3eb72d68615471a
PiperOrigin-RevId: 422604879
update version and changelog for pypi
Correct lax.while_loop type annotation
Only use config.x64_enabled as the memo cache key for canonicalize_dtype, not any other fields.

This saves the time to repeatedly build a tuple as a cache key. Reduces the time for CustomLinearSolveTest.test_custom_linear_solve_pytree on my workstation from 110s to 85s.

PiperOrigin-RevId: 422632700
Cache the expensive computations in GDA. For example `get_shard_indices_replica_ids` can be the same for multiple variables in a neural network (global_shape, mesh_axes and global_mesh) can be the same

Note that the first time will be a little slow. The below timings you are seeing shows the caching working because the benchmark is running for multiple iterations and then the time is averaged over the number of iterations.

```
name                                                     time/op
gda_construction_callback_(4, 2)_['x', 'y']              4.50ms ±10%
gda_construction_raw_(256, 8)_['x', 'y']                 5.82ms ± 2%
indices_replica_id_calc__uncached_(256, 8)_['x', 'y']    2.95ms ± 6%
indices_replica_id_calc_cached_(256, 8)_['x', 'y']       28.7µs ± 1%
gda_construction_callback_(4, 2)_[None]                  31.9ms ±20%
gda_construction_raw_(256, 8)_[None]                     5.85ms ± 5%
indices_replica_id_calc__uncached_(256, 8)_[None]        1.75ms ± 1%
indices_replica_id_calc_cached_(256, 8)_[None]           29.0µs ± 4%
gda_construction_callback_(4, 2)_['x']                   8.40ms ± 4%
gda_construction_raw_(256, 8)_['x']                      5.48ms ± 2%
indices_replica_id_calc__uncached_(256, 8)_['x']         1.89ms ± 1%
indices_replica_id_calc_cached_(256, 8)_['x']            29.0µs ± 4%
gda_construction_callback_(4, 2)_['y']                   15.3ms ± 6%
gda_construction_raw_(256, 8)_['y']                      5.66ms ± 5%
indices_replica_id_calc__uncached_(256, 8)_['y']         1.82ms ± 2%
indices_replica_id_calc_cached_(256, 8)_['y']            29.4µs ± 3%
gda_construction_callback_(4, 2)_[('x', 'y')]            4.29ms ± 5%
gda_construction_raw_(256, 8)_[('x', 'y')]               5.61ms ± 7%
indices_replica_id_calc__uncached_(256, 8)_[('x', 'y')]  3.81ms ±10%
indices_replica_id_calc_cached_(256, 8)_[('x', 'y')]     29.0µs ± 5%
gda_construction_raw_(128, 8)_['x', 'y']                 2.42ms ± 1%
indices_replica_id_calc__uncached_(128, 8)_['x', 'y']    1.14ms ±11%
indices_replica_id_calc_cached_(128, 8)_['x', 'y']       19.9µs ± 1%
gda_construction_raw_(4, 2)_['x', 'y']                   46.7µs ± 0%
indices_replica_id_calc__uncached_(4, 2)_['x', 'y']       153µs ± 4%
indices_replica_id_calc_cached_(4, 2)_['x', 'y']         11.1µs ± 8%
gda_construction_raw_(16, 4)_['x', 'y']                   164µs ± 2%
indices_replica_id_calc__uncached_(16, 4)_['x', 'y']      212µs ± 3%
indices_replica_id_calc_cached_(16, 4)_['x', 'y']        11.3µs ± 1%
gda_construction_raw_(16, 4)_[('x', 'y')]                 163µs ± 2%
indices_replica_id_calc__uncached_(16, 4)_[('x', 'y')]    210µs ± 2%
indices_replica_id_calc_cached_(16, 4)_[('x', 'y')]      11.6µs ± 8%
```

PiperOrigin-RevId: 422639127
converting to use switch
custom vmap: abstract eval and translation rules

Also fix and test a tree-flattening bug in the custom_vmap batching
rule.
changed to use argwhere
switching to use jnp.digitize for index identification
remove cpu platform setting in quickstart

fixes
[JAX] Change signature of .mhlo() method on compiler IR objects to return an ir.Module object instead of its string representation.

It isn't free to pretty-print IR, so it's best to avoid it unless necessary. In addition, by returning an IR object, the user is now free to, say, print it with different options.

For example, one can now write things like:

```
In [1]: import numpy as np, jax, jax.numpy as jnp
In [2]: m = jax.jit(lambda x: x + jnp.array(np.arange(1000))).lower(7.).compiler_ir(dialect='mhlo')
In [3]: m.operation.print(large_elements_limit=10)
module @jit__lambda_.4 {
  func public @main(%arg0: tensor<f32>) -> tensor<1000xf32> {
    %0 = mhlo.constant opaque<""_"", ""0xDEADBEEF""> : tensor<1000xi32>
    %1 = ""mhlo.convert""(%0) : (tensor<1000xi32>) -> tensor<1000xf32>
    %2 = ""mhlo.broadcast_in_dim""(%arg0) {broadcast_dimensions = dense<> : tensor<0xi64>} : (tensor<f32>) -> tensor<1000xf32>
    %3 = mhlo.add %2, %1 : tensor<1000xf32>
    return %3 : tensor<1000xf32>
  }
}
```

Fixes https://github.com/google/jax/issues/9226

PiperOrigin-RevId: 422855649
add origin info to leaked tracer error

add origin info to vmap tracers (BatchTracer)
checkify: fix and test post_process_call/map
Simplify `gda_fast_path_args` by replacing local_idx_rid with global_indices_replica_id.

```
name                                                    old time/op             new time/op             delta
gda_construction_callback_(4, 2)_['x', 'y']             4.26ms ± 4%             4.18ms ± 3%  -1.86%        (p=0.011 n=17+17)
gda_construction_raw_(256, 8)_['x', 'y']                5.68ms ± 3%             5.57ms ± 3%    ~             (p=0.421 n=5+5)
indices_replica_id_calc_uncached_(256, 8)_['x', 'y']    2.89ms ± 4%             2.94ms ± 5%    ~             (p=0.222 n=5+5)
indices_replica_id_calc_cached_(256, 8)_['x', 'y']      28.2µs ± 1%             28.1µs ± 0%    ~             (p=0.690 n=5+5)
gda_construction_callback_(4, 2)_[None]                 30.5ms ± 9%             31.1ms ±18%    ~             (p=1.000 n=5+5)
gda_construction_raw_(256, 8)_[None]                    5.75ms ± 5%             5.38ms ± 4%  -6.58%          (p=0.016 n=5+5)
indices_replica_id_calc_uncached_(256, 8)_[None]        1.77ms ± 8%             1.75ms ± 2%    ~             (p=0.841 n=5+5)
indices_replica_id_calc_cached_(256, 8)_[None]          28.1µs ± 1%             28.1µs ± 1%    ~             (p=0.841 n=5+5)
gda_construction_callback_(4, 2)_['x']                  8.29ms ± 3%             8.14ms ± 3%    ~             (p=0.095 n=5+5)
gda_construction_raw_(256, 8)_['x']                     5.46ms ± 2%             5.23ms ± 3%  -4.23%          (p=0.008 n=5+5)
indices_replica_id_calc_uncached_(256, 8)_['x']         1.89ms ± 2%             1.90ms ± 2%    ~             (p=0.841 n=5+5)
indices_replica_id_calc_cached_(256, 8)_['x']           28.1µs ± 1%             28.1µs ± 0%    ~             (p=0.548 n=5+5)
gda_construction_callback_(4, 2)_['y']                  15.0ms ± 3%             14.8ms ± 3%    ~             (p=0.421 n=5+5)
gda_construction_raw_(256, 8)_['y']                     5.46ms ± 2%             5.14ms ± 4%  -5.97%          (p=0.008 n=5+5)
indices_replica_id_calc_uncached_(256, 8)_['y']         1.81ms ± 2%             1.81ms ± 2%    ~             (p=1.000 n=5+5)
indices_replica_id_calc_cached_(256, 8)_['y']           28.1µs ± 1%             28.1µs ± 1%    ~             (p=1.000 n=5+5)
gda_construction_callback_(4, 2)_[('x', 'y')]           4.11ms ± 3%             4.05ms ± 2%    ~            (p=0.113 n=9+10)
gda_construction_raw_(256, 8)_[('x', 'y')]              5.47ms ± 5%             5.14ms ± 3%  -6.12%          (p=0.032 n=5+5)
indices_replica_id_calc_uncached_(256, 8)_[('x', 'y')]  3.70ms ± 1%             3.59ms ± 1%  -3.01%          (p=0.016 n=4+5)
indices_replica_id_calc_cached_(256, 8)_[('x', 'y')]    28.4µs ± 4%             28.1µs ± 0%    ~             (p=0.421 n=5+5)
gda_construction_raw_(128, 8)_['x', 'y']                2.46ms ± 3%             2.25ms ± 1%  -8.76%          (p=0.008 n=5+5)
indices_replica_id_calc_uncached_(128, 8)_['x', 'y']    1.11ms ± 1%             1.11ms ± 1%    ~             (p=0.690 n=5+5)
indices_replica_id_calc_cached_(128, 8)_['x', 'y']      19.9µs ± 7%             19.6µs ± 1%    ~             (p=1.000 n=5+5)
gda_construction_raw_(4, 2)_['x', 'y']                  46.5µs ± 1%             43.5µs ± 1%  -6.54%          (p=0.008 n=5+5)
indices_replica_id_calc_uncached_(4, 2)_['x', 'y']       149µs ± 1%              149µs ± 2%    ~             (p=0.690 n=5+5)
indices_replica_id_calc_cached_(4, 2)_['x', 'y']        10.8µs ± 2%             10.8µs ± 1%    ~             (p=0.690 n=5+5)
gda_construction_raw_(16, 4)_['x', 'y']                  162µs ± 1%              152µs ± 1%  -6.39%          (p=0.008 n=5+5)
indices_replica_id_calc_uncached_(16, 4)_['x', 'y']      209µs ± 1%              208µs ± 1%    ~             (p=0.841 n=5+5)
indices_replica_id_calc_cached_(16, 4)_['x', 'y']       11.3µs ± 2%             11.3µs ± 1%    ~             (p=0.690 n=5+5)
gda_construction_raw_(16, 4)_[('x', 'y')]                162µs ± 1%              152µs ± 1%  -6.45%          (p=0.008 n=5+5)
indices_replica_id_calc_uncached_(16, 4)_[('x', 'y')]    209µs ± 1%              208µs ± 1%    ~             (p=0.421 n=5+5)
indices_replica_id_calc_cached_(16, 4)_[('x', 'y')]     11.3µs ± 2%             11.3µs ± 0%    ~             (p=0.690 n=5+5)
```

PiperOrigin-RevId: 422926727
Check the gda pjit mesh mismatch inside pjit and not during _shard_arg which is shared by pmap, xmap and pjit. For pmap, pjit mesh has nothing to do with it. So this error should not be raised.

PiperOrigin-RevId: 422929245
Set unspecified vmap dims partition to unconstrained

PiperOrigin-RevId: 422949080
pjit: add test for basic static_argnums
[jax] completely truncate trivial filtered tracebacks
[jaxlib] allow empty traceback overwrites

If an error is raised within JAX (under an API boundary frame), but prior to entering any user code, then all frames in between are JAX-internal. In this case, our filtered traceback ought to be trivial, i.e. empty of any frames at all.

Prior to this change, we did not handle this edge case consistently with the non-trivial case: any trivial filtered traceback was modified to comprise a single JAX-internal frame (namely, the inner-most one). With this change, the filtered traceback can be completely empty and result in omission of all JAX-internal frames.

Before:

```
Traceback (most recent call last):
  File ""tb.py"", line 10, in <module>
    jit(f)(A())
  File ""jax/_src/api.py"", line 2850, in _check_arg
    raise TypeError(f""Argument '{arg}' of type {type(arg)} is not a valid JAX type."")
TypeError: Argument ... is not a valid JAX type.
```

After:

```
Traceback (most recent call last):
  File ""tb.py"", line 10, in <module>
    jit(f)(A())
TypeError: Argument ... is not a valid JAX type.
```
PiperOrigin-RevId: 422962976
NotImplementedError for new_checkpoint-of-xmap

Previously this was getting a default behavior which caused surprising
errors downstream.
Change the default IR dialect returned by .compiler_ir() to MHLO.

PiperOrigin-RevId: 423091674
Fix type annotation in pxla.py MeshComputation.from_hlo().

PiperOrigin-RevId: 423094564
re-enable tests of

f35014d had to revert part of because of a surprising downstream
breakage (relying on internal APIs). That breakage was isolated to how
_inline_literals handled invars.

The approach was a temporary one anyway: it relied on the fact that we
expect only to bind axis size variables at the top level and hence if we
didn't rename the input binders in _inline_literals we wouldn't need to
substitute new variables for any variables appearing in types. But a
more general approach would be to perform the necessary substitution
everywhere; after all, we might be inlining a literal into an axis size!

This commit takes the more general approach. It may fix the downstream
breakage automatically, just by virtue of being different; if not, I'll
figure out how to fix downstream.
jnp.angle: support deg keyword
Copybara import of the project:

--
4e9782b2da246b809a80a61abd97664145ad58e3 by Jake VanderPlas <jakevdp@google.com>:

Make array_copy a primitive

Co-authored-by: Matthew Johnson <mattjj@google.com>
COPYBARA_INTEGRATE_REVIEW=https://github.com/google/jax/pull/9264 from jakevdp:copy-primitive 4e9782b2da246b809a80a61abd97664145ad58e3
PiperOrigin-RevId: 423328684
generate bit widths other than 32 in `lax.rng_bit_generator`

Three parts:

* The underlying XLA operation (RngBitGenerator) doesn't support
  generating bit widths 8 and 16, so generate 32 bits and truncate in
  the translation rule.

* Canonicalize the dtype given to `rng_bit_generator` to avoid
  requests for U64s when x64 mode is off.

* Test the effect of this on PRNG implementations backed by
  `rng_bit_generator`. Namely, their `random_bits` method should now
  support all bit widths, and their keys can be used in samplers such
  as `random.uniform` and `random.randint` to generate 16-bit floats,
  and {8,16}-bit integers respectively.
Add GDA to the API pages
whitespace changes
Make line length equal
Add a blank line
Fix warnings
Fix warnings
GSDA -> GDA
Add more documentation for buffer donation

Fixes:
[jax2tf] Improve shape polymorphism for scatter with CLIP mode

Fixes:
[jax2tf] Move the no_xla_limitations documentation

Put it in the g3doc directory, along with the other pieces
of jax2tf documentation. This enables special documentation
features in the Google repo.
jnp.[nan]argmin/max: implement keepdims
Fix auto-generated docstrings for JIT-compiled functions
Fixes
DOC: pin docutils==0.16 to restore bullets in lists
disable implicit rank promotion for api_test
Disallow scatter_mul gradients if unique_indices=False.

The current gradients are incorrect if unique_indices=False. No gradient is better than an incorrect gradient.

https://github.com/google/jax/issues/9296

PiperOrigin-RevId: 423917753
jax_jit_test: inherit from JaxTestCase
Fix `max_squarings` in `expm`
jax.numpy: add where and initial arguments to nan reductions
[sparse] accept nse argument to sparse.empty()
[sparse] avoid implicit rank promotion
developer doc: more info on pre-commit
Re-enable PJIT test that was disabled now XLA has been fixed.

PiperOrigin-RevId: 424143008
[JAX] Require exact type equality using `is` for static arguments.

Fixes https://github.com/google/jax/issues/9273.

PiperOrigin-RevId: 424182826
Make forces_retrace tests more robust
[JAX:IREE] Fix bitrot in iree plugin for JAX.

The compiler driver appears not to be a thing in the IREE API any more. But it also appears not to be needed.

PiperOrigin-RevId: 424190139
jaxpr staging: only one tracer per jaxpr variable
Make lapack symbols strong in lapack_kernels

The lapack_kernels target has dual use as a jax kernel for the lapack
functions obtained via SciPy when running in a Python context (via pybind),
and as a jax kernel for lapack functions linked directly for use in a
pure C++ context.

The prior solution to this problem was to define the lapack symbols with
the weak attribute to make the linking with lapack optional (not sure why
exactly, since SciPy uses the exact same lapack library). However, this
causes C++ applications to silently forgo the linking with lapack and
simply leave those symbols as null pointers. Whether that happens or
not seems to be dependent on link order and dependency layering. In
short, this solution does not work half of the time, for seemingly
arbitrary reasons.

This is fixed here by adding a separate shim library that lists out
the lapack symbols as strong symbols and initializes the internal
function pointers of the kernels. Linking with this new library pulls
in the correct dependencies reliably. On the python side (with SciPy),
you simply link only with the basic lapack_kernels target.

PiperOrigin-RevId: 424208059
Update `get_compile_options` to accept Device objects.
[JAX:IREE] Handle ImportError when iree isn't installed.

PiperOrigin-RevId: 424334198
linalg_test: disable implicit rank promotion
testDisableNumpyRankPromotion: make test more robust
README: clarify installation instructions for Colab TPU
test_util: export with_config
Explicit raise when comparing GDA equality.

The general idea is that, comparing a GDA equality is ambiguous by its nature. It can mean comparing local_shards within the current client, or comparing the global array which could be expensive and dangerous.
We will delegate this to users and have them explicitly specify the intention instead.

PiperOrigin-RevId: 424484191
Fix flaky testcase LaxTest.testConvTransposePaddingList on GPU.
Update XLA for jaxlib 0.1.76 release.","New features
Includes precompiled SASS for NVidia compute capability 8.0 GPUS
(e.g. A100). Removes precompiled SASS for compute capability 6.1 so as not
to increase the number of compute capabilities: GPUs with compute capability
6.1 can use the 6.0 SASS.
With jaxlib 0.1.76, JAX uses the MHLO MLIR dialect as its primary target compiler IR
by default.
Breaking changes
Support for NumPy 1.18 has been dropped, per the deprecation policy.
Please upgrade to a supported NumPy version.
Bug fixes
Fixed a bug where apparently identical pytreedef objects constructed by different routes
do not compare as equal ().
The JAX jit cache requires two static arguments to have identical types for a cache hit ()."
"Increase precision in LaxBackedScipySpatialTransformTests.testRotationApply

Otherwise the test fails due to small numerical differences.

PiperOrigin-RevId: 538921774
Update versions and changelog post 0.4.12 release
Use `num_tokens` consistently

PiperOrigin-RevId: 538941855
Fix some test failures under H100.

It seems that under H100 matmul precisions are a little lower by default than they historically were on A100. Opt out of tensorcore matmuls for tests that fail due to precision issues if they are enabled.

Happily, this also allows us to remove a number of TPU special cases for the same reason.

PiperOrigin-RevId: 539101155
Do not register the ""interpreter"" backend by default.

This is a dummy backend useful only for debugging that uses XLA's HLO interpreter. It's doubtful many people care about this or even know it exists.

During initialization this plugin spawns two thread pools, which may allocate 2x# cores threads, which is wasteful if they are never used. This may contribute to some users hitting thread limits on their machines.

PiperOrigin-RevId: 539107641
Disable brittle jax2tf test

PiperOrigin-RevId: 539112494
add explanation: `switch` will be converted to `select` when transformed with `vmap` in doc
Use cloudpickle for serializing host callbacks

Add `cloudpickle` as an optional third-party dependency. This module is used
for serializing host callbacks for TPU computations on alternative JAX
backends, and currently not required or used on the standard JAX.

PiperOrigin-RevId: 539165436
Fix test failures in JAX under NumPy 1.25.0rc1.

`jnp.finfo(...)` of an Array type yields:

```
TypeError: unhashable type: 'ArrayImpl'
```

However, `np.finfo(...)` no longer accepts NumPy arrays as input either, so it would be consistent to require the user to pass a dtype where they are currently passing an array.

PiperOrigin-RevId: 539174254
Add missing %s parameter to error message in _cache_write.

PiperOrigin-RevId: 539188601
Fix `BatchTrace.process_call`.

In the line below, `dims_out` is a thunk that produces output dimensions when called.

```
f_, dims_out = batch_subtrace(f, self.main, tuple(dims))
```

However, `BatchTrace.process_call` forgets to call `dims_out()` and uses `dims_out`
instead, which leads to an error:

```
  File "".../jax/_src/interpreters/batching.py"", line 388, in process_call
    return [BatchTracer(self, v, d, src) for v, d in zip(vals_out, dims_out)]
                                                     ^^^^^^^^^^^^^^^^^^^^^^^
jax._src.traceback_util.UnfilteredStackTrace: TypeError: 'function' object is not iterable
```

Calling `dims_out()` like other `BatchTrace` methods fixes the issue.
Remove the monkey patch in jax2tf by moving the function to mlir.py

PiperOrigin-RevId: 539266562
remove unused variable in lax.scan test

The variable was used to parameterize tests, now replaced by another.
Fix jax2tf graph_serialization irfft length issue.

PiperOrigin-RevId: 539405879
[jax2tf] Remove the deprecated experimental_native_lowering option.

This parameter to jax2tf.convert has been deprecated and had no
effect since March 2023.

Also includes some minor cleanup in the management of the default value
for the `native_serialization` flag.

PiperOrigin-RevId: 539577037
Add jax.tree_util.tree_leaves_with_path(tree).

PiperOrigin-RevId: 539609052
Better pprint rule for check_p primitive.

PiperOrigin-RevId: 539703344
No need to return jaxpr from common_infer_params since it is already in `params`

PiperOrigin-RevId: 539715375
Return PositionalSharding instead of GSPMDSharding in custom_partitioning when mesh is not defined

PiperOrigin-RevId: 539719517
Fix cuda12 pip install.

The wheel is now called cudnn89.

Fixes
Update Windows CI.

For the wheel_win_x64.yml builds:
* Don't trigger a full wheel build on push. The branch name was wrong anyway (""master"" instead of ""main""), but likely this action is too expensive to for each PR.
* Disable builds on release for the moment, until we have validated this approach.

Add a new nightly and manually-triggerable Windows build, for a specific Python version.
Don't include the --subcommands on the Bazel command line for Windows CI.

This makes the output very verbose.
build/BUILD.bazel: remove unused import
Increase absolute tolerances in eigh test.

Plumb an atol= option into back_compat jax2tf tests.

PiperOrigin-RevId: 539789381
Change metadata_test to tolerate paths with backslashes.

Fixes a test failure under Windows.

The backslashes end up doubled in the MLIR string because of escaping.
[jax2tf] Add native_lowering_disabled_checks parameter to jax2tf.convert.

Previously, we had a boolean `native_serialization_strict_checks` parameter
that was disabling all safety checks. This mechanism had several
disadvantages:

  * the mechanism did not differentiate between different safety checks.
    E.g., in order to disable checking of the custom call targets, one
    had to disable checking for all custom call targets, and also the
    checking that the serialization and execution platforms are the same.
  * the mechanism operated only at serialization time. Now, the
    XlaCallModule supports a `disabled_checks` attribute to control
    which safety checks should be disabled.

Here we replace the `native_serialization_strict_checks` with
`native_serialization_disabled_checks`, whose values are sequences
of disabled check descriptors.
Checkify: release memory by deleting references to variables after last use.

This is a memory optimization that can be applied to all jaxpr interpreters that
execute op-by-op computation (ie. computation that has not been staged out to
compilation). We loop through the equations of the jaxpr and write/read
variables from an environment. The environment currently holds a reference to
variables throughout the whole evaluation of the jaxpr, even after the variable
is no longer needed. When the variables are backed by large on-device buffers
(which is the case when executing op-by-op) this results in much higher memory
peaks than the user would expect.

This change adds an optimization which removes all variables that have been used
for the last time from the environment after every equation execution. This
optimization should be factored out and added to each jaxpr interpreter, which
will be done in a follow-up.

Note that the most-used jaxpr interpreter, which is reverse-AD, does not have
this issue because it pops every cotangent variable it reads!
(https://github.com/google/jax/blob/9816a6a905d798faad44b3f7aa1dfe8f5ca66433/jax/_src/interpreters/ad.py#L208)

PiperOrigin-RevId: 539942844
Use larger runners for Windows CI.

Simplify build command line: we don't need to work around low-memory low-CPU configurations.
Update OS in windows CI to use 16 core variant.
Try another name for the Windows CI runner.
Fix command line arguments to build.py.
[shape_poly] Improve compile-time shape checking.

JAX shape polymorphism relies on implicit assumptions.
For example, when tracing with input specification `(a, a)`,
we assume that the first two dimensions have the same size
greater or equal to 1.

Here we extend the checking that these assumptions hold. When
we call an `Exported` module from jax, with `jax_export.call_exported`
we check these assumptions statically. However, when we
stage an `Exported` using `XlaCallModule` to be called from
TensorFlow, or when we use TF graph serialization we need
to check these assumptions when we execute and compile
the op (that is when the shapes are available).

To prepare for this compile-time shape checking we add
`Exported.shape_check_module` to produce a serialized
MLIR module containing the shape checking code. This
will be added in a future change to `XlaCallModule`.
Fix corner cases in JAX SVD: a) Clamp negative singular values to zero. b) Return all NaN for matrices with non-finite values.

PiperOrigin-RevId: 540015938
Windows CI: write wheel into usual location.

Should fix installation failure.
Windows CI improvements:

* upload wheel artifacts to the github workflow.
* use XLA from github head in CI builds.
* update release builds to match the CI build configuration.
Fix Windows CI build.
Windows CI: fix bazel repository override command.
Windows CI fixes:
* try single-quoting the bazel override path to avoid \ substitution.
* use a second github checkout action to checkout the XLA repository.
Window CI: fix syntax error.

Try escaping backslashes in bazel override path.

Upload wheels even if tests fail, since they may be useful for debugging.
Windows CI: don't fail-fast.

We expect some of the tests to fail at the moment, and we'd like all of the builds to run to completion even if one of them fails.
Fix test failure in LaxBackedNumpyTest.testFrexp4 on Windows.

NumPy is inconsistent between platforms on what it returns for the exponent of an infinite input. On Linux/Mac it returns 0, and on Windows it returns -1. Normalize the test reference result to use 0 in this case.
jax errors: improve leading info in error docs
CI nightly: update nightly wheel location
DOC: fix formatting in FAQ
Remove matplotlib from the test requirements.

In the Windows CI, we seem to be hitting the following error:

```
=================================== ERRORS ====================================
____________________ ERROR collecting tests/lobpcg_test.py ____________________
tests\lobpcg_test.py:28: in <module>
    from matplotlib import pyplot as plt
C:\hostedtoolcache\windows\Python\3.9.13\x64\lib\site-packages\matplotlib\pyplot.py:52: in <module>
    import matplotlib.colorbar
C:\hostedtoolcache\windows\Python\3.9.13\x64\lib\site-packages\matplotlib\colorbar.py:19: in <module>
    from matplotlib import _api, cbook, collections, cm, colors, contour, ticker
C:\hostedtoolcache\windows\Python\3.9.13\x64\lib\site-packages\matplotlib\contour.py:13: in <module>
    from matplotlib.backend_bases import MouseButton
C:\hostedtoolcache\windows\Python\3.9.13\x64\lib\site-packages\matplotlib\backend_bases.py:45: in <module>
    from matplotlib import (
C:\hostedtoolcache\windows\Python\3.9.13\x64\lib\site-packages\matplotlib\text.py:16: in <module>
    from .font_manager import FontProperties
C:\hostedtoolcache\windows\Python\3.9.13\x64\lib\site-packages\matplotlib\font_manager.py:1548: in <module>
    fontManager = _load_fontmanager()
C:\hostedtoolcache\windows\Python\3.9.13\x64\lib\site-packages\matplotlib\font_manager.py:1543: in _load_fontmanager
    json_dump(fm, fm_path)
C:\hostedtoolcache\windows\Python\3.9.13\x64\lib\site-packages\matplotlib\font_manager.py:957: in json_dump
    with cbook._lock_path(filename), open(filename, 'w') as fh:
C:\hostedtoolcache\windows\Python\3.9.13\x64\lib\contextlib.py:119: in __enter__
    return next(self.gen)
C:\hostedtoolcache\windows\Python\3.9.13\x64\lib\site-packages\matplotlib\cbook\__init__.py:1804: in _lock_path
    with lock_path.open(""xb""):
C:\hostedtoolcache\windows\Python\3.9.13\x64\lib\pathlib.py:1252: in open
    return io.open(self, mode, buffering, encoding, errors, newline,
C:\hostedtoolcache\windows\Python\3.9.13\x64\lib\pathlib.py:1120: in _opener
    return self._accessor.open(self, flags, mode)
E   PermissionError: [Errno 13] Permission denied: 'C:\\Users\\runneradmin\\.matplotlib\\fontlist-v330.json.matplotlib-lock'
```

The use of matplotlib is only for an optional debugging feature anyway, so just make it an optional dependency.
Add NumPy as a test requirement.

The Windows CI currently installs all of the test requirements before building jaxlib, but NumPy is needed to build jaxlib.
Previously this came transitively via matplotlib.
[shape_poly] Add shape polymorphism support for LU on TPU

PiperOrigin-RevId: 540276889
Tag the wheels generated by the Windows CI as dev versions.
Raise a good error message when a ShapeDtypeStruct is closed over as a const which is not a valid arg during execution.

PiperOrigin-RevId: 540296131
Ensure effect indices are updated when constvars are modified. This resolves a bug where conditional Read<N> effect indices N were sometimes referring to the incorrect invars.

Fixes

PiperOrigin-RevId: 540304925
Remove older plugin device integration.

Users of this mechanism should migrate to the newer PJRT plugin registration mechanism (see the comments on discover_plugins() in this file).
Fix test failure in back_compat_test under CUDA 12.

PiperOrigin-RevId: 540355756
Made scatter-transpose more efficient
Added argument jax.linearize(..., has_aux=...)
[shape_poly] Change lowering for shape polymorphism to simplify shape refinement

We insert a ConvertOp as the only use of an input argument in a shape polymorphic
`main` function. This helps the downstream shape refinement because it will set the type
of input arguments to static shapes, and this can invalidate the
module if the argument appears as the result of a function, or if
it appears as the input to a custom_call with output_operand_alias
attribute.
See b/287386268.
Custom PRNG: fix incorrect assertion in select lowering rule
Allow None to be passed to in_shardings and out_shardings. The default is still UNSPECIFIED to handle edge cases around the old semantics where None is treated as fully replicated.

The semantics are as follow:

* if the mesh context manager is not provided, None will be treated as UNSPECIFIED for both in_shardings and out_shardings

* If the mesh context manager is provided, None will be treated as fully replicated as per the old semantics.

This will make sure that we don't break existing code depending on None meaning replicated but also start making the transition to None meaning UNSPECIFIED for jit and pjit.

PiperOrigin-RevId: 540705660
Remove redundant stablehlo import.

The duplicate import confuses pytype.

PiperOrigin-RevId: 540707118
Enable colored output in pytest under github actions.
[shape_poly] Fix the lowering of lax.dynamic_shapes with shape poly

lax.dynamic_slice clamps the start indices to ensure the access
is in bounds, but when lowering with shape polymorphism we use
stablehlo.RealDynamicSliceOp, which is a version of SliceOp
and does not have the clamping. We clamp explicitly during lowering.

This changes the lowering in very limited circumstances: when we have
a lax.dynamic_slice with shape polymorphism and a dynamic slice size,
under native lowering only, and only when the start indices were out
of bounds.
[shape_poly] Enable the test for shape polymorphism for custom_linear_solve on TPU.

This is now supported since we support linalg.lu, which was the blocker.

PiperOrigin-RevId: 540747582
Deduplicate references closed over across branches of a lax.cond.

This fixes a correctness issue that could crop up when doing `run_state(cond)`.

PiperOrigin-RevId: 540795172
[shape_poly] Refactor and simplify tests.

Removed the poly_axes parameter and replaced with
polymorphic_shapes, which is a standard way to specify
polymorphic shapes.
Add live-analysis memory optimization to more jaxpr interpreters.

Follow-up on 8a85e76a5cff0897eccbafc48da836b6f6704e5d

PiperOrigin-RevId: 540857501
Fix xla_bridge_test.py test failures.

We are splitting the plugins in the enviroment variable using os.pathsep; we should make sure to use that as the separator in the test.
Fix test failure in lax_control_flow_test.py on Windows due to line ending differences.
Fix Windows portability problem in dtypes_test.py
Disable a test that fails under Windows with a NumPy exception.
Document how to enable concurrent kernel tracing on GPU.
Raise a RuntimError if plugin initialization fails, rather than logging at info priority.

We don't want plugin initialization to fail silently.

To work around this, either remove the plugin, or disable it via the JAX_PLATFORMS variable.
Fix the docs build
Don't allow the use of stale cache entries in Github actions CI.

The use of restore-keys allows the pip cache to match stale cache entries. This allows for partial cache reuse, but means the cache also grows without bound.
At the time of writing, the pip cache is 4.7GB, which is much larger than just downloading the wheels we need (20MB)! So it's probably a net positive not to reuse caches even if it requires some redundant downloads.
[shape_poly] linalg.eig: shape polymorphism with native serialization on CPU

The backwards compatibility tests to be added separately.

PiperOrigin-RevId: 541122069
Add support for dynamic shapes to jax.fft.

The idea is that we take all the values that can contain dimension sizes
from the descriptor (shape, strides_in, strides_out) and we pass them as
1-d tensor operands. We also pass as an operand the output_shape, so that
we can use the hlo.CustomCallOp `indices_of_output_shapes` attribute to
tell the shape refinement how to compute the shape of the result.

We keep the old descriptor and the ducc_fft registration for the old
C++ custom targets for backwards compatibility (for 6 months). That behavior
is tested by back_compat_test.py.

The one downside of this implementation is that it moves some of the
ducc-specific logic from ducc_fft.py (in jaxlib) into fft.py (in jax). This
was necessary because that code computes with dimensions that are now
dynamic. In JAX we have support for evaluating dynamic shapes and turning
them into 1-d tensors.

Also added backwards compatibility test for dynamic_ducc_fft and kept the
old test for ducc_fft.

PiperOrigin-RevId: 541168692
[shape_poly] DynamicReduceWindow: add shape poly support with native serialization.

PiperOrigin-RevId: 541216925
Generate topology from external TPU names and topology parameters.

This should allow the topology API to be usable on C API / Cloud TPU.

PiperOrigin-RevId: 541232667
[shape_poly] DynamicRngBitGenerator: add shape poly support with native serialization.

Also add backwards compatibility tests.

PiperOrigin-RevId: 541541496
[ROCm]: Updates for container and build script
	-Updated dockerfile.ms
	-Updated build script to switch building against XLA repo
  	-Update CI script
	-Update jaxlib setup.py to add rocm version
[jax2tf] Refactor the backward compatibility tests.

We prepare for having multiple test file, and we want to share
the helper functions.
Remove unused native_serialization_strict_checks option.

PiperOrigin-RevId: 541798654
[jax2tf] Rename some backwards compatibility tests.

I find the names of the linear algebra kernels in lapack and cusolver
to be very obscure. So, I add the name of the linalg primitives to
the names of the tests.
Errors: avoid printing tracer repr for concretization errors
Disable some problematic rotation tests
random.key: error for non-scalar seeds.

Previously, this function's implementation would implicitly map over non-scalar
seed inputs. This is not the behavior we want, because in the future we may want
to allow arrays of integers as a single seed.
Fix problematic rotation tests
Update docstring of jax.tree_util.tree_leaves_with_path.

PiperOrigin-RevId: 541884268
Fix xla_bridge_test test failures under Windows.
Add a CI presubmit that renders the documentation.
[XLA:Python] Fix __cuda_array_interface__.

Adds a test for __cuda_array_interface__ that does not depend on cupy.

Fixes https://github.com/google/jax/issues/16440

PiperOrigin-RevId: 541965361
Add a warning if a non-allowlisted plugin is used.

This is mostly to set user expectations: if we don't know a plugin passes the JAX test suite, we issue a warning.
Fix test failure in array_interoperability_test due to 64-bit dtype squashing.

PiperOrigin-RevId: 542026628
[ROCm]: Updates defaults in build script
Rename Github actions so they have more consistent naming.
Fix symbol collision when merging MLIR modules.

PiperOrigin-RevId: 542039479
Issue warning if JAX_USE_PJRT_C_API_ON_TPU=false

```
$ JAX_USE_PJRT_C_API_ON_TPU=0 python3 -c ""import jax""
/home/skyewm/jax/jax/_src/cloud_tpu_init.py:77: UserWarning: JAX_USE_PJRT_C_API_ON_TPU=0 will no longer be supported in an upcoming future release. Please file an issue at https://github.com/google/jax/issues if you need this setting.
  warnings.warn(
```
profiler_test.py fixes and add coverage to Cloud TPU CI

* Add deps to test requirements, including in new
  `collect-profile-requirements.txt` (to avoid adding tensorflow to
  `test-requirements.txt`).
* Use correct Python executable `ProfilerTest.test_remote_profiler`
  (`python` sometimes defaults to python2)
* Run computations for longer in `ProfilerTest.test_remote_profiler`,
  othewise `collect_profile` sometimes misses it.
Fix `jax.clear_backends()` on Cloud TPU

PiperOrigin-RevId: 542279072
Use `EncapsulateFunction` utility.

PiperOrigin-RevId: 542299099
Documentation improvements for XlaCallModule.disabled_checks.

PiperOrigin-RevId: 542475518
[shape_poly] linalg.svd: shape polymorphism for native serialization on CPU

PiperOrigin-RevId: 542483203
[shape_poly] linalg.qr: shape polymorphism with native lowering on CPU

PiperOrigin-RevId: 542489216
[shape_poly] linalg.cholesky: add support for shape polymorphism with native lowering on CPU

PiperOrigin-RevId: 542497269
[jax2tf] Refactor the backwards compatibility tests.

We have two goals:

   * separate out the tests that depend on TensorFlow (back_compat_tf_tests.py)
   * separate out the boilerplate (back_compat_test_util.py) so that we can use it as a library to set up similar compatibility tests for custom calls that are not used directly by the JAX core.

PiperOrigin-RevId: 542500216
Make JAX-Triton calls serializable.

PiperOrigin-RevId: 542524794
Zlib compress kernel proto.

PiperOrigin-RevId: 542529065
Add a link to the Apple Metal plugin to the JAX README.

Remove references to cloud TPU on colab, since support was dropped in JAX 0.4. Users should use TPUs via Kaggle or via Cloud TPU VMs.
Ignore `JAX_USE_PJRT_C_API_ON_TPU=false` user warning raised.

PiperOrigin-RevId: 542570578
Silence pytype errors under an upcoming pytype change.

PiperOrigin-RevId: 542652577
Update JAX's XlaExecutable.cost_analysis and related plumbing so it works on Cloud TPU

* Exposes LoadedExecutable.cost_analysis via pybind
* Updates XlaExecutable.cost_analysis to try
  LoadedExecutable.cost_analysis, then fallback to the client method.

PiperOrigin-RevId: 542671990
Jax 0.4.13 release.","Changes
Added Windows CPU-only wheels to the jaxlib Pypi release.
Bug fixes
__cuda_array_interface__ was broken in previous jaxlib versions and is now
fixed ({jax-issue}16440).
Concurrent CUDA kernel tracing is now enabled by default on NVIDIA GPUs."
"update version and changelog for pypi
[sparse] bcoo_mul: support mixing batch & sparse dims
Set aval when creating the local_shards

PiperOrigin-RevId: 435771774
add random.loggamma and improve dirichlet & beta implementation
lax_numpy: refactor set operations into separate private submodule
quickstart: fix outdated TPU reference
Fix

Fix hessian with options and add regression test
Bump actions/cache from 2 to 3

Bumps [actions/cache](https://github.com/actions/cache) from 2 to 3.
- [Release notes](https://github.com/actions/cache/releases)
- [Commits](https://github.com/actions/cache/compare/v2...v3)

---
updated-dependencies:
- dependency-name: actions/cache
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
Add weakreaf_lru_cache to prevent caches from pinning jaxprs.

To use this cache, the first argument must be some type that is
object identity hashed (like a jaxpr).
[sparse] add missing bcoo exports
readthedocs: do not attempt to build PDF
Remove the duplicate `_with_context_manager` tests now that `Mesh` is the default
way to create a mesh.

PiperOrigin-RevId: 436333536
Integrate LLVM at llvm/llvm-project@9816fada1667

Updates LLVM usage to match
[9816fada1667](https://github.com/llvm/llvm-project/commit/9816fada1667)

PiperOrigin-RevId: 436466360
Fix breakage due to LLVM change
fix jaxpr pretty-printing with unitvars

Co-authored-by: Matthew Johnson <mattjj@google.com>
avoid batching units in cond partial eval

Co-authored-by: Matthew Johnson <mattjj@google.com>
protocols for the lowering and executable underlying `Lowered` and `Compiled`
remove unreachable code in `Lowered`
DOC: clarify parameter types in cg/bicgstab
Remove unused code
Rewrite __module__ attribute of jnp dtype-like objects
DOC: add caveats to jnp.ndarray.astype
random_test: add tests of random values for distributions
Update util.py
Rename jax.nn.normalize to standardize. Add normalize alias with DeprecationWarning.
maint: remove numpy reductions dependence on ufuncs
add jaxpr check in `partial_eval.trace_to_subjaxpr_dynamic`
remove dead code
When passing `ShapedArray` as input to pjit.lower() (which is not allowed normally i.e `pjit(f)(*args)`), consider it as Global. This will also help during the auto sharding change.

PiperOrigin-RevId: 437094594
Fix for hipsparse in ROCm.
Add a documentation for the JAX transfer guard
Remove lax_numpy from jax.numpy namespace

This is a private module that was inadvertently exported in the past.
improve caching of jax.remat

See for discussion
improve remat transpose caching (cf.)
allow for recursive uses of `custom_transpose`

Co-authored-by: Matthew Johnson <mattjj@google.com>
Fix a bug in fft helper appears when nperseg=1.
Checkify: add way to embed runtime info in error messages.
[shape_poly] Change internal representation of parametric shapes

The parametric shapes are implemented as polynomials in terms of
dimension variables. In the previous implementation the representation
is as a `dict`. This happens to confuse a test in `jnp.reshape` because
the polynomial appears to be an iterable.

I removed the inheritance from `dict`, so that a dimension polynomial
is harder to confuse with other types.

Fixes:
introduce an upgrade flag for `custom_vjp` overhaul (still experimental)

Along the way, make ""boolean upgrade flag"" a common option for current
and future re-use.
introduce partly-working new `custom_vjp` implementation behind a flag

... by reduction to `custom_jvp` and `custom_transpose`
remove unused arg in call param jvp updater
refine occurrences of the ""forward-mode disallowed"" error under new `custom_vjp`

To achieve this, this change introduces a general primitive
(`unreachable`) that allows staging but not evaluation. We use it to
allow for the `custom_transpose`d tangent function to be stageable,
but to ensure it errs if it is evaluated (which only happens due to
forward-mode).

Co-authored-by: Matthew Johnson <mattjj@google.com>
add `custom_vjp` upgrade flag to `jax` module and fix doc rendering for upgrade flags
[sparse] Change call signature of bcoo primitive wrappers.

PiperOrigin-RevId: 437923482
Fix the mesh_axes of benchmarks to be Pspecs

PiperOrigin-RevId: 437932954
[doc] Fix typo
Add note about enabling developer mode on Windows.

Issue 4843.
make device_array.copy() return a device array
Implement jnp.from* array creation functions
require consistent output structure in custom vmap rules

... not always a sequence.
Speed up GDA initialization by making local_shards lazy and hiding checks behind `config.jax_enable_checks` flag.

PiperOrigin-RevId: 438115859
Better error messages for jnp.fromiter and jnp.fromfile
docs: use intersphinx links for wrapped functions
doc: add examples of using partial with jit
Migrate 'jaxlib' CPU custom-calls to the status-returning API

PiperOrigin-RevId: 438165260
Add CHANGELOG entry for
Copybara import of the project:

--
de9a948d1ce407056de545b5717c3441298e2f36 by Jake VanderPlas <jakevdp@google.com>:

make device_array.copy() return a device array

PiperOrigin-RevId: 438308145
Fixed a typo in the return type of _array_ir_types

There could be other typing issues in that module, but I will address them separately.
[mhlo] Clean up ops that can use InferTensorTypeWithReify

This means we can get rid of custom builders and return type inference. This
all goes through inferReturnTypeComponents now, so fix obvious bugs in those
implementations.

There should be no behaviorial change. However, python bindings no longer
generate a result type builder for mhlo.CompareOp, which is unfortunate.

PiperOrigin-RevId: 438341237
vmap: preserve weak_type in batching tracer
Remove redundant name-stack setting in `DynamicJaxprTrace`
Fix link to buffer-donation docs
Update tensorflow version to 0dfdb8
Share compare_mhlo function between lax.py and mlir.py.

Use the .shape property on RankedTensorType.
[jax2tf] Updates `custom_assert` for jax2tf SVD (primitive) limitations.

PiperOrigin-RevId: 438421090
Replace `reshape` with `expand_dims` if possible
Suppressed a few more errors in jax/interpreters/mlir.py
Upgrade ROCm build docker to ROCm version 5.1.
[host_callback] Fix tests to ensure we use the correct platform

In host_callback_test, there are a few tests that inspect compiled HLO.
In some cases, we're explicitly creating a CPU XLA computation, but we're handing
it off the to the default backend. When we're on a TPU machine, we're asking a
TPU backend to compile a CPU XLA computation.

Fixes internal b/227521177.
Checkify: add axis and axis size to OOB error message.
If `jax_parallel_functions_output_gda` flag is set to True, then all outputs are GDA. In `abstract_eval` rule of pjit, don't convert global avals to local avals if the `jax_parallel_functions_output_gda` flag is set.

Fixes: https://github.com/google/jax/issues/10084
PiperOrigin-RevId: 438584351
[jax2tf] Add links to Google-internal documentation.

PiperOrigin-RevId: 438599124
Sharp bits: add miscellaneous divergences from numpy
[sparse] Update docstrings for bcoo primitives.

PiperOrigin-RevId: 438685829
Don't compare versions as strings.

TF nightly is now 2.10. Comparing as strings will give wrong answer:

```python
>>> ""2.10.0"" >= ""2.8.0""
False
>>> from packaging import version
>>> version.parse(""2.10.0"") >= version.parse(""2.8.0"")
True
>>> pkg_resources.parse_version(""2.10.0"") >= pkg_resources.parse_version(""2.8.0"")
True
```

Use `pkg_resources.parse_version` as it should not require additional installs.
Manually split the version string

It seems `pkg_resources` also needs to be installed. TF does not provide a version tuple, so split manually.

We only use the first 2 components as in `tf.nightly` the patch number contains additional letters, which would cause `int` to fail.
Fix syntax error causing typo
Add missing `:`
First attempt to enable auto-sharding. This CL adds support for GDA (no SDA support yet).

An example of using auto sharding with GDA:

```
f = pjit(lambda x: x, in_axis_resources=pjit.AUTO, out_axis_resources=pjit.AUTO)

sharding_info = pjit.get_sharding_from_xla(f, mesh, [(8, 2)], [np.int32])

inputs = [GlobalDeviceArray.from_callback(shape, mesh, ip, cb) for ip in sharding_info.in_pspec]

# Use the compiled function (which was compiled in get_sharding_from_xla)
out = sharding_info.compiled(*inputs) # Recommended way!
# OR
out = f(*inputs)
```
PiperOrigin-RevId: 438708483
Add istft to jax.scipy.signal.
Fix the breakage by including --experimental_cc_shared_library as done by TF.

PiperOrigin-RevId: 438746867
CI: pin pillow<9.1 to prevent deprecation warnings
Avoid retracing when a host_callback.call is called multiple times with the same function.

If we build a lambda in the host_callback.call() method, the identity of that lambda is different each time and will never lead to a primitive compilation cache hit. Instead, use a custom wrapper object with hash/equality.

This issue was found in passing while debugging.
Expose AutoSharding's mesh_shape and mesh_ids options to JAX.

PiperOrigin-RevId: 438874347
Fix race condition for weakref destructor by catching rare exceptions.
Give auto sharder the mesh information specifically the mesh_shape and the devices
ids of devices in the mesh.

PiperOrigin-RevId: 438882041
Fixes `jax2tf`'s `test_name_scope` to use graph introspection instead of
side-effect
remove $ from command line commands

A few commands in this file were prefixed with $ which results in an invalid command when copied with the sphinx ""copy"" button.
Give auto sharder the mesh information specifically the mesh_shape and the devices
ids of devices in the mesh.

PiperOrigin-RevId: 438906211
Deprecate jax.tree_util.tree_multimap
DOC: switch from tree_multimap to tree_map in docs
remove string annotations from core.py
Remove the jax_enable_mlir flag. MLIR is now the only supported code path.

This change does not yet remove all the XLA translation rule code since it may be used in various fallback paths. Only the top-level lowering function is removed. Further cleanup is left to subsequent changes.

PiperOrigin-RevId: 439324450
Enable use of `GlobalDeviceArray` (GDA) in T5X Checkpointer. Add a separate unit test, `gda_checkpoints_test`, to cover this use case.

GDA is locked behind a `use_gda` bool in Checkpointer. The feature is currently not enabled anywhere.

Our follow-up plan is to add code which would enable GDA use throughout T5X, and to fix any remaining issues with Checkpointer.

PiperOrigin-RevId: 439358913
Re-land changes from https://github.com/google/jax/pull/10069

PiperOrigin-RevId: 439381161
* Disallow any other type other than GDA and ShapedArray for auto sharding.
* Raise errors in the following 4 cases when GDAs sharding does not match the input sharding. **In all the 4 cases below, the check only runs once! There is no double checking going on. I have added tests for these cases. Please check them out.**
  * Auto sharding
    * f_pjitted(gda) -- `_pjit_call_impl` catches this mismatch. Only doing this check when `compiled._auto_spmd_lowering` is True.
    * compiled(gda) -- `def call(*args)` in `MeshExecutable` catches this mismatch
  * NO auto sharding
    * f_pjitted(gda) -- This is already covered and tested and happens in `infer_params`
    * compiled(gda) -- `def call(*args)` in `MeshExecutable` catches this mismatch

PiperOrigin-RevId: 439413895
Explicit doc note about device_put* async
[GPU] Force an input buffer copy for double precision complex-to-real IRFFTs.

Fixes https://github.com/google/jax/issues/9946

PiperOrigin-RevId: 439414091
Separate jax.test_util implementations into public and private sources.

Eventually the private functionality will no longer be exported via the jax.test_util submodule.

PiperOrigin-RevId: 439415485
Skip test outside x64
jnp.diagonal: implement in terms of gather rather than sum
[MHLO] Implement return type inference for GetTupleElementOp and TupleOp.

PiperOrigin-RevId: 439589720
Add version int tuple `__version_info__` to JAX
Implement `jnp.trace` in terms of `jnp.diagonal`
Pin a newer @platforms in the Bazel workspace to fix Mac ARM builds.
Revert: implement `jnp.trace` in terms of `jnp.diagonal`

This change appears to blow up compilation times for some models on TPU.

PiperOrigin-RevId: 439880940
[MHLO] Prefer backend-specific HLO lowerings instead of non-backend-specific MHLO lowerings.

This allows (in subsequent changes) to switch the generic case for translating a primitive to MHLO, even if we can't yet use an MHLO lowering for a backend-specific case yet.

Add a handful of direct MLIR lowerings for primitives that lacked them.

PiperOrigin-RevId: 439912093
Add jax.scipy.linalg.rsf2csf
[MHLO] Add MHLO lowering for PRNG kernels.

PiperOrigin-RevId: 439919104
Add deprecation warning for sharded_jit.

PiperOrigin-RevId: 439926957
[MHLO] Add direct MHLO lowerings for most linear algebra kernels.

PiperOrigin-RevId: 439927594
[sparse] add bcoo_add_batchdim
Move PartitionSpec from sharded_jit.py to pxla.py. The public endpoint is via jax.experimental so that should be used (no changes to the public endpoint).

This move is because sharded_jit is being deprecated.

PiperOrigin-RevId: 439948391
[sparse] make bcoo_spdot_general return a BCOO array, not raw buffers
Jax 0.3.5 and jaxlib 0.3.5 release.
Consolidation of hipsolver/cusolver APIs.
[MHLO] Add MHLO lowerings for parallel collectives.

PiperOrigin-RevId: 440106753
Minor change to lax to support jax2tf shape polymorphic concatenation.

PiperOrigin-RevId: 440113799
Add __init__ to PolyShape.

PiperOrigin-RevId: 440120323
jax2tf: Support uint32 keys in rng_bit_generator.

This follows the rng_bit_generator_translation rule in JAX, which allows for
both uint32 and uint64 keys and casts between them. The default rbg prng
implementation in JAX uses a (4,) uint32 key.

PiperOrigin-RevId: 440124048
[sparse] consolidate flavors of bcoo_dot_general
Remove sharded_jit usage from jax2tf because sharded_jit is deprecated.

PiperOrigin-RevId: 440169129
Update libtpu version for jax 0.3.5 release.","Changes
added jax.random.loggamma & improved behavior of jax.random.beta
and jax.random.dirichlet for small parameter values ().
the private lax_numpy submodule is no longer exposed in the jax.numpy namespace ().
added array creation routines jax.numpy.frombuffer, jax.numpy.fromfunction,
and jax.numpy.fromstring ().
DeviceArray.copy() now returns a DeviceArray rather than a np.ndarray ()
added jax.scipy.linalg.rsf2csf
Deprecations:
jax.nn.normalize is being deprecated. Use jax.nn.standardize instead ().
jax.tree_util.tree_multimap is deprecated. Use jax.tree_util.tree_map instead ().
jax.experimental.sharded_jit is deprecated. Use pjit instead."
"Speed up check_jaxpr().

(check_jaxpr() is only used when debugging.)

Don't eagerly pretty print jaxprs: only do so if we are going to raise an error.
Don't eagerly form error messages. Delete typecheck_assert.

PiperOrigin-RevId: 422594126
Copybara import of the project:

--
06deb73c9be01cedc000efe7b3eb72d68615471a by Matthew Johnson <mattjj@google.com>:

cache initial-style jaxpr transformations

COPYBARA_INTEGRATE_REVIEW=https://github.com/google/jax/pull/9196 from mattjj:issue3847 06deb73c9be01cedc000efe7b3eb72d68615471a
PiperOrigin-RevId: 422604879
update version and changelog for pypi
Only use config.x64_enabled as the memo cache key for canonicalize_dtype, not any other fields.

This saves the time to repeatedly build a tuple as a cache key. Reduces the time for CustomLinearSolveTest.test_custom_linear_solve_pytree on my workstation from 110s to 85s.

PiperOrigin-RevId: 422632700
Cache the expensive computations in GDA. For example `get_shard_indices_replica_ids` can be the same for multiple variables in a neural network (global_shape, mesh_axes and global_mesh) can be the same

Note that the first time will be a little slow. The below timings you are seeing shows the caching working because the benchmark is running for multiple iterations and then the time is averaged over the number of iterations.

```
name                                                     time/op
gda_construction_callback_(4, 2)_['x', 'y']              4.50ms ±10%
gda_construction_raw_(256, 8)_['x', 'y']                 5.82ms ± 2%
indices_replica_id_calc__uncached_(256, 8)_['x', 'y']    2.95ms ± 6%
indices_replica_id_calc_cached_(256, 8)_['x', 'y']       28.7µs ± 1%
gda_construction_callback_(4, 2)_[None]                  31.9ms ±20%
gda_construction_raw_(256, 8)_[None]                     5.85ms ± 5%
indices_replica_id_calc__uncached_(256, 8)_[None]        1.75ms ± 1%
indices_replica_id_calc_cached_(256, 8)_[None]           29.0µs ± 4%
gda_construction_callback_(4, 2)_['x']                   8.40ms ± 4%
gda_construction_raw_(256, 8)_['x']                      5.48ms ± 2%
indices_replica_id_calc__uncached_(256, 8)_['x']         1.89ms ± 1%
indices_replica_id_calc_cached_(256, 8)_['x']            29.0µs ± 4%
gda_construction_callback_(4, 2)_['y']                   15.3ms ± 6%
gda_construction_raw_(256, 8)_['y']                      5.66ms ± 5%
indices_replica_id_calc__uncached_(256, 8)_['y']         1.82ms ± 2%
indices_replica_id_calc_cached_(256, 8)_['y']            29.4µs ± 3%
gda_construction_callback_(4, 2)_[('x', 'y')]            4.29ms ± 5%
gda_construction_raw_(256, 8)_[('x', 'y')]               5.61ms ± 7%
indices_replica_id_calc__uncached_(256, 8)_[('x', 'y')]  3.81ms ±10%
indices_replica_id_calc_cached_(256, 8)_[('x', 'y')]     29.0µs ± 5%
gda_construction_raw_(128, 8)_['x', 'y']                 2.42ms ± 1%
indices_replica_id_calc__uncached_(128, 8)_['x', 'y']    1.14ms ±11%
indices_replica_id_calc_cached_(128, 8)_['x', 'y']       19.9µs ± 1%
gda_construction_raw_(4, 2)_['x', 'y']                   46.7µs ± 0%
indices_replica_id_calc__uncached_(4, 2)_['x', 'y']       153µs ± 4%
indices_replica_id_calc_cached_(4, 2)_['x', 'y']         11.1µs ± 8%
gda_construction_raw_(16, 4)_['x', 'y']                   164µs ± 2%
indices_replica_id_calc__uncached_(16, 4)_['x', 'y']      212µs ± 3%
indices_replica_id_calc_cached_(16, 4)_['x', 'y']        11.3µs ± 1%
gda_construction_raw_(16, 4)_[('x', 'y')]                 163µs ± 2%
indices_replica_id_calc__uncached_(16, 4)_[('x', 'y')]    210µs ± 2%
indices_replica_id_calc_cached_(16, 4)_[('x', 'y')]      11.6µs ± 8%
```

PiperOrigin-RevId: 422639127
converting to use switch
changed to use argwhere
switching to use jnp.digitize for index identification
remove cpu platform setting in quickstart

fixes
[JAX] Change signature of .mhlo() method on compiler IR objects to return an ir.Module object instead of its string representation.

It isn't free to pretty-print IR, so it's best to avoid it unless necessary. In addition, by returning an IR object, the user is now free to, say, print it with different options.

For example, one can now write things like:

```
In [1]: import numpy as np, jax, jax.numpy as jnp
In [2]: m = jax.jit(lambda x: x + jnp.array(np.arange(1000))).lower(7.).compiler_ir(dialect='mhlo')
In [3]: m.operation.print(large_elements_limit=10)
module @jit__lambda_.4 {
  func public @main(%arg0: tensor<f32>) -> tensor<1000xf32> {
    %0 = mhlo.constant opaque<""_"", ""0xDEADBEEF""> : tensor<1000xi32>
    %1 = ""mhlo.convert""(%0) : (tensor<1000xi32>) -> tensor<1000xf32>
    %2 = ""mhlo.broadcast_in_dim""(%arg0) {broadcast_dimensions = dense<> : tensor<0xi64>} : (tensor<f32>) -> tensor<1000xf32>
    %3 = mhlo.add %2, %1 : tensor<1000xf32>
    return %3 : tensor<1000xf32>
  }
}
```

Fixes https://github.com/google/jax/issues/9226

PiperOrigin-RevId: 422855649
add origin info to leaked tracer error

add origin info to vmap tracers (BatchTracer)
checkify: fix and test post_process_call/map
Simplify `gda_fast_path_args` by replacing local_idx_rid with global_indices_replica_id.

```
name                                                    old time/op             new time/op             delta
gda_construction_callback_(4, 2)_['x', 'y']             4.26ms ± 4%             4.18ms ± 3%  -1.86%        (p=0.011 n=17+17)
gda_construction_raw_(256, 8)_['x', 'y']                5.68ms ± 3%             5.57ms ± 3%    ~             (p=0.421 n=5+5)
indices_replica_id_calc_uncached_(256, 8)_['x', 'y']    2.89ms ± 4%             2.94ms ± 5%    ~             (p=0.222 n=5+5)
indices_replica_id_calc_cached_(256, 8)_['x', 'y']      28.2µs ± 1%             28.1µs ± 0%    ~             (p=0.690 n=5+5)
gda_construction_callback_(4, 2)_[None]                 30.5ms ± 9%             31.1ms ±18%    ~             (p=1.000 n=5+5)
gda_construction_raw_(256, 8)_[None]                    5.75ms ± 5%             5.38ms ± 4%  -6.58%          (p=0.016 n=5+5)
indices_replica_id_calc_uncached_(256, 8)_[None]        1.77ms ± 8%             1.75ms ± 2%    ~             (p=0.841 n=5+5)
indices_replica_id_calc_cached_(256, 8)_[None]          28.1µs ± 1%             28.1µs ± 1%    ~             (p=0.841 n=5+5)
gda_construction_callback_(4, 2)_['x']                  8.29ms ± 3%             8.14ms ± 3%    ~             (p=0.095 n=5+5)
gda_construction_raw_(256, 8)_['x']                     5.46ms ± 2%             5.23ms ± 3%  -4.23%          (p=0.008 n=5+5)
indices_replica_id_calc_uncached_(256, 8)_['x']         1.89ms ± 2%             1.90ms ± 2%    ~             (p=0.841 n=5+5)
indices_replica_id_calc_cached_(256, 8)_['x']           28.1µs ± 1%             28.1µs ± 0%    ~             (p=0.548 n=5+5)
gda_construction_callback_(4, 2)_['y']                  15.0ms ± 3%             14.8ms ± 3%    ~             (p=0.421 n=5+5)
gda_construction_raw_(256, 8)_['y']                     5.46ms ± 2%             5.14ms ± 4%  -5.97%          (p=0.008 n=5+5)
indices_replica_id_calc_uncached_(256, 8)_['y']         1.81ms ± 2%             1.81ms ± 2%    ~             (p=1.000 n=5+5)
indices_replica_id_calc_cached_(256, 8)_['y']           28.1µs ± 1%             28.1µs ± 1%    ~             (p=1.000 n=5+5)
gda_construction_callback_(4, 2)_[('x', 'y')]           4.11ms ± 3%             4.05ms ± 2%    ~            (p=0.113 n=9+10)
gda_construction_raw_(256, 8)_[('x', 'y')]              5.47ms ± 5%             5.14ms ± 3%  -6.12%          (p=0.032 n=5+5)
indices_replica_id_calc_uncached_(256, 8)_[('x', 'y')]  3.70ms ± 1%             3.59ms ± 1%  -3.01%          (p=0.016 n=4+5)
indices_replica_id_calc_cached_(256, 8)_[('x', 'y')]    28.4µs ± 4%             28.1µs ± 0%    ~             (p=0.421 n=5+5)
gda_construction_raw_(128, 8)_['x', 'y']                2.46ms ± 3%             2.25ms ± 1%  -8.76%          (p=0.008 n=5+5)
indices_replica_id_calc_uncached_(128, 8)_['x', 'y']    1.11ms ± 1%             1.11ms ± 1%    ~             (p=0.690 n=5+5)
indices_replica_id_calc_cached_(128, 8)_['x', 'y']      19.9µs ± 7%             19.6µs ± 1%    ~             (p=1.000 n=5+5)
gda_construction_raw_(4, 2)_['x', 'y']                  46.5µs ± 1%             43.5µs ± 1%  -6.54%          (p=0.008 n=5+5)
indices_replica_id_calc_uncached_(4, 2)_['x', 'y']       149µs ± 1%              149µs ± 2%    ~             (p=0.690 n=5+5)
indices_replica_id_calc_cached_(4, 2)_['x', 'y']        10.8µs ± 2%             10.8µs ± 1%    ~             (p=0.690 n=5+5)
gda_construction_raw_(16, 4)_['x', 'y']                  162µs ± 1%              152µs ± 1%  -6.39%          (p=0.008 n=5+5)
indices_replica_id_calc_uncached_(16, 4)_['x', 'y']      209µs ± 1%              208µs ± 1%    ~             (p=0.841 n=5+5)
indices_replica_id_calc_cached_(16, 4)_['x', 'y']       11.3µs ± 2%             11.3µs ± 1%    ~             (p=0.690 n=5+5)
gda_construction_raw_(16, 4)_[('x', 'y')]                162µs ± 1%              152µs ± 1%  -6.45%          (p=0.008 n=5+5)
indices_replica_id_calc_uncached_(16, 4)_[('x', 'y')]    209µs ± 1%              208µs ± 1%    ~             (p=0.421 n=5+5)
indices_replica_id_calc_cached_(16, 4)_[('x', 'y')]     11.3µs ± 2%             11.3µs ± 0%    ~             (p=0.690 n=5+5)
```

PiperOrigin-RevId: 422926727
Check the gda pjit mesh mismatch inside pjit and not during _shard_arg which is shared by pmap, xmap and pjit. For pmap, pjit mesh has nothing to do with it. So this error should not be raised.

PiperOrigin-RevId: 422929245
Set unspecified vmap dims partition to unconstrained

PiperOrigin-RevId: 422949080
pjit: add test for basic static_argnums
[jax] completely truncate trivial filtered tracebacks
[jaxlib] allow empty traceback overwrites

If an error is raised within JAX (under an API boundary frame), but prior to entering any user code, then all frames in between are JAX-internal. In this case, our filtered traceback ought to be trivial, i.e. empty of any frames at all.

Prior to this change, we did not handle this edge case consistently with the non-trivial case: any trivial filtered traceback was modified to comprise a single JAX-internal frame (namely, the inner-most one). With this change, the filtered traceback can be completely empty and result in omission of all JAX-internal frames.

Before:

```
Traceback (most recent call last):
  File ""tb.py"", line 10, in <module>
    jit(f)(A())
  File ""jax/_src/api.py"", line 2850, in _check_arg
    raise TypeError(f""Argument '{arg}' of type {type(arg)} is not a valid JAX type."")
TypeError: Argument ... is not a valid JAX type.
```

After:

```
Traceback (most recent call last):
  File ""tb.py"", line 10, in <module>
    jit(f)(A())
TypeError: Argument ... is not a valid JAX type.
```
PiperOrigin-RevId: 422962976
NotImplementedError for new_checkpoint-of-xmap

Previously this was getting a default behavior which caused surprising
errors downstream.
Change the default IR dialect returned by .compiler_ir() to MHLO.

PiperOrigin-RevId: 423091674
Fix type annotation in pxla.py MeshComputation.from_hlo().

PiperOrigin-RevId: 423094564
re-enable tests of

f35014d had to revert part of because of a surprising downstream
breakage (relying on internal APIs). That breakage was isolated to how
_inline_literals handled invars.

The approach was a temporary one anyway: it relied on the fact that we
expect only to bind axis size variables at the top level and hence if we
didn't rename the input binders in _inline_literals we wouldn't need to
substitute new variables for any variables appearing in types. But a
more general approach would be to perform the necessary substitution
everywhere; after all, we might be inlining a literal into an axis size!

This commit takes the more general approach. It may fix the downstream
breakage automatically, just by virtue of being different; if not, I'll
figure out how to fix downstream.
jnp.angle: support deg keyword
introduce `custom_batching.sequential_vmap`

An anticipated common use of `custom_vmap` is in order to implement a
map via loop (i.e. to sequentially apply the mapped function), instead
of actually vectorizing.
Copybara import of the project:

--
4e9782b2da246b809a80a61abd97664145ad58e3 by Jake VanderPlas <jakevdp@google.com>:

Make array_copy a primitive

Co-authored-by: Matthew Johnson <mattjj@google.com>
COPYBARA_INTEGRATE_REVIEW=https://github.com/google/jax/pull/9264 from jakevdp:copy-primitive 4e9782b2da246b809a80a61abd97664145ad58e3
PiperOrigin-RevId: 423328684
generate bit widths other than 32 in `lax.rng_bit_generator`

Three parts:

* The underlying XLA operation (RngBitGenerator) doesn't support
  generating bit widths 8 and 16, so generate 32 bits and truncate in
  the translation rule.

* Canonicalize the dtype given to `rng_bit_generator` to avoid
  requests for U64s when x64 mode is off.

* Test the effect of this on PRNG implementations backed by
  `rng_bit_generator`. Namely, their `random_bits` method should now
  support all bit widths, and their keys can be used in samplers such
  as `random.uniform` and `random.randint` to generate 16-bit floats,
  and {8,16}-bit integers respectively.
Add GDA to the API pages
whitespace changes
Make line length equal
Add a blank line
Fix warnings
Fix warnings
GSDA -> GDA
Add more documentation for buffer donation

Fixes:
[jax2tf] Improve shape polymorphism for scatter with CLIP mode

Fixes:
[jax2tf] Move the no_xla_limitations documentation

Put it in the g3doc directory, along with the other pieces
of jax2tf documentation. This enables special documentation
features in the Google repo.
jnp.[nan]argmin/max: implement keepdims
Fix auto-generated docstrings for JIT-compiled functions
Fixes
DOC: pin docutils==0.16 to restore bullets in lists
disable implicit rank promotion for api_test
Disallow scatter_mul gradients if unique_indices=False.

The current gradients are incorrect if unique_indices=False. No gradient is better than an incorrect gradient.

https://github.com/google/jax/issues/9296

PiperOrigin-RevId: 423917753
jax_jit_test: inherit from JaxTestCase
Fix `max_squarings` in `expm`
jax.numpy: add where and initial arguments to nan reductions
[sparse] accept nse argument to sparse.empty()
[sparse] avoid implicit rank promotion
developer doc: more info on pre-commit
Re-enable PJIT test that was disabled now XLA has been fixed.

PiperOrigin-RevId: 424143008
[JAX] Require exact type equality using `is` for static arguments.

Fixes https://github.com/google/jax/issues/9273.

PiperOrigin-RevId: 424182826
Make forces_retrace tests more robust
[JAX:IREE] Fix bitrot in iree plugin for JAX.

The compiler driver appears not to be a thing in the IREE API any more. But it also appears not to be needed.

PiperOrigin-RevId: 424190139
jaxpr staging: only one tracer per jaxpr variable
Make lapack symbols strong in lapack_kernels

The lapack_kernels target has dual use as a jax kernel for the lapack
functions obtained via SciPy when running in a Python context (via pybind),
and as a jax kernel for lapack functions linked directly for use in a
pure C++ context.

The prior solution to this problem was to define the lapack symbols with
the weak attribute to make the linking with lapack optional (not sure why
exactly, since SciPy uses the exact same lapack library). However, this
causes C++ applications to silently forgo the linking with lapack and
simply leave those symbols as null pointers. Whether that happens or
not seems to be dependent on link order and dependency layering. In
short, this solution does not work half of the time, for seemingly
arbitrary reasons.

This is fixed here by adding a separate shim library that lists out
the lapack symbols as strong symbols and initializes the internal
function pointers of the kernels. Linking with this new library pulls
in the correct dependencies reliably. On the python side (with SciPy),
you simply link only with the basic lapack_kernels target.

PiperOrigin-RevId: 424208059
Update `get_compile_options` to accept Device objects.
[JAX:IREE] Handle ImportError when iree isn't installed.

PiperOrigin-RevId: 424334198
fix caching example in jit tutorial
linalg_test: disable implicit rank promotion
testDisableNumpyRankPromotion: make test more robust
README: clarify installation instructions for Colab TPU
test_util: export with_config
Explicit raise when comparing GDA equality.

The general idea is that, comparing a GDA equality is ambiguous by its nature. It can mean comparing local_shards within the current client, or comparing the global array which could be expensive and dangerous.
We will delegate this to users and have them explicitly specify the intention instead.

PiperOrigin-RevId: 424484191
Fix flaky testcase LaxTest.testConvTransposePaddingList on GPU.
Update XLA for jaxlib 0.1.76 release.
JaxTestCase: prevent leakage of global state
DOC: add info about repeated indices to jax.ops docs
jnp.where: improve error for non-array inputs
Re-enable test of behavior from
Only open TS once per GDA and not per shard.

PiperOrigin-RevId: 424788676
Update development jaxlib version to 0.1.77, update jaxlib version in setup.py to 0.1.76.

Changelog entry for jaxlib 0.1.77 was already added in a previous PR.

PiperOrigin-RevId: 424872047
disable implicit rank promotion in a number of remaining tests
Clarify the required NVidia driver versions in the JAX readme instructions.
Strip named_shape and weak_type from aval when donating buffers.

PiperOrigin-RevId: 424888671
Instead of getting users to run a tree_map over gdas, etc and run asyncio.run, absorb those APIs into the gda serde library.

PiperOrigin-RevId: 424923960
Increase bazel version to 5.0.0 to match TensorFlow
(https://github.com/tensorflow/tensorflow/commit/8871926b0aa9d5b0e819d12f6945bce752fde610).
Strip named_shape and weak_type from aval when donating buffers.

PiperOrigin-RevId: 424968695
Update pinned libtpu-nightly version for jaxlib 0.1.76
Tolerate NumPy deprecation warnings when using older SciPy.

Simply importing scipy 1.2.3 with NumPy 1.21.5 leads to deprecation
warnings. Tolerate these in pytest.
pjit_test: set jax_numpy_rank_promotion=raise
Add complex types to mlir constant handlers
[JAX] Re-enables lowering bcoo dot general to cuSparse.

PiperOrigin-RevId: 425410511
Updates `flax.nn` with `flax.linen` in jax2tf README

PiperOrigin-RevId: 425429246
Remove unused _asarray utility
maint: update pre-commit package versions & fix new mypy errors
[XLA:TPU] Add 'aggregate_to_topk' option to ann in jax
Also adds a pmap test for demonstrating multi-tpu ann.

PiperOrigin-RevId: 425451716
Couple of changes because of the serialization inconsistencies being observed.

* Remove the cache since one of the keys is global_mesh. Hash of global_mesh doesn't care of the mesh topology but just the devices. This is not good as indices are assigned to devices based on the topology. So if mesh is `(4, 2)` and then you give a new mesh `(2, 4)`, then the cache will return results for `(4, 2)` as the devices haven't changed. This is not right as the indices assigned in mesh `(2, 4)` will be different than `(4, 2)` as the topology is not the same.

```
mesh_devices = np.array(jax.devices()).reshape((4, 2))
mesh_axes = ('x' , 'y')
global_mesh1 = Mesh(mesh_devices, mesh_axes)
print(global_mesh1)

mesh_devices = np.array(jax.devices()).reshape((2, 4))
mesh_axes = ('x' , 'y')
global_mesh2 = Mesh(mesh_devices, mesh_axes)
print(global_mesh2)

hash(global_mesh1) == hash(global_mesh2)

Output:

Mesh(array([[0, 1],
       [2, 3],
       [4, 5],
       [6, 7]]), ('x', 'y'))
Mesh(array([[0, 1, 2, 3],
       [4, 5, 6, 7]]), ('x', 'y'))
True
```

* Remove the replica_id calculation math because after that the serialization inconsistencies were resolved. This is still confusing to me as to why its happening since I can't reproduce this in unit tests nor on small model runs. But I'll debug this in parallel. The important thing here is to unblock everyone. Replacing it with _hashed_index is still 2x faster than using _HashableIndex class.

PiperOrigin-RevId: 425525653
djax: let make_jaxpr build dyn shape jaxprs
Switch Cuda 11.4 cudnn 8.0.5 to build with cuda 11.1 cudnn 8.0.5 instead.

PiperOrigin-RevId: 425681466
Add the cache back now that Mesh's __hash__ is also being hashed on `self.devices.shape`.

PiperOrigin-RevId: 425711067
Remove path from the serde API as tspec encompasses those things.

PiperOrigin-RevId: 425727733
Remove isinstance checks

PiperOrigin-RevId: 425745786","GitHub commits.
jax.jit(f).lower(...).compiler_ir() now defaults to the MHLO dialect if no
dialect= is passed.
The jax.jit(f).lower(...).compiler_ir(dialect='mhlo') now returns an MLIR
ir.Module object instead of its string representation."
"[MHLO] Add MHLO lowering for cosh

Here's the corresponding old bridge lowering:
https://cs.opensource.google/tensorflow/tensorflow/+/master:tensorflow/compiler/xla/client/lib/math.cc;l=1294-1309;drc=dca7bec824dceaae1d28bd4bce7addb4444e0d3e

getConstantLike wasn't supporting complex numbers, and proper support required
non-trivial work, so in the meanwhile I've hacked up something that works
for static shapes to unblock the JAX use case (which currently only uses static shapes).

PiperOrigin-RevId: 442083258
Add cross-reference to lax.GatherScatterMode from jax.numpy.ndarray.at documentation.
Add a docstring for maps.Mesh
fix build
fix build
fix build
Add another example of using `Mesh`.
[MHLO] Add explicit XLA translation rules for primitives that lack MHLO lowerings that rely on standard_primitive registering a translation rule.

At the moment this change does nothing since standard_primitive already registers these same translation rules. The change is in preparation for removing the behavior of standard_primitive of registering an XLA translation rule.

PiperOrigin-RevId: 442222533
Remove CpuDevice from documentation index.

The corresponding class no longer exists.
Copybara import of the project:

--
391dea76bc8fe264cf26ec93d42147f87847894d by Peter Hawkins <phawkins@google.com>:

Update version numbers after jax/jaxlib 0.3.7 release.

COPYBARA_INTEGRATE_REVIEW=https://github.com/google/jax/pull/10324 from hawkinsp:jaxlib 391dea76bc8fe264cf26ec93d42147f87847894d
PiperOrigin-RevId: 442311051
Prefer `jnp.tile` over `concatenate`
Increase minimum jaxlib version to 0.3.7.

Drop backwards compatibility with older jaxlib versions.
Fix typo in changelog.
[MHLO] Remove most XLA translation rules.

Almost all XLA translation rules have MHLO equivalents at this point, and there are no code paths that use the XLA translation rules in preference to their MLIR equivalents.

PiperOrigin-RevId: 442547482
jnp.take: add documentation for mode parameter default
[sparse] fix bug in bcoo_sort_indices batching rule
[mesh_utils] Support creating device meshes for hybrid networks

Also makes some NFCs to other mesh_utils code.

PiperOrigin-RevId: 442581767
Delete the `mesh` context manager. The replacement for it is `Mesh`.

PiperOrigin-RevId: 442619711
Update the changelog to say sharded_jit is deprecated.
Remove flags set for all v4 TPUs. Topology flags will now be set in libTPU.

Remove deprecated fields `TPU_MESH_CONTROLLER_ADDRESS` and `TPU_MESH_CONTROLLER_PORT`.

PiperOrigin-RevId: 442663216
[JAX] Remove xla.call_translations from JAX.

Oryx appears to be the only user.

PiperOrigin-RevId: 442671871
[JAX] Delete last references to conv/dot translation rules.

Replace references with MHLO equivalents.

PiperOrigin-RevId: 442675847
[XLA] Call translation rule directly in xla.primitive_subcomputation.

Remove:
* XLA jaxpr interpreter
* code for building IR constants
* code for building sharded or donated parameters
* code for building sharding custom calls.
* dead code in sharded_jit.py
PiperOrigin-RevId: 442686730
Temporarily revert fff370d78d107ed81431becf9dfe97eba77863fb by Lukas Geiger <lukas.geiger94@gmail.com>:

Prefer `jnp.tile` over `concatenate`

PiperOrigin-RevId: 442693096
[MHLO] Switch call_tf to use an MHLO lowering.

In passing refactor and fix some bugs in the MHLO helper code:
* mlir.ir_constant() failed to propagate its canonicalize_types argument to its callee.
* Refactor the code to convert an XLA computation to an MHLO module and to merge two MHLO modules from the XLA fallback translation rule path.
* Fix symbol (alpha) renaming of call operator callees when merging MHLO modules.

PiperOrigin-RevId: 442798170
Checkify: support checks on data-independent values.

You can now check values which do not depend on checkified args.

Co-authored-by: Matthew Johnson <mattjj@google.com>
Reapply: fff370d78d107ed81431becf9dfe97eba77863fb by Lukas Geiger <lukas.geiger94@gmail.com>:

Prefer `jnp.tile` over `concatenate`

PiperOrigin-RevId: 442803459
[MHLO] Switch call_tf to use an MHLO lowering.

In passing refactor and fix some bugs in the MHLO helper code:
* mlir.ir_constant() failed to propagate its canonicalize_types argument to its callee.
* Refactor the code to convert an XLA computation to an MHLO module and to merge two MHLO modules from the XLA fallback translation rule path.
* Fix symbol (alpha) renaming of call operator callees when merging MHLO modules.

PiperOrigin-RevId: 442803807
Change default jnp.take_along_axis gather mode to ""fill"".

PiperOrigin-RevId: 442817397
Prevent negative output shapes in shape inference for reduce_window.

The example in yields a negative shape in a jaxpr, which doesn't go well. Clamp the size of the output when the dilated window is larger than the input.

Fixes https://github.com/google/jax/issues/10315
fix: explicit reexport

Explicitly reexports PRNGKeyArray as KeyArray in accordance with PEP 484

See also: https://github.com/python/mypy/issues/11706
Add quotes to install commands in README
Fix name stack bugs
[linalg] Adds `compute_uv` to TPU SVD.

PiperOrigin-RevId: 442864883
Temporarily revert: Change default jnp.take_along_axis gather mode to ""fill"".

Some tests were broken by the change; reverting this PR for the moment while debugging the problem.

PiperOrigin-RevId: 442868210
Add an optional mode= argument to jnp.take_along_axis.

This allows users of jnp.take_along_axis to override the out-of-bounds indexing behavior.
Default to ""clip"", which for the forward computation is identical to the current behavior. In a future change, we will change this to ""fill"".
fix issue
[MHLO] Switch call_tf to use an MHLO lowering (attempt 2).

In passing refactor and fix some bugs in the MHLO helper code:
* mlir.ir_constant() failed to propagate its canonicalize_types argument to its callee.
* Refactor the code to convert an XLA computation to an MHLO module and to merge two MHLO modules from the XLA fallback translation rule path.
* Fix symbol (alpha) renaming of call operator callees when merging MHLO modules.

Attempt 2: In this iteration of the merge_mhlo_modules function, move all the operators into the target module first before doing any symbol table manipulation.

PiperOrigin-RevId: 442904129
[sparse] make bcoo_sum_duplicates a primitive
DOC: lax.linalg.eigh

Fix the inconsistency of variable name between docstring and source code.
Add description of eigenvalues
Apply suggestions from code review

Co-authored-by: Matthew Johnson <mattjj@google.com>
Use lax.broadcasted_iota in jax.nn.one_hot.

Minor cleanup that means we emit one fewer MHLO op, no functional changes intended.
Add comment explaining implementation in promote_types
remove numpy.linalg._promote_arg_dtypes

in favor of numpy.util._promote_dtypes_inexact
Change jnp.take_along_axis to require that its indices are of integer type.

Previously jnp.take_along_axis silently casted its indices to integers if they were not already integers.

PiperOrigin-RevId: 443124521
Fix typo of

and add a basic regression test
[linalg] Adds `full_matrices` option to TPU SVD.

PiperOrigin-RevId: 443163571
[mesh_utils] Add device/slice count checks

PiperOrigin-RevId: 443178279
remove lax._device_put_raw
Skip normalization of unsigned indices
[JAX] Change jnp.take_along_axis to return invalid (e.g. NaN) values for out-of-bounds indices.

Previously, out-of-bounds indices were clipped into range, but that behavior is error prone. We would rather fail in a more visible way when out-of-bounds indices are used. Future changes will migrate other JAX indexing operations to have the same semantics.

PiperOrigin-RevId: 443390170
add in mlir lowering for tokens
Adds a wrapper to sparse tensor dialect, as part of an
an initial prototype of an alternate JAX compilation path
that emits the MLIR MHLO/CHLO dialects instead of classic XLA HLO
together with sparse tensor types.

PiperOrigin-RevId: 443438043
Deprecate remaining functionality in jax.test_util
CHANGELOG: update test_util deprecation discussion
CI: fix flake8 ignore declarations
always lower/compile computations on the AOT jit path

... even trivial ones.
Apply flake8 checks to xmap_test.py
Adds a ability to pass computation directly as module to backend

PiperOrigin-RevId: 443512012
[mhlo] Add result type inference for mhlo.broadcast.

PiperOrigin-RevId: 443527300
[MHLO] Add MHLO lowerings of remaining ops blocked by the lack of complex support in CHLO

The affected ops are: acosh, asinh and atanh
(in addition to cosh which was fixed a few days ago).

acosh implementation in the old bridge: https://cs.opensource.google/tensorflow/tensorflow/+/master:tensorflow/compiler/xla/client/lib/math.cc;l=1181-1216;drc=dca7bec824dceaae1d28bd4bce7addb4444e0d3e

asinh implementation in the old bridge: https://cs.opensource.google/tensorflow/tensorflow/+/master:tensorflow/compiler/xla/client/lib/math.cc;l=1218-1270;drc=dca7bec824dceaae1d28bd4bce7addb4444e0d3e

atanh implementation in the old bridge: https://cs.opensource.google/tensorflow/tensorflow/+/master:tensorflow/compiler/xla/client/lib/math.cc;l=1272-1292;drc=dca7bec824dceaae1d28bd4bce7addb4444e0d3e

PiperOrigin-RevId: 443590210
[MHLO] Switch tan to use CHLO lowering

Currently, it's desugared to sin(x)/cos(x) with upcast because CHLO_TanOp
legalization doesn't support complex numbers.

tan implementation in the old bridge: https://cs.opensource.google/tensorflow/tensorflow/+/master:tensorflow/compiler/xla/client/lib/math.cc;l=1175-1177;drc=dca7bec824dceaae1d28bd4bce7addb4444e0d3e

PiperOrigin-RevId: 443649394
[MHLO] Add MHLO lowering for erf and erfc

erf implementation in the old bridge: https://cs.opensource.google/tensorflow/tensorflow/+/master:tensorflow/compiler/xla/client/lib/math.cc;l=319-336;drc=dca7bec824dceaae1d28bd4bce7addb4444e0d3e

PiperOrigin-RevId: 443665435
Fix typo in _scatter_add_lower_gpu

https://github.com/google/jax/commit/a87b21148c6d7eb9b46c751dde40b17ca0e7b03e doesn't notice `_scatter_add_lower_gpu` using `mlir.lower_fun` instead of `xla.lower_fun`.
I follow the change done in that commit for _scatter_lower.
replace int with operator.index part2

This change align the behavior of `ravel_multi_index`, `split` and `indices` to their `numpy` counterparts.
Also ensure size argument of `nonzero` should be integer.
The changes with `*space` are only simplification
jnp.unwrap: add support for period argument
implement scipy.cluster.vq.vq

also add no check_finite and overwrite_* docstring for some scipy.linalg functions
DOC: link to install instructions in HTML docs
Use `lax.iota` also for `jnp.arange(0, stop)`
Add a dtypes option to cast host arrays when reloading from TS.

PiperOrigin-RevId: 443804229
remove old cond todos
add partial_eval_jaxpr_nounits

No callers yet, but this is to be used for initial-style higher-order
primitives (HOPs, like in lax/control_flow.py) to remove units. Follow-up PRs
will switch the HOPs one-by-one to use this new function.
add docstring
[remove-units] prevent cond partial eval from introducing units
refine const folding
[remove-units] remove units from while partial eval
Revert: https://github.com/google/jax/pull/10221 (2nd revert)

Prefer jnp.tile over concatenate.

jnp.tile generates a jaxpr like the following:
```
{ lambda ; a:i32[720192]. let
    b:i32[1,720192] = reshape[dimensions=None new_sizes=(1, 720192)] a
    c:i32[720192] = squeeze[dimensions=(0,)] b
    d:i32[2,720192] = broadcast_in_dim[
      broadcast_dimensions=(1,)
      shape=(2, 720192)
    ] c
    e:i32[1440384] = reshape[dimensions=None new_sizes=(1440384,)] d
  in (e,) }
```

whereas lax.concatenate generates the following jaxpr:
```
{ lambda ; a:i32[720192]. let
    b:i32[1440384] = concatenate[dimension=0] a a
  in (b,) }
```

It seems the TPU compiler isn't doing as good a job with laying out memory for the formulation with `jnp.tile`. `reshape` in particular can be difficult for it to handle well, and it's best to avoid it when possible.

Since the benefit was marginal (a simpler jaxpr... but is it? Really?) and the cost is real (a user's model broke), we should revert this change.

PiperOrigin-RevId: 444287005
compile_or_get_cached() is now more type-checker friendly

Prior to this change compile_or_get_cached() could end up calling
.as_hlo_text() on an ir.Module. That error is opaque to the type checker unless
it has access to the MLIR Python bindings.
Add missing __init__ file in jax._src.scipy.cluster
[sparse] improve error messages for unimplemented primitives
[sparse] Change the outer call to ir.RankedTensorType to make it call .get().

PiperOrigin-RevId: 444426777
Add CustomCall MLIR lowering for HCB `outside_call` primitive

PiperOrigin-RevId: 444436860
try to improve docs for scipy.linalg with unused parameters
Add unary xeinsum and allow named axis reductions for unary and binary xeinsums
[remove-units] prevent scan partial eval from introducing units
lax.linalg.qr: allow jvp when m == n and full_matrices=True
jax.scipy.qr: fix return type for mode='r'
Add an `emit_python_callback` helper function

PiperOrigin-RevId: 444633097
[remove-units] remove units from api_util.py
[remove-units] prevent ad.py from introducing units
fix jax2tf test
[sparse] Add BCOO attribute `_indices_sorted`.

PiperOrigin-RevId: 444659603
Copybara import of the project:

--
4680b86ff7f468429a0820b4f8c7f64ffd1a1cad by Matthew Johnson <mattjj@google.com>:

[remove-units] prevent scan partial eval from introducing units

PiperOrigin-RevId: 444698613
[remove-units] roll forward, fix dce bug
don't bind scan on jaxpr_known if no outputs
Weaken some newly-added assertions, which are catching some weak type
inconsistencies. Hopefully temporary.

PiperOrigin-RevId: 444770310
Change the default scatter mode to FILL_OR_DROP.

This is a reasonably safe change, because it has no effect on the forward pass of a computation: the default behavior (PROMISE_IN_BOUNDS) also drops out-of-bounds scatters.

This change does however affect the transpose (gradient) of a scatter with out-of-bounds indices: the gradient of a PROMISE_IN_BOUNDS scatter is a PROMISE_IN_BOUNDS gather, and a PROMISE_IN_BOUNDS gather clips out-of-bounds indices into range. This is not mathematically correct: a dropped scatter index does not contribute to the primal output, and so its transpose should yield a zero cotangent.

After this change, the gradient of a default scatter is a gather with a fill value of 0: i.e., the indices that were dropped do not make gradient contributions, which is mathematically correct.

Separately, I am working towards switching out-of-bounds gather() operations to also have FILL_OR_DROP semantics, although that change is more disruptive because a number of users have out-of-bounds indices in their gather()s.

Issues: https://github.com/google/jax/issues/278 https://github.com/google/jax/issues/9839
PiperOrigin-RevId: 444935241
[sparse] bcoo_broadcast_in_dim: default to adding leading batch dimensions
[remove-units] prevent remat's partial eval from introducing units

Even though 'old' remat will someday soon be replaced by 'new' remat in
ad_checkpoint.py, we want to get rid of units first so we need to update the
old thing. (Almost paradoxically, one of the main reasons to get rid of units
is to make upgrading to 'new' remat easier...)

Nothing surprising here: we just had to update remat's partial eval rule from
using trace_to_jaxpr to use trace_to_jaxpr_nounits, and then follow up on all
the consequences.
[remove-units] prevent pjit partial eval from dealing with units
add scan dce rule
Change the default jnp.take mode to ""fill"".

Previously, `jnp.take` defaulted to clamping out-of-bounds indices into range. Now, `jnp.take` returns invalid values (e.g., NaN) for out-of-bounds indices. This change attempts to prevent latent bugs caused by inadvertent out-of-bounds indices.

The previous behavior can be approximated using the ""clip"" or ""wrap"" fill modes.

PiperOrigin-RevId: 445130143
Reexport jaxlib.__version as jax.lib.__version__.

PiperOrigin-RevId: 445186919
Lock down the default Bazel visibility of //jaxlib targets.

PiperOrigin-RevId: 445192548
[sparse] implement sparse rule for lax.concatenate_p
Compatible with RngBitGeneratorOp builder modifications
fix redundant (harmless) axis env extension in pmap partial eval
[remove-units] avoid making xmap partial eval deal with units
Drop Bazel visibility of //jaxlib.

PiperOrigin-RevId: 445230768
[linalg] Update svd test on reconstructed operands and unitary singular vectors.

PiperOrigin-RevId: 445252682
[signal] Update signal detrend test.

PiperOrigin-RevId: 445253797
[remove-units] don't use abstract_unit for dropvar avals
reviewer comments
Make lax.linalg.qr robust to zero-dimensional inputs
broken remat test!
fix scan dce rule

Co-authored-by: Roy Frostig <frostig@google.com>
disable for now
Added random.orthogonal.
Allow sharded_jit on CPU.

sharded_jit won't exist for long, but it works on CPU these days so we may as well enable the test since it's fewer lines of code that way.

PiperOrigin-RevId: 445475116
skip tests
dtypes.result_type: add optional return_weak_type_flag argument
updates maps.mesh() context manager in jax_101/pjit documentation

PiperOrigin-RevId: 445501580
[JAX] Validate that platforms passed to MHLO lowering are known to exist.

In at least one instance a user was passing a XLA client object rather than the name of a platform.

PiperOrigin-RevId: 445510282
[remove-units] remove partial_eval_jaxpr (no callers!)
[remove-units] remove units from custom_jvp/vjp
docs: pin myst-nb to 0.13.2
[remove-units] avoid units in new remat

The new remat implementation called a unit-generating function in its transpose
rule. But there's no need for that!
[remove-units] remove now-dead flax helper function
[remove-units] avoid unit-generating function in lax.reduce
[remove-units] avoid unit-generating function in jax.linear_transpose
[linalg] Add tpu svd lowering rule.

PiperOrigin-RevId: 445533767
Raise a better error when assert fails in mesh_sharding_specs

PiperOrigin-RevId: 445533883
Trivial change for backward compatibility stub.

PiperOrigin-RevId: 445564091","GitHub  commits.
Changes
{func}jax.numpy.linalg.svd on TPUs uses a qdwh-svd solver.
{func}jax.numpy.linalg.cond on TPUs now accepts complex input.
{func}jax.numpy.linalg.pinv on TPUs now accepts complex input.
{func}jax.numpy.linalg.matrix_rank on TPUs now accepts complex input.
{func}jax.scipy.cluster.vq.vq has been added.
jax.experimental.maps.mesh has been deleted.
Please use jax.experimental.maps.Mesh. Please see https://jax.readthedocs.io/en/latest/_autosummary/jax.experimental.maps.Mesh.html#jax.experimental.maps.Mesh
for more information.
{func}jax.scipy.linalg.qr now returns a length-1 tuple rather than the raw array when mode='r', in order to match the behavior of scipy.linalg.qr ({jax-issue})
{func}jax.numpy.take_along_axis now takes an optional mode parameter     that specifies the behavior of out-of-bounds indexing. By default,     invalid values (e.g., NaN) will be returned for out-of-bounds indices. In     previous versions of JAX, invalid indices were clamped into range. The     previous behavior can be restored by passing mode=""clip"".
{func}jax.numpy.take now defaults to mode=""fill"", which returns     invalid values (e.g., NaN) for out-of-bounds indices.
Scatter operations, such as x.at[...].set(...), now have ""drop"" semantics.    This has no effect on the scatter operation itself, but it means that when    differentiated the gradient of a scatter will yield zero cotangents for    out-of-bounds indices. Previously out-of-bounds indices were clamped into    range for the gradient, which was not mathematically correct.
{func}jax.numpy.take_along_axis now raises a TypeError if its indices    are not of an integer type, matching the behavior of
{func}numpy.take_along_axis. Previously non-integer indices were silently    cast to integers.
{func}jax.numpy.ravel_multi_index now raises a TypeError if its dims argument    is not of an integer type, matching the behavior of    {func}numpy.ravel_multi_index. Previously non-integer dims was silently    cast to integers.
{func}jax.numpy.split now raises a TypeError if its axis argument    is not of an integer type, matching the behavior of    {func}numpy.split. Previously non-integer axis was silently    cast to integers.
{func}jax.numpy.indices now raises a TypeError if its dimensions    are not of an integer type, matching the behavior of    {func}numpy.indices. Previously non-integer dimensions were silently    cast to integers.
{func}jax.numpy.diag now raises a TypeError if its k argument    is not of an integer type, matching the behavior of    {func}numpy.diag. Previously non-integer k was silently    cast to integers.
Added {func}jax.random.orthogonal.
Deprecations
Many functions and objects available in {mod}jax.test_util are now deprecated and will raise a    warning on import. This includes cases_from_list, check_close, check_eq, device_under_test,    format_shape_dtype_string, rand_uniform, skip_on_devices, with_config, xla_bridge, and    _default_tolerance ({jax-issue}). These, along with previously-deprecated JaxTestCase,    JaxTestLoader, and BufferDonationTestCase, will be removed in a future JAX release.    Most of these utilites can be replaced by calls to standard python & numpy testing utilities found    in e.g.  {mod}unittest, {mod}absl.testing, {mod}numpy.testing, etc. JAX-specific functionality    such as device checking can be replaced through the use of public APIs such as {func}jax.devices.    Many of the deprecated utilities will still exist in {mod}jax._src.test_util, but these are not    public APIs and as such may be changed or removed without notice in future releases."
"Update jax version number for jax release.

PiperOrigin-RevId: 404262742
[XLA:TPU] Adding approximate nearest neighbor search on TPU feature to JAX.

The JAX primitive would call the XLA python interface for ApproxTopK on TPU,
and fallbacked to sort-and-slice XLA implementation on other platforms.

Auto differntiation have two possible implementations and will be
submitted in seprated CLs.

PiperOrigin-RevId: 404263763
Move xla_bridge.constant to jax.interpreter.xla.pyval_to_ir_constant.

This is a more descriptive name and a better location (next to other facilities for building XLA IR).

Quite a few users of the former xla_bridge.constant() didn't need anything other than uncanonicalized array constants. Change these users to use xla_client.ops.Constant instead; no need for the fancy utility in these cases.

PiperOrigin-RevId: 404270649
Update jax version number after release

PiperOrigin-RevId: 404281188
Port remaining translation rules inside JAX to new style.

PiperOrigin-RevId: 404288551
Improve pytype checking of XLA types inside JAX.

Add an explicit `.pyi` file for jax/_src/lib/__init__.pyi, which works around a bug in pytype where the types of modules that are re-exported becomes `Any`.

[XLA:Python] Fix type declaration for sharding specs.

PiperOrigin-RevId: 404313123
special.lpmn: use more canonical testing approach
[XLA:TPU] Fix approx_top_k output slice.
ApproxTopK should slice the output to k on reduction dim.

PiperOrigin-RevId: 404371519
[JAX] Update users of `jax.ops.index...` functions, which are deprecated.

* replace uses of `jax.ops.index[...]` with `jax.numpy.index_exp[...]`, which is a standard NumPy function that does the same thing.
* remove some redundant uses of `jax.ops.index[...]`, where the expression is passed directly to an indexed accessor function like `.at[...]`.
* update some remaining users of `jax.ops.index_update(x, jax.ops.index[idx], y)` to use the `x.at[idx].set(y)` APIs.

PiperOrigin-RevId: 404395250
stats.multivariate_normal: support broadcasted inputs
Relax the tolerances in one 'lax_scipy_test' case

An upcoming CPU codegen change increases error slightly above the current tolerances.

PiperOrigin-RevId: 404402366
DOC: add conv_dimension_numbers and ConvGeneralDilatedDimensionNumbers to docs
[JAX] move example libraries from `jax.experimental` into `jax.example_libraries`

The `jax.experimental.stax` and `jax.experimental.optimizers` modules are standalone examples libraries. By contrast, the remaining modules in `jax.experimental` are experimental features of the JAX core system. This change moves the two example libraries, and the README that describes them, to `jax.example_libraries` to reflect this distinction.

PiperOrigin-RevId: 404405186
Implements padding support for lax.reduce_window when enable_xla=False.
Also does a few cleanups and adds some tests.

PiperOrigin-RevId: 404468307
Update jax2tf documentation with leading underscore when setting tf.Module() variables, e.g. `m._variables = ...`. Also added a test for this.

PiperOrigin-RevId: 404483990
Fixes a dtype bug in the conversion of dynamic_slice when enable_xla=False.

I tried adding a test, but in this specific case the TFLite converter uses for parameter `operand` the dtype `float32`, and for `start_indices` a tuple consisting of `tf.consts` of dtype `uint32`. I didn't know how to set up this test, but the examples eval shows that the bug is fixed for the TFLite examples.

PiperOrigin-RevId: 404527169
[sparse] improve error for BCOO.fromdense if nse is not specified
[XLA:TPU] Support jvp/vjp in approx_top_k

Copies the jvp implementation lax.sort uses.
Left some comments for future optimizations

PiperOrigin-RevId: 404608289
[JAX] Export ann documentation.

PiperOrigin-RevId: 404615254
Fix broken link to experimental/README.md
odeint: validate *args
jnp.histogramdd: more succinct density computation
Reland: Use variadic reduce on GPU for argmax/argmin

Fixed underlying bug

PiperOrigin-RevId: 404713314
[JAX] Fix sphinx formatting issue

PiperOrigin-RevId: 404797143
Internal change

PiperOrigin-RevId: 404812711
[sparse] add .block_until_ready() to sparse objects
[JAX] Replace users of deprecated jax.lib.xla_bridge functions with more public names.

Change in preparation for removing some function exports from jax.lib.xla_bridge.

PiperOrigin-RevId: 404849899
odeint: args validation allows pytrees
Implements a lowering function for tf.expm1 and adds tests.

PiperOrigin-RevId: 404958939
Make the pjit docs clear about who does local and global communication

PiperOrigin-RevId: 405421833","New features:
(Experimental) jax.distributed.initialize exposes multi-host GPU backend.
jax.random.permutation supports new independent keyword argument
({jax-issue})
Breaking changes
Moved jax.experimental.stax to jax.example_libraries.stax
Moved jax.experimental.optimizers to jax.example_libraries.optimizers
New features:
Added jax.lax.linalg.qdwh."
"Increase precision in LaxBackedScipySpatialTransformTests.testRotationApply

Otherwise the test fails due to small numerical differences.

PiperOrigin-RevId: 538921774
Update versions and changelog post 0.4.12 release
Use `num_tokens` consistently

PiperOrigin-RevId: 538941855
Fix some test failures under H100.

It seems that under H100 matmul precisions are a little lower by default than they historically were on A100. Opt out of tensorcore matmuls for tests that fail due to precision issues if they are enabled.

Happily, this also allows us to remove a number of TPU special cases for the same reason.

PiperOrigin-RevId: 539101155
Do not register the ""interpreter"" backend by default.

This is a dummy backend useful only for debugging that uses XLA's HLO interpreter. It's doubtful many people care about this or even know it exists.

During initialization this plugin spawns two thread pools, which may allocate 2x# cores threads, which is wasteful if they are never used. This may contribute to some users hitting thread limits on their machines.

PiperOrigin-RevId: 539107641
Disable brittle jax2tf test

PiperOrigin-RevId: 539112494
add explanation: `switch` will be converted to `select` when transformed with `vmap` in doc
Use cloudpickle for serializing host callbacks

Add `cloudpickle` as an optional third-party dependency. This module is used
for serializing host callbacks for TPU computations on alternative JAX
backends, and currently not required or used on the standard JAX.

PiperOrigin-RevId: 539165436
Fix test failures in JAX under NumPy 1.25.0rc1.

`jnp.finfo(...)` of an Array type yields:

```
TypeError: unhashable type: 'ArrayImpl'
```

However, `np.finfo(...)` no longer accepts NumPy arrays as input either, so it would be consistent to require the user to pass a dtype where they are currently passing an array.

PiperOrigin-RevId: 539174254
Add missing %s parameter to error message in _cache_write.

PiperOrigin-RevId: 539188601
Fix `BatchTrace.process_call`.

In the line below, `dims_out` is a thunk that produces output dimensions when called.

```
f_, dims_out = batch_subtrace(f, self.main, tuple(dims))
```

However, `BatchTrace.process_call` forgets to call `dims_out()` and uses `dims_out`
instead, which leads to an error:

```
  File "".../jax/_src/interpreters/batching.py"", line 388, in process_call
    return [BatchTracer(self, v, d, src) for v, d in zip(vals_out, dims_out)]
                                                     ^^^^^^^^^^^^^^^^^^^^^^^
jax._src.traceback_util.UnfilteredStackTrace: TypeError: 'function' object is not iterable
```

Calling `dims_out()` like other `BatchTrace` methods fixes the issue.
Remove the monkey patch in jax2tf by moving the function to mlir.py

PiperOrigin-RevId: 539266562
remove unused variable in lax.scan test

The variable was used to parameterize tests, now replaced by another.
Fix jax2tf graph_serialization irfft length issue.

PiperOrigin-RevId: 539405879
[jax2tf] Remove the deprecated experimental_native_lowering option.

This parameter to jax2tf.convert has been deprecated and had no
effect since March 2023.

Also includes some minor cleanup in the management of the default value
for the `native_serialization` flag.

PiperOrigin-RevId: 539577037
Add jax.tree_util.tree_leaves_with_path(tree).

PiperOrigin-RevId: 539609052
Better pprint rule for check_p primitive.

PiperOrigin-RevId: 539703344
No need to return jaxpr from common_infer_params since it is already in `params`

PiperOrigin-RevId: 539715375
Return PositionalSharding instead of GSPMDSharding in custom_partitioning when mesh is not defined

PiperOrigin-RevId: 539719517
Fix cuda12 pip install.

The wheel is now called cudnn89.

Fixes
Update Windows CI.

For the wheel_win_x64.yml builds:
* Don't trigger a full wheel build on push. The branch name was wrong anyway (""master"" instead of ""main""), but likely this action is too expensive to for each PR.
* Disable builds on release for the moment, until we have validated this approach.

Add a new nightly and manually-triggerable Windows build, for a specific Python version.
Don't include the --subcommands on the Bazel command line for Windows CI.

This makes the output very verbose.
build/BUILD.bazel: remove unused import
Increase absolute tolerances in eigh test.

Plumb an atol= option into back_compat jax2tf tests.

PiperOrigin-RevId: 539789381
Change metadata_test to tolerate paths with backslashes.

Fixes a test failure under Windows.

The backslashes end up doubled in the MLIR string because of escaping.
[jax2tf] Add native_lowering_disabled_checks parameter to jax2tf.convert.

Previously, we had a boolean `native_serialization_strict_checks` parameter
that was disabling all safety checks. This mechanism had several
disadvantages:

  * the mechanism did not differentiate between different safety checks.
    E.g., in order to disable checking of the custom call targets, one
    had to disable checking for all custom call targets, and also the
    checking that the serialization and execution platforms are the same.
  * the mechanism operated only at serialization time. Now, the
    XlaCallModule supports a `disabled_checks` attribute to control
    which safety checks should be disabled.

Here we replace the `native_serialization_strict_checks` with
`native_serialization_disabled_checks`, whose values are sequences
of disabled check descriptors.
Checkify: release memory by deleting references to variables after last use.

This is a memory optimization that can be applied to all jaxpr interpreters that
execute op-by-op computation (ie. computation that has not been staged out to
compilation). We loop through the equations of the jaxpr and write/read
variables from an environment. The environment currently holds a reference to
variables throughout the whole evaluation of the jaxpr, even after the variable
is no longer needed. When the variables are backed by large on-device buffers
(which is the case when executing op-by-op) this results in much higher memory
peaks than the user would expect.

This change adds an optimization which removes all variables that have been used
for the last time from the environment after every equation execution. This
optimization should be factored out and added to each jaxpr interpreter, which
will be done in a follow-up.

Note that the most-used jaxpr interpreter, which is reverse-AD, does not have
this issue because it pops every cotangent variable it reads!
(https://github.com/google/jax/blob/9816a6a905d798faad44b3f7aa1dfe8f5ca66433/jax/_src/interpreters/ad.py#L208)

PiperOrigin-RevId: 539942844
Use larger runners for Windows CI.

Simplify build command line: we don't need to work around low-memory low-CPU configurations.
Update OS in windows CI to use 16 core variant.
Try another name for the Windows CI runner.
Fix command line arguments to build.py.
[shape_poly] Improve compile-time shape checking.

JAX shape polymorphism relies on implicit assumptions.
For example, when tracing with input specification `(a, a)`,
we assume that the first two dimensions have the same size
greater or equal to 1.

Here we extend the checking that these assumptions hold. When
we call an `Exported` module from jax, with `jax_export.call_exported`
we check these assumptions statically. However, when we
stage an `Exported` using `XlaCallModule` to be called from
TensorFlow, or when we use TF graph serialization we need
to check these assumptions when we execute and compile
the op (that is when the shapes are available).

To prepare for this compile-time shape checking we add
`Exported.shape_check_module` to produce a serialized
MLIR module containing the shape checking code. This
will be added in a future change to `XlaCallModule`.
Fix corner cases in JAX SVD: a) Clamp negative singular values to zero. b) Return all NaN for matrices with non-finite values.

PiperOrigin-RevId: 540015938
Windows CI: write wheel into usual location.

Should fix installation failure.
Windows CI improvements:

* upload wheel artifacts to the github workflow.
* use XLA from github head in CI builds.
* update release builds to match the CI build configuration.
Fix Windows CI build.
Windows CI: fix bazel repository override command.
Windows CI fixes:
* try single-quoting the bazel override path to avoid \ substitution.
* use a second github checkout action to checkout the XLA repository.
Window CI: fix syntax error.

Try escaping backslashes in bazel override path.

Upload wheels even if tests fail, since they may be useful for debugging.
Windows CI: don't fail-fast.

We expect some of the tests to fail at the moment, and we'd like all of the builds to run to completion even if one of them fails.
Fix test failure in LaxBackedNumpyTest.testFrexp4 on Windows.

NumPy is inconsistent between platforms on what it returns for the exponent of an infinite input. On Linux/Mac it returns 0, and on Windows it returns -1. Normalize the test reference result to use 0 in this case.
jax errors: improve leading info in error docs
CI nightly: update nightly wheel location
DOC: fix formatting in FAQ
Remove matplotlib from the test requirements.

In the Windows CI, we seem to be hitting the following error:

```
=================================== ERRORS ====================================
____________________ ERROR collecting tests/lobpcg_test.py ____________________
tests\lobpcg_test.py:28: in <module>
    from matplotlib import pyplot as plt
C:\hostedtoolcache\windows\Python\3.9.13\x64\lib\site-packages\matplotlib\pyplot.py:52: in <module>
    import matplotlib.colorbar
C:\hostedtoolcache\windows\Python\3.9.13\x64\lib\site-packages\matplotlib\colorbar.py:19: in <module>
    from matplotlib import _api, cbook, collections, cm, colors, contour, ticker
C:\hostedtoolcache\windows\Python\3.9.13\x64\lib\site-packages\matplotlib\contour.py:13: in <module>
    from matplotlib.backend_bases import MouseButton
C:\hostedtoolcache\windows\Python\3.9.13\x64\lib\site-packages\matplotlib\backend_bases.py:45: in <module>
    from matplotlib import (
C:\hostedtoolcache\windows\Python\3.9.13\x64\lib\site-packages\matplotlib\text.py:16: in <module>
    from .font_manager import FontProperties
C:\hostedtoolcache\windows\Python\3.9.13\x64\lib\site-packages\matplotlib\font_manager.py:1548: in <module>
    fontManager = _load_fontmanager()
C:\hostedtoolcache\windows\Python\3.9.13\x64\lib\site-packages\matplotlib\font_manager.py:1543: in _load_fontmanager
    json_dump(fm, fm_path)
C:\hostedtoolcache\windows\Python\3.9.13\x64\lib\site-packages\matplotlib\font_manager.py:957: in json_dump
    with cbook._lock_path(filename), open(filename, 'w') as fh:
C:\hostedtoolcache\windows\Python\3.9.13\x64\lib\contextlib.py:119: in __enter__
    return next(self.gen)
C:\hostedtoolcache\windows\Python\3.9.13\x64\lib\site-packages\matplotlib\cbook\__init__.py:1804: in _lock_path
    with lock_path.open(""xb""):
C:\hostedtoolcache\windows\Python\3.9.13\x64\lib\pathlib.py:1252: in open
    return io.open(self, mode, buffering, encoding, errors, newline,
C:\hostedtoolcache\windows\Python\3.9.13\x64\lib\pathlib.py:1120: in _opener
    return self._accessor.open(self, flags, mode)
E   PermissionError: [Errno 13] Permission denied: 'C:\\Users\\runneradmin\\.matplotlib\\fontlist-v330.json.matplotlib-lock'
```

The use of matplotlib is only for an optional debugging feature anyway, so just make it an optional dependency.
Add NumPy as a test requirement.

The Windows CI currently installs all of the test requirements before building jaxlib, but NumPy is needed to build jaxlib.
Previously this came transitively via matplotlib.
[shape_poly] Add shape polymorphism support for LU on TPU

PiperOrigin-RevId: 540276889
Tag the wheels generated by the Windows CI as dev versions.
Raise a good error message when a ShapeDtypeStruct is closed over as a const which is not a valid arg during execution.

PiperOrigin-RevId: 540296131
Ensure effect indices are updated when constvars are modified. This resolves a bug where conditional Read<N> effect indices N were sometimes referring to the incorrect invars.

Fixes

PiperOrigin-RevId: 540304925
Remove older plugin device integration.

Users of this mechanism should migrate to the newer PJRT plugin registration mechanism (see the comments on discover_plugins() in this file).
Fix test failure in back_compat_test under CUDA 12.

PiperOrigin-RevId: 540355756
Made scatter-transpose more efficient
Added argument jax.linearize(..., has_aux=...)
[shape_poly] Change lowering for shape polymorphism to simplify shape refinement

We insert a ConvertOp as the only use of an input argument in a shape polymorphic
`main` function. This helps the downstream shape refinement because it will set the type
of input arguments to static shapes, and this can invalidate the
module if the argument appears as the result of a function, or if
it appears as the input to a custom_call with output_operand_alias
attribute.
See b/287386268.
Custom PRNG: fix incorrect assertion in select lowering rule
Allow None to be passed to in_shardings and out_shardings. The default is still UNSPECIFIED to handle edge cases around the old semantics where None is treated as fully replicated.

The semantics are as follow:

* if the mesh context manager is not provided, None will be treated as UNSPECIFIED for both in_shardings and out_shardings

* If the mesh context manager is provided, None will be treated as fully replicated as per the old semantics.

This will make sure that we don't break existing code depending on None meaning replicated but also start making the transition to None meaning UNSPECIFIED for jit and pjit.

PiperOrigin-RevId: 540705660
Remove redundant stablehlo import.

The duplicate import confuses pytype.

PiperOrigin-RevId: 540707118
Enable colored output in pytest under github actions.
[shape_poly] Fix the lowering of lax.dynamic_shapes with shape poly

lax.dynamic_slice clamps the start indices to ensure the access
is in bounds, but when lowering with shape polymorphism we use
stablehlo.RealDynamicSliceOp, which is a version of SliceOp
and does not have the clamping. We clamp explicitly during lowering.

This changes the lowering in very limited circumstances: when we have
a lax.dynamic_slice with shape polymorphism and a dynamic slice size,
under native lowering only, and only when the start indices were out
of bounds.
[shape_poly] Enable the test for shape polymorphism for custom_linear_solve on TPU.

This is now supported since we support linalg.lu, which was the blocker.

PiperOrigin-RevId: 540747582
Deduplicate references closed over across branches of a lax.cond.

This fixes a correctness issue that could crop up when doing `run_state(cond)`.

PiperOrigin-RevId: 540795172
[shape_poly] Refactor and simplify tests.

Removed the poly_axes parameter and replaced with
polymorphic_shapes, which is a standard way to specify
polymorphic shapes.
Add live-analysis memory optimization to more jaxpr interpreters.

Follow-up on 8a85e76a5cff0897eccbafc48da836b6f6704e5d

PiperOrigin-RevId: 540857501
Fix xla_bridge_test.py test failures.

We are splitting the plugins in the enviroment variable using os.pathsep; we should make sure to use that as the separator in the test.
Fix test failure in lax_control_flow_test.py on Windows due to line ending differences.
Fix Windows portability problem in dtypes_test.py
Disable a test that fails under Windows with a NumPy exception.
Document how to enable concurrent kernel tracing on GPU.
Raise a RuntimError if plugin initialization fails, rather than logging at info priority.

We don't want plugin initialization to fail silently.

To work around this, either remove the plugin, or disable it via the JAX_PLATFORMS variable.
Fix the docs build
Don't allow the use of stale cache entries in Github actions CI.

The use of restore-keys allows the pip cache to match stale cache entries. This allows for partial cache reuse, but means the cache also grows without bound.
At the time of writing, the pip cache is 4.7GB, which is much larger than just downloading the wheels we need (20MB)! So it's probably a net positive not to reuse caches even if it requires some redundant downloads.
[shape_poly] linalg.eig: shape polymorphism with native serialization on CPU

The backwards compatibility tests to be added separately.

PiperOrigin-RevId: 541122069
Add support for dynamic shapes to jax.fft.

The idea is that we take all the values that can contain dimension sizes
from the descriptor (shape, strides_in, strides_out) and we pass them as
1-d tensor operands. We also pass as an operand the output_shape, so that
we can use the hlo.CustomCallOp `indices_of_output_shapes` attribute to
tell the shape refinement how to compute the shape of the result.

We keep the old descriptor and the ducc_fft registration for the old
C++ custom targets for backwards compatibility (for 6 months). That behavior
is tested by back_compat_test.py.

The one downside of this implementation is that it moves some of the
ducc-specific logic from ducc_fft.py (in jaxlib) into fft.py (in jax). This
was necessary because that code computes with dimensions that are now
dynamic. In JAX we have support for evaluating dynamic shapes and turning
them into 1-d tensors.

Also added backwards compatibility test for dynamic_ducc_fft and kept the
old test for ducc_fft.

PiperOrigin-RevId: 541168692
[shape_poly] DynamicReduceWindow: add shape poly support with native serialization.

PiperOrigin-RevId: 541216925
Generate topology from external TPU names and topology parameters.

This should allow the topology API to be usable on C API / Cloud TPU.

PiperOrigin-RevId: 541232667
[shape_poly] DynamicRngBitGenerator: add shape poly support with native serialization.

Also add backwards compatibility tests.

PiperOrigin-RevId: 541541496
[ROCm]: Updates for container and build script
	-Updated dockerfile.ms
	-Updated build script to switch building against XLA repo
  	-Update CI script
	-Update jaxlib setup.py to add rocm version
[jax2tf] Refactor the backward compatibility tests.

We prepare for having multiple test file, and we want to share
the helper functions.
Remove unused native_serialization_strict_checks option.

PiperOrigin-RevId: 541798654
[jax2tf] Rename some backwards compatibility tests.

I find the names of the linear algebra kernels in lapack and cusolver
to be very obscure. So, I add the name of the linalg primitives to
the names of the tests.
Errors: avoid printing tracer repr for concretization errors
Disable some problematic rotation tests
random.key: error for non-scalar seeds.

Previously, this function's implementation would implicitly map over non-scalar
seed inputs. This is not the behavior we want, because in the future we may want
to allow arrays of integers as a single seed.
Fix problematic rotation tests
Update docstring of jax.tree_util.tree_leaves_with_path.

PiperOrigin-RevId: 541884268
Fix xla_bridge_test test failures under Windows.
Add a CI presubmit that renders the documentation.
[XLA:Python] Fix __cuda_array_interface__.

Adds a test for __cuda_array_interface__ that does not depend on cupy.

Fixes https://github.com/google/jax/issues/16440

PiperOrigin-RevId: 541965361
Add a warning if a non-allowlisted plugin is used.

This is mostly to set user expectations: if we don't know a plugin passes the JAX test suite, we issue a warning.
Fix test failure in array_interoperability_test due to 64-bit dtype squashing.

PiperOrigin-RevId: 542026628
[ROCm]: Updates defaults in build script
Rename Github actions so they have more consistent naming.
Fix symbol collision when merging MLIR modules.

PiperOrigin-RevId: 542039479
Issue warning if JAX_USE_PJRT_C_API_ON_TPU=false

```
$ JAX_USE_PJRT_C_API_ON_TPU=0 python3 -c ""import jax""
/home/skyewm/jax/jax/_src/cloud_tpu_init.py:77: UserWarning: JAX_USE_PJRT_C_API_ON_TPU=0 will no longer be supported in an upcoming future release. Please file an issue at https://github.com/google/jax/issues if you need this setting.
  warnings.warn(
```
profiler_test.py fixes and add coverage to Cloud TPU CI

* Add deps to test requirements, including in new
  `collect-profile-requirements.txt` (to avoid adding tensorflow to
  `test-requirements.txt`).
* Use correct Python executable `ProfilerTest.test_remote_profiler`
  (`python` sometimes defaults to python2)
* Run computations for longer in `ProfilerTest.test_remote_profiler`,
  othewise `collect_profile` sometimes misses it.
Fix `jax.clear_backends()` on Cloud TPU

PiperOrigin-RevId: 542279072
Use `EncapsulateFunction` utility.

PiperOrigin-RevId: 542299099
Documentation improvements for XlaCallModule.disabled_checks.

PiperOrigin-RevId: 542475518
[shape_poly] linalg.svd: shape polymorphism for native serialization on CPU

PiperOrigin-RevId: 542483203
[shape_poly] linalg.qr: shape polymorphism with native lowering on CPU

PiperOrigin-RevId: 542489216
[shape_poly] linalg.cholesky: add support for shape polymorphism with native lowering on CPU

PiperOrigin-RevId: 542497269
[jax2tf] Refactor the backwards compatibility tests.

We have two goals:

   * separate out the tests that depend on TensorFlow (back_compat_tf_tests.py)
   * separate out the boilerplate (back_compat_test_util.py) so that we can use it as a library to set up similar compatibility tests for custom calls that are not used directly by the JAX core.

PiperOrigin-RevId: 542500216
Make JAX-Triton calls serializable.

PiperOrigin-RevId: 542524794
Zlib compress kernel proto.

PiperOrigin-RevId: 542529065
Add a link to the Apple Metal plugin to the JAX README.

Remove references to cloud TPU on colab, since support was dropped in JAX 0.4. Users should use TPUs via Kaggle or via Cloud TPU VMs.
Ignore `JAX_USE_PJRT_C_API_ON_TPU=false` user warning raised.

PiperOrigin-RevId: 542570578
Silence pytype errors under an upcoming pytype change.

PiperOrigin-RevId: 542652577
Update JAX's XlaExecutable.cost_analysis and related plumbing so it works on Cloud TPU

* Exposes LoadedExecutable.cost_analysis via pybind
* Updates XlaExecutable.cost_analysis to try
  LoadedExecutable.cost_analysis, then fallback to the client method.

PiperOrigin-RevId: 542671990
Jax 0.4.13 release.","NOTE: This is the last JAX release that will include Python 3.8 support
Changes
jax.jit now allows None to be passed to in_shardings and
out_shardings. The semantics are as follows:
For in_shardings, JAX will mark is as replicated but this behavior
can change in the future.
For out_shardings, we will rely on the XLA GSPMD partitioner to
determine the output shardings.
jax.experimental.pjit.pjit also allows None to be passed to
in_shardings and out_shardings. The semantics are as follows:
If the mesh context manager is not provided, JAX has the freedom to
choose whatever sharding it wants.
For in_shardings, JAX will mark is as replicated but this behavior
can change in the future.
For out_shardings, we will rely on the XLA GSPMD partitioner to
determine the output shardings.
If the mesh context manager is provided, None will imply that the value
will be replicated on all devices of the mesh.
Executable.cost_analysis() works on Cloud TPU
Added a warning if a non-allowlisted jaxlib plugin is in use.
Added jax.tree_util.tree_leaves_with_path.
Bug fixes
Fixed incorrect wheel name in CUDA 12 releases (); the correct wheel
is named cudnn89 instead of cudnn88.
Deprecations
The native_serialization_strict_checks parameter to
{func}jax.experimental.jax2tf.convert is deprecated in favor of the
new native_serializaation_disabled_checks ({jax-issue})."
"Split parts of lax_numpy_test.py into separate test files.

Why? The main test file is getting too big and this hinders iteration on individual tests

PiperOrigin-RevId: 478130215
Re-land https://github.com/google/jax/pull/12588 with minor fixes

PiperOrigin-RevId: 478130221
[ROCm] Upgrade to ROCm 5.3 and associated enhancements
Fix book links
Bump styfle/cancel-workflow-action from 0.10.0 to 0.10.1

Bumps [styfle/cancel-workflow-action](https://github.com/styfle/cancel-workflow-action) from 0.10.0 to 0.10.1.
- [Release notes](https://github.com/styfle/cancel-workflow-action/releases)
- [Commits](https://github.com/styfle/cancel-workflow-action/compare/0.10.0...0.10.1)

---
updated-dependencies:
- dependency-name: styfle/cancel-workflow-action
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Add unsafe_buffer_pointer to _DeviceArray

PiperOrigin-RevId: 478544225
[sparse] Move broadcasting_vmap to sparse util.

PiperOrigin-RevId: 478566197
`get_device_buffers()` on ShardedBuffer if config.jax_array is enabled because jax.Arrray does not work with ShardedBuffer since jax.Array is like a ShardedBuffer.

PiperOrigin-RevId: 478578230
[typing] add full annotations for lax_numpy setops
Update version and CHANGELOG for jax 0.3.21 release
Add an internal jtu.sample_product test decorator.

This decorator samples from a cartesian product of parameterized tests
without materializing the full product explicitly.

Update lax_test.py to use the new decorator.

On my desktop machine, this improves the timing for `pytest
--collect-only tests/lax_test.py` from 6.8s to 1.9s.
Create `Array`s from `__getitem__` and `__iter__`. This is done by `device_put`ting from the host to default device which is suboptimal. But there is a TODO to fix this!

PiperOrigin-RevId: 478691051
[sparse] Add conversions between BCSR and BCOO.

PiperOrigin-RevId: 478816413
Add types to jax/_src/numpy/util.py
jnp.prod & jnp.sum: promote to default integer type rather than int64/uint64
jax.jacobian: propagate function signature to transformed function
Test that array layout is preserved in Python callbacks

PiperOrigin-RevId: 478852392
[dynamic-shapes] small fix to einsum (and indexing)
Fix collect_profile _src import
[typing] add annotations to jax.numpy.linalg
[typing] add annotations to numpy.fft
Set JAX_PLATFORMS=tpu,cpu on TPUs
Add set up message for JAX_PLATFORMS
Update set up message
Update message and change log
Migrate api_test, lax_numpy_test, and lax_vmap_test to
jtu.sample_product.

Gives a ~2x improvement in pytest --collect-only timing for
lax_numpy_test.
Add `host_local_array_to_global_array` and `global_array_to_host_local_array` for enabling transition to jax.Array.

Also support `FROM_GDA` for `jax.Array` as a backwards compatible change so that users can continue to use that until they transition to jax.Array. Its currently required because of usage like `in_axis_resources = (FROM_GDA, FROM_GDA, P('data'), None)` and changing this on users side will require input from users so we as JAX can just support it as a temporary thing since GDA and Array act similarly in pjit.

PiperOrigin-RevId: 479035326
Add sharding to `DeviceArray` and `ShardedDeviceArray` as a compatibility change to rollout `jax.Array`.

Also expose `device_replica_id_map` since that is important API for checkpointing to find all the unique shards of an Array. You can also use this to calculate the unique indices in a sharding (which is what `sda.one_replica_buffer_indices` does)

PiperOrigin-RevId: 479072520
Address comments for change log
[typing] add types for jax.numpy.polynomial
Add `addressable_shards` to SDA and DA as a compatibility API to match with `jax.Array`. This will aid in transition to `jax.Array`.

PiperOrigin-RevId: 479115126
[typing] overloads for jnp.linalg.svd & jnp.linalg.qr
Handle FP8 types.

PiperOrigin-RevId: 479148993
test: fix LaxNumpyTest:testConcatenate
improve jit(f).lower(duck_args) and pjit(f).lower(duck_args)

Co-authored-by: Yash Katariya <yashkatariya@google.com>
add input/output sharding to executable protocol
Move promote_like_jnp to jax.test_util
jnp.average: support tuple axis
Take `shardings` as a parameter to `deserialize` and `run_deserialization` instead of `mesh` and `pspecs`.

PiperOrigin-RevId: 479346552
Switch lax_numpy_indexing_test to use jtu.sample_product.
Rename Executable to LoadedExecutable within jax.

PiperOrigin-RevId: 479423951
make device_put work with Sharding 2nd arg

Co-authored-by: Yash Katariya <yashkatariya@google.com>
[typing] add type annotations to lax.linalg functions
add test, small fixes

Co-authored-by: Yash Katariya <yashkatariya@google.com>
[sparse] Bug fix in _validate_bcsr.

PiperOrigin-RevId: 479452053
fix -O / PYTHONOPTIMIZE bug

fixes

I'm not sure how to write test cases for PYTHONOPTIMIZE=1 (without growing our
whole test matrix), so I'm leaving this untested...
Expand support for __jax_array__ in jnp.array.

This relates to the long discussion in and.
[jax2tf] Allow the use of DimPolynomial with jnp.array and binary operations

Prior to this the user had to explicitly call core.dimension_as_value whenever
using a potentially polymorphic shape in the computation, e.g., x +
core.dimension_as_value(x.shape[0]). Furthermore, jnp.array(x.shape[0])
would fail.

Now, these operations are allowed implicitly,
and the user can call `jnp.array(x.shape[0])`.

This uses an internal extensibility mechanism called __jax_array__
that is experimental and probably not fully implemented.
Update scipy version in jax.scipy.fft
Use input-output aliasing for jaxlib GPU custom calls.

Previously we had no way to tell XLA that inputs and outputs of GPU custom calls must alias. This now works in XLA:GPU so we can just ask XLA to enforce the aliasing we need.

PiperOrigin-RevId: 479642543
Add default setting for TENSORFLOW_ROCM_COMMIT
Revert: Use input-output aliasing for jaxlib GPU custom calls.

Previously we had no way to tell XLA that inputs and outputs of GPU custom calls must alias. This now works in XLA:GPU so we can just ask XLA to enforce the aliasing we need.

This seems to be causing some test failures downstream, so reverting this for the moment until I can debug them.

PiperOrigin-RevId: 479670565
make device_put(prngkeyarray, sharding) for Array

Co-authored-by: Yash Katariya <yashkatariya@google.com>
Co-authored-by: Roy Frostig <frostig@google.com>
Make `is_fully_replicated` and `is_fully_addressble` a property rather than a method.

Why?

1. Because it's easy to cache a property than a method with only the `self` argument. (See below for article)

2. There's no harm in making them a property because both of them return a bool without any side-effects and are cached (so its fast). Why cache `is_fully_addressable`? Because its very expensive to calculate when you have 1000s of devices.

PiperOrigin-RevId: 479850850
implement bint arrays (opaque dtypes), add padding rules

Co-authored-by: Sharad Vikram <sharad.vikram@gmail.com>
Copybara import of the project:

--
6d2aaac2454117d54997243714c1a009827707ca by Matthew Johnson <mattjj@google.com>:

implement bint arrays (opaque dtypes), add padding rules

Co-authored-by: Sharad Vikram <sharad.vikram@gmail.com>
PiperOrigin-RevId: 479883102
[typing] annotate lax.slicing
[typing] add annotations to jax.scipy.fft
[typing] add annotations to jax.scipy.ndimage
Reapply: Use input-output aliasing for jaxlib GPU custom calls.

Previously we had no way to tell XLA that inputs and outputs of GPU custom calls must alias. This now works in XLA:GPU so we can just ask XLA to enforce the aliasing we need.

It turns out some users are relying on the API contract of the custom calls within serialized HLO remaining stable. For the moment, we reapply only the Python changes. The C++ code is already tolerant of both aliased and unaliased outputs, and this gets us all the benefit of saving a copy. We can break backwards compatibility on the serialized HLO after users upgrade their saved HLO to the aliased version.

PiperOrigin-RevId: 480134780
Copybara import of the project:

--
d39bdefb33a19e407c352df27fb04127f4fe8a1d by Peter Hawkins <phawkins@google.com>:

Migrate more tests from jtu.cases_from_list to jtu.sample_product.

COPYBARA_INTEGRATE_REVIEW=https://github.com/google/jax/pull/12717 from hawkinsp:sampletest d39bdefb33a19e407c352df27fb04127f4fe8a1d
PiperOrigin-RevId: 480136538
[sparse] BCSR fromdense and todense.

PiperOrigin-RevId: 480141918
Add changes accidentally omitted from
https://github.com/google/jax/pull/12717
Lift `lambda x: x` to the top level so that we don't recompile on every invocation of `process_allgather`.

PiperOrigin-RevId: 480155482
Add input-output aliasing annotations for LAPACK calls on CPU.

PiperOrigin-RevId: 480156067
Fix compilation failure in lapack kernel under msan.

a_size wasn't defined, but it would only be caught under memory sanitizer.

PiperOrigin-RevId: 480176934
Fix the type annotation of return type of `device_buffer` and `device_buffers` which return `ArrayImpl` instead of DeviceArray.

PiperOrigin-RevId: 480181798
Turn on cpp pjit py default

PiperOrigin-RevId: 480185387
[typing] add type annotations to jax.scipy.linalg
Add weak_type attribute to `Array` since it exists on DA (but doesn't exist on SDA).

PiperOrigin-RevId: 480223116
Rolling forward https://github.com/google/jax/pull/12707 after rollback, due to changes in relatively trivial jax.numpy shape validation code failed in some downstream user tests.

PiperOrigin-RevId: 480229237
Add support for calculating the device_assignment when there are no inputs to `jit` and `pjit`.

Also look at the shardings inside the jaxpr for `sharding_constraint_p` and `pjit_p` primitives since with `jax.Array`, each `with_sharding_constraint`/`pjit` inside a computation can contain a different sharding (so we need to check if the device_assignment is the same).

Also the output is `committed` if there are jaxpr shardings inside the computation via `with_sharding_constraint`/`pjit` or if any of the inputs are committed or `output_sharding` is specified.

Co-authored-by: Matthew Johnson <mattjj@google.com>
PiperOrigin-RevId: 480256796
[jax2tf] Implement jax2tf(pjit) for experimental_native_lowering

This implementation is for the case jax2tf.convert(pjit(f_jax)),
that is, the `pjit` appears at the top-level of the function to
be lowered.
Clarify docs for `fori_loop`, noting that negative or custom increments are not supported.

PiperOrigin-RevId: 480317277
changelog: add missing github commit links
Support MANUAL collectives in top-level xmaps

It's a bit of a weird use-case, since MANUAL mode is meant for xmaps that
are nested inside pjits, but it doesn't hurt us to support it.

PiperOrigin-RevId: 480342531
Remove deprecated functionality from jax.test_util

PiperOrigin-RevId: 480360504
Update WORKSPACE and setup.py for jaxlib 0.3.22 release","Changes
Add JAX_PLATFORMS=tpu,cpu as default setting in TPU initialization,
so JAX will raise an error if TPU cannot be initialized instead of falling
back to CPU. Set JAX_PLATFORMS='' to override this behavior and automatically
choose an available backend (the original default), or set JAX_PLATFORMS=cpu
to always use CPU regardless of if the TPU is available.
Deprecations
Several test utilities deprecated in JAX v0.3.8 are now removed from
{mod}jax.test_util."
"Update TF commit for release

PiperOrigin-RevId: 446555288
DOC: remove mentions of units
Updates values after jax and jaxlib 0.3.10 release

PiperOrigin-RevId: 446623299
Enable effects for cond in while loop
Enable batching rule for debug_print

Co-authored-by: Matthew Johnson <mattjj@google.com>
Updated documentation for approx_*_k to specify when the top k is guaranteed to be ordered.

PiperOrigin-RevId: 446708610
[JAX] Split the ""gpu"" platform in internal JAX usage into separate ""cuda"" and ""rocm"" platforms.

In particular, separate ""cuda"" from ""rocm"" in MHLO lowering rules. This change is in preparation for refactoring how GPU-specific lowering rules are implemented in JAX, allowing both kind of rules to coexist.

[PJRT] [XLA:Python] Allow the user to specify a particular platform (e.g., ""cuda"" or ""rocm"") when creating a GPU device.

PiperOrigin-RevId: 446737518
Enable AD rules for `debug_print`
jax.scipy.sparse.linalg: support sparse matrices as operators
Consolidate hip_prng and cuda_prng.

The Python code in jaxlib to build AMD HIP (ROCM) and NVIDIA CUDA kernels is almost identical. Share that Python code rather than duplicating it.

This change only updates the prng kernels; the idea would be to follow it with similar changes consolidating the other Python code in jaxlib between CUDA and HIP.

PiperOrigin-RevId: 446761784
[mhlo] Add result type inference for mhlo.pad.

PiperOrigin-RevId: 446780637
Make jaxlib extension libraries Bazel deps of //jaxlib.

Previously we depended on various .so files directly so they were pulled into the jaxlib wheel build, but it seems to work to add the libraries in question to //jaxlib and depend on that in the usual way.

It appears if a py_library() is used as a data-dependency of another rule, Bazel includes any transitive C++ extension deps, and that's what we want.

PiperOrigin-RevId: 446802592
fix ad_checkpoint.checkpoint vmap rule
Use tf.io.gfile.rmtree instead of tf.io.gfile.remove as `remove` does not work on some file systems.

PiperOrigin-RevId: 446803505
[sparse] add bcoo_update_layout utility
Enable effects for cond

Co-authored-by: Matthew Johnson <mattjj@google.com>
Speedup index computations for integer indexing
Prevent unnecessary `expand_dims`
Remove unnecessary `asarray` call
Do not call `concrete_aval` for basic integer index checks
Speedup `_expand_bool_indices` when passing basic integer indices
Add jaxpr test to ensure that no normalization happens for constant indices
Simplify `_normalize_index`
Expand constant indexing test to check `slice`
Simplify isinstance check
Fix check for numpy bool indices
api_util: make shaped_abstractify respect raise_to_shaped
[linalg] Update qdwh to prevent underflow in norm estimation.

PiperOrigin-RevId: 446887070
add scan dce rule tests, fix bugs
gate scan dce rule on after_neurips flag
Merge remaining CUDA and ROCM Python code.

Completes work started in https://github.com/google/jax/pull/10556

PiperOrigin-RevId: 447005344
Update workspace for jaxlib release for testing
DOC: add FAQ entry on jit-compiling methods
Revert: Make concatenate allow concatenation on dynamic dimensions

Using -1 as a dynamic dimension is an MHLO convention not a JAX-level convention.

PiperOrigin-RevId: 447052267
Split CUDA and HIP C++ code in jaxlib into separate directories.

PiperOrigin-RevId: 447062506
Return wrapper type in pytree rule for TF's DictWrapper.

Fixes

PiperOrigin-RevId: 447063792
Refactor custom call building code in jaxlib to use a helper function.

Refactoring only, no functional changes intended.

This should fix a jaxlib build issue on Windows: we only have one constructor of layouts, and it explicitly requests an int64 type.

Fixes https://github.com/google/jax/issues/10474

PiperOrigin-RevId: 447076192
Remove unused jaxlib build targets.

//jaxlib:lapack is unused, and once it is gone we can merge //jaxlib:mhlo_helpers into //jaxlib.

PiperOrigin-RevId: 447084931
Fixes to enable JAX to build on ROCm.
[linalg] Add matmul precision scope for svd.

PiperOrigin-RevId: 447095391
feat: officially support Python 3.10
[jax2tf] Update JAX limitations.

JAX has made progress in coverage of primitives on TPU. This PR
updates those limitations.
Fix unit test failures on ROCm.
[MHLO] Migrate GPU select_and_gather_add translation rule to MHLO.

PiperOrigin-RevId: 447472634
[jax2tf] Update jax2tf limitations.

It seems that TF has made progress and more JAX primitives can now
be converted correctly to TF. This PR updates the limitations.
minor edits to clarify pjit docs
remove count attribute and total_ordering from core.Var

Originally we used the 'Var.count' attribute to ensure Var instances were
printed consistently regardless of context, even though only their object id
was load-bearing. That is, Var.count was only used for pretty printing. (
added a total_ordering on Var for reasons out of scope of JAX's core code.)

But revised our pretty-printing so as not to use Var.count. Instead it
chose how to pretty-print Var instances based on their order of appearance in a
jaxpr. That meant Var.count really wasn't useful anymore. So this PR removes
Var.count.

In fact, Var.__repr__ and JaxprEqn.__repr__ were made confusing after,
since they could print variable names totally different from the names that
would appear when the same JaxprEqn or Var objects were printed as part of a
jaxpr. That is, before this PR< we might have a jaxpr which printed like:

```python
import jax

def f(x):
  for _ in range(3):
    x = jax.numpy.sin(x)
  return x

jaxpr = jax.make_jaxpr(f)(3.)
print(jaxpr)

_, eqn, _ = jaxpr.jaxpr.eqns
print(eqn)
```

Notice the variable names in the equation pretty-print don't correspond to any
in the jaxpr pretty-print!

So this PR changes JaxprEqn.__repr__ and Var.__repr__ to show Var object ids.
DOC: clarify jupytext instructions
Add retry logic to `cloud_tpu_init.py` when API response fails

PiperOrigin-RevId: 447509510
Fix the bug where allow_uneven_axes was set to True by default instead of reading from the function argument.

PiperOrigin-RevId: 447510102
[linalg] Add svd on zero matrix.

PiperOrigin-RevId: 447521398
Internal change

PiperOrigin-RevId: 447549479
DOC: update myst-nb to v0.15.0
[MHLO] Add CHLO lowering for top_k

This follows the introduction of chlo.top_k in the diffbase.

PiperOrigin-RevId: 447581682
Small fix in FAQ documentation
Rollback of PR  ""Improve performance of array integer indexing""

This PR has broken some user models so needs to be investigated further before merging.

PiperOrigin-RevId: 447756000
use `upgrade` option in defining our latest upgrade flag

PiperOrigin-RevId: 447783540
Disabled one and enabled several unit tests for ROCm.
[linalg] Fix a bug in computing derivatives of scipy.special.lpmn.

PiperOrigin-RevId: 447807140
Attach keepalive to pmap executable

PiperOrigin-RevId: 447810195
Add nightly `__version__` string if building jaxlib nightly

PiperOrigin-RevId: 447822974
[MHLO] Migrate mhlo.all_reduce to HLO_CompatibleOperandsAndResultType

This runs into the currently unsupported feature in Python bindings which prevents it from taking advantage of the type inference functionality provided by HLO_CompatibleOperandsAndResultType.

PiperOrigin-RevId: 447844880
Add the nightly dev version to `__version__` of jaxlib.

PiperOrigin-RevId: 448001375
Make CUDA install instructions copy-pasteablee
[linalg] Extend svd test coverage to input of zero and near-zero elements.

PiperOrigin-RevId: 448019846
Update custom interpreter tutorial
fix grad(..., argnums=-1), regressed in
Add sequencing effects design note
Add a sort_eigenvalues option to lax.linalg.eigh().

An upcoming change to add a more scalable QDWH-based TPU symmetric eigendecomposition requires that we can obtain the TPU eigenvalues unsorted. The option already exists in XLA, so we simply need to plumb it through to the lax primitive.

PiperOrigin-RevId: 448047584
Change non-array arguments to jax.lax.linalg functions to be keyword-only arguments.

PiperOrigin-RevId: 448066207
improve partial_eval_jaxpr_custom

* add caching via weakref_lru_cache
* add inst_in argument (needed for fixedpoints for loop primitives, in
  follow-up PR), update callers not to over-instantiate inputs (previously I
  had used a convention where call primitives would just stage out eqns with
  all inputs instantiated, for expediene)
* add ensure_out_unknowns and ensure_out_inst arguments, analogues of
  `instantiate` on e.g. partial_eval_jaxpr, jvp_jaxpr, etc (also neede for
 fixpoints of loop primitives)
* better dce in remat_partial_eval (e.g. prune unused residuals)
Fixed a typo in `cloud_tpu_init.py`
Avoid generating trivial gathers when reversing array
make core_test.py pass with core.call
[mhlo] Add result type inference for mhlo.cholesky.

PiperOrigin-RevId: 448108980
Fix pseudocode in lax.switch() documentation to accept variadic operands.

PiperOrigin-RevId: 448241093
Change implementation of jax.scipy.linalg.polar() and jax._src.scipy.eigh to use the QDWH decomposition from jax._src.lax.qdwh.

Remove jax._src.lax.polar.

PiperOrigin-RevId: 448241206
DOC: explicitly enable dollarmath extension
fix: mypy warning
Remove unnecessary __future__ imports
tweak mlir shape_tensor helper, fewer MHLO ops
PR: Fix typos for occured, appearence, this, is, a, for, agressiveness, t…

Imported from GitHub PR https://github.com/tensorflow/tensorflow/pull/55768

Fix typos for occured, appearence, this, is, a, for, agressiveness, to, instrution, on.
Copybara import of the project:

--
531b97d4b242a5642a221349ca0bd3132d6539a2 by Yulv-git <yulvchi@qq.com>:

Fix typos for occured, appearence, this, is, a, for, agressiveness, to, instrution, on.

Merging this change closes

PiperOrigin-RevId: 448444384
Fix version skew in api_test.py

Issue was introduced in https://github.com/google/jax/commit/8b073d482ec897e4cbda0e7650d6cfc9e8fb9811

PiperOrigin-RevId: 448546982
Add support for padded arrays in QDWH algorithm.

This change is in preparation for adding a jit-table QDWH-eig implementation.

PiperOrigin-RevId: 448571523
Add profile_version to CompileOptions

profile_version is added to CompileOptions to support XLA compilation profile.

PiperOrigin-RevId: 448599962
remove jnp.array case for handling buffers w/ aval=None

This functionality was added in, but was superceded by later changes
which ensured that we never produce DeviceArrays with their 'aval' property set
to None (even when indexing ShardedDeviceArrays with integers, which used to be
a problem case).
add core.closed_call_p
Enable colors when we are using a terminal or IPython","Changes
{func}jax.lax.eigh now accepts an optional sort_eigenvalues argument
that allows users to opt out of eigenvalue sorting on TPU.
Deprecations
Non-array arguments to functions in {mod}jax.lax.linalg are now marked
keyword-only. As a backward-compatibility step passing keyword-only
arguments positionally yields a warning, but in a future JAX release passing
keyword-only arguments positionally will fail.
However, most users should prefer to use {mod}jax.numpy.linalg instead.
{func}jax.scipy.linalg.polar_unitary, which was a JAX extension to the
scipy API, is deprecated. Use {func}jax.scipy.linalg.polar instead."
"Upgrade the bazel version to 5.1.1

PiperOrigin-RevId: 441338363
Add tests for higher order primitives
Finish jax release

PiperOrigin-RevId: 441342919
[jax2tf] Fixes conv bug. The filter dims are allowed to be bigger than the input dims if the padding type is ""SAME"".

PiperOrigin-RevId: 441395527
[MHLO] Change jax.xla_computation() to use MHLO lowering internally.

Change in preparation for removing the non-MHLO lowering path.

PiperOrigin-RevId: 441460875
[MHLO] Separate registrations for collective and initial_style primitives from the XLA translation rule registration.

Change in preparation for removing XLA translation rules for many primitives. However, even after the MHLO switch we still need to tag collective and initial_style primitives.

PiperOrigin-RevId: 441474701
Fix arguments to schur translation rule
Expose the input and output sharding on the compiled object.

PiperOrigin-RevId: 441514572
Drop dead code now that the minimum jaxlib version is 0.3.2.
better errors: check for callability of lax.control_flow arguments
Remove mention of six package from jaxlib build instructions.

I verified that six is no longer needed.
Add libstdc++ workaround for conda users.
Remove use of xla.lower_fun in SVD translation rule.

This is the only use of xla.lower_fun that is still needed (as a fallback) when the non-MHLO path is removed.

PiperOrigin-RevId: 441538472
Fix polydiv kokoro tests
[MHLO] Add an MHLO lowering for rng_bit_generator.

PiperOrigin-RevId: 441628987
Restructure checkify files.

PiperOrigin-RevId: 441726310
[MHLO] Add MHLO lowerings for name_p and unreachable_p.

PiperOrigin-RevId: 441746096
Expose CopyToRemoteDevice and MakeCrossHostReceiveBuffer in Python bindings.

PiperOrigin-RevId: 441746248
Disable remote_transfer_test on GPU. It currently crashes.

PiperOrigin-RevId: 441762941
[MHLO] Add MHLO lowerings for FFT ops.

PiperOrigin-RevId: 441768017
[MHLO] Add MHLO lowerings for triangular_solve, cholesky, and schur.

PiperOrigin-RevId: 441769591
add some simple iree tests

This passes, though two of the interesting tests fail with what might be IREE
bugs (and so are currently skipped):

```shell
JAX_PLATFORMS='iree' pytest -n auto tests/core_test.py tests/api_test.py -k Dynamic
```
Deprecate jax.experimental.loops, step 2.

Add deprecation warning and remove the tests.

PiperOrigin-RevId: 441828243
Remove unused comments related to Python 2 compatibility.

PiperOrigin-RevId: 441831488
Fix incorrect cross-reference breaking readthedocs build.
Avoid broadcasting the input and indices in jnp.take_along_axis.

In we added broadcasting to fix an apparent wrong-gradient bug. This
worked, but the real issue was that we were mishandling the case where the
array dimension is of size 1 but the index dimension is not. In that case we
in essence gathered a bunch of out of bounds indices, leading to apparently
incorrect gradients.

The previous fix (broadcasting) worked, but was suboptimal in terms of
performance (). However, we can fix both bugs by removing the broadcasting
and handling the missing case correctly.

Fixes.
Comment on implementation of unzip2 & unzip3
Improve precision of chlo.sinh.

Update chlo.sinh lowering to match xla::Sinh(), see https://cs.opensource.google/tensorflow/tensorflow/+/master:tensorflow/compiler/xla/client/lib/math.cc;l=1311?q=xla%20sinh

[JAX] Use chlo.sinh instead of the XLA client library HLO lowering.

PiperOrigin-RevId: 441851170
[sparse] gate gpu lowering test to gpu backends
Temporarily disable integer index check in jnp.take_along_axis.

This check broke some JAX users; disable it to give time to fix them.

PiperOrigin-RevId: 441993808
Jax 0.3.7 and jaxlib 0.3.7 release.
Fix PRNGKeyArray.broadcast_to with scalar shape
Deprecate DeviceArray.tile method
Skip remote_transfer_test on cloud TPU.

The necessary API isn't yet implemented for Cloud TPU.

PiperOrigin-RevId: 442058546
[JAX] Don't pass non-integer indices to jnp.take_along_axis

Previously JAX casted non-integer indices to integers, but in the future it will issue an error (as np.take_along_axis does). This change adds an explicit integer cast to callers that were passing non-integer values.

PiperOrigin-RevId: 442062233
2nd attempt at jax/jaxlib 0.3.7 release.","Fixed a performance problem if the indices passed to jax.numpy.take_along_axis were broadcasted ().
jax.scipy.special.expit and jax.scipy.special.logit now require their arguments to be scalars or JAX arrays. They also now promote integer arguments to floating point.
The DeviceArray.tile() method is deprecated, because numpy arrays do not have a tile() method. As a replacement for this, use jax.numpy.tile ()."
"Add a default cuda installation path and more explicit installation paths for CUDA jaxlib.

```
# Installs Cuda 11 with Cudnn 8.2
$ pip install jax[cuda] -f https://storage.googleapis.com/jax-releases/jax_releases.html

$ pip install jax[cuda=11,cudnn=82] -f https://storage.googleapis.com/jax-releases/jax_releases.html

$ pip install jax[cuda=11,cudnn=805] -f https://storage.googleapis.com/jax-releases/jax_releases.html
```

PiperOrigin-RevId: 404134291
Use `cuda11_cudnn82` instead of `cuda=11,cudnn=82` because the latter one is a syntax error

PiperOrigin-RevId: 404240654
Delete xla_bridge.xla.dtype_to_etype, replace it with jax.interpreters.xla.dtype_to_primitive_type.

The new version does *not* canonicalize dtypes. We should be canonicalizing dtypes as part of tracing to a jaxpr, not in any way as part of XLA lowering. In all cases as best I can tell the dtypes from the callers are already canonical anyway.

jax.interpreters.xla is also a better location: I'm not even sure why we have a bunch of random things in xla_bridge any more, so it makes sense to consolidate them in xla.py along with the other registrations for things like avals.

Also delete the unused function xla_bridge.supported_numpy_dtypes.

PiperOrigin-RevId: 404246574
Update jax version number for jax release.

PiperOrigin-RevId: 404262742","New features:
jax.random.choice and jax.random.permutation now support
multidimensional arrays and an optional axis argument ()
Breaking changes:
jax.numpy.take and jax.numpy.take_along_axis now require array-like inputs
(see)"
"Use `Array` in `__repr__` instead of the class name which is `ArrayImpl`.

PiperOrigin-RevId: 477465432
Update version numbers after release.
[dynamic-shapes] Add basic slicing support

If e.g. `x : f32[10, n]` then we want to handle Python expressions like `x[0]`.
To do that, we can use a generalized version of `dynamic_slice` which allows
dynamic slice sizes (where the result shape depends on those slice sizes).

Co-authored-by: Sharad Vikram <sharad.vikram@gmail.com>
Replace `jax.xla.DeviceArray` private type with the new public type `jax.Array`.

PiperOrigin-RevId: 477582562
Add HLOSharding's repr to OpShardingSharding since its more compact.

PiperOrigin-RevId: 477587916
Convert shardings in `jit` path to OpShardingSharding to avoid recompilation when semantically similar shardings are used in `jit`.

PiperOrigin-RevId: 477626548
Raise cond index into tracing context in case of effects.

So even if the cond is not data dependent at all, it's included in the
dynamic trace, and effects can be discharged.
Update xla_sharding import path to new location

We are moving the TensorFlow APIs outside of XLA and will remove the old
path soon.

PiperOrigin-RevId: 477701988
jnp.take: add optional arguments forwarded to lax.gather
random.permutation: use unique_indices=True for efficiency
Run tests in multiprocess_gpu_test only if the backend is GPU.

PiperOrigin-RevId: 477750739
Remove unused jax_unique_mhlo_module_names flag.

PiperOrigin-RevId: 477778135
Fix `process_allgather` to work with `jax.Array`.

PiperOrigin-RevId: 477793014
[typing] use jax.Array annotations in random.py
Disable dynamic_api_test and custom_object_test.py with jax.Array. Enable it back when support for it is added. Also don't use xla_shape since its deprecated.

PiperOrigin-RevId: 477833061
Make debug_nans_test.py pass with jax_array=1. Both with enabled and disabled jax_array flag and --pdb_post_mortem, we fall to the same place.

PiperOrigin-RevId: 477850567
Roll back https://github.com/google/jax/pull/12588 because of test failures

PiperOrigin-RevId: 477871341
Improve the checks done in `Array` and apply them to all `Sharding`s rather than just `XLACompatibleSharding`.

Also check the symmetric difference of sharding and `_arrays` devices.

PiperOrigin-RevId: 478017409
Pin default jax.tools.colab_tpu.setup_tpu driver version.

Prior to this change, we were defaulting to the TPU nightly driver
version. We should instead pin to the version associated with the
default jaxlib version that Colab uses.
Fix typo in faq.rst.

Fixed a small typo in the FAQ: ""inthe"" -> ""in the"".
Make persistent compilation cache warn instead of raise an error on cache read/write failures

Fixes. Setting the env var `JAX_RAISE_PERSISTENT_CACHE_ERRORS=true` will revert to the original behavior of raising exception instead of warning.

Also makes JAX_DUMP_IR_TO work when the persistent cache is enabled.
Add jax_array coverage to debug_nans_test

PiperOrigin-RevId: 478079509
Fix jax2tf import so it works with both the latest tensorflow release (2.10.0) and tf-nightly","Changes
The persistent compilation cache will now warn instead of raising an
exception on error ({jax-issue}), so program execution can continue
if something goes wrong with the cache. Set
JAX_RAISE_PERSISTENT_CACHE_ERRORS=true to revert this behavior."
"[sparse] validate BCOO on instantiation
Remove the cached check in aot compiled call in MeshExecutable because a fast C++ dispatch path exists. This leads to a better error message which contains the shape and arg value.

PiperOrigin-RevId: 494815311
Finish jax and jaxlib release 0.4.0

PiperOrigin-RevId: 494833878
Remove the specialized sm versions for testing. It caused release wheels to ship without correct sm versions compiled in.

PiperOrigin-RevId: 494854373
Update CHANGELOG to indicate that 0.4.0 was yanked.

PiperOrigin-RevId: 494868884
Update values for release 0.4.1

PiperOrigin-RevId: 494889744","Changes
Support for Python 3.7 has been dropped, in accordance with JAX's
{ref}version-support-policy.
We introduce jax.Array which is a unified array type that subsumes
DeviceArray, ShardedDeviceArray, and GlobalDeviceArray types in JAX.
The jax.Array type helps make parallelism a core feature of JAX,
simplifies and unifies JAX internals, and allows us to unify jit and
pjit.  jax.Array has been enabled by default in JAX 0.4 and makes some
breaking change to the pjit API.  The jax.Array migration
guide can
help you migrate your codebase to jax.Array. You can also look at the
Distributed arrays and automatic parallelization
tutorial to understand the new concepts.
PartitionSpec and Mesh are now out of experimental. The new API endpoints
are jax.sharding.PartitionSpec and jax.sharding.Mesh.
jax.experimental.maps.Mesh and jax.experimental.PartitionSpec are
deprecated and will be removed in 3 months.
with_sharding_constraints new public endpoint is
jax.lax.with_sharding_constraint.
If using ABSL flags together with jax.config, the ABSL flag values are no
longer read or written after the JAX configuration options are initially
populated from the ABSL flags. This change improves performance of reading
jax.config options, which are used pervasively in JAX.
The jax2tf.call_tf function now uses for TF lowering the first TF
device of the same platform as used by the embedding JAX computation.
Before, it was using the 0th device for the JAX-default backend.
A number of jax.numpy functions now have their arguments marked as
positional-only, matching NumPy.
jnp.msort is now deprecated, following the deprecation of np.msort in numpy 1.24.
It will be removed in a future release, in accordance with the {ref}api-compatibility
policy. It can be replaced with jnp.sort(a, axis=0)."
"make tests compatible with recent pillow versions
Improve text and code formatting in jax2tf docs

* add missing `python` code marker to get syntax highlighting
* fix code formatting by replacing double-backtick with single backtick for
  inline code formatting
* add missing close parenthesis in `tf.function(...)` sample code

Whitespace changes:

* add blank lines between text and code blocks for readability
* add blank lines to separate Python functions and `with` blocks from following
  code to improve code readability and clarify intent
* decrease indentation in code blocks to be flush-left for consistency
removes the jax.mask and jax.shapecheck APIs.

PiperOrigin-RevId: 463026577
Remove dependencies on masking.py
Delete the masking.py
Update changelog for jax/jaxlib v0.3.15 release
pytest: remove obsolete warning filters
Make the `_check_shapes_against_resources` check general for all `XLACompatibleSharding`s by looking at the opsharding proto of the shardings.

PiperOrigin-RevId: 463161459
Add a opsharding equality function until HLOSharding class is exported via pybind. The equality behavior is the same as HloSharding.

PiperOrigin-RevId: 463162918
remove dead code: jax._src.util.taggedtuple
Fix linear_jvp for multiple_results primitives with Zero tangents.

PiperOrigin-RevId: 463190431
Add `on_commit_callback` to put the responsibility of renaming the directories on the users of the serialization library. This will also fix the GCS atomic rename issue where the users can write a success file when the commit is successful and check the existence of that file before deserialization.

PiperOrigin-RevId: 463238200
[jax2tf] Improved documentation and tests for pjit
Remove jax.experimental.loops. See CHANGELOG

PiperOrigin-RevId: 463297399
[loops] Remove jax.experimental.loops.

Has been deprecated since April 2022.
See issue for an alternative API.
Bump version numbers after 0.3.15 release

PiperOrigin-RevId: 463344160
Remove deprecated function jax.tree_util.tree_multimap
Add help docstrings for debugger

Refactor colab debugger to use more from base class
Fix debugger linenumbers
DOC: fix pytrees example cross-reference
Cache the replacement of `FROM_GDA` to actual shardings present on GDA and check for sharding equality via opsharding.

PiperOrigin-RevId: 463388009
Fix ConcretizationError in nested calls.
err on `None` predicate to `lax.cond`
remove control example
Rename xla::PjRtExecutable to xla::PjRtLoadedExecutable

PiperOrigin-RevId: 463460929
fix bug noticed by @levskaya
Internal testing change

PiperOrigin-RevId: 463618541
Cache subjaxprs when lowering to MLIR functions.

This will only actually dedup the subjaxpr when
jax_experimental_subjaxpr_lowering_cache is enabled.
Add webpdb option
add an optional fastpath for api_util.shaped_abstractify

also add a benchmark for it, 8.7ms -> 0.2ms on my machine

Co-authored-by: Yash Katariya <yashkatariya@google.com>
Enable compatibility with older versions of web_pdb
Allow jax.pmap(f).lower() to take jax.core.ShapedArray.

This will be useful for calling lower on the result of
jax.eval_shape().
Log the key used for barrier

PiperOrigin-RevId: 463741926
[mhlo] Add result type inference for mhlo.clamp.

PiperOrigin-RevId: 463743558
Fix the `gda_xla_sharding_match` benchmark which was regressing. This was happening because that function was executed from top to bottom a couple of times and each time a new mesh object was created violating the already created cache which doesn't happen in real life.

```
gda_xla_sharding_match_(256, 8)_PartitionSpec('x', 'y')     21.8ms ± 2%              1.3ms ± 2%  -93.80%          (p=0.008 n=5+5)
gda_xla_sharding_match_(256, 8)_PartitionSpec(None,)        21.8ms ± 4%              1.3ms ± 1%  -93.92%          (p=0.008 n=5+5)
gda_xla_sharding_match_(256, 8)_PartitionSpec('x',)         21.8ms ± 3%              1.3ms ± 1%  -94.11%          (p=0.008 n=5+5)
gda_xla_sharding_match_(256, 8)_PartitionSpec('y',)         21.8ms ± 3%              1.3ms ± 0%  -94.12%          (p=0.008 n=5+5)
gda_xla_sharding_match_(256, 8)_PartitionSpec(('x', 'y'),)  21.8ms ± 3%              1.3ms ± 1%  -94.07%          (p=0.008 n=5+5)
gda_xla_sharding_match_(128, 8)_PartitionSpec('x', 'y')     13.9ms ± 6%              1.3ms ± 1%  -90.85%          (p=0.008 n=5+5)
gda_xla_sharding_match_(4, 2)_PartitionSpec('x', 'y')       5.72ms ±10%             1.25ms ± 1%  -78.15%          (p=0.008 n=5+5)
gda_xla_sharding_match_(16, 4)_PartitionSpec('x', 'y')      6.17ms ±11%             1.25ms ± 1%  -79.71%          (p=0.008 n=5+5)
gda_xla_sharding_match_(16, 4)_PartitionSpec(('x', 'y'),)   6.17ms ±10%             1.26ms ± 2%  -79.61%          (p=0.008 n=5+5)
```

PiperOrigin-RevId: 463760534
Makes `flax.optim` import future proof.

PiperOrigin-RevId: 463820883
Increase shard counts for TPU tests in an attempt to fix CI timeouts under asan.

PiperOrigin-RevId: 463830139
update cond partial eval to so eqn effects match branch jaxprs'

Also add some new tests, including some skipped ones, for how effects should
interact with jax.linearize (I think...).
Turn on coordination service by default for all JAX users.

Coordination service is the new implementation of JAX's distributed service. The API remains the same, and eventually will be expanded for newer features such as error reporting.

PiperOrigin-RevId: 463870794
Re-land after internal fixes.

maintain an alias to `jax.tree_util.tree_map` in the top level `jax` module

PiperOrigin-RevId: 463885774
add cond dce rule and custom-policy partial eval rule
add while_loop custom-policy partial eval rule
fix broken link in ""NNs with TFDS"" notebook
promise to flatten trees in left-to-right order
Add debugging tools under `jax.debug` and documentation

Co-authored-by: Matthew Johnson <mattjj@google.com>
Co-authored-by: Lena Martens <lenamartens@google.com>
Export `HloSharding` via pybind which is a C++ wrapper around OpSharding proto.

PiperOrigin-RevId: 463992136
add custom-policy partial eval and dce rules for pmap

Also add a failing test for xmap.
add test for custom_linear_solve + new remat
Update debugging docs to mention pjit
Internal change

PiperOrigin-RevId: 464052046
Delete sharded_jit

PiperOrigin-RevId: 464081692
tweak checkify docs.
Checkify: support checkify-of-pjit.
Add `OpShardingSharding` and add a function that can calculate indices from an opsharding proto

PiperOrigin-RevId: 464123009
Move MHLO to XLA

As part of the OpenXLA project, we're splitting XLA outside of TensorFlow.
MHLO belongs to OpenXLA and we're relocating it nested under XLA to allow the
split. Some further directory layout change will likely happen over time.

PiperOrigin-RevId: 464126676
Change jaxdb->jdb and add option to force a backend
Make `is_compatible_aval` an optional method which sharding interfaces can implement to raise a more meaningful error. Otherwise lower to opsharding and catch the error if it fails.

PiperOrigin-RevId: 464147877
fix ad_checkpoint.checkpoint caching issue

Also add a config option to switch to the new checkpoint implementation
globally (default False for now), as the first step in replacing and then
deleting old remat.
Enable debugging primitives in `pjit` on CPU/GPU

PiperOrigin-RevId: 464208326
Repr the op_sharding for printing.

PiperOrigin-RevId: 464304033
Add jaxlib guards for debugging_primitives_test

PiperOrigin-RevId: 464453175
Update XLA.
MAINT: unpin autodoc-typehints
Refactor state out of `for_loop`
Add dtype arg to jnp.concatenate and update tests
Add dep on protobuf and build protobufs if protoc is available.

PiperOrigin-RevId: 464645042
[sparse] remove deprecated _dedupe() method
Add a multihost test for Array on non-continuous mesh

PiperOrigin-RevId: 464659865
Fix debugger scope issue
Remove deprecated jax.experimental.stax

The new location is jax.example_libraries.stax
Update CHANGELOG.md
Fix issue where input/output tokens did not play nicely with donate_argnums

PiperOrigin-RevId: 465094684
Making sharding an arg to MHLO callback lowering
Use a global module unique key. This way multiple experiments can be run and key error won't happen in WaitForBarrier.

PiperOrigin-RevId: 465148564
Export more methods in HloSharding

PiperOrigin-RevId: 465152451
Annotate nn.initializers
Throw error earlier for misformatted string in jax.debug.print
Make `PyTreeDef` pickleable

PiperOrigin-RevId: 465306184
in sharp bits notebook, add back iaml blog post link
Add enhanced bug report template
rollback of https://github.com/google/jax/pull/9596

Why? Shape annotations are inaccurate and cause pytype failures

PiperOrigin-RevId: 465337386
Make _device_assignment and _addressable_device_assignment a cached property because having a lru_cache as a decorator on the method with only `self` leaks memory. See the document below. In this case, its okay to make them a property rather than a method. Its also consistent with device_set.

PiperOrigin-RevId: 465339349
Squashed commit of the following:

commit 0b4c3f05a49037be93eb0612113e193f3a8d61c5
Author: Sudhakar Singh <sudhakars@nvidia.com>
Date:   Thu Aug 4 09:53:04 2022 -0700

    change the path

commit 2c629739c1cfa45d848a2cf7109d329c1262e6ac
Author: Sudhakar Singh <sudhakars@nvidia.com>
Date:   Wed Aug 3 16:37:46 2022 -0700

    rename file to reflect current objective

commit ef46bcae6cd66d6fe7b04bd6d8aeed42c4f3ddfa
Author: Sudhakar Singh <sudhakars@nvidia.com>
Date:   Wed Aug 3 15:56:32 2022 -0700

    correct formatting

commit e5da60ad855592d5f150612f65ad679872160132
Author: Sudhakar Singh <sudhakars@nvidia.com>
Date:   Wed Aug 3 15:26:32 2022 -0700

    Add multi-node multi-GPU JAX tests

    This adds multi-node multi-GPU test for `jax.distributed.initialize`.
    Presently, this is expected to run on a nightly basis. Under the hood,
    SLURM is used to launch the `pytest <test_name>` commands on multiple
    nodes.

    Resolves:
bug-report.yaml: fix yaml syntax error
bug-report.yml: fix markdown formatting
prepare to switch to new remat

This commit involves a few things, which are all united in being about landing
the new remat (aka new checkpoint) implementation:
  * add benchmarks for new remat eager performance, and some caching to make those
    benchmarks fast
  * warn when the old-remat-exclusive `concrete` feature is used, with an
    actionable message pointing to the new recommended approach involving static_argnums
  * add the static_argnums parameter to both new and old remt
  * update docstrings (and de-duplicate them to)
  * add new tests, especially around caching and errors/warnings
Update jax/_src/ad_checkpoint.py

Co-authored-by: Roy Frostig <froystig@users.noreply.github.com>
Update jax/_src/ad_checkpoint.py

Co-authored-by: Roy Frostig <froystig@users.noreply.github.com>
prepare to switch to new remat

This commit involves a few things, which are all united in being about landing
the new remat (aka new checkpoint) implementation:
  * add benchmarks for new remat eager performance, and some caching to make those
    benchmarks fast
  * warn when the old-remat-exclusive `concrete` feature is used, with an
    actionable message pointing to the new recommended approach involving static_argnums
  * add the static_argnums parameter to both new and old remt
  * update docstrings (and de-duplicate them to)
  * add new tests, especially around caching and errors/warnings
Use XLA extension tokens instead of output tokens

PiperOrigin-RevId: 465389589
[sparse] Enable batch mode of COO matmat from cusparse kernels.

PiperOrigin-RevId: 465405490
Make LOBPCG test plots compatible with bazel.

bazel test invocations would previously not work, because the lobpcg_test did not include the appropriate flag parsing and absl test invocations when run as a script. This change fixes that, and in addition shards tests and removes needless and redundant slow tests with larger matrix sizes to make the tests finish in a smaller amount of time. Now, generated pngs with debug information are properly reported via the undeclared outputs directory when the environment variable to emit them, LOBPCG_EMIT_DEBUG_PLOTS, is set to a non-falsy value.

PiperOrigin-RevId: 465465731
Annotate nn.initializers

This was done to expose an Initializers type annotation that can be used
in other libraries.
Plumb `env` through jax_test.

PiperOrigin-RevId: 465473378
Refactor BUILD files to avoid individually naming Python dependencies.

Add a parametric py_deps() macro for adding Python package dependencies for Bazel rules.

Fix build failure with dangling matplotlib reference.

PiperOrigin-RevId: 465562141
small tweaks for bint ad
Bump the XLA version because HLOSharding.is_replicated is not available at version 81.

PiperOrigin-RevId: 465565834
Disable tsan on linalg_test on TPU.

The test is too slow under tsan and times out in CI.

PiperOrigin-RevId: 465570229
add trivial convert_element_type padding rule
Fix the `__eq__` check of OpShardingSharding and add a test to check the cache for device_indices_map. Also, check for OpSharding replication via the `is_op_sharding_replicated` function.

PiperOrigin-RevId: 465586777
Update the TF commit hash
Enable debug callbacks in checkpoint

PiperOrigin-RevId: 465601044
Remove experimental warning from xmap

It doesn't have bugs, or at least not noticeably more than the rest of our code :)
Canonicalize all shardings to `OpShardingSharding` throughout pjit. Places where pspec is needed, `parsed_flatten_op_sharding` function is used to retrieve the pspec. The major places are global_to_local and local_to_global. Rest of the changes are just threading through OpShardingSharding.

I have added comments to places to explain things.

Dependence on MeshPspecSharding in Partial eval has been removed. It now depends on OpShardingSharding.

TODO: Fix the round trip through MeshPspecSharding in vmap batching handlers.
PiperOrigin-RevId: 465621165
Add an OpShardingSharding codepath for vmap for pjit. In xmap cases, still round trip through MeshPspecSharding.

PiperOrigin-RevId: 465629138
Don't depend on mesh for `UNSPECIFIED`. Use `OpShardingSharding` for that since its now available and pjit accepts it.

PiperOrigin-RevId: 465641117
DOC: fix docstring formatting error
SDA was taking the slow path in `is_op_sharding_replicated` was used. This is a temporary fix to unblock deepmind.

PiperOrigin-RevId: 465658262
Error in debug print if unused arguments are provided
Treat all shardings on a single device as equivalent.

PiperOrigin-RevId: 465685287
prototype unfettered element types in jaxpr arrays

From where comes the set of element types in jaxprs? Historically, from NumPy
and XLA element types. But why would jaxprs be constrained to those? After all,
jaxprs are just symbols, my friends. Those symbols need to be grounded when we
translate to another compiler's IR, or when we have input or output values with
a jaxpr evaluation. So if we're lowering we need ways to map jaxpr types to
lowered IR types, and also ways to map any operations allowed on these types to
lowered IR operations. And we may want Python objects representing values of
these types. But once we have those mappings we don't need to be limited by
NumPy/XLA element types.

Within jaxprs, we also need to handle transformations with these types.

In this change we started unfettering jaxpr element types from their vestigial
NumPy/XLA constraints. Concretely, that means:
  * allowing ShapedArray to have any object for its 'dtype' attribute
  * added core.custom_eltype set
  * extended existing handlers for ShapedArray to call the corresponding custom
    element type handlers
  * mlir lowerings of some fully-element-type-polymorphic primitives
  * tests

In this PR, we only actually use these new extension points in tests.

The applications to come that we have in mind are:
  * arrays of prngkeys (and even custom prngs, as well as reuse error checking)
  * arrays of bounded int type for dynamic shapes (and especially raggedness)
  * float0 arrays
We do *not* have in mind opening these mechanisms up to users. Think of these
as yet another JAX-internal extension point, like all our existing 'handler'
tables.

Jargon-wise, we may want to distinguish:
  * 'eltype' meaning jaxpr element types
  * 'dtype' meaning numpy dtypes (an existing convention)
  * 'etype' meaning hlo/mhlo element types (an existing convention)
But the code doesn't model this jargon at the moment, since we left a lot of
attributes and helper functions referring to 'dtype'.

We haven't yet handled all the element-type-polymorphic primitives. Here's the
list we've thought of so far:
  * [x] broadcast
  * [ ] reshape
  * [x] transpose
  * [ ] pad
  * [x] slice, dynamic_slice, dynamic_update_slice
  * [ ] concatenate
  * [ ] all_to_all, gather, scatter, all_gather, collective_permute
  * [x] make empty scalar (only appears in internal-about-to-lower-jaxpr dialect)
That last one is interesting: we introduced it so that the scan lowering rule,
which lowers first to a ""lowered jaxpr dialect"" involving only those eltypes
which correspond to etypes and involving only while_loop, ds/dus, etc, can be
made simpler. Otherwise we'd need scan, itself a fully-eltype-polymorphic
primitive, have a more complicated lowering rule.

We also haven't handled AD. Our main applications (at least the first two
listed above) don't involve AD types, so it seemed good to skip for now.

Co-authored-by: Roy Frostig <frostig@google.com>
handle test failure in diffrax under new remat

This change is to unblock landing new remat. I don't fully understand how, but
diffrax's bounded_while_loop (a tricky bit of code!) is hitting a condition I
thought was impossible. So let's handle that case!

I didn't add a test for it because I don't want to encode it as supported
behavior, and because handling it is actually simple.

Really I just want to unblock new-remat-by-default...
add api_boundary, fix flax failure with new-remat-by-default
Internal change

PiperOrigin-RevId: 465705931
Rolling forward after test failures caused roll-back (from use of np.empty).

PiperOrigin-RevId: 465712458
Add early support in pjit for single device shardings. Also lift the restriction of needing the mesh context manager when `config.jax_array` is enabled.

PiperOrigin-RevId: 465712981
Increase minimum NumPy version to 1.20.

Per NEP 29, support for 1.19 ended on Jun 21, 2022.
Check if axis_ctx is SPMDAxisContext because `manual_axes` always exists.

PiperOrigin-RevId: 465831158
MHLO CompareOp pretty printing

PiperOrigin-RevId: 466051458
Add a test for simulating training run `_pjit_lower` cache hit in pjit.

PiperOrigin-RevId: 466055367
Pin a minimum version of sphinx-book-theme to avoid bad pip dependency
resolution.
Fix sample code block formatting

Add missing colon to format sample code as a code block rather than a quote.
[mhlo] Add result type inference for mhlo.fft.

PiperOrigin-RevId: 466081681
Bump EnricoMi/publish-unit-test-result-action from 1 to 2
jnp.linalg.matrix_rank: support stacks of matrices
Enable receives in TPU callbacks and add tests

PiperOrigin-RevId: 466103306
Calculate indices for pjit/xmap (basically `Mesh`) cases via `op_sharding_to_indices` function. Calculation for pmap indices uses the `sharding_spec_indices` path that it currently takes.

PiperOrigin-RevId: 466120527
Move protobuf deps to be optional.

PiperOrigin-RevId: 466123822
Create JAX Enhancement Proposals (JEPs).

Migrate existing design documents to JEPs.
Ensure PartitionSpec is picklable.

PartitionSpec instances currently don't roundtrip correctly through pickle, wrapping any value in an extra tuple, e.g.

```
> pickle.loads(pickle.dumps(PartitionSpec('model', 'batch')))
> PartitionSpec(('model', 'batch'),)
```

PiperOrigin-RevId: 466188998
link to both closed and open enhancement proposals

PiperOrigin-RevId: 466212251
Add `spmd_axis_name` to vmap to allow constraining mapped PartitionSpecs.
Various debugger improvements
- disables globals
- can opt out of filtering frames
- can limit number of frames
[jax2tf] Fixes a bug in testing.

https://github.com/google/jax/pull/11575 introduced a bug: it catches any exception raised by self.ConvertAndCompare in primitives_test.py here, but does not reraise it if the if-clause is false. This is very dangerous, since any conversion that results in an error (for instance: if an op is missing for enable_xla=False) will now pass.

I had to disable some tests that were introduced somewhere else, most likely in XLA (X64 enabled). I have filed a separate bug for this (internally).

PiperOrigin-RevId: 466269561
Reshape sharding spec indices to the mesh shape to preserve the old semantics.

PiperOrigin-RevId: 466346873
Document multiprocess GPU support.

Fixes
Remove deprecated jax.experimental.optimizers

The new location is jax.example_libraries.optimizers
[ROCm] Update Dockerfile.rocm.
fix diffrax with new remat, do for cond what did for while_loop
Try flattening the locals/globals dict in the debugger and have a
fallback if it fails
Remove docs
fix traceback exclusion on new checkpoint
Check if XLA Executable has `execute_with_token` before using it

PiperOrigin-RevId: 466470801
Use the same `jaxlib` package name for nightlies. The `__version__` will still contain the dev version (with datetime string in it).

PiperOrigin-RevId: 466534455
nightly multiprocess test: create issue on failure
defer to custom eltype for slice lowering rule

We already handled dynamic slice, but plain slice is eltype-polymorphic too.
fix type annotation on remat
Disable lax_numpy test that seems to lead to nonterminating LLVM compilation.

PiperOrigin-RevId: 466682802
Disable NumPy dlpack tests on GPU.

NumPy dlpack support only works with CPU buffers.

PiperOrigin-RevId: 466709063
set new jax.remat / jax.checkpoint to be on-by-default
Fix Python 3.11 compatibility problems.

Also needs https://github.com/tensorflow/tensorflow/pull/57085
Tests: reenable some ufunc input tests
Change jax to lower the asin and atan primitives to their corresponding chlo
ops.

PiperOrigin-RevId: 466766999
update `checkpoint` attributes according to `functools.wraps`

This updates the signature in addition to `__doc__`, and that gets
picked up by generated API docs.
convert custom VJP update guide to a retroactive JEP
Pmap should output SDA like `Array`s to maintain the current behavior exactly. Split the shard_arg_handler for `Array` based on whether the mode is pmap or pjit. Why do this? The doc below explains more about the context.

PiperOrigin-RevId: 466849614
[jax2tf] Adds more support for reduce_window when enable_xla=False.

PiperOrigin-RevId: 466887649
Fix bug with integer typed-Gelu

Certain lines in gelu()  would round down constants if called with integer types (sqrt_2_over_pi = np.sqrt(2 / np.pi).astype(x.dtype))

Cast the input array to the nearest float-like type to avoid this, as done for trigonometic functions.
Update nn_test.py

Add test for fixed integer-type Gelu behaviour.
Update nn_test.py

Add parameter to sweep over `approximate` kwarg.
Fix bitrot in IREE Python client.
Make vmap axis actually unconstrained by default.
issue template: avoid checkboxes because they're interpreted as tasks
Create a `SameDeviceAssignmentTuple` type to cache the op shardings and device assignment. But the device_assignment is only cached once because `pjit` checks if all device assignments are equal or not right at the start.

PiperOrigin-RevId: 467051286
Bump libtpu nightly version","GitHub commits.
Breaking changes
Support for NumPy 1.19 has been dropped, per the
deprecation policy.
Please upgrade to NumPy 1.20 or newer.
Changes
Added jax.debug that includes utilities for runtime value debugging such at jax.debug.print and jax.debug.breakpoint.
Added new documentation for runtime value debugging
Deprecations
jax.mask jax.shapecheck APIs have been removed. See.
jax.experimental.loops has been removed. See for an alternative API.
jax.tree_util.tree_multimap has been removed. It has been deprecated since JAX release 0.3.5, and jax.tree_util.tree_map is a direct replacement.
Removed jax.experimental.stax; it has long been a deprecated alias of jax.example_libraries.stax.
Removed jax.experimental.optimizers; it has long been a deprecated alias of jax.example_libraries.optimizers.
jax.checkpoint, also known as jax.remat, has a new implementation switched on by default, meaning the old implementation is deprecated; see JEP 11830."
"Remove deprecated `kind` argument from `jnp.sort` and `jnp.argsort`.

PiperOrigin-RevId: 631429900
Add optional size argument to jnp.compress & jnp.extract.
Fixed Mosaic GPU build following
Updated the Pallas GPU lowering to work with older jaxlib versions

Triton changed the signatures of LoadOp and DotOp upstream, and the lowering
code was not ready to handle both old and new signatures.
Minor doc fix to `jaxpr.rst`

Update the written description of the example `jaxpr` to match the given snippet of code.
Skip float64 test_nextafter on TPU
Handle ellipsis `...` in `_attempt_rewriting_take_via_slice`.

Previously `model['some_array'][:,0,0,:]` would generate a `slice`, while `model['some_array'][...,0,0,:]` would generate a `gather`. Now both of these generate `slice` eqns.

PiperOrigin-RevId: 631469837
jax.numpy: better docs for matmul-like functions
Finish jax and jaxlib 0.4.27 release

PiperOrigin-RevId: 631486157
CI: fix typo in workflow
CHANGELOG: move change from 0.4.27 to 0.4.28
The Bazel version used in JAX is bumped from 6.1.2 to 6.5.0.

The update is needed for Windows/Clang builds and for the future hermetic CUDA implementation.

PiperOrigin-RevId: 631519200
Implement jnp.linalg.multi_dot using opt_einsum
Recommend the plugin in the CUDA installation instructions.

PiperOrigin-RevId: 631555876
Bump minimum jaxlib version to 0.4.27

xla_extension_version is 261 and mlir_api_version is 56

PiperOrigin-RevId: 631579739
[Pallas] Fix some typos.

PiperOrigin-RevId: 631592201
[jax:mosaic-gpu] FragmentedArray can do tiled load.

PiperOrigin-RevId: 631611060
Update XLA dependency to use revision
http://github.com/openxla/xla/commit/c6df436f9e3d2a706a3a9595e37224276fb6013b.

PiperOrigin-RevId: 631629197
Enable logging_test on all CI platforms.

Should catch issues like https://github.com/google/jax/issues/21121
Switch Windows jobs to use Clang.

Remove the experimental/trial Clang job.

PiperOrigin-RevId: 631814321
Removed stale version guards and try/except blocks from Pallas GPU

They are unnecessary now that the minimum jaxlib version is 0.4.27.
Cleanup second registration of custom_partitioning callbacks now that
the jaxlib version has been bumped.

PiperOrigin-RevId: 631852273
Refactor pipeline emitter API.

Building on enrique's work, this CL refactors the emit_pipeline abstraction:
1) factors out the VMEM double-buffering bookkeeping into a helper class.
2) concentrate the intricate copy/wait scheduling logic into one place inside a scheduler helper
while allowing manual overrides, callbacks don't control scheduling anymore, rather we have
explicit loop scheduling.
3) minimize callbacks and simplify the ""defaults"" for fusing pipelines together.

Examples of fully overlapped versions of latency- and throughput- optimized AG-matmuls and
matmul-RSs are included in new tests.

PiperOrigin-RevId: 631865641
Update XLA dependency to use revision
http://github.com/openxla/xla/commit/68b17a8571f197676ea07479637da1546b3b501d.

PiperOrigin-RevId: 631874377
Removed get_compute_capability from jax.experimental.pallas.gpu

Compute capability is available as a `str` attribute on a GPU device since
jaxlib 0.4.26.
Renamed is_device_gpu_at_least to is_cuda_compute_capability_at_least

This makes it clear that the predicate is only supposed to be used for NVidia
GPUs at the moment.
Generic reduce window jvp

The problem is that we want to generically jvp and tranpose over any reduction_fn. Jax already handles some of the hard parts for us, namely, ensuring that the user provided fn is jax capturable. All that is left then, is to write a jvp and tranpose fn that utilize the jax utils correctly.

However, this is not so straightforward because in order to get the transpose of a reduction window, we need to be able to use both the tangents and primals. The current reduce_fn operates on (x, y) - but we actually need is, under jvp, to operate on `(x_primal, y_primal, x_tangent, y_tangent)`. In turn, this means we need to push down notions of a jvp-specific reduction_fn (captured via the usual machinery of as_fun `as_fun(jvp_fn(closed(user_reduction_jaxp)))`).

For the jvp fn, we stack the primal operand and the tangent operand together, and we stack their respective initial values together - this means a good deal of changes to safety checks and assurances downstream (as well as unpacking) as the shape of the operand has changed from [K,...Kt] to [K, ...Kt, 2] where the last dim is the stacked primal and tangent values.

In following CLs, we will add (1) re-entrant/recursive is_jvp and (2) transposition

PiperOrigin-RevId: 631916764
jnp.einsum: improve documentation
TST: fix Lpmn test for new scipy
Reverts 1956ff7d7b73794012fece2d8452e097196587fc

PiperOrigin-RevId: 631974751
[XLA:Python] Fix a memory corruption bug in the tp_name attribute of ArrayImpl and PjitFunction for Python 3.10 or earlier.

This works around https://github.com/python/cpython/issues/89478, which was fixed in Python 3.11.

PiperOrigin-RevId: 631984256
Update XLA dependency to use revision
http://github.com/openxla/xla/commit/4872030c44e20556efdfea47829d942985e0ccf1.

PiperOrigin-RevId: 631997979
jnp.linalg.multi_dot: use optimize='auto'
Reenable examples_test in Bazel build.

Fix bitrot.

This test was disabled years ago because it was slow, but it isn't any more.

PiperOrigin-RevId: 632138101
Update the multi-process note in pjit's docstring

PiperOrigin-RevId: 632160561
jnp.linalg: add precision & preferred_element_type to dot-like functions
Update XLA dependency to use revision
http://github.com/openxla/xla/commit/d60579f54a0b6c37d1caf11dc3eb34488cf6922a.

PiperOrigin-RevId: 632232639
Prepare 0.4.28 release.","Bug fixes
Fixes a memory corruption bug in the type name of Array and JIT Python
objects in Python 3.10 or earlier.
Fixed a warning '+ptx84' is not a recognized feature for this target
under CUDA 12.4.
Fixed a slow compilation problem on CPU.
Changes
The Windows build is now built with Clang instead of MSVC."
"Prepare v2.4.3 release
Fix ref/unref of Delayed after resolving
Return self from Delayed ref/unref
Add generics for Amp\Promise\wait
Improve call / coroutine / wait types, add psalm test
Fix code style and run PsalmTest only on PHP 7.1+","Fixed Delayed::reference() / Delayed::unreference() after the promise resolved
Changed return type of Delayed::reference() / Delayed::unreference() to self to allow fluid API usage
Add generics for Amp\Promise\wait
Improved types for Amp\call / Amp\coroutine"
"Update Psalm version and fix issues
Remove mixed from variadic closure declaration

mixed... was causing isues with PHPStan.","What's Changed
Changed Closure(mixed...) annotation to Closure(...) to support PHPStan.
Full Changelog: v3.0.1...v3.0.2"
"Revert ""gc just to be safe prior to run loop exit""

This reverts commit ad4831888fb684069469adedf6843c73458016cc.
Update amp guide link
Perform manual GC prior to run loop end
Use correct uv flags to prevent UvReactor::tick() from hanging in edge-case scenarios","Fix bug preventing UvReactor::tick() from returning when no
events are ready for a single active IO watcher."
"Fix optional before required parameter deprecation
Fix optional before required parameter deprecation","What's Changed
Fix optional before required parameter deprecation
Full Changelog: v2.6.3...v2.6.4"
"Prepare v2.0.6
Update contributing.md
Fix code review comments
Avoid odd ev event nulling behavior
Clarify promise interface

Fixes.
Invoke watcher callback if events is 0 or 4

4 is UV_DISCONNECT
Add note about OR'ing with 4
Free loop handle when destructing EventDriver

Relates to.
Fix 212 and ignore unreference on invalid watchers ()

Fix & Ignore unreference on invalid watchers
Don't record stack traces in case of AMP_DEBUG not being set ()

Fixes.
Add changelog entry for 2.0.7
Update documentation dependencies
Prevent ext-event 2.4.0RC1 and use 2.3.0 instead

PHP 7.2 in combination with ext-event 2.4.0RC1 throws exceptions with invalid file descriptors, while everything works fine with 2.3.0 or PHP < 7.2.

This is a temporary fix to get the build green again.

Relates to.
Update README","Fixed recording of stack traces for double resolution in case AMP_DEBUG was not set as environment variable, defaulting to 0 now. ()
Loop::unreference() is ignored on invalid watchers now.
Invoke UV watchers in case no events or UV_DISCONNECT is indicated.
Ignore Loop::$driver not being set during shutdown, which might happen due to the unreliable shutdown order. ()"
"Correct heap implementation in TimerQueue ()

* Correct heap implementation in TimerQueue, which would sometimes extract timers in the wrong order after a node other than the root was removed

* Factor out old heap rebuilding code into its own method to satisfy codeclimate requirements
Remove TimerQueueEntry

Unnecessary now that Watchers have an expiration property.
Ignore only stream_select errors due to signal interruptions ()

This also fixes signal interruptions not being ignored on PHP 8, as the error message changed slightly.

Fixes.
Improve type definition for combinators (any, first, some) ()","Ignore only stream_select errors due to signal interruptions ()
Fixes stream_select handling on signal interruptions on PHP 8 and
avoids suppressing errors that shouldn't be suppressed.
Improve type definition for combinators (any, first, some) ()
Removed internal `TimerQueueEntry"
"Fix event extension installation

This doesn't add the extension to php.ini if the installation fails.
Add missing changelog entry for v2.0.5
Improve promise documentation

This includes an extended introduction. It marks Deferred as advanced API and removes the note for the performance hack.
Improve promise helper docs
Improve coroutine docs
Add garbage collection example with iterators
Fix code style
Hide resolution methods
Return named classes

Better for var_dump and stack traces.
Update gems for documentation
Prepare v2.0.6","Resolution methods are now hidden in the Promise returned from Deferred::promise(). Their exposure was an implementation detail and never promised by the return type of Deferred::promise().
A named class is now used for promises, so you don't end up with an anonymous class in var_dump() and stack traces, which can be confusing."
"Fix array access on null last error
Add parameter for custom timeout message ()
Improve compatibility with static analysis tools ()
Fix psalm annotation for Amp\Promise
Fix branch alias
Add psalm static analysis on level 6

This also fixes mixed types in some cases.
Skip psalm on PHP 7.0 on Travis
Add further generics for static analysis
Fix condition for skipping psalm for PHP 7.0 on Travis
Skip installing psalm on Travis with PHP 7.0
Add additional types for static analysis
Increase psalm error level to level 5
Fix invalid types in doc comments

We're on the way to psalm error level 4, but there are still some remaining issues.
Increase psalm error level to level 4
Increase psalm error level to level 3
Increase psalm error level to level 2
Remove psalm-suppress for fixed psalm bugs
Update shared documentation files

This is an automated commit. Please report any issues to https://github.com/amphp/website-tools.
Cover examples with psalm and add @psalm-yield to Promise
Add generics to Deferred
Provide useful exception trace in TimeoutCancellationToken ()

Without this, the exception trace is pretty useless, because it only includes Loop::run() and other internal loop calls, giving absolutely no indication which kind of thing had a timeout.

Use debug_backtrace instead of creating the exception early, because it helps with the changes to GC behavior such a change might introduce.

Co-authored-by: Aaron Piotrowski <aaron@trowski.com>","Provide useful exception trace in TimeoutCancellationToken ()
Add parameter for custom timeout message ()
Add psalm annotations for improved static analysis"
"Change v2.4.5 to be v2.5.0 in changelog
Update shared documentation files

This is an automated commit. Please report any issues to https://github.com/amphp/website-tools.
Update shared documentation files

This is an automated commit. Please report any issues to https://github.com/amphp/website-tools.
Fix NativeDriver when only signals are enabled
Correct heap implementation in TimerQueue ()

* Correct heap implementation in TimerQueue, which would sometimes extract timers in the wrong order after a node other than the root was removed

* Factor out old heap rebuilding code into its own method to satisfy codeclimate requirements","Fixed issue where cancelling timer watchers in NativeDriver could result in timers being executed out of order ()
Fixed 100% CPU usage in NativeDriver when only signal watchers were enabled"
"Add entries to changelog
Added exception examples
Improve exception examples
Fix code style
Update shared documentation files

This is an automated commit. Please report any issues to https://github.com/amphp/website-tools.
Update shared documentation files

This is an automated commit. Please report any issues to https://github.com/amphp/website-tools.
Update to new shared repository

amphp/website-shared has been merged into amphp/amphp.github.io.
Use common shared asset path on production
Fix shared asset path for docs
Update shared documentation files

This is an automated commit. Please report any issues to https://github.com/amphp/website-tools.
Replace driver with dummy driver and collect cycles on loop switch

This solves https://github.com/amphp/dns/issues/66. Circular references might otherwise be collected later and __destruct operations using the Loop accessor might cancel watchers on the wrong loop.
Add changelog entry for dummy driver in Loop::set()
Fix - Preserve Promise order within combinator functions
Update shared documentation files

This is an automated commit. Please report any issues to https://github.com/amphp/website-tools.
Update shared documentation files

This is an automated commit. Please report any issues to https://github.com/amphp/website-tools.
Add example cross-ref to amphp/socket

amphp/amp is the base library, but people should be aware of the abstractions provided instead of directly using Loop::on* if possible.
Prepare v2.0.3","Loop::set() replaces the current driver with a dummy driver for the time of gc_collect_cycles() now. This allows cyclic references to be cleaned up properly before the new driver is set. Without such a fix, cyclic references might have been cleaned up later, e.g. cancelling their watcher IDs on the new loop, thereby cancelling the wrong watchers.
Promise combinator functions (all(), any(), first(), some()) now preserve order of the given $promises array argument."
"fix(readme):fix doc lint issues

Signed-off-by: Steven Zou <szou@vmware.com>
fix(cd) Use only version part from ${{ github.ref }} as docker tag

Signed-off-by: Pierre Péronnet <pierre.peronnet@ovhcloud.com>
Refer to bitnami Helm charts instead of obsoleted stable ones.

Signed-off-by: Jiří Suchomel <jiri.suchomel@suse.com>
Create the namespace before installing into it.

Otherwise the 'make deploy' command fails.

Signed-off-by: Jiří Suchomel <jiri.suchomel@suse.com>
Update to the latest version of kustomize install script

The original one does not work on some non-debian based linuxes

Signed-off-by: Jiří Suchomel <jiri.suchomel@suse.com>
Update the names of components installed by Helm to match specific guides

Redis installation guide uses different names for redis components,
so if it is followed, Makefile install-dependencies target ignores installed
ones because it checks for different names.

Signed-off-by: Jiří Suchomel <jiri.suchomel@suse.com>
fix(ingress): resolve 413(Too Large Entity) error when push large image.

add annotation to unlimit the size of http request body.

CLOSES
fix(registry): mount registry secret to share the REGISTRY_HTTP_SECRET env variable.

CLOSES
fix(registry): mount registry secret to share the REGISTRY_HTTP_SECRET env variable.

CLOSES
redirect exposed

Signed-off-by: xiaoyang zhu <zhuxiaoyang1996@gmail.com>","Changelog
08f2e50 Create the namespace before installing into it.
9fb0b19 Refer to bitnami Helm charts instead of obsoleted stable ones.
6af89b1 Update the names of components installed by Helm to match specific guides
4d44760 Update to the latest version of kustomize install script
4f75628 fix(cd) Use only version part from ${{ github.ref }} as docker tag
7bbe9e5 fix(ingress): resolve 413(Too Large Entity) error when push large image.
7fb01dc fix(registry): mount registry secret to share the REGISTRY_HTTP_SECRET env variable.
8823ba4 fix(registry): mount registry secret to share the REGISTRY_HTTP_SECRET env variable.
d1c0035 redirect exposed
Docker images
docker pull goharbor/harbor-operator:v0.5.1
Contributors
@holyhope
@wangcanfengxs
@Ghostbaby
@soulseen
@steven-zou"
"Revert ""Fix json-body not escaped properly"" as this produces badly formed JSON where there are escaped quotes present. Given the potential for other undiscovered edge-cases, we'll release a patch version without this fix for now""

This reverts commit 1d299770ce8d530558073dd5860eb31cf87cef4c.
Added more details to RELEASING.md
Request matching performance regression ()

Candidate fix for - prevented redundant execution of matchers due to sub-event aggregation
Bump org.scala-lang:scala-library from 2.13.12 to 2.13.13 ()

Bumps [org.scala-lang:scala-library](https://github.com/scala/scala) from 2.13.12 to 2.13.13.
- [Release notes](https://github.com/scala/scala/releases)
- [Commits](https://github.com/scala/scala/compare/v2.13.12...v2.13.13)

---
updated-dependencies:
- dependency-name: org.scala-lang:scala-library
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Bump com.networknt:json-schema-validator from 1.3.2 to 1.3.3 ()

Bumps [com.networknt:json-schema-validator](https://github.com/networknt/json-schema-validator) from 1.3.2 to 1.3.3.
- [Release notes](https://github.com/networknt/json-schema-validator/releases)
- [Changelog](https://github.com/networknt/json-schema-validator/blob/master/CHANGELOG.md)
- [Commits](https://github.com/networknt/json-schema-validator/compare/1.3.2...1.3.3)

---
updated-dependencies:
- dependency-name: com.networknt:json-schema-validator
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Fixed xPath concurrency issues ()

Using InheritableThreadLocal means that entity can be accessible by some threads at the same time, so access should be synced or entity should be read-only. In the XmlDocument class there is a not synced write operation in xPath object that is InheritableThreadLocal.

Co-authored-by: Artsiom Sharakhouski <artsiom.sharakhouski@expert-soft.by>
Bumped patch version","Bug fixes
Fixed xPath concurrency issues () @BublG
Request matching performance regression () @tomakehurst
Dependency updates
Bump com.networknt:json-schema-validator from 1.3.2 to 1.3.3 () @dependabot
Bump org.scala-lang:scala-library from 2.13.12 to 2.13.13 () @dependabot"
"Implement BGP end of RIB marker and add it to RIS ()

Co-authored-by: Oliver Geiselhardt-Herms <ogeiselhardt-herms@cloudflare.com>
Co-authored-by: Maximilian Wilhelm <maximilian@cloudflare.com>
Signal End-Of-RIB when registering client on LocRIB ()
Update go version to 1.19 ()

Signed-off-by: Maximilian Wilhelm <maximilian@cloudflare.com>
Skip build with fixed Ubuntu version, stick to latest only. ()

Signed-off-by: Maximilian Wilhelm <maximilian@cloudflare.com>
RIS: Do not send withdraws when BMP session is lost ()

* RIS: Do not send withdraws when BMP session is lost

Co-authored-by: Oliver Geiselhardt-Herms <ogeiselhardt-herms@cloudflare.com>","What's Changed
Signal End-Of-RIB when registering client on LocRIB by @taktv6 in
Update go version to 1.19 by @BarbarossaTM in
Skip build with fixed Ubuntu version, stick to latest only. by @BarbarossaTM in
RIS: Do not send withdraws when BMP session is lost by @taktv6 in
Full Changelog: v0.1.1...v0.1.2"
"Hard code fix division by zero in Vsm
Add delDir
Add copy dir from path
Funciton renamed
Minor changes
Minor changes
Remove useless codes
Add libZip ext
Logic improved, bug fix
Add getFiles, remove useless comments
Only get MAC addr from network info for hardware hash
Add option bypass_shell to libMPC
Using base64 encoded command
Add libExeC
Remove bypass_shell, add cwd param
Remove bypass_shell, add param cwd, fix log read logic
Switch stdout & stderr from file to pipe
Using socket instead of pipe for stdout & stderr
Using command params instead of string command
Fix proc_get_status error
Remove execSync from libMPC, using libExeC instead
Improve proc exit logic
Fix calling php failed with space in path
Add pid record to redis when calling exec
Fix failed to call php with spaces in path
Always encode result from exec to UTF-8 from any other encodings
Using direct system result instead of parse_ini to find php executable path
Add worker list for ExeC
Add user callable fn param to ExeC
Response HTTP 500 only when stop_on_error was set to true
Add text/none to force output nothing
Using none output for MPC and Queue
Fix function name error
Send command only if proc is still running
Add lifetime for status key
Register cleanup function when shutdown
Do NOT iconv phpPath to UTF-8 in OSUnit
Add exit_fn and some other usefull functions
Store PHP_OS value when OSUnit is calling
Using simple commands for linux to getHwHash
Use callable in some cases
Fix libCoreApi code errors
Remove unnecessary cleanup call as it is already registered as shutdown function
Set TTL for ExeC log key
Force output empty object instead of empty array when requested in application/json
Bump version to 8.0.3","Finish five common algorithm classes;
Add libZip for simple compression;
Add libExeC to fully control and communicate with other programs;
Improve libMPC and libSockOnRedis;
Other core improvements and bug fixes.
All users who use version 8.0.x are encouraged to update to this version."
"Upgrade to v2.9.3
For
port over just the isoform changes from bundled PR draft
add test file in
add update tests files
add isoform handling in GAF 2.0 format
fixes pipeline issue 380 by editing the header, taxon, type of the GPI 2.0 writer
update cam.rdf according to tests output
fixes issue 380 in pipeline repo - update gpi 2.0 format to comply with tested spec","What's Changed
For by @mugitty in
fixes pipeline issue 380 by editing the header, taxon, type of the GP… by @sierra-moxon in
swaps subject with gene when subject is PR isoform by @sierra-moxon in
Full Changelog: v2.9.3...v2.9.4"
"Sort event list asc or desc
Fix for
New release 2015.07.2","Maintainance release that fixes 1 more bug related to flask-login:
Breaking change in flask-login package
The is_authenticated, is_active, and is_anonymous members of
the user class are now properties, not methods.
Full Changelog: 2015.7.1...2015.7.2"
"Make previous submission load straight into answer box
update changelog
bump version number
update release date","Changelog:
Fix bug that allowed a user to insert working HTML into their copy of a Plugging it in challenge template."
"Bump version: 1.1.1 → 1.1.2
Fixes
Add test to ensure fix. Fixes
update marking API methods to allow/use the 'lang' property

including utility methods that expand collapse markings
add tests to cover the language aspect of the markings
pre-commit changes
Add header to test file
update unnecesary property clean-up and add tests
update test_datastore_filesystem.py to create proper tlp markings
new approach towards validation of tlp instances
create a new exception for TLP validation and util method
add new files for marking-definition tests
modify test to cover exception message
update user guide on marking extraction via API
marking-definition
move check_tlp_marking to markings\utils.py
re-organize imports in v20, v21
update tests to make sure we are testing the serialized instance correctly
remove unused imports
Add functionality to _valid_refs to accept actual cyber observable objects instead of just strings with their types
Add documentation for _valid_refs
Updated documentation for _valid_refs
Update _valid_refs doc and add test to v20 test suite
Add get_obj function to bundle.py to make accessing bundles easier
Fixes
Fixes
Fixes
Slightly change bundle error message
fix: Avoid issues with custom objects

- Custom objects type is dict, which makes it fail
  when the attribute 'id' is called
Update Maintainers List

Added Jason Keirstead
Add examples to docs for removing properties
Update README.rst

Trim trailing whitespace
Fix tests
by removing certain human message assertions from test suites.
(These changes are cherry-picked from commit by @khdesai on a different
branch)
Update readme check
Update CHANGELOG for v1.1.3
Bump version: 1.1.2 → 1.1.3","This release includes the following changes:
Ignores empty values for optional fields (@khdesai)
Adds support for lang granular markings (@emmanvg)
Prevents instantiation or serialization of TLP marking-definitions that don't follow the spec (@emmanvg)
Supports actual objects in _valid_refs instead of just strings (@khdesai)
Supports accessing objects in bundles via STIX Object IDs (@khdesai)
Fixes bug parsing bundle containing custom objects (@chrisr3d)"
"doc version fixes
updated CHANGELOG
improv: Check reference prop types for all customs

Previously the requirement that properties ending in `_ref(s)` were
instances of an appropriate type capable of containing a STIX
`identifier` (the current interpretation of section 3.1 of the STIX 2.1
spec) was only enforced for custom observables. This change refactors
the property checks for custom objects to enforce this and the STIX 2.1
property name requirement (also from section 3.1) in a common helper,
therefore extending the enforcement of both requirements to all custom
object types created by downstream projects.

There is a special case carved out for STIX 2.0 observables which are
required to contain ""object references"" rather than identifiers. This
special logic is encoded in the reference property validation helper and
enabled by a kwarg which is passed exclusively by the custom observable
registration helper.
Fix TAXIICollectionSource.query() to propagate HTTPErrors
instead of ignoring them.  Special-cased 416, since that can
occur naturally while paging with TAXII 2.0.
Move and edit a comment about HTTP status code 416 to reduce
confusion.
Fix transform from Filter object to TAXII filter to look at
the filter operator; TAXII filters only support equals.
update README.rst
update maintainers
Update CHANGELOG for v3.0.1
Bump version: 3.0.0 → 3.0.1","This release includes the following changes:
Fixes check for reference properties to apply to all custom objects, not just custom observables (@maybe-sybr)
Fixes TAXIICollection queries to propagate HTTPErrors, not ignore them
Fixes bug where all TAXII filters were converted to exact matches"
"Bump version: 1.1.3 → 1.2.0
Update requirements.txt

Fix failing ReadTheDocs builds.
Related: https://github.com/readthedocs/readthedocs.org/issues/5332
Update requirements.txt
update .ipynb files with correct references. update package requirements
Update README.rst

add documentation badge
Update semantic equivalence docs
update semantic equivalence approach to:

- add more detailed output via the logging module
- don't fail hard if an object sent to the semantically_equivalent() method
- remove specific exception related to Semantic Equivalence and tests
add test for object not present in configuration
Update semantic equivalence docs

- Comparing object type not in config dictionary now gives a warning and
result of 0 instead of an error.
- Adds an example of the new detailed debug output.
Update CHANGELOG for v1.2.1
Bump version: 1.2.0 → 1.2.1","This release includes the following changes:
Adds more detailed debugging semantic equivalence output
Updates semantic equivalence errors
Fixes bug with deterministic IDs for SCOs containing unicode"
"Update distribution files
Change name to craftyjs because crafty is taken","New version of Crafty is out. A lot has changed since last time, no breaking changes, but a lot of optimizations.
Removed support for old browsers (IE7 - Getter Setters)
New Crafty Component Model which means you can bind to values changing like Backbone events
New function Crafty.pixelart(true);
Improved loader functionality
Remove of Craftycomponent.com module loader
Lot of bugs fixed and tests added
Improved tests setup
Thanks to all who has contributed to this release!"
"Update README.rst
Support handling frame and style parameters

This can be gleaned from the HistomicsUI frame controls.","What's Changed
Support handling frame and style parameters by @manthey in
Full Changelog: v1.2.6...v1.2.7"
"Adjust tests for scikit-image changes. ()
fixed numerical issues with Haralick.Correlation and Haralick.IMC2 ()
Fix linting issues. ()
Add superpixel segmentation magnification parameter. ()

* Fix linting issues.

* Add superpixel segmentation magnification parameter.
Optionally output bounding box annotations associated with superpixels ()

Optionally output bounding box annotations associated with superpixels.
Support emitting internal bounding box information ()

Support emitting internal bounding box information.
Improve superpixel annotation name. ()
Adjust the length of the value array. ()

When boundaries are turned on, this should be half the number of
superpixel indices.","What's Changed
fixed numerical issues with Haralick.Correlation and Haralick.IMC2 by @idc9 in
Fix linting issues. by @manthey in
Add superpixel segmentation magnification parameter. by @manthey in
Optionally output bounding box annotations associated with superpixels by @manthey in
Support emitting internal bounding box information by @manthey in
Improve superpixel annotation name. by @manthey in
Adjust the length of the value array. by @manthey in
New Contributors
@idc9 made their first contribution in
Full Changelog: v1.2.1...v1.2.2"
"find_stain_index comparison bug ()

* Revert to angle comparison. Add normalization.

* black

* flake8 errors

* conver inputs to numpy array
Use github actions to build wheels. ()

For now, still use circleci checks before merging to master.  circleci
is faster, but doesn't support all platforms for building wheels as
easily.
Fix artifact download. ()
supress rank warning ()
Don't use a futures pool to compute polygons. ()

On a full WSI, this is very slow because of all the data transfer
between processes or threads.  On a WSI with 300k nuclei, doing it as a
list comprehension takes less than a minute on my machine, but takes
hours using a processpool (and four or five minutes using a threadpool).
Publish wheels with github actions ()
Fix collect artifacts for release ()
Fix version on github actions. ()
Tell setuptools-scm not to use local versions ()

The local version is desirable outside of CI, but is hard to work with
in CI.
Explicitly ask for macosx_arm64 ()","What's Changed
Use github actions to build wheels. by @manthey in
supress rank warning by @subinkitware in
Don't use a futures pool to compute polygons. by @manthey in
Full Changelog: v1.2.9...v1.2.10"
"Don't serialize some options to json ()

Debug a serialization failure
Bump pypa/cibuildwheel from 2.16.4 to 2.16.5 ()

Bumps [pypa/cibuildwheel](https://github.com/pypa/cibuildwheel) from 2.16.4 to 2.16.5.
- [Release notes](https://github.com/pypa/cibuildwheel/releases)
- [Changelog](https://github.com/pypa/cibuildwheel/blob/main/docs/changelog.md)
- [Commits](https://github.com/pypa/cibuildwheel/compare/v2.16.4...v2.16.5)

---
updated-dependencies:
- dependency-name: pypa/cibuildwheel
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Guard against division by zero ()
Nuclei detection should be more stable across regions ()

This does a better job of detecting the average color of the area being
analyzed to reduce individual tile effects.  It also fixes a potential
infinite loop in a degenerate case.

Closes.","What's Changed
Guard against division by zero by @manthey in
Nuclei detection should be more stable across regions by @manthey in
Full Changelog: v1.3.2...v1.3.3"
"Macenko pca out of bounds fix ()

* Fix out-of-bounds bug in argpercentile

* Include argpercentile tests

* Update tests/test_color_deconvolution.py

---------

Co-authored-by: gum31714 <max.gutbrod@st.oth-regensburg.de>
Improve repeatability of tox docs process.
Expose the version number as histomicstk.__version__ ()

Also, record the cli and version for those clis storing annotation
attributes.
added tile overlap parameter ()

added tile overlap functionality (delete_overlap.py)
Adjust for Cython 3 ()

* Pin Cython until we update the build process

* Adjust for Cython 3

Cython 3 changes require newer pyyaml.  docker-compose demands an old
pyyaml.  Switch to using docker compose instead of docker-compose.

Refactor some of the setup and tear down for the girder server docker.
NucleiClassification - added attributes to the annotation file. ()

added attributes to the annotation file.
Fix guarding against zero values in rgb_to_sda ()
Use an official mongo test image ()
Drop Python 3.6 ()
Use a single test girder server for all tests ()

Have circleci cache the externaldata directory

This should speed up CI
Drop Python 3.6 from wheels ()
SuperpixelSegmentation-annotation-attributs-added-to-metadata ()

added attributes to the annotation
Instead of output a return parameters file, output an annotation.
Fix running compute nuclei features on an ROI ()
ComputeNucleiFeatures-outputfile-metadata ()

added metadata to the annotation file.
ColorDeconvolution-annotation attributes added to metadata ()
SeperateStainsMacenkoPCA-added-metadatafile ()
Remove overlapping nuclei segmentation ()

Added code to remove overlapping nuclei segmentation for both `bbox` and `boundary` options.
BackgroundIntensity-added-annotation-metadata ()
Harden compute nuclei features ()

Don't fail if we can't identify cytoplasm because the tile is small or
nuclei are close to overlapping.
updated .py and .xml file to output single annotation file PositivePixelCount. ()
Profile Positive pixel count ()

* added docs and changed tile size to 4096
Add an icon to the docs. ()
Resolve issues with sink.crop ()

* Don't call sink.crop if sink is None, added filename guard.
Update defaults color deconvolution ()

* added support for WSI

* added tilecropping if user provides ROI

* updated tilesize to 8192
remove overlapping nuclei is a default process. ()

* Removing overlapping nuclei is a default process.

* added default value to overlap tile parameter.
updated depreciated functions in NuclieClassification ()

updated depreciated functions
Update the version of python used in the docker image. ()

Python 3.11 is faster than 3.8.
Update README ()
Abstract nuclei detection ()

* added abstract library for nuclei detection
find_stain_index comparison bug ()

* Revert to angle comparison. Add normalization.

* black

* flake8 errors

* conver inputs to numpy array","What's Changed
Improve repeatability of tox docs process. by @manthey in
Expose the version number as histomicstk.version by @manthey in
added tile overlap parameter by @subinkitware in
Adjust for Cython 3 by @manthey in
NucleiClassification - added attributes to the annotation file. by @subinkitware in
Fix guarding against zero values in rgb_to_sda by @manthey in
Use an official mongo test image by @manthey in
Drop Python 3.6 by @manthey in
Use a single test girder server for all tests by @manthey in
Drop Python 3.6 from wheels by @manthey in
SuperpixelSegmentation-annotation-attributs-added-to-metadata by @subinkitware in
Instead of output a return parameters file, output an annotation. by @manthey in
Fix running compute nuclei features on an ROI by @manthey in
ComputeNucleiFeatures-outputfile-metadata by @subinkitware in
ColorDeconvolution-annotation attributes added to metadata by @subinkitware in
SeperateStainsMacenkoPCA-added-metadatafile by @subinkitware in
Remove overlapping nuclei segmentation by @subinkitware in
BackgroundIntensity-added-annotation-metadata by @subinkitware in
Harden compute nuclei features by @manthey in
updated .py and .xml file to output single annotation file. by @subinkitware in
Profile Positive pixel count by @subinkitware in
Add an icon to the docs. by @manthey in
Resolve issues with sink.crop by @subinkitware in
Update defaults color deconvolution by @subinkitware in
remove overlapping nuclei is a default process. by @subinkitware in
updated depreciated functions in NuclieClassification by @subinkitware in
Update the version of python used in the docker image. by @manthey in
Update README by @manthey in
Abstract nuclei detection by @subinkitware in
find_stain_index comparison bug by @cooperlab in
Full Changelog: v1.2.8...v1.2.9"
"Update .git-blame-ignore-revs ()
Bump actions/setup-python from 4 to 5 ()

Bumps [actions/setup-python](https://github.com/actions/setup-python) from 4 to 5.
- [Release notes](https://github.com/actions/setup-python/releases)
- [Commits](https://github.com/actions/setup-python/compare/v4...v5)

---
updated-dependencies:
- dependency-name: actions/setup-python
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Tutorial on creating random forest classifier ()

* draft tutorial

* added code to the tutorial

* added file locations to the notebook.

* updated tutorial.
Bump actions/download-artifact from 3 to 4 ()

Bumps [actions/download-artifact](https://github.com/actions/download-artifact) from 3 to 4.
- [Release notes](https://github.com/actions/download-artifact/releases)
- [Commits](https://github.com/actions/download-artifact/compare/v3...v4)

---
updated-dependencies:
- dependency-name: actions/download-artifact
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Bump actions/upload-artifact from 3 to 4 ()

Bumps [actions/upload-artifact](https://github.com/actions/upload-artifact) from 3 to 4.
- [Release notes](https://github.com/actions/upload-artifact/releases)
- [Commits](https://github.com/actions/upload-artifact/compare/v3...v4)

---
updated-dependencies:
- dependency-name: actions/upload-artifact
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Revert artifact workflow version changes. ()

These broke the release.  We need to refactor how artifacts are
downloaded if we name uploaded artifacts.
Update artifact actions ()

This handles breaking changes to the actions
Update artifact actions ()

* Update artifact actions

This handles breaking changes to the actions

* Fix release action
Make some of the tests more consistent ()
Bump pypa/cibuildwheel from 2.16.2 to 2.16.4 ()

Bumps [pypa/cibuildwheel](https://github.com/pypa/cibuildwheel) from 2.16.2 to 2.16.4.
- [Release notes](https://github.com/pypa/cibuildwheel/releases)
- [Changelog](https://github.com/pypa/cibuildwheel/blob/main/docs/changelog.md)
- [Commits](https://github.com/pypa/cibuildwheel/compare/v2.16.2...v2.16.4)

---
updated-dependencies:
- dependency-name: pypa/cibuildwheel
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Update for lint rule D413 ()
Don't serialize some options to json ()

Debug a serialization failure","What's Changed
Tutorial on creating random forest classifier by @subinkitware in
Don't serialize some options to json by @manthey in
Full Changelog: v1.3.1...v1.3.2"
"Add the large_image_converter to requirements ()

This is used for some data storage
Update tests to handle variations in upstream libraries ()","What's Changed
Update tests to handle variations in upstream libraries by @manthey in
Full Changelog: v1.3.6...v1.3.7"
"Add a console entry point. ()

Closes.
Fix some typos ()
Bump pypa/cibuildwheel from 2.16.5 to 2.17.0 ()

Bumps [pypa/cibuildwheel](https://github.com/pypa/cibuildwheel) from 2.16.5 to 2.17.0.
- [Release notes](https://github.com/pypa/cibuildwheel/releases)
- [Changelog](https://github.com/pypa/cibuildwheel/blob/main/docs/changelog.md)
- [Commits](https://github.com/pypa/cibuildwheel/compare/v2.16.5...v2.17.0)

---
updated-dependencies:
- dependency-name: pypa/cibuildwheel
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Update precommit versions and remove some needless items from setup.py ()
946 compute haralick features works incorrectly when im intensity is a float with 0 1 values ()

* Remove cast to uint8 in compute_haralick_features.py

* Cast images to uint8 for feature extraction.

* add numpy import for tests

* Cast color deconvolutions to uint8 for feature extraction

* lint
Add the large_image_converter to requirements ()

This is used for some data storage","What's Changed
Fix some typos by @manthey in
946 compute haralick features works incorrectly when im intensity is a float with 0 1 values by @cooperlab in
Add the large_image_converter to requirements by @manthey in
Full Changelog: v1.3.5...v1.3.6"
"Update tests for minor variations in image decoding
Cleanup typos and minor code eccentricities
Ignore blame for major cleanup commit
Handle a cython numpy deprecation of long_t
Don't use np.stack inappropriately
Update color_deconvolution.py

Complete 2,3 w matrix to allow next step of processing, allows deconv with 2 stains without residual specified
Create color_deconvolution.py
Add test.
Don't specify a basepython in tox.ini ()
Support frame/style parameter in Nuclei Detection ()

* color inversion & color deconvolution

* shortned the code for color inversion

* tox cleared

* supress flake warning for complexity

* analyzing wsi

* wsi working code draft, code always invert bw images

* wsi working code draft, code always invert bw images

* wsi working code, flag_color_inversion is passed throught the utils

* wsi working code, flag_color_inversion is passed throught the utils

* wsi working code, image_inversion working except for not is_wsi

* ability to choose image inversion for all the images

* ability to choose image inversion for all the images

* Added frame and style to the nucleidetection

* ReinhardNormalizationInvert test code

* ReinhardNormalizationInvert duplicate code removed and image inversion gt_mean and gt_stdev values added

* compressed NucleiDetection to simple functions

* compressed NucleiDetection main to simple functions

* frame / style working in NucleiDetection

* frame / style working in NucleiDetection

* Test code for nuclei detection

* Cleaned code with default option in frame/style element

* Cleaned code with default option in frame/style element

* Stopped tracking devcontainer

* masked the neclei detection test code

* Resolved test code issues

* nucleidetection test code with data added to the girder DB

* nucleidetection test code with data added to the girder DB

* nucleidetection test code with data added to the girder DB

* nucleidetection test code with data added to the girder DB

* Stopped tracking MANIFEST.in File

* Stopped tracking MANIFEST.in File

* image inversion issue resolved, pending issue with wsi

* test code for frame,style and roi in nuclei detection

* test code for frame,style and roi in nuclei detection

* issue with is_wsi and process_whole_image

* issue with is_wsi and process_whole_image

* Large slide not segmenting issue resolved, test codes running

* ingnore workspace

* updated gitignore, cleared linting issues

* working code for greyscale multichannel images

* working code for greyscale multichannel images

* working code for greyscale multichannel images

* working code for greyscale multichannel images

* working code for greyscale multichannel images
record parameters and primary results in annotation metadata ()

* added new annotation info
Macenko pca out of bounds fix ()

* Fix out-of-bounds bug in argpercentile

* Include argpercentile tests

* Update tests/test_color_deconvolution.py

---------

Co-authored-by: gum31714 <max.gutbrod@st.oth-regensburg.de>","What's Changed
Update tests for minor variations in image decoding by @manthey in
Cleanup typos and minor code eccentricities by @manthey in
Handle a cython numpy deprecation of long_t by @manthey in
Update color_deconvolution.py by @manthey in
Don't specify a basepython in tox.ini by @manthey in
Support frame/style parameter in Nuclei Detection by @subinkitware in
Record parameters and primary results in annotation metadata by @subinkitware in
Macenko pca out of bounds fix by @m101010 in
New Contributors
@subinkitware made their first contribution in
@m101010 made their first contribution in
Full Changelog: v1.2.7...v1.2.8"
"Update tests to handle variations in upstream libraries ()
Bump pypa/cibuildwheel from 2.17.0 to 2.18.0 ()

Bumps [pypa/cibuildwheel](https://github.com/pypa/cibuildwheel) from 2.17.0 to 2.18.0.
- [Release notes](https://github.com/pypa/cibuildwheel/releases)
- [Changelog](https://github.com/pypa/cibuildwheel/blob/main/docs/changelog.md)
- [Commits](https://github.com/pypa/cibuildwheel/compare/v2.17.0...v2.18.0)

---
updated-dependencies:
- dependency-name: pypa/cibuildwheel
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
fix: redundant writes to dataframe () ()

* fix: redundant writes to dataframe

* refac: removed double quotes

* refac: removed unused variables

* fix: acc to latest version of HistomicsTK

* refac: removed unused import

* fix: Area is float in ground truth

* refac: relative import

* fix: rm coordinates from rprops

* fix: ignore rprops if None

* fix: ignore rprops if None

* linting compute_fsd_features.py

* lint compute_gradient_features.py

* lint compute_haralick_features.py

* lint compute_morphometry_features.py

* lint test_feature_extraction.py

* lint: rm conditionals from compute_nuclei_features

* Revert ""lint: rm conditionals from compute_nuclei_features""

This reverts commit cd842a0bff2a770bf5a32bb2613320efba881f82.

* lint: trailing comma and newline

* lint: colon spacing in compute_haralick_features.py

* lint: colon spacing in compute_nuclei_features.py

---------

Co-authored-by: X-TRON404 <55325140+X-TRON404@users.noreply.github.com>
Co-authored-by: Lee Cooper <lee.cooper@northwestern.edu>","What's Changed
fix: redundant writes to dataframe ()
Full Changelog: v1.3.7...v1.3.8"
"Fix the name of a centroid feature ()

Resolves
Bump pypa/cibuildwheel from 2.19.1 to 2.19.2 ()

Bumps [pypa/cibuildwheel](https://github.com/pypa/cibuildwheel) from 2.19.1 to 2.19.2.
- [Release notes](https://github.com/pypa/cibuildwheel/releases)
- [Changelog](https://github.com/pypa/cibuildwheel/blob/main/docs/changelog.md)
- [Commits](https://github.com/pypa/cibuildwheel/compare/v2.19.1...v2.19.2)

---
updated-dependencies:
- dependency-name: pypa/cibuildwheel
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Optionally add properties to polygon elements ()

When computing nuclei features, include band intensities and optionally
add any set of features to the user properties of individual polygon
elements.","What's Changed
Optionally add properties to polygon elements by @manthey in
Full Changelog: v1.3.9...v1.3.10"
"fix: redundant writes to dataframe () ()

* fix: redundant writes to dataframe

* refac: removed double quotes

* refac: removed unused variables

* fix: acc to latest version of HistomicsTK

* refac: removed unused import

* fix: Area is float in ground truth

* refac: relative import

* fix: rm coordinates from rprops

* fix: ignore rprops if None

* fix: ignore rprops if None

* linting compute_fsd_features.py

* lint compute_gradient_features.py

* lint compute_haralick_features.py

* lint compute_morphometry_features.py

* lint test_feature_extraction.py

* lint: rm conditionals from compute_nuclei_features

* Revert ""lint: rm conditionals from compute_nuclei_features""

This reverts commit cd842a0bff2a770bf5a32bb2613320efba881f82.

* lint: trailing comma and newline

* lint: colon spacing in compute_haralick_features.py

* lint: colon spacing in compute_nuclei_features.py

---------

Co-authored-by: X-TRON404 <55325140+X-TRON404@users.noreply.github.com>
Co-authored-by: Lee Cooper <lee.cooper@northwestern.edu>
Bump pypa/cibuildwheel from 2.18.0 to 2.18.1 ()

Bumps [pypa/cibuildwheel](https://github.com/pypa/cibuildwheel) from 2.18.0 to 2.18.1.
- [Release notes](https://github.com/pypa/cibuildwheel/releases)
- [Changelog](https://github.com/pypa/cibuildwheel/blob/main/docs/changelog.md)
- [Commits](https://github.com/pypa/cibuildwheel/compare/v2.18.0...v2.18.1)

---
updated-dependencies:
- dependency-name: pypa/cibuildwheel
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Bump pypa/cibuildwheel from 2.18.1 to 2.19.1 ()

Bumps [pypa/cibuildwheel](https://github.com/pypa/cibuildwheel) from 2.18.1 to 2.19.1.
- [Release notes](https://github.com/pypa/cibuildwheel/releases)
- [Changelog](https://github.com/pypa/cibuildwheel/blob/main/docs/changelog.md)
- [Commits](https://github.com/pypa/cibuildwheel/compare/v2.18.1...v2.19.1)

---
updated-dependencies:
- dependency-name: pypa/cibuildwheel
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Update ruff command in tox ()
Fix the name of a centroid feature ()

Resolves","What's Changed
Fix the name of a centroid feature by @manthey in
Full Changelog: v1.3.8...v1.3.9"
"Bump python from 3.11-slim to 3.12-slim ()

Bumps python from 3.11-slim to 3.12-slim.

---
updated-dependencies:
- dependency-name: python
  dependency-type: direct:production
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Fix a format string. ()
Guard empty list ()

* Fix a format string.

* Guard against an empty list.
Nuclei classification can run without feature / annotation files ()
Compact NucleiClassification Notation ()
Improve linting and consistency ()
Update .git-blame-ignore-revs ()","What's Changed
Fix a format string. by @manthey in
Guard empty list by @manthey in
Nuclei classification can run without feature / annotation files by @subinkitware in
Compact Nuclei Notation by @subinkitware in
Improve linting and consistency by @manthey in
Full Changelog: v1.3.0...v1.3.1"
"Added basic geojs/annotation integration
Adding an annotation selection widget
Fix client tests
Fix annotation layer position and panel collapse
Disable pointer events in panel regions
Limit cursor: pointer to text in annotation list
Update large image on travis
Replace gui selector modal with a dropdown
Add dialog query parameters to routing
Fix routing and improve css
Make analysis routes query parameters
Route open images via query parameters
Add open image button to the header
Add a bug fix from large_image
Add pixel scaling to handle odd sized images
Allow the segmentation script to take a girder item as input
Pregenerate matplotlib's font cache
Add an event handler to create annotations on data.process
Close dialog after clicking an image
Open job detail on click
Update annotation list on job completion
Update job list on submission
Change annotation and user dsarchive docker org
Hide control panel div when empty
Changed name of NucleiSegmentation CLI to NucleiDetection
Added Hessian.py
Added Hessian.py
Added Hessian.py
Added Hessian.py
Added Eigenvalues.py
Added Vesselness.py
Added Eigenvalues.py
Added Vesselness.py
Updated __init__.py added Hessian, Eigenvalues, and Vesselness
Added a moc in docs/conf.py for pandas to fix RTD build
Added moc for skimage.feature in docs/conf.py
Added moc for skimage.measure in docs/conf.py
Added moc for skimage.morphology in docs/conf.py
Fix RTD error in gLoG where expression is given as default value
Undo changes in gLoG.py
Removed moc for numpy and added moc for scipy.ndimage.measurements'
Fix errors in docstrings
Update AUTHORS.rst
Update index.rst
Fix style errors
Update index.rst

Added introduction content.
Added nbsphinx to extensions in docs/conf.py
apt-get install pandoc to enable display of ipython notebooks on ReadTheDocs
Add nbsphinx to sphinx extensions
Added a page for examples in index.rst
Moved examples into the docs and added an example for nuclei segmentation
Created a directory with some example data
Delete examples from old location
Fix color normalization
Adding another example image
Fix bug in .travis.yml
Add nbsphinx to requirements.txt
Moved nbsphinx to requirements.txt and using pip to install it in .travis.yml
Fix bug in .travis.yml
Remove style tests for examples.

These will now be jupyter notebooks
Fix syntax highlighting and add intersphinx extension
Fix line numbering in nuclei-segmentation.ipynb
Added nbsphinx to requirements.txt to be installed by pip
Made output images bigger in nuclei-segmentation.ipynb
Added an example notebook for color deconvolution
Fix mixing output of sparse color deconvolution
Minor style changes
Moved nbsphinx to requirements_dev.txt
Modify notebook examples to grab input data from data.kitware.com
Added jupyter to requirements_dev.txt
Increased timeout for sparse color deconvolution in color-deconvolution example
Replaced jupyter with ipython in requirements_dev.txt
Undo replace of jupyter with ipython in requirements_dev.txt
Add readthedocs.yml to manage/install dependencies only on RTD
Style fixes
Added scientific packages to docs/environment.yml
Shorten/simplify code in ReinhordNorm.py
Added a test for color normalization
Fix style error
Fix style errors
Follow naming conventions for test discovery
Add __init__.py to plugin_tests/api
Place test immediately under plugin_tests directory
Update outdated url
Reduce atol in numpy.allclose
Fix errors in color_normalization_test
Clean up and add a comment
Update comment
Fix visualization view tests
Fix widget test
Improve the performance of annotation rendering
Update cLoG.py

Fixed boundary handling, changing mode to 'mirror', to improve post-processing in segmentation.
Update MaxClustering.py

Added type checking of input 'Mask' to avoid background masking error.
Update MaxClustering.py

Simplified type-check statement
Update MaxClustering.py

Clarified doc-string
Update EmbedBounds.py

Added shape checking for display and boundary image
Update EmbedBounds.py

Remove blank whitespace
Pregenerate font-cache to avoid warnings
Added sha512 key files and modified tests accordingly
Bumped girder, girder_worker, and large_image to latest version
Add cmake definitions to run HistomicsTK tests only
Update CondenseLabel.py

Fixed output type of condensed label image to uint32. Integer type is required for compatibility with scipy label image processing algorithms.
Update LabelPerimeter.py

Changed output type to uint32.
Update ShuffleLabel.py

Changed output type to uint32.
Map slicer image/file inputs to girder files instead of items
Removed temporary code that loops through all files in item directory and loads first image
Remove read_image function and clean up debug code
BugFix: run make before ctest
Remove unused import
Use {param_name} to specify input file paths in docker container args
Functions for minimum model nuclear segmentation and label image cleanup.
Fixed style in __init__ and MinimumModel.
Update TraceBounds.py

Added exception to 'ISBF' for checking cyclomatic complexity.
Update MinimumModel.py

Added exception to 'SplitConcavities' for checking cyclomatic complexity.
Update CondenseLabel.py

Fixed zero-offset issue in filling new values.
Pin the pillow version for conda.

Pillow 3.3.0 doesn't work in the travis environment without more work, so pin to 3.2.0.
Extend from a docker image that has itk and conda already installed
Minor stylistic changes and cleanup","Changes base image from ubuntu:14.04 to dsarchive/base_docker_image that includes miniconda, python wrapper ITK, and openslide on ubuntu14.04. With this change ITK will be available for use within HistomicsTK when run within the dasrchive/histomicstk docker image.
Adds examples using jupyter notebooks
Sets up the infrastructure to add tests using data stored on data.kitware.com
Adds front-end code to display annotations"
"update changelog manually
add file path as dicom dataset attribution
add dataset, supergraph and model setup
add GripNetLinkPrediction pl module
remove old version GripNet
add out_channels to GripNet class
fix errors
add repr
add forward function
add dataloader and steps
fix dimension error in dataloader
change structure
fix error and test
update docs
update rdkit test verision
update to latest rdkit version
remove rdkit installation with confa-forge
fix pytdc version for windows compatibility
stale created

stale workflow has been created to handle the issues and pull requests
update configs
add merging config
move `DistMult` to `kale.predict.devode`
move sampling to `kale.prepdata.graph_neg...ing`
pre-commit checked
move model and dataset to the core API
add get model and supervertex
add docs negative samp
add gripnet link predictor docs and test
remove utils file and test
specify importlib-metadata version
small change on pr close and pre-commit checked again
revert importlib-metadata<5.0; wait for update
changed the PR stale days
remove flake8 restriction
flake8<5
""flake8<5""
Fixed the stale doc
""importlib_metadata<5""
flake8==3.8.0
add , ""importlib-metadata<5.0.0"" to pre-commit
rename & simplify lint workflow
add isort back
unify job name style
unify styles
unify styles
unify styles
add valid option
fix names, docs and EPS
address comments
update docs
improve consistency and clarity
clarify example train/valid/test sets
fix missing '('
update dataset
fix tensorly backend and update flake8 github
tensorly version <=0.7.0 for Python 3.7
rm tensorly torch backend in test
Update main.py

using pytorch-lightning
use pytorch-lightning
convert to pytorch lightning
convert to pytorch lightning
convert to pytorch lightning
cifar_cnntransformer Trainer based on Lightning
convert to pytorch lightning
Trainer has been moved to kale.pipeline.cifar_cnntransformer_trainer
convert to pytorch lightning
trainer strategy set up
Create Trainer in the example folder
create Trainer in the example folder
Add pyg version in CI envs
Move Trainer into get_model()
Move model setup to model.py, update main.py
Add ClassNet
Add description, update variable name for ClassNet
Add SimpleCNN
Delete cifar_cnntransformer_trainer.py
Moved PredictionHead and SimpleCNN
Update variable name for ClassNet
Update ClassNet
Update ClassNet
Add test for SimpleCNN module
Add test for ClassCNN module
Create cnn_trainer.py
cnn_trainer in kale.pipeline.cnn_trainer
Moved trainer to kale.pipeline.cnn_trainer
added option to log messages to terminal. default is false
Create FUNDING.yml
logger update to print to terminal option
Trainer moved to kale.pipeline
Remove unused modules
use valid_loader for trainer.test()
update comments and data dir
update collect_env link
add tensorboard logger
update comments
Create test action file for new project board
update documentation
create base_trainer
Refine with new code
Added feature for moving isssue to in progress
Update test_project.yml
bug fixes
Add CNN Transformer example using Pytorch Lightning on CIFAR10
Delete CIFAR10-ModelComparison-ValAcc-Lightning.png
Add CNN Transformer example using Pytorch Lightning on CIFAR10
Delete the test_project.yml file
Updated project.yml for the new project board
update validation accuracy figure
resize validation accuracy figure
set resize rate to 0.8
Update Observation based on Lightning model
Update README.md
upgrade databooks to 1.3.7
Refine
Refine
Pre-commit checked
pre-commit checked
pre-commit check
update documentation
Updated documentation
Refine
add out_dir
add get_config and simplify get_model
update params type
add param progress_bar
remove softmax in classifier
unify param name and documentations in losses
add comet logger and adaptive lr
add learning rate monitor
add compute_loss to base_trainer and simplify cnn transformer trainer
simplify metrics logging
add test_base_trainer
add gpus arguments in Trainer
bug fix
update document for kale.pipeline.base_trainer
Update description
comments clarification
fix out_dir
update configures
unify out_dir
add detailed introduction of base_trainer
update Lightning link
rename to BaseNNTrainer and base_nn_trainer
update documentation
typo and format changes
format changes
add reference
update description
format change
rename test module for ClassNet()
fix typo
remove_python3.7_add_python3.10
correct language problem
cinfig bug fixes
rename SimpleCNN to SimpleCNNBuilder
update docstring
unify doctring format
freeze ipython<8.13
update requirements
freeze to <=8.12
Revert ""freeze to <=8.12""

This reverts commit 34a10dbb086316a047e6afdb012ee7b54e4b3657.
freeze ipython to <=8.12.0
removing notebook outputs and fixing setup.py file error (draft)
fixing UnicodeDecodeError (test)
mistakes fixed
test
Refine text
Refine text
Refine text
exclude windows py3.10 from test and added source link of bypassing SKLEARN error message.
update nilinear version
removed in text python 3.7 and added 3.10
rdkit fix
solving numpy.float issue
added test for logging to terminal
added test for logging to terminal
added test for logging to terminal
test
use pypi to install rdkit
rm old version rdkit-pypi

new usage is rdkit
update to pip_install_rdkit
Added urllib3<2.0 in requirements.txt
pre-commit checked
Updated bindingdb_deepdta tutorial
pre-commit fix
Refactor input parameters of the data loader in gripnet example
Fix pre-commit error
Refactor documentation
Reorder modules in the documentation
to 0.1.2
update changelog action v1.1.1
[Changelog CI] Add Changelog for Version 0.1.2
update changelog manually
use ubuntu-latest","New Features
: Create stale workflow
: Update CIFAR CNNTransformer example to Lightning
: Add option to log messages to terminal
: Update project.yml for the new project board
: Support py3.10 and remove py3.7
Bug Fixes
: Update IPython version from <9.0 to <8.13 to support Python 3.8
Code Improvements
: Add file path as a dicom dataset attribute
: Update the polypharmacy example and GripNet implementation
: Refactor input parameter of the data loader in PolypharmacyDataset class
: Refactor documentation and resolve module visibility issues in PyKale"
"fix(parse): treat null as an invalid date
commit  format
fix format
add format
fix
fix format","Bug Fixes
parse: treat null as an invalid date (2ab2fb2)"
"chore(release): 1.6.1 [skip ci]

<a name=""1.6.1""></a>
## [1.6.1](https://github.com/xx45/dayjs/compare/v1.6.0...v1.6.1) (2018-05-18)

### Bug Fixes

* add() & parse() bug fix & add locale de, pt-br ([bf1331e](https://github.com/xx45/dayjs/commit/bf1331e))
chore: ignore docs in npm package
chore: update change log
chore(release): 1.6.2 [skip ci]

<a name=""1.6.2""></a>
## [1.6.2](https://github.com/iamkun/dayjs/compare/v1.6.1...v1.6.2) (2018-05-18)

### Bug Fixes

* change-log update && test new npm release ([aa49cba](https://github.com/iamkun/dayjs/commit/aa49cba)), closes [](https://github.com/iamkun/dayjs/issues/163)","Bug Fixes
change-log update && test new npm release (aa49cba), closes"
"test: add timezone +05:30 test
refactor: mSet to private $set
ci: update build
Add Hour and Minute to diff()
test: add parse test
test: browser test
test: shoud check valid
test: add parse test
test: browser test
test: shoud check valid
chore: fix year add string, but should we fix this really?

close
chore: fix d.ts error
fix: fix ios timeout , fix d.ts","Bug Fixes
fix ios timeout , fix d.ts (edceae3)"
"chore(release): 1.6.6 [skip ci]

<a name=""1.6.6""></a>
## [1.6.6](https://github.com/iamkun/dayjs/compare/v1.6.5...v1.6.6) (2018-06-06)

### Bug Fixes

*  format API update and locale file update ([5ca48f0](https://github.com/iamkun/dayjs/commit/5ca48f0)), closes [](https://github.com/iamkun/dayjs/issues/228)
fix 'locale' method name in index.d.ts typings file
buddhistEra plugin

- BBBB for B.E. year
- BB for B.E. year 2 digit
BuddhistEra plugin document
Add taiwan (zh-tw) locale
update to yearBias
add danish locale
add padStart in buddhistYear plugin
2 digit year with slice(-2)
fix: fix id locale

fix
chore: format no locale object
chore: update oldFormat
docs: update docs
chore(release): 1.6.7 [skip ci]

## [1.6.7](https://github.com/iamkun/dayjs/compare/v1.6.6...v1.6.7) (2018-06-11)

### Bug Fixes

* fix id locale ([1ebbeb8](https://github.com/iamkun/dayjs/commit/1ebbeb8)), closes [](https://github.com/iamkun/dayjs/issues/234)","Bug Fixes
fix id locale (1ebbeb8), closes"
"chore(release): 1.6.2 [skip ci]

<a name=""1.6.2""></a>
## [1.6.2](https://github.com/iamkun/dayjs/compare/v1.6.1...v1.6.2) (2018-05-18)

### Bug Fixes

* change-log update && test new npm release ([aa49cba](https://github.com/iamkun/dayjs/commit/aa49cba)), closes [](https://github.com/iamkun/dayjs/issues/163)
Fix typo
Add Japanese locale
Fix .gitignore setting

so that git can detect change of src/locale folder
Fix not-closed bracket in the docs
Updated the locale to the new format
Add newline to Russian locale
Fix not closed bracket in Chinese doc
chinese translation
patch chinese translation
add missing file
typo fix
typo fix
Add pt-br docs and readme
Add Japanese documents
Add link to Japanese documents
Move README for ja to under docs/ja
Add Turkish locale
Update CONTRIBUTING.md
Fix broken link in README-ja
fix bug: advencedFormat plugin
fix bug and add test cases
fix bug and add test cases
refactor: refactor ordinal && add test
docs: update doc links
fix: instance locale change should be immutable
docs: doc update
chore: code update
chore(release): 1.6.3 [skip ci]

<a name=""1.6.3""></a>
## [1.6.3](https://github.com/iamkun/dayjs/compare/v1.6.2...v1.6.3) (2018-05-21)

### Bug Fixes

* Changing locales locally is immutable from this release ([2cce729](https://github.com/iamkun/dayjs/commit/2cce729)), closes [](https://github.com/iamkun/dayjs/issues/182)
* instance locale change should be immutable ([84597c9](https://github.com/iamkun/dayjs/commit/84597c9))","Bug Fixes
Changing locales locally is immutable from this release (2cce729), closes
instance locale change should be immutable (84597c9)"
"chore(release): 1.6.7 [skip ci]

## [1.6.7](https://github.com/iamkun/dayjs/compare/v1.6.6...v1.6.7) (2018-06-11)

### Bug Fixes

* fix id locale ([1ebbeb8](https://github.com/iamkun/dayjs/commit/1ebbeb8)), closes [](https://github.com/iamkun/dayjs/issues/234)
add german relative times
fix: fix  Advanced format bug in zh-cn

close
chore(release): 1.6.8 [skip ci]

## [1.6.8](https://github.com/iamkun/dayjs/compare/v1.6.7...v1.6.8) (2018-06-14)

### Bug Fixes

* fix  Advanced format bug in zh-cn ([0c07874](https://github.com/iamkun/dayjs/commit/0c07874)), closes [](https://github.com/iamkun/dayjs/issues/242)","Bug Fixes
fix  Advanced format bug in zh-cn (0c07874), closes"
"chore(release): 1.6.0 [skip ci]

<a name=""1.6.0""></a>
# [1.6.0](https://github.com/xx45/dayjs/compare/v1.5.24...v1.6.0) (2018-05-15)

### Features

* Locale && Plugin ([2342c55](https://github.com/xx45/dayjs/commit/2342c55)), closes [](https://github.com/xx45/dayjs/issues/141)
docs: change link
chore: update npmignore
docs: move api reference to docs folder
Fix typescript declarations
Add Brazilian Portuguese locale
Add extend() and locale()
fixes
update README.zh-CN.md
fixes bug: dayjs().add()
Add german locale
docs: update readme [skip ci]
docs: add sub docs  [skip ci]
docs: update chinese docs  [skip ci]
docs: update chinese docs
docs: fix doc link
docs: chinese docs update [skip ci]
ci: update ci logic
test: add test case

fix
test: add test case
refactor: refactor add()
refactor: ref utils
chore: optional type definition
chore(release): 1.6.1 [skip ci]

<a name=""1.6.1""></a>
## [1.6.1](https://github.com/xx45/dayjs/compare/v1.6.0...v1.6.1) (2018-05-18)

### Bug Fixes

* add() & parse() bug fix & add locale de, pt-br ([bf1331e](https://github.com/xx45/dayjs/commit/bf1331e))","Bug Fixes
add() & parse() bug fix & add locale de, pt-br (bf1331e)"
"chore(release): 1.6.9 [skip ci]

## [1.6.9](https://github.com/iamkun/dayjs/compare/v1.6.8...v1.6.9) (2018-06-14)

### Bug Fixes

* add isDayjs => boolean API ([6227c8b](https://github.com/iamkun/dayjs/commit/6227c8b))
docs: update SET docs
Added Norwegian Bokmål ""nb"" locale.
Add relative locales to russian language
chore(release): 1.6.10 [skip ci]

## [1.6.10](https://github.com/iamkun/dayjs/compare/v1.6.9...v1.6.10) (2018-06-25)

### Bug Fixes

* Add relative locales to russian language ([c7e9898](https://github.com/iamkun/dayjs/commit/c7e9898)), closes [](https://github.com/iamkun/dayjs/issues/256)","Bug Fixes
Add relative locales to russian language (c7e9898), closes"
"chore(release): 1.6.8 [skip ci]

## [1.6.8](https://github.com/iamkun/dayjs/compare/v1.6.7...v1.6.8) (2018-06-14)

### Bug Fixes

* fix  Advanced format bug in zh-cn ([0c07874](https://github.com/iamkun/dayjs/commit/0c07874)), closes [](https://github.com/iamkun/dayjs/issues/242)
fix: add isDayjs => boolean API
docs: update en doc
docs: update other docs
docs: update docs
chore(release): 1.6.9 [skip ci]

## [1.6.9](https://github.com/iamkun/dayjs/compare/v1.6.8...v1.6.9) (2018-06-14)

### Bug Fixes

* add isDayjs => boolean API ([6227c8b](https://github.com/iamkun/dayjs/commit/6227c8b))","Bug Fixes
add isDayjs => boolean API (6227c8b)"
"chore(release): 1.7.0 [skip ci]

# [1.7.0](https://github.com/iamkun/dayjs/compare/v1.6.10...v1.7.0) (2018-07-02)

### Features

* Added method to retrieve week of the year ([e1c1b1c](https://github.com/iamkun/dayjs/commit/e1c1b1c))
Update CHANGELOG.md
chore(release): 1.7.1 [skip ci]

## [1.7.1](https://github.com/iamkun/dayjs/compare/v1.7.0...v1.7.1) (2018-07-03)

### Bug Fixes

* fix week() error near the end of the year ([fa03689](https://github.com/iamkun/dayjs/commit/fa03689))","Bug Fixes
fix week() error near the end of the year (fa03689)"
"chore(release): 1.7.3 [skip ci]

## [1.7.3](https://github.com/iamkun/dayjs/compare/v1.7.2...v1.7.3) (2018-07-10)

### Bug Fixes

* **locale-nl:** set correct weekdays and months ([6d089d7](https://github.com/iamkun/dayjs/commit/6d089d7))
chore: update set logic
docs: update set units docs
chore(release): 1.7.4 [skip ci]

## [1.7.4](https://github.com/iamkun/dayjs/compare/v1.7.3...v1.7.4) (2018-07-11)

### Bug Fixes

* update set week logic ([60b6325](https://github.com/iamkun/dayjs/commit/60b6325)), closes [](https://github.com/iamkun/dayjs/issues/276)","Bug Fixes
update set week logic (60b6325), closes"
"chore(release): 1.7.2 [skip ci]

## [1.7.2](https://github.com/iamkun/dayjs/compare/v1.7.1...v1.7.2) (2018-07-04)

### Bug Fixes

* DEPRECATED isLeapYear, use IsLeapYear plugin instead ([e2e5116](https://github.com/iamkun/dayjs/commit/e2e5116))
fix(locale-nl): set correct weekdays and months
chore(release): 1.7.3 [skip ci]

## [1.7.3](https://github.com/iamkun/dayjs/compare/v1.7.2...v1.7.3) (2018-07-10)

### Bug Fixes

* **locale-nl:** set correct weekdays and months ([6d089d7](https://github.com/iamkun/dayjs/commit/6d089d7))","Bug Fixes
locale-nl: set correct weekdays and months (6d089d7)"
"chore(release): 1.7.6 [skip ci]

## [1.7.6](https://github.com/iamkun/dayjs/compare/v1.7.5...v1.7.6) (2018-09-25)

### Bug Fixes

* **add dayjs.unix:** add dayjs.unix to parse timestamp in seconds && locale update ([5711c5e](https://github.com/iamkun/dayjs/commit/5711c5e))
fix daylight saving time close close

* fix(dayjs.add): fix daylight saving time

It's not safe to add 24 hours to manipulate date, There are 2 days of the year that do not have 24 hours
In order to get rid of this issue its good to use build-in `setDate`
See: https://en.wikipedia.org/wiki/Daylight_saving_time
fix(DST): fix daylight saving time DST bug && add test ()
chore(release): 1.7.7 [skip ci]

## [1.7.7](https://github.com/iamkun/dayjs/compare/v1.7.6...v1.7.7) (2018-09-26)

### Bug Fixes

* **DST:** fix daylight saving time DST bug && add test ([](https://github.com/iamkun/dayjs/issues/354)) ([6fca6d5](https://github.com/iamkun/dayjs/commit/6fca6d5))","Bug Fixes
DST: fix daylight saving time DST bug && add test () (6fca6d5)"
"chore(release): 1.8.25 [skip ci]

## [1.8.25](https://github.com/iamkun/dayjs/compare/v1.8.24...v1.8.25) (2020-04-21)

### Bug Fixes

* Fix CustomParseFormat plugin of parsing only YYYY / YYYY-MM bug ([](https://github.com/iamkun/dayjs/issues/873)) ([3cea04d](https://github.com/iamkun/dayjs/commit/3cea04d33d54d44bbdd3d026b5c7f67ebf176116)), closes [](https://github.com/iamkun/dayjs/issues/849)
* Fix Duration plugin get seconds ([](https://github.com/iamkun/dayjs/issues/867)) ([62b092d](https://github.com/iamkun/dayjs/commit/62b092d9f9a3db5506ef01f798bdf211f163f53f))
* Fix type definition of locale ([9790b85](https://github.com/iamkun/dayjs/commit/9790b853e6113243a7f4a81dd12c6509e406a102))
* Fix UTC plugin startOf, endOf bug ([](https://github.com/iamkun/dayjs/issues/872)) ([4141084](https://github.com/iamkun/dayjs/commit/4141084ba96d35cadcda3f1e661bf1d0f6c8e4de)), closes [](https://github.com/iamkun/dayjs/issues/809) [](https://github.com/iamkun/dayjs/issues/808)
fix: Update RelativeTime plugin default config ()
fix: Fix WeekOfYear plugin bug while using BadMutable plugin ()
fix: Update CustomParseFormat plugin strict mode ()
fix: Fix Duration plugin `.toISOString` format bug ()

* fix: Fix Duration Plugin `.toISOString` format bug

fix

* test: Update RelativeTime plugin test
chore(release): 1.8.26 [skip ci]

## [1.8.26](https://github.com/iamkun/dayjs/compare/v1.8.25...v1.8.26) (2020-04-30)

### Bug Fixes

* Fix Duration plugin `.toISOString` format bug ([](https://github.com/iamkun/dayjs/issues/889)) ([058d624](https://github.com/iamkun/dayjs/commit/058d624808fd2be024ae846bcb2e03885f39b556)), closes [](https://github.com/iamkun/dayjs/issues/888)
* Fix WeekOfYear plugin bug while using BadMutable plugin ([](https://github.com/iamkun/dayjs/issues/884)) ([2977438](https://github.com/iamkun/dayjs/commit/2977438458542573a4500e21f7ba5d1f8442960e))
* Update CustomParseFormat plugin strict mode ([](https://github.com/iamkun/dayjs/issues/882)) ([db642ac](https://github.com/iamkun/dayjs/commit/db642ac73e52e00d8c41546b2935c9e691cf66e0))
* Update RelativeTime plugin default config ([](https://github.com/iamkun/dayjs/issues/883)) ([0606f42](https://github.com/iamkun/dayjs/commit/0606f425aef8ccbfc3da3e43cba368130603b0cc))","Bug Fixes
Fix Duration plugin .toISOString format bug () (058d624), closes
Fix WeekOfYear plugin bug while using BadMutable plugin () (2977438)
Update CustomParseFormat plugin strict mode () (db642ac)
Update RelativeTime plugin default config () (0606f42)"
"chore(release): 1.10.2 [skip ci]

## [1.10.2](https://github.com/iamkun/dayjs/compare/v1.10.1...v1.10.2) (2021-01-05)

### Bug Fixes

* fix parse regex bug ([](https://github.com/iamkun/dayjs/issues/1307)) ([db2b6a5](https://github.com/iamkun/dayjs/commit/db2b6a5ea8e70f9fda645d113ca33495aa96b616)), closes [](https://github.com/iamkun/dayjs/issues/1305)
* remove module entry in package.json to revert 1.10.1 change ([](https://github.com/iamkun/dayjs/issues/1314)) ([824dcb8](https://github.com/iamkun/dayjs/commit/824dcb8dfcccf14f64b6a2741a00fcdfe53dcd98))
* update devHelper add warning ""passing Year as a Number will be parsed as a Unix timestamp"" ([](https://github.com/iamkun/dayjs/issues/1315)) ([b0dda31](https://github.com/iamkun/dayjs/commit/b0dda3139e25441ab4e7c1f4f192dee0ecce6ef8))
chore: update
fix: fix weekYear plugin missing locale bug ()

* fix: fix weekYear plugin missing locale bug

fix
fix: fix customParseFormat plugin strict mode parse meridiem bug ()
fix: update German [de] locale yearStart

fix
fix: update devHelper to add dev warning setting locale before loading
fix: update advancedFormat plugin to add format options for iso week and weekyear ()
chore(release): 1.10.3 [skip ci]

## [1.10.3](https://github.com/iamkun/dayjs/compare/v1.10.2...v1.10.3) (2021-01-09)

### Bug Fixes

* fix customParseFormat plugin strict mode parse meridiem bug ([](https://github.com/iamkun/dayjs/issues/1321)) ([e49eeef](https://github.com/iamkun/dayjs/commit/e49eeefbe8acb36419d36ca2e7ed8bc152f73ac1))
* fix weekYear plugin missing locale bug ([](https://github.com/iamkun/dayjs/issues/1319)) ([344bdc0](https://github.com/iamkun/dayjs/commit/344bdc0eed6843edb05723dc7853a41833d88f08)), closes [](https://github.com/iamkun/dayjs/issues/1304)
* update advancedFormat plugin to add format options for iso week and weekyear ([](https://github.com/iamkun/dayjs/issues/1309)) ([2c54c64](https://github.com/iamkun/dayjs/commit/2c54c6441871a175ac9b95e41e4cd075dbac10cb))
* update devHelper to add dev warning setting locale before loading ([c5cc893](https://github.com/iamkun/dayjs/commit/c5cc89355e1e206ca72433c19c40cb528690b04f))
* update German [de] locale yearStart ([1858df8](https://github.com/iamkun/dayjs/commit/1858df8008de56570680723df89b36a8cbc970ef)), closes [](https://github.com/iamkun/dayjs/issues/1264)","Bug Fixes
fix customParseFormat plugin strict mode parse meridiem bug () (e49eeef)
fix weekYear plugin missing locale bug () (344bdc0), closes
update advancedFormat plugin to add format options for iso week and weekyear () (2c54c64)
update devHelper to add dev warning setting locale before loading (c5cc893)
update German [de] locale yearStart (1858df8), closes"
"chore(release): 1.11.6 [skip ci]

## [1.11.6](https://github.com/iamkun/dayjs/compare/v1.11.5...v1.11.6) (2022-10-21)

### Bug Fixes

* add BigIntSupport plugin ([](https://github.com/iamkun/dayjs/issues/2087)) ([f6dce48](https://github.com/iamkun/dayjs/commit/f6dce48a9e39677718b087867d9fd901d5078155))
* Fix objectSupport collides with Duration plugin - issue [](https://github.com/iamkun/dayjs/issues/2027) ([](https://github.com/iamkun/dayjs/issues/2038)) ([c9370ea](https://github.com/iamkun/dayjs/commit/c9370ea96bf420439ee7eaa4146e8ed643160312))
chore(release): 1.11.7 [skip ci]

## [1.11.7](https://github.com/iamkun/dayjs/compare/v1.11.6...v1.11.7) (2022-12-06)

### Bug Fixes

* Add locale (zh-tw) meridiem ([](https://github.com/iamkun/dayjs/issues/2149)) ([1e9ba76](https://github.com/iamkun/dayjs/commit/1e9ba761ff4e3f2759106dfe1aa9054d5826451c))
* update fa locale ([](https://github.com/iamkun/dayjs/issues/2151)) ([1c26732](https://github.com/iamkun/dayjs/commit/1c267321a1a01b4947e1482bac67d67ebc7c3dfa))","Bug Fixes
Add locale (zh-tw) meridiem () (1e9ba76)
update fa locale () (1c26732)"
"chore(release): 1.11.5 [skip ci]

## [1.11.5](https://github.com/iamkun/dayjs/compare/v1.11.4...v1.11.5) (2022-08-12)

### Bug Fixes

* ordinal for nl not working ([](https://github.com/iamkun/dayjs/issues/2011)) ([c93c85e](https://github.com/iamkun/dayjs/commit/c93c85eaa11564a1aae2d823480a417812c01bf4))
* wrong ordinal for french locale ([](https://github.com/iamkun/dayjs/issues/2010)) ([dd192a7](https://github.com/iamkun/dayjs/commit/dd192a72fc5d26ce56481e89b0c1ccf5f939be0c))
chore(release): 1.11.6 [skip ci]

## [1.11.6](https://github.com/iamkun/dayjs/compare/v1.11.5...v1.11.6) (2022-10-21)

### Bug Fixes

* add BigIntSupport plugin ([](https://github.com/iamkun/dayjs/issues/2087)) ([f6dce48](https://github.com/iamkun/dayjs/commit/f6dce48a9e39677718b087867d9fd901d5078155))
* Fix objectSupport collides with Duration plugin - issue [](https://github.com/iamkun/dayjs/issues/2027) ([](https://github.com/iamkun/dayjs/issues/2038)) ([c9370ea](https://github.com/iamkun/dayjs/commit/c9370ea96bf420439ee7eaa4146e8ed643160312))","Bug Fixes
add BigIntSupport plugin () (f6dce48)
Fix objectSupport collides with Duration plugin - issue () (c9370ea)"
"chore(release): 1.8.22 [skip ci]

## [1.8.22](https://github.com/iamkun/dayjs/compare/v1.8.21...v1.8.22) (2020-03-08)

### Bug Fixes

* Add IsoWeek plugin ([](https://github.com/iamkun/dayjs/issues/811)) ([28a2207](https://github.com/iamkun/dayjs/commit/28a2207ef9849afbac15dd29267b2e7a09cd3c16))
* Fix unsupported locale fallback to previous one ([](https://github.com/iamkun/dayjs/issues/819)) ([4868715](https://github.com/iamkun/dayjs/commit/48687152cf5bee6a4c1b8ceea4bda8b9bab9be10))
fix: Update Thai (th) locale relativeTime ()

fix
fix: Fix IsoWeek plugin typescript definition ()
chore: add zh locale ()
fix: Add Chinese (zh) locale
fix: Update Slovak (sk) locale,  Czech (cs) locale ()
fix: Update Arabic (ar) locale relative time ()
chore(release): 1.8.23 [skip ci]

## [1.8.23](https://github.com/iamkun/dayjs/compare/v1.8.22...v1.8.23) (2020-03-16)

### Bug Fixes

* Add Chinese (zh) locale ([f9b8945](https://github.com/iamkun/dayjs/commit/f9b89453166d8b53d33b1d7eefd9942022552e6e))
* Fix IsoWeek plugin typescript definition ([](https://github.com/iamkun/dayjs/issues/828)) ([30aab0c](https://github.com/iamkun/dayjs/commit/30aab0c7bce85dfac0ae208a891def30f88b5cb4))
* Update Arabic (ar) locale relative time ([](https://github.com/iamkun/dayjs/issues/836)) ([14044c6](https://github.com/iamkun/dayjs/commit/14044c6fda1229e3f0e5473d3f886bd79589b15f))
* Update Slovak (sk) locale,  Czech (cs) locale ([](https://github.com/iamkun/dayjs/issues/833)) ([f0d451f](https://github.com/iamkun/dayjs/commit/f0d451f795e9ebf752cd854d51b25b11de2343a3))
* Update Thai (th) locale relativeTime ([](https://github.com/iamkun/dayjs/issues/826)) ([63b7c03](https://github.com/iamkun/dayjs/commit/63b7c03a6dbb0507d60776e8bad6cccde3828b88)), closes [](https://github.com/iamkun/dayjs/issues/816)","Bug Fixes
Add Chinese (zh) locale (f9b8945)
Fix IsoWeek plugin typescript definition () (30aab0c)
Update Arabic (ar) locale relative time () (14044c6)
Update Slovak (sk) locale,  Czech (cs) locale () (f0d451f)
Update Thai (th) locale relativeTime () (63b7c03), closes"
"chore(release): 1.9.4 [skip ci]

## [1.9.4](https://github.com/iamkun/dayjs/compare/v1.9.3...v1.9.4) (2020-10-23)

### Bug Fixes

* Add descriptions to types ([](https://github.com/iamkun/dayjs/issues/1148)) ([9a407a1](https://github.com/iamkun/dayjs/commit/9a407a140b089345a387d1aceab4d0d1635229c7))
* add devHelper plugin ([](https://github.com/iamkun/dayjs/issues/1163)) ([de49dc8](https://github.com/iamkun/dayjs/commit/de49dc80c83b85de4170571b64412bd60ada221b))
* Fix Hungarian (hu) locale ([](https://github.com/iamkun/dayjs/issues/1112)) ([ab13754](https://github.com/iamkun/dayjs/commit/ab13754f43c5033dacaa0eb2042dc4ab1a7a2754))
* fix minMax plugin parsing empty array bug ([](https://github.com/iamkun/dayjs/issues/1062)) ([368108b](https://github.com/iamkun/dayjs/commit/368108bc6d5cb1542f711b8eba722bd4dfaab0cd))
* update adding/subtracting Duration from Dayjs object ([](https://github.com/iamkun/dayjs/issues/1156)) ([f861aca](https://github.com/iamkun/dayjs/commit/f861acac3e83e28d3a4a96312c71119fd6b544fc))
* update en-NZ locale to use proper ordinal formatting function ([](https://github.com/iamkun/dayjs/issues/1143)) ([fcdbc58](https://github.com/iamkun/dayjs/commit/fcdbc5880710456a29b2bacf250542230bf48b99))
* update localeData plugin type ([](https://github.com/iamkun/dayjs/issues/1116)) ([ee5a4ec](https://github.com/iamkun/dayjs/commit/ee5a4ec41edddfb57d103c35182dc635c9264a10))
* update timezone plugin to support custom parse format ([](https://github.com/iamkun/dayjs/issues/1160)) ([48cbf31](https://github.com/iamkun/dayjs/commit/48cbf3118ba5427de428777c2e025896db654f2e)), closes [](https://github.com/iamkun/dayjs/issues/1159)
* update timezone plugin to support keepLocalTime ([](https://github.com/iamkun/dayjs/issues/1161)) ([1d429e5](https://github.com/iamkun/dayjs/commit/1d429e5fe4467ebddcf81b43cf6f36e5e3be944c)), closes [](https://github.com/iamkun/dayjs/issues/1149)
fix: fix devHelper error in umd bundle in browser ()
chore: remove useless code 

Changed assignment of ""this.$L"" variable in Dayjs constructor.
fix: customParseFormat plugin supports parsing localizedFormats  ()
fix: fix customParseFormat plugin parse meridiem bug ()

fix
fix: fix utc plugin diff bug in DST ()

fix, fix
fix: update localeData plugin to support meridiem ()

fix
chore: fix travis-ci build link ()
fix: isoWeek plugin type ()
chore: update readme
chore: update readme
fix: update timezone plugin parse Date instance / timestamp logic & remove useless test ()
chore(release): 1.9.5 [skip ci]

## [1.9.5](https://github.com/iamkun/dayjs/compare/v1.9.4...v1.9.5) (2020-11-05)

### Bug Fixes

* customParseFormat plugin supports parsing localizedFormats  ([](https://github.com/iamkun/dayjs/issues/1110)) ([402b603](https://github.com/iamkun/dayjs/commit/402b603aa3ee4199786950bc88b3fdc6b527aa35))
* fix customParseFormat plugin parse meridiem bug ([](https://github.com/iamkun/dayjs/issues/1169)) ([9e8f8d9](https://github.com/iamkun/dayjs/commit/9e8f8d96c69d557f4d267f42567c25ae9e7ab227)), closes [](https://github.com/iamkun/dayjs/issues/1168)
* fix devHelper error in umd bundle in browser ([](https://github.com/iamkun/dayjs/issues/1165)) ([d11b5ee](https://github.com/iamkun/dayjs/commit/d11b5ee7dc11af671355f65ccda00f6ba42cc725))
* fix utc plugin diff bug in DST ([](https://github.com/iamkun/dayjs/issues/1171)) ([f8da3fe](https://github.com/iamkun/dayjs/commit/f8da3fe7e50c84c0502bf5be0b364910922dbd79)), closes [](https://github.com/iamkun/dayjs/issues/1097) [](https://github.com/iamkun/dayjs/issues/1021)
* isoWeek plugin type ([](https://github.com/iamkun/dayjs/issues/1177)) ([c3d0436](https://github.com/iamkun/dayjs/commit/c3d0436b06f74989e3a2c751a5d170f8072c4aad))
* update localeData plugin to support meridiem ([](https://github.com/iamkun/dayjs/issues/1174)) ([fdb09e4](https://github.com/iamkun/dayjs/commit/fdb09e4074cc7e8f6196846f18d3566c1f9e8fcd)), closes [](https://github.com/iamkun/dayjs/issues/1172)
* update timezone plugin parse Date instance / timestamp logic & remove useless test ([](https://github.com/iamkun/dayjs/issues/1183)) ([a7f858b](https://github.com/iamkun/dayjs/commit/a7f858bb70ad81f718ba35c479e84b54eace48b2))","Bug Fixes
customParseFormat plugin supports parsing localizedFormats  () (402b603)
fix customParseFormat plugin parse meridiem bug () (9e8f8d9), closes
fix devHelper error in umd bundle in browser () (d11b5ee)
fix utc plugin diff bug in DST () (f8da3fe), closes
isoWeek plugin type () (c3d0436)
update localeData plugin to support meridiem () (fdb09e4), closes
update timezone plugin parse Date instance / timestamp logic & remove useless test () (a7f858b)"
"chore(release): 1.11.2 [skip ci]

## [1.11.2](https://github.com/iamkun/dayjs/compare/v1.11.1...v1.11.2) (2022-05-06)

### Bug Fixes

* add OpUnitType (week) to quarterOfYear startOf/endOf types ([](https://github.com/iamkun/dayjs/issues/1865)) ([400bc3e](https://github.com/iamkun/dayjs/commit/400bc3e8915e0c58e7abbfd3a1235364b1abaf3e))
* Fix type issue with ManipulateType ([](https://github.com/iamkun/dayjs/issues/1864)) ([d033dfc](https://github.com/iamkun/dayjs/commit/d033dfcfc1d2ced39b2733898e8d85ad5984c9e9))
* fix UTC plugin .valueOf not taking DST into account  ([](https://github.com/iamkun/dayjs/issues/1448)) ([27d1c50](https://github.com/iamkun/dayjs/commit/27d1c506100ae6624f258c21cc06b24768ced733))
chore(release): 1.11.3 [skip ci]

## [1.11.3](https://github.com/iamkun/dayjs/compare/v1.11.2...v1.11.3) (2022-06-06)

### Bug Fixes

*  customParseFormat plugin to parse comma as a separator character ([](https://github.com/iamkun/dayjs/issues/1913)) ([41b1405](https://github.com/iamkun/dayjs/commit/41b1405971e099431211ae6c2a100cd797da4427))
* update Dutch [nl] locale ordinal ([](https://github.com/iamkun/dayjs/issues/1908)) ([5da98f8](https://github.com/iamkun/dayjs/commit/5da98f8085d2d2847d79e38c795082703a14f24b))","Bug Fixes
customParseFormat plugin to parse comma as a separator character () (41b1405)
update Dutch [nl] locale ordinal () (5da98f8)"
"chore(release): 1.8.16 [skip ci]

## [1.8.16](https://github.com/iamkun/dayjs/compare/v1.8.15...v1.8.16) (2019-08-27)

### Bug Fixes

* Fix relativeTime Plugin .FromNow() result error in UTC mode ([a385d5c](https://github.com/iamkun/dayjs/commit/a385d5c))
* Handle locale in WeekOfYear plugin ([](https://github.com/iamkun/dayjs/issues/658)) ([0e45b0a](https://github.com/iamkun/dayjs/commit/0e45b0a))
* LocaleData plugin returns all months and weekdays data when pas no argument ([](https://github.com/iamkun/dayjs/issues/645)) ([95e70b4](https://github.com/iamkun/dayjs/commit/95e70b4))
* Return null in toJSON if not valid ([](https://github.com/iamkun/dayjs/issues/633)) ([19affc8](https://github.com/iamkun/dayjs/commit/19affc8))
* Update Danish (da) locale ([](https://github.com/iamkun/dayjs/issues/626)) ([ac2ec77](https://github.com/iamkun/dayjs/commit/ac2ec77))
* Update Korean locale meridiem ([](https://github.com/iamkun/dayjs/issues/642)) ([b457146](https://github.com/iamkun/dayjs/commit/b457146))
* update Occitan locale Catalan locale ([](https://github.com/iamkun/dayjs/issues/630)) ([fef135e](https://github.com/iamkun/dayjs/commit/fef135e))
* update pt-br locale ([](https://github.com/iamkun/dayjs/issues/628)) ([ccf596d](https://github.com/iamkun/dayjs/commit/ccf596d))
* Update weekdaysShort to some locale files ([](https://github.com/iamkun/dayjs/issues/643)) ([cc1f15f](https://github.com/iamkun/dayjs/commit/cc1f15f))
chore: performance update
fix: Update Ukrainian locale (uk) ()

relativeTime.past is defined as '%s назад' which is Russian translation. Correct Ukrainian localisation is '%s тому'
fix: Update Polish locale (pl)()

`d` and `dd` is responsible for day and days. In polish day means dzień, week means tydzień.
Update README.md
chroe: fix ci ()
chore(release): 1.8.17 [skip ci]

## [1.8.17](https://github.com/iamkun/dayjs/compare/v1.8.16...v1.8.17) (2019-11-06)

### Bug Fixes

* Fix set utcOffset in utc mode ([d148115](https://github.com/iamkun/dayjs/commit/d148115dad8f1a5afc0a64e9b8163dfeba4616b6))
* Update advancedFormat plugin to support w ww wo week tokens … ([](https://github.com/iamkun/dayjs/issues/678)) ([26cfa63](https://github.com/iamkun/dayjs/commit/26cfa63a524b803f7966dac5464f9cbf8f63387e)), closes [](https://github.com/iamkun/dayjs/issues/676)
* Update ka locale weekdays ([f8ca3d4](https://github.com/iamkun/dayjs/commit/f8ca3d4ba1d3cbe41613d3909c0627935a51a0c4))
* Update nb locale ([](https://github.com/iamkun/dayjs/issues/679)) ([1063b0e](https://github.com/iamkun/dayjs/commit/1063b0e1b5c19a1354d233cc0f21438e7073233a))
* Update Polish locale (pl)([](https://github.com/iamkun/dayjs/issues/713)) ([30d2f02](https://github.com/iamkun/dayjs/commit/30d2f026b47188833a4f44fee4bab52467d4a718))
* Update Ukrainian locale (uk) ([](https://github.com/iamkun/dayjs/issues/710)) ([360161c](https://github.com/iamkun/dayjs/commit/360161cac75f597fdd51d9d1ff138601282a1b4b))
* UTC plugin set utcOffset value ([](https://github.com/iamkun/dayjs/issues/668)) ([8877883](https://github.com/iamkun/dayjs/commit/88778838e71dd309e79cd1a8094d5bea36ca3390))","Bug Fixes
Fix set utcOffset in utc mode (d148115)
Update advancedFormat plugin to support w ww wo week tokens … () (26cfa63), closes
Update ka locale weekdays (f8ca3d4)
Update nb locale () (1063b0e)
Update Polish locale (pl)() (30d2f02)
Update Ukrainian locale (uk) () (360161c)
UTC plugin set utcOffset value () (8877883)"
"chore(release): 1.8.21 [skip ci]

## [1.8.21](https://github.com/iamkun/dayjs/compare/v1.8.20...v1.8.21) (2020-02-26)

### Bug Fixes

* Set + Get accept 'D' as the short version of 'date' ([](https://github.com/iamkun/dayjs/issues/795)) ([523c038](https://github.com/iamkun/dayjs/commit/523c03880fa8bbad83214494ad02cd606cdb8b30))
* Update DayOfYear plugin type ([](https://github.com/iamkun/dayjs/issues/799)) ([5809652](https://github.com/iamkun/dayjs/commit/5809652e40245b7759827d9bf317abdcfa75a330))
* Update fi (Finnish) locale relativeTime ([](https://github.com/iamkun/dayjs/issues/797)) ([4a470fb](https://github.com/iamkun/dayjs/commit/4a470fbd6fef9e051727d0f26d53cc050b85935d))
chore: draft add isoWeek plugin ()
fix: Add IsoWeek plugin ()
docs: Update doc link
fix: Fix unsupported locale fallback to previous one ()
chore(release): 1.8.22 [skip ci]

## [1.8.22](https://github.com/iamkun/dayjs/compare/v1.8.21...v1.8.22) (2020-03-08)

### Bug Fixes

* Add IsoWeek plugin ([](https://github.com/iamkun/dayjs/issues/811)) ([28a2207](https://github.com/iamkun/dayjs/commit/28a2207ef9849afbac15dd29267b2e7a09cd3c16))
* Fix unsupported locale fallback to previous one ([](https://github.com/iamkun/dayjs/issues/819)) ([4868715](https://github.com/iamkun/dayjs/commit/48687152cf5bee6a4c1b8ceea4bda8b9bab9be10))","Bug Fixes
Add IsoWeek plugin () (28a2207)
Fix unsupported locale fallback to previous one () (4868715)"
"chore(release): 1.8.13 [skip ci]

## [1.8.13](https://github.com/iamkun/dayjs/compare/v1.8.12...v1.8.13) (2019-04-26)

### Bug Fixes

* Add missing relativeTime and formats for some locales ([](https://github.com/iamkun/dayjs/issues/560)) ([96b917e](https://github.com/iamkun/dayjs/commit/96b917e))
* Add weekday (locale aware day of the week) plugin ([](https://github.com/iamkun/dayjs/issues/569)) ([9007cc5](https://github.com/iamkun/dayjs/commit/9007cc5)), closes [](https://github.com/iamkun/dayjs/issues/559)
* Allow customizing ""am"" / ""pm"" strings with locale meridiem function ([](https://github.com/iamkun/dayjs/issues/580)) ([576e93e](https://github.com/iamkun/dayjs/commit/576e93e)), closes [](https://github.com/iamkun/dayjs/issues/578)
* Fix `.add` day/week decimal rouding bug ([800f6c9](https://github.com/iamkun/dayjs/commit/800f6c9))
* Fix `.diff` type definition error ([](https://github.com/iamkun/dayjs/issues/565)) ([c4921ae](https://github.com/iamkun/dayjs/commit/c4921ae)), closes [](https://github.com/iamkun/dayjs/issues/561)
* Fix CustomParseFormat plugin bug ([](https://github.com/iamkun/dayjs/issues/568)) ([1f5a9db](https://github.com/iamkun/dayjs/commit/1f5a9db)), closes [](https://github.com/iamkun/dayjs/issues/555)
* Fix relativeTime plugin Math.round bug ([40bea40](https://github.com/iamkun/dayjs/commit/40bea40))
* skip square brackets in  buddhistEra, advancedFormat plugins ([](https://github.com/iamkun/dayjs/issues/556)) ([9279718](https://github.com/iamkun/dayjs/commit/9279718)), closes [](https://github.com/iamkun/dayjs/issues/554)
* Update Indonesian locale([](https://github.com/iamkun/dayjs/issues/574)) ([0aa7143](https://github.com/iamkun/dayjs/commit/0aa7143))
* Update locale month to support both array and function ([](https://github.com/iamkun/dayjs/issues/581)) ([b6599d3](https://github.com/iamkun/dayjs/commit/b6599d3))
* Update LocalizedFormat plugin lowercase formats logic ([](https://github.com/iamkun/dayjs/issues/557)) ([d409304](https://github.com/iamkun/dayjs/commit/d409304))
Fix: Fix relativeTime plugin when the interval is 1 second ()
Fix: Update locale nl.js fix Dutch short for March is ""mrt"" ()

Dutch short for March is ""mrt""
Update --bug-report.md
Fix: Update QuarterOfYear plugin  type definition ()
fix: Fix QuarterOfYear plugin bug ()
fix: Fix UTC plugin add day DST bug ()
fix: Fix `.format` API returns UTC offset when value is 0 bug
chore(release): 1.8.14 [skip ci]

## [1.8.14](https://github.com/iamkun/dayjs/compare/v1.8.13...v1.8.14) (2019-05-07)

### Bug Fixes

* Fix `.format` API returns UTC offset when value is 0 bug ([b254964](https://github.com/iamkun/dayjs/commit/b254964))
* Fix QuarterOfYear plugin bug ([](https://github.com/iamkun/dayjs/issues/591)) ([434f774](https://github.com/iamkun/dayjs/commit/434f774))
* Fix UTC plugin add day DST bug ([](https://github.com/iamkun/dayjs/issues/590)) ([86cd839](https://github.com/iamkun/dayjs/commit/86cd839))","Bug Fixes
Fix .format API returns UTC offset when value is 0 bug (b254964)
Fix QuarterOfYear plugin bug () (434f774)
Fix UTC plugin add day DST bug () (86cd839)"
"chore(release): 1.8.0 [skip ci]

# [1.8.0](https://github.com/iamkun/dayjs/compare/v1.7.8...v1.8.0) (2019-01-14)

### Features

* add CustomParseFormat plugin  and QuarterOfYear plugin ([](https://github.com/iamkun/dayjs/issues/450)) ([8f6f63c](https://github.com/iamkun/dayjs/commit/8f6f63c))
chore(module): add ES2015 module support ()
chore(typings): default export issue ()

ref: https://github.com/iamkun/dayjs/issues/277
chore: Add LocalizableFormat plugin supplying format options known from Moment.js ()
chore: rename plugin LocalizableFormat to LocalizedFormat ()
perf(format): reuse matches instead of created when replacing ()
chore(release): 1.8.1 [skip ci]

## [1.8.1](https://github.com/iamkun/dayjs/compare/v1.8.0...v1.8.1) (2019-02-02)

### Performance Improvements

* **format:** reuse matches instead of created when replacing ([](https://github.com/iamkun/dayjs/issues/441)) ([10b79d8](https://github.com/iamkun/dayjs/commit/10b79d8))","Performance Improvements
format: reuse matches instead of created when replacing () (10b79d8)"
"chore(release): 1.8.2 [skip ci]

## [1.8.2](https://github.com/iamkun/dayjs/compare/v1.8.1...v1.8.2) (2019-02-02)

### Bug Fixes

*  Add missing czech language locale ([](https://github.com/iamkun/dayjs/issues/461)) ([7e04004](https://github.com/iamkun/dayjs/commit/7e04004))
* add deltaZone in the equation when calculating diff and added utcOffset api method ([](https://github.com/iamkun/dayjs/issues/453)) ([ce2e30e](https://github.com/iamkun/dayjs/commit/ce2e30e))
* fix it locale error ([](https://github.com/iamkun/dayjs/issues/458)) ([f6d9a64](https://github.com/iamkun/dayjs/commit/f6d9a64))
chore: update change log
docs: add how to get back to english doc

fix
support ios 'YYYY-MM-DD HH:mm' formation. ()
docs: add how to get back to english doc

fix
fix: fix ios safari YYYY-MM-DD HH:mm parse BUG

fix
chore(release): 1.8.3 [skip ci]

## [1.8.3](https://github.com/iamkun/dayjs/compare/v1.8.2...v1.8.3) (2019-02-04)

### Bug Fixes

* fix ios safari YYYY-MM-DD HH:mm parse BUG ([e02ae82](https://github.com/iamkun/dayjs/commit/e02ae82)), closes [](https://github.com/iamkun/dayjs/issues/254)","Bug Fixes
fix ios safari YYYY-MM-DD HH:mm parse BUG (e02ae82), closes"
"chore(release): 1.11.8 [skip ci]

## [1.11.8](https://github.com/iamkun/dayjs/compare/v1.11.7...v1.11.8) (2023-06-02)

### Bug Fixes

* .format add padding to 'YYYY' ([](https://github.com/iamkun/dayjs/issues/2231)) ([00c223b](https://github.com/iamkun/dayjs/commit/00c223b7e92970d07557133994fcb225a6d4c960))
* Added .valueOf method to Duration class ([](https://github.com/iamkun/dayjs/issues/2226)) ([9b4fcfd](https://github.com/iamkun/dayjs/commit/9b4fcfde35b39693894be1821b6c7222fac98657))
* timezone type mark `date` parameter as optional ([](https://github.com/iamkun/dayjs/issues/2222)) ([b87aa0e](https://github.com/iamkun/dayjs/commit/b87aa0ed9a748c478a66ef48230cd1d6350d7b8a))
* type file first parameter date is optional in isSame(), isBefore(), isAfter() ([](https://github.com/iamkun/dayjs/issues/2272)) ([4d56f3e](https://github.com/iamkun/dayjs/commit/4d56f3eb2b3770879d60f824590bf1b32f237d47))
fix: objectSupport plugin causes an error when null is passed to dayjs function (closes) ()
test: update test case
test: update test case
fix: dayjs.diff improve performance ()

* improve: diff performance

* refactor: switch refactor

---------

Co-authored-by: 李权威 <liquanwei@corp.netease.com>
chore: Added Hebrew version of Readme ()

* [Hebrew] - Added readme for Hebrew

* [Hebrew] - Typo
fix: dayjs(null) throws error, not return dayjs object as invalid date ()

Co-authored-by: iamkun <kunhello@outlook.com>
fix(): check if null passed to objectSupport parser ()
fix: update MinMax plugin 1. ignore the 'null' in args 2. return the only one arg ()
fix: update Duration plugin add/subtract take into account days in month ()
fix: Add null to min and max plugin return type ()
fix: Optimize format method ()
chore(release): 1.11.9 [skip ci]

## [1.11.9](https://github.com/iamkun/dayjs/compare/v1.11.8...v1.11.9) (2023-07-01)

### Bug Fixes

* Add null to min and max plugin return type ([](https://github.com/iamkun/dayjs/issues/2355)) ([62d9042](https://github.com/iamkun/dayjs/commit/62d9042eb84b78d78324694ccbeaad1679d37e68))
* check if null passed to objectSupport parser ([](https://github.com/iamkun/dayjs/issues/2175)) ([013968f](https://github.com/iamkun/dayjs/commit/013968f609c32e2269df69b4dd1feb2e8e1e035a))
* dayjs.diff improve performance ([](https://github.com/iamkun/dayjs/issues/2244)) ([33c80e1](https://github.com/iamkun/dayjs/commit/33c80e14cf14f70ceb4f54639e266cd70a3c3996))
* dayjs(null) throws error, not return dayjs object as invalid date ([](https://github.com/iamkun/dayjs/issues/2334)) ([c79e2f5](https://github.com/iamkun/dayjs/commit/c79e2f5d03eef5660b1f13385b69c0c9668d2f98))
* objectSupport plugin causes an error when null is passed to dayjs function (closes [](https://github.com/iamkun/dayjs/issues/2277)) ([](https://github.com/iamkun/dayjs/issues/2342)) ([89bf31c](https://github.com/iamkun/dayjs/commit/89bf31ce0a36dcfc892029dc019d85d3654cf5fb))
* Optimize format method ([](https://github.com/iamkun/dayjs/issues/2313)) ([1fe1b1d](https://github.com/iamkun/dayjs/commit/1fe1b1d9a214d3b8c9f267b432801424a493f1c4))
* update Duration plugin add/subtract take into account days in month ([](https://github.com/iamkun/dayjs/issues/2337)) ([3b1060f](https://github.com/iamkun/dayjs/commit/3b1060f92183ab3a3c49289c2d87fbdd34c1eacc))
* update MinMax plugin 1. ignore the 'null' in args 2. return the only one arg ([](https://github.com/iamkun/dayjs/issues/2330)) ([3c2c6ee](https://github.com/iamkun/dayjs/commit/3c2c6ee4db00bbb43a7a3bb0b56bc0d0f03daddc))","Bug Fixes
Add null to min and max plugin return type () (62d9042)
check if null passed to objectSupport parser () (013968f)
dayjs.diff improve performance () (33c80e1)
dayjs(null) throws error, not return dayjs object as invalid date () (c79e2f5)
objectSupport plugin causes an error when null is passed to dayjs function (closes) () (89bf31c)
Optimize format method () (1fe1b1d)
update Duration plugin add/subtract take into account days in month () (3b1060f)
update MinMax plugin 1. ignore the 'null' in args 2. return the only one arg () (3c2c6ee)"
"chore(release): 1.10.7 [skip ci]

## [1.10.7](https://github.com/iamkun/dayjs/compare/v1.10.6...v1.10.7) (2021-09-10)

### Bug Fixes

* Add  Spanish (Mexico) [es-mx] locale ([](https://github.com/iamkun/dayjs/issues/1614)) ([3393f2a](https://github.com/iamkun/dayjs/commit/3393f2ad55346d55902683a2e31c6f253d96c8c2))
* Add Arabic (Iraq) [ar-iq] locale ([](https://github.com/iamkun/dayjs/issues/1627)) ([b5a1391](https://github.com/iamkun/dayjs/commit/b5a1391011b247d08863d291542db5937b23b427))
* add format object type to type file ([](https://github.com/iamkun/dayjs/issues/1572)) ([5a79cc6](https://github.com/iamkun/dayjs/commit/5a79cc6408e825d9e123629eb44fc19c996d7751))
* duration plugin when parsing duration from ISO string, set missing components to 0 instead of NaN ([](https://github.com/iamkun/dayjs/issues/1611)) ([252585b](https://github.com/iamkun/dayjs/commit/252585b4b2bd59508150e21bb994908a9d78f9b0))
* narrow type for `add` and `subtract` ([](https://github.com/iamkun/dayjs/issues/1576)) ([1686962](https://github.com/iamkun/dayjs/commit/16869621b1a42563064dbf87f80c1ebfd74c1188))
* update customParseFormat plugin strict x X parsing ([](https://github.com/iamkun/dayjs/issues/1571)) ([08adda5](https://github.com/iamkun/dayjs/commit/08adda54edbcca38601f57841921d0f87f84e49e))
* update Lithuanian [lt] locale spelling for single month ([](https://github.com/iamkun/dayjs/issues/1609)) ([255dc54](https://github.com/iamkun/dayjs/commit/255dc54d9295de135a9037ce6ca13cae4bfd2cfb))
* Update Norwegian Bokmål [nb] local yearStart 4 ([](https://github.com/iamkun/dayjs/issues/1608)) ([7a8467c](https://github.com/iamkun/dayjs/commit/7a8467c0b7d59821f7e19d4a6973bcda8e4c19b1))
* update plugin advancedFormat `isValid` validation ([](https://github.com/iamkun/dayjs/issues/1566)) ([755fc8b](https://github.com/iamkun/dayjs/commit/755fc8bb1c532eb991459f180eee81367d12016c))
* update Sinhalese [si] locale month name ([](https://github.com/iamkun/dayjs/issues/1475)) ([63de2a8](https://github.com/iamkun/dayjs/commit/63de2a8b7dcd7e68c132c85d88572d4c9d296907))
* update utcOffset plugin type file ([](https://github.com/iamkun/dayjs/issues/1604)) ([f68e4b1](https://github.com/iamkun/dayjs/commit/f68e4b1a29fc33542f74cde10ec6d9fb045ca37e))
fix(): set locale pt, pt-br correct weekdays and months ()
chore(release): 1.10.8 [skip ci]

## [1.10.8](https://github.com/iamkun/dayjs/compare/v1.10.7...v1.10.8) (2022-02-28)

### Bug Fixes

* set locale pt, pt-br correct weekdays and months ([](https://github.com/iamkun/dayjs/issues/1697)) ([e019301](https://github.com/iamkun/dayjs/commit/e01930171c8235f58a114236f146086428f99569))","Bug Fixes
set locale pt, pt-br correct weekdays and months () (e019301)"
"chore(release): 1.11.4 [skip ci]

## [1.11.4](https://github.com/iamkun/dayjs/compare/v1.11.3...v1.11.4) (2022-07-19)

### Bug Fixes

* correct past property in ku (kurdish) locale ([](https://github.com/iamkun/dayjs/issues/1916)) ([74e82b9](https://github.com/iamkun/dayjs/commit/74e82b9da5ec8b90361fc27ac7c8b63faf354502))
* fix French [fr] local ordinal ([](https://github.com/iamkun/dayjs/issues/1932)) ([8f09834](https://github.com/iamkun/dayjs/commit/8f09834a88b8e7f8353c6e7473d4711596890a8c))
* fix objectSupport plugin ConfigTypeMap type ([](https://github.com/iamkun/dayjs/issues/1441)) ([](https://github.com/iamkun/dayjs/issues/1990)) ([fd51fe4](https://github.com/iamkun/dayjs/commit/fd51fe4f7fa799d8c598343e71fa59299ec4cf93))
* fix type error to add ordianl property in InstanceLocaleDataReturn and GlobalLocaleDataReturn types ([](https://github.com/iamkun/dayjs/issues/1931)) ([526f0ae](https://github.com/iamkun/dayjs/commit/526f0ae549ffbeeb9ef1099ca23964791fc59743))
* update locale ar-* meridiem function ([](https://github.com/iamkun/dayjs/issues/1954)) ([3d31611](https://github.com/iamkun/dayjs/commit/3d316117f04362d31f4e8bd349620b8414ce5d0c))
* zh-tw / zh-hk locale ordinal error ([](https://github.com/iamkun/dayjs/issues/1976)) ([0a1bd08](https://github.com/iamkun/dayjs/commit/0a1bd08e736be7d4e378aaca280caa6543f8066d))
chore(release): 1.11.5 [skip ci]

## [1.11.5](https://github.com/iamkun/dayjs/compare/v1.11.4...v1.11.5) (2022-08-12)

### Bug Fixes

* ordinal for nl not working ([](https://github.com/iamkun/dayjs/issues/2011)) ([c93c85e](https://github.com/iamkun/dayjs/commit/c93c85eaa11564a1aae2d823480a417812c01bf4))
* wrong ordinal for french locale ([](https://github.com/iamkun/dayjs/issues/2010)) ([dd192a7](https://github.com/iamkun/dayjs/commit/dd192a72fc5d26ce56481e89b0c1ccf5f939be0c))","Bug Fixes
ordinal for nl not working () (c93c85e)
wrong ordinal for french locale () (dd192a7)"
"chore(release): 1.9.3 [skip ci]

## [1.9.3](https://github.com/iamkun/dayjs/compare/v1.9.2...v1.9.3) (2020-10-13)

### Bug Fixes

* fix localizedFormat export error ([](https://github.com/iamkun/dayjs/issues/1133)) ([deecd6a](https://github.com/iamkun/dayjs/commit/deecd6ab8a2f4173ee7046f6b568b41fd2677531)), closes [](https://github.com/iamkun/dayjs/issues/1132)
fix: update localeData plugin type ()
fix: update en-NZ locale to use proper ordinal formatting function ()
fix: Add descriptions to types ()
fix: Fix Hungarian (hu) locale ()
fix: update adding/subtracting Duration from Dayjs object ()
fix: update timezone plugin to support keepLocalTime ()

fix
fix: update timezone plugin to support custom parse format ()

fix
fix: fix minMax plugin parsing empty array bug ()
fix: add devHelper plugin ()
chore(release): 1.9.4 [skip ci]

## [1.9.4](https://github.com/iamkun/dayjs/compare/v1.9.3...v1.9.4) (2020-10-23)

### Bug Fixes

* Add descriptions to types ([](https://github.com/iamkun/dayjs/issues/1148)) ([9a407a1](https://github.com/iamkun/dayjs/commit/9a407a140b089345a387d1aceab4d0d1635229c7))
* add devHelper plugin ([](https://github.com/iamkun/dayjs/issues/1163)) ([de49dc8](https://github.com/iamkun/dayjs/commit/de49dc80c83b85de4170571b64412bd60ada221b))
* Fix Hungarian (hu) locale ([](https://github.com/iamkun/dayjs/issues/1112)) ([ab13754](https://github.com/iamkun/dayjs/commit/ab13754f43c5033dacaa0eb2042dc4ab1a7a2754))
* fix minMax plugin parsing empty array bug ([](https://github.com/iamkun/dayjs/issues/1062)) ([368108b](https://github.com/iamkun/dayjs/commit/368108bc6d5cb1542f711b8eba722bd4dfaab0cd))
* update adding/subtracting Duration from Dayjs object ([](https://github.com/iamkun/dayjs/issues/1156)) ([f861aca](https://github.com/iamkun/dayjs/commit/f861acac3e83e28d3a4a96312c71119fd6b544fc))
* update en-NZ locale to use proper ordinal formatting function ([](https://github.com/iamkun/dayjs/issues/1143)) ([fcdbc58](https://github.com/iamkun/dayjs/commit/fcdbc5880710456a29b2bacf250542230bf48b99))
* update localeData plugin type ([](https://github.com/iamkun/dayjs/issues/1116)) ([ee5a4ec](https://github.com/iamkun/dayjs/commit/ee5a4ec41edddfb57d103c35182dc635c9264a10))
* update timezone plugin to support custom parse format ([](https://github.com/iamkun/dayjs/issues/1160)) ([48cbf31](https://github.com/iamkun/dayjs/commit/48cbf3118ba5427de428777c2e025896db654f2e)), closes [](https://github.com/iamkun/dayjs/issues/1159)
* update timezone plugin to support keepLocalTime ([](https://github.com/iamkun/dayjs/issues/1161)) ([1d429e5](https://github.com/iamkun/dayjs/commit/1d429e5fe4467ebddcf81b43cf6f36e5e3be944c)), closes [](https://github.com/iamkun/dayjs/issues/1149)","Bug Fixes
Add descriptions to types () (9a407a1)
add devHelper plugin () (de49dc8)
Fix Hungarian (hu) locale () (ab13754)
fix minMax plugin parsing empty array bug () (368108b)
update adding/subtracting Duration from Dayjs object () (f861aca)
update en-NZ locale to use proper ordinal formatting function () (fcdbc58)
update localeData plugin type () (ee5a4ec)
update timezone plugin to support custom parse format () (48cbf31), closes
update timezone plugin to support keepLocalTime () (1d429e5), closes"
"chore(release): 1.8.24 [skip ci]

## [1.8.24](https://github.com/iamkun/dayjs/compare/v1.8.23...v1.8.24) (2020-04-10)

### Bug Fixes

* Add config option to RelativeTime plugin ([](https://github.com/iamkun/dayjs/issues/851)) ([bd24034](https://github.com/iamkun/dayjs/commit/bd24034b95bfc656024b75ef3f3c986708845fed))
* add Duration plugin ([](https://github.com/iamkun/dayjs/issues/858)) ([d568273](https://github.com/iamkun/dayjs/commit/d568273223199ca0497f238e2cc3a8d3dcf32d0f))
* Add en-in, en-tt locales ([](https://github.com/iamkun/dayjs/issues/855)) ([c39fb96](https://github.com/iamkun/dayjs/commit/c39fb96e2a9102c14b004c14a6c073af9d266f2f))
* add isToday, isTomorrow, isYesterday plugins ([](https://github.com/iamkun/dayjs/issues/857)) ([fc08ab6](https://github.com/iamkun/dayjs/commit/fc08ab68f8a28269802deeab9d6b0473b92cdc51))
* Add option callback to Calendar plugin ([](https://github.com/iamkun/dayjs/issues/839)) ([b25be90](https://github.com/iamkun/dayjs/commit/b25be9094325295310c8fc5e617fb058be8a5f68))
* Fix monthsShort for locale fr ([](https://github.com/iamkun/dayjs/issues/862)) ([d2de9a0](https://github.com/iamkun/dayjs/commit/d2de9a0b44b830038ed0094f79bfd40726311f2a))
* Update Breton locale (br) meridiem config ([](https://github.com/iamkun/dayjs/issues/856)) ([a2a6672](https://github.com/iamkun/dayjs/commit/a2a66720abb788a8f1cffbfd0929b35579f29c72))
* Update Ukrainian (uk) locale relative time ([](https://github.com/iamkun/dayjs/issues/842)) ([578bc1a](https://github.com/iamkun/dayjs/commit/578bc1a23c6e737783bbac3da12c0ed5d1edcf82))
fixed incorrect definition of locale in typescript

the first parameter of locale is optional so that locale() can be called with no arguments to return the current locale.
I would have added a test case to prove this works, but everything is in javascript and I expect you would not appreciate adding typescript to the unit tests.
fix: Fix Duration plugin get seconds ()
fix: Fix CustomParseFormat plugin of parsing only YYYY / YYYY-MM bug ()

fix
fix: Fix UTC plugin startOf, endOf bug ()

fix, fix
chore(release): 1.8.25 [skip ci]

## [1.8.25](https://github.com/iamkun/dayjs/compare/v1.8.24...v1.8.25) (2020-04-21)

### Bug Fixes

* Fix CustomParseFormat plugin of parsing only YYYY / YYYY-MM bug ([](https://github.com/iamkun/dayjs/issues/873)) ([3cea04d](https://github.com/iamkun/dayjs/commit/3cea04d33d54d44bbdd3d026b5c7f67ebf176116)), closes [](https://github.com/iamkun/dayjs/issues/849)
* Fix Duration plugin get seconds ([](https://github.com/iamkun/dayjs/issues/867)) ([62b092d](https://github.com/iamkun/dayjs/commit/62b092d9f9a3db5506ef01f798bdf211f163f53f))
* Fix type definition of locale ([9790b85](https://github.com/iamkun/dayjs/commit/9790b853e6113243a7f4a81dd12c6509e406a102))
* Fix UTC plugin startOf, endOf bug ([](https://github.com/iamkun/dayjs/issues/872)) ([4141084](https://github.com/iamkun/dayjs/commit/4141084ba96d35cadcda3f1e661bf1d0f6c8e4de)), closes [](https://github.com/iamkun/dayjs/issues/809) [](https://github.com/iamkun/dayjs/issues/808)","Bug Fixes
Fix CustomParseFormat plugin of parsing only YYYY / YYYY-MM bug () (3cea04d), closes
Fix Duration plugin get seconds () (62b092d)
Fix type definition of locale (9790b85)
Fix UTC plugin startOf, endOf bug () (4141084), closes"
"chore(release): 1.8.23 [skip ci]

## [1.8.23](https://github.com/iamkun/dayjs/compare/v1.8.22...v1.8.23) (2020-03-16)

### Bug Fixes

* Add Chinese (zh) locale ([f9b8945](https://github.com/iamkun/dayjs/commit/f9b89453166d8b53d33b1d7eefd9942022552e6e))
* Fix IsoWeek plugin typescript definition ([](https://github.com/iamkun/dayjs/issues/828)) ([30aab0c](https://github.com/iamkun/dayjs/commit/30aab0c7bce85dfac0ae208a891def30f88b5cb4))
* Update Arabic (ar) locale relative time ([](https://github.com/iamkun/dayjs/issues/836)) ([14044c6](https://github.com/iamkun/dayjs/commit/14044c6fda1229e3f0e5473d3f886bd79589b15f))
* Update Slovak (sk) locale,  Czech (cs) locale ([](https://github.com/iamkun/dayjs/issues/833)) ([f0d451f](https://github.com/iamkun/dayjs/commit/f0d451f795e9ebf752cd854d51b25b11de2343a3))
* Update Thai (th) locale relativeTime ([](https://github.com/iamkun/dayjs/issues/826)) ([63b7c03](https://github.com/iamkun/dayjs/commit/63b7c03a6dbb0507d60776e8bad6cccde3828b88)), closes [](https://github.com/iamkun/dayjs/issues/816)
chore(release): 1.8.24 [skip ci]

## [1.8.24](https://github.com/iamkun/dayjs/compare/v1.8.23...v1.8.24) (2020-04-10)

### Bug Fixes

* Add config option to RelativeTime plugin ([](https://github.com/iamkun/dayjs/issues/851)) ([bd24034](https://github.com/iamkun/dayjs/commit/bd24034b95bfc656024b75ef3f3c986708845fed))
* add Duration plugin ([](https://github.com/iamkun/dayjs/issues/858)) ([d568273](https://github.com/iamkun/dayjs/commit/d568273223199ca0497f238e2cc3a8d3dcf32d0f))
* Add en-in, en-tt locales ([](https://github.com/iamkun/dayjs/issues/855)) ([c39fb96](https://github.com/iamkun/dayjs/commit/c39fb96e2a9102c14b004c14a6c073af9d266f2f))
* add isToday, isTomorrow, isYesterday plugins ([](https://github.com/iamkun/dayjs/issues/857)) ([fc08ab6](https://github.com/iamkun/dayjs/commit/fc08ab68f8a28269802deeab9d6b0473b92cdc51))
* Add option callback to Calendar plugin ([](https://github.com/iamkun/dayjs/issues/839)) ([b25be90](https://github.com/iamkun/dayjs/commit/b25be9094325295310c8fc5e617fb058be8a5f68))
* Fix monthsShort for locale fr ([](https://github.com/iamkun/dayjs/issues/862)) ([d2de9a0](https://github.com/iamkun/dayjs/commit/d2de9a0b44b830038ed0094f79bfd40726311f2a))
* Update Breton locale (br) meridiem config ([](https://github.com/iamkun/dayjs/issues/856)) ([a2a6672](https://github.com/iamkun/dayjs/commit/a2a66720abb788a8f1cffbfd0929b35579f29c72))
* Update Ukrainian (uk) locale relative time ([](https://github.com/iamkun/dayjs/issues/842)) ([578bc1a](https://github.com/iamkun/dayjs/commit/578bc1a23c6e737783bbac3da12c0ed5d1edcf82))","Bug Fixes
Add config option to RelativeTime plugin () (bd24034)
add Duration plugin () (d568273)
Add en-in, en-tt locales () (c39fb96)
add isToday, isTomorrow, isYesterday plugins () (fc08ab6)
Add option callback to Calendar plugin () (b25be90)
Fix monthsShort for locale fr () (d2de9a0)
Update Breton locale (br) meridiem config () (a2a6672)
Update Ukrainian (uk) locale relative time () (578bc1a)"
"chore(release): 1.8.33 [skip ci]

## [1.8.33](https://github.com/iamkun/dayjs/compare/v1.8.32...v1.8.33) (2020-08-10)

### Bug Fixes

* Add PluralGetSet plugin for plural getters/setters ([](https://github.com/iamkun/dayjs/issues/996)) ([f76e3ce](https://github.com/iamkun/dayjs/commit/f76e3ce2fbe5d3e9ed9121086baf55eb0cc4d355))
* Add typescript type defs in esm build ([](https://github.com/iamkun/dayjs/issues/985)) ([50e3b3c](https://github.com/iamkun/dayjs/commit/50e3b3c6719cb0b4ec6eff394dacd63d5db8f253))
* Fix isoWeek Plugin cal bug in UTC mode ([](https://github.com/iamkun/dayjs/issues/993)) ([f2e5f32](https://github.com/iamkun/dayjs/commit/f2e5f327aaf12b4572296ec6e107ecc05fcf76e7))
* Fix Timezone plugin parsing js date, Day.js object, timestamp bug && update type file ([](https://github.com/iamkun/dayjs/issues/994)) ([22f3d49](https://github.com/iamkun/dayjs/commit/22f3d49405da98db6da56d1673eebcd01b57554b)), closes [](https://github.com/iamkun/dayjs/issues/992) [](https://github.com/iamkun/dayjs/issues/989)
* Fix Timezone plugin UTCOffset rounding bug ([](https://github.com/iamkun/dayjs/issues/987)) ([b07182b](https://github.com/iamkun/dayjs/commit/b07182bbdf5aef7f6bf1e88fcd38432e2b8ee465)), closes [](https://github.com/iamkun/dayjs/issues/986)
* Fix UTC plugin bug while comparing an utc instance to a local one ([](https://github.com/iamkun/dayjs/issues/995)) ([747c0fb](https://github.com/iamkun/dayjs/commit/747c0fb4eba6353755b5dad3417fd8d5a408c378))
* Update pt-br locale weekStart 0 ([](https://github.com/iamkun/dayjs/issues/984)) ([0f881c1](https://github.com/iamkun/dayjs/commit/0f881c18efb02b9d0ba7f76cba92bb504226fa95))
fix: Fix Timezone plugin to preserve milliseconds while changing timezone ()

* fix: fix Timezone plugin to preserve milliseconds while changing timezone

fix
chore: fix typo ()
fix: support parsing unlimited decimals of millisecond ()

fix
fix: update Duration plugin to support global locale ()

fix
chore(release): 1.8.34 [skip ci]

## [1.8.34](https://github.com/iamkun/dayjs/compare/v1.8.33...v1.8.34) (2020-08-20)

### Bug Fixes

* Fix Timezone plugin to preserve milliseconds while changing timezone ([](https://github.com/iamkun/dayjs/issues/1003)) ([5f446ed](https://github.com/iamkun/dayjs/commit/5f446eda770fa97e895c81a8195b3ba5d082cef0)), closes [](https://github.com/iamkun/dayjs/issues/1002)
* support parsing unlimited decimals of millisecond ([](https://github.com/iamkun/dayjs/issues/1010)) ([d1bdd36](https://github.com/iamkun/dayjs/commit/d1bdd36a56e3d1786523a180e3fc18068f609135)), closes [](https://github.com/iamkun/dayjs/issues/544)
* update Duration plugin to support global locale ([](https://github.com/iamkun/dayjs/issues/1008)) ([1c49c83](https://github.com/iamkun/dayjs/commit/1c49c83e79811eede13db6372b5d65db598aee77)), closes [](https://github.com/iamkun/dayjs/issues/1007)","Bug Fixes
Fix Timezone plugin to preserve milliseconds while changing timezone () (5f446ed), closes
support parsing unlimited decimals of millisecond () (d1bdd36), closes
update Duration plugin to support global locale () (1c49c83), closes"
"chore(release): 1.8.1 [skip ci]

## [1.8.1](https://github.com/iamkun/dayjs/compare/v1.8.0...v1.8.1) (2019-02-02)

### Performance Improvements

* **format:** reuse matches instead of created when replacing ([](https://github.com/iamkun/dayjs/issues/441)) ([10b79d8](https://github.com/iamkun/dayjs/commit/10b79d8))
chore(release): 1.8.2 [skip ci]

## [1.8.2](https://github.com/iamkun/dayjs/compare/v1.8.1...v1.8.2) (2019-02-02)

### Bug Fixes

*  Add missing czech language locale ([](https://github.com/iamkun/dayjs/issues/461)) ([7e04004](https://github.com/iamkun/dayjs/commit/7e04004))
* add deltaZone in the equation when calculating diff and added utcOffset api method ([](https://github.com/iamkun/dayjs/issues/453)) ([ce2e30e](https://github.com/iamkun/dayjs/commit/ce2e30e))
* fix it locale error ([](https://github.com/iamkun/dayjs/issues/458)) ([f6d9a64](https://github.com/iamkun/dayjs/commit/f6d9a64))","Bug Fixes
Add missing czech language locale () (7e04004)
add deltaZone in the equation when calculating diff and added utcOffset api method () (ce2e30e)
fix it locale error () (f6d9a64)"
"chore(release): 1.8.35 [skip ci]

## [1.8.35](https://github.com/iamkun/dayjs/compare/v1.8.34...v1.8.35) (2020-09-02)

### Bug Fixes

* Fix BadMutable plugin bug in .diff ([](https://github.com/iamkun/dayjs/issues/1023)) ([40ab6d9](https://github.com/iamkun/dayjs/commit/40ab6d9a53e8047cfca63c611c25dd045372d021))
* fix LocaleData plugin to support instance.weekdays() API ([](https://github.com/iamkun/dayjs/issues/1019)) ([a09d259](https://github.com/iamkun/dayjs/commit/a09d259a407b81d1cb6bb5623fad551c775d8674)), closes [](https://github.com/iamkun/dayjs/issues/1017)
* Update Dutch (nl) locale to set correct yearStart ([1533a2c](https://github.com/iamkun/dayjs/commit/1533a2cc1475270032da2d87b19fc3d62327e6e3))
chore(release): 1.8.36 [skip ci]

## [1.8.36](https://github.com/iamkun/dayjs/compare/v1.8.35...v1.8.36) (2020-09-17)

### Bug Fixes

* Add Amharic (am) locale ([](https://github.com/iamkun/dayjs/issues/1046)) ([cdc49a1](https://github.com/iamkun/dayjs/commit/cdc49a1911c74b7ea96ed222f42796d53715cfed))
* Export Duration type in duration plugin ([](https://github.com/iamkun/dayjs/issues/1043)) ([0f20c3a](https://github.com/iamkun/dayjs/commit/0f20c3ac75d9ac1026a15a7bb343d3a150d9b30f))
* Fix duration plugin parsing milliseconds bug ([](https://github.com/iamkun/dayjs/issues/1042)) ([fe2301b](https://github.com/iamkun/dayjs/commit/fe2301b22318886aaa89ed1620e0a118e98c2b8a))
* Timezone plugin set default timezone ([](https://github.com/iamkun/dayjs/issues/1033)) ([0c2050a](https://github.com/iamkun/dayjs/commit/0c2050a152da708b01edd6150a5013f642b14576))
* Timezone plugin should have the same behavior in latest ICU version ([](https://github.com/iamkun/dayjs/issues/1032)) ([de31592](https://github.com/iamkun/dayjs/commit/de315921575cc50c38464b27d0338e30a54d8e2a))
* Update Finnish (fi) locale ([](https://github.com/iamkun/dayjs/issues/963)) ([cf8b6a0](https://github.com/iamkun/dayjs/commit/cf8b6a096f24b54cbdb95675ac386d8ac85ea616))
* Update Polish (pl) , Hungarian (hr) and Lithuanian (lt) localization ([](https://github.com/iamkun/dayjs/issues/1045)) ([638fd39](https://github.com/iamkun/dayjs/commit/638fd394fc24f4188390faf387da6b156e7c6320))","Bug Fixes
Add Amharic (am) locale () (cdc49a1)
Export Duration type in duration plugin () (0f20c3a)
Fix duration plugin parsing milliseconds bug () (fe2301b)
Timezone plugin set default timezone () (0c2050a)
Timezone plugin should have the same behavior in latest ICU version () (de31592)
Update Finnish (fi) locale () (cf8b6a0)
Update Polish (pl) , Hungarian (hr) and Lithuanian (lt) localization () (638fd39)"
"chore(release): 1.8.30 [skip ci]

## [1.8.30](https://github.com/iamkun/dayjs/compare/v1.8.29...v1.8.30) (2020-07-22)

### Bug Fixes

* Add Haitian Creole (ht) and Spanish Puerto Rico (es-pr) locale configs ([](https://github.com/iamkun/dayjs/issues/958)) ([b2642e2](https://github.com/iamkun/dayjs/commit/b2642e2d1f87734a34808c66e5176cb18bc0414d))
* Fix UTC plugin wrong hour bug while adding month or year  ([](https://github.com/iamkun/dayjs/issues/957)) ([28ae070](https://github.com/iamkun/dayjs/commit/28ae070024ff26685c88ce4cc8747307e86923c9))
* Update French (fr) locale to set correct yearStart ([14ab808](https://github.com/iamkun/dayjs/commit/14ab808a7b7e226f2eb2cbe894916a18ed5d967d)), closes [](https://github.com/iamkun/dayjs/issues/956)
fix: Update Regex to parse 'YYYY' correctly ()
chore(release): 1.8.31 [skip ci]

## [1.8.31](https://github.com/iamkun/dayjs/compare/v1.8.30...v1.8.31) (2020-07-29)

### Bug Fixes

* Rollback LocalePresetType to string ([](https://github.com/iamkun/dayjs/issues/968)) ([b342bd3](https://github.com/iamkun/dayjs/commit/b342bd3d84987d6c7587a0c4590d614fb0e670d7))
* Update Regex to parse 'YYYY' correctly ([](https://github.com/iamkun/dayjs/issues/969)) ([70c1239](https://github.com/iamkun/dayjs/commit/70c123990dcc6bd479fa2b5d7f9985127872a826))","Bug Fixes
Rollback LocalePresetType to string () (b342bd3)
Update Regex to parse 'YYYY' correctly () (70c1239)"
"chore(release): 1.8.26 [skip ci]

## [1.8.26](https://github.com/iamkun/dayjs/compare/v1.8.25...v1.8.26) (2020-04-30)

### Bug Fixes

* Fix Duration plugin `.toISOString` format bug ([](https://github.com/iamkun/dayjs/issues/889)) ([058d624](https://github.com/iamkun/dayjs/commit/058d624808fd2be024ae846bcb2e03885f39b556)), closes [](https://github.com/iamkun/dayjs/issues/888)
* Fix WeekOfYear plugin bug while using BadMutable plugin ([](https://github.com/iamkun/dayjs/issues/884)) ([2977438](https://github.com/iamkun/dayjs/commit/2977438458542573a4500e21f7ba5d1f8442960e))
* Update CustomParseFormat plugin strict mode ([](https://github.com/iamkun/dayjs/issues/882)) ([db642ac](https://github.com/iamkun/dayjs/commit/db642ac73e52e00d8c41546b2935c9e691cf66e0))
* Update RelativeTime plugin default config ([](https://github.com/iamkun/dayjs/issues/883)) ([0606f42](https://github.com/iamkun/dayjs/commit/0606f425aef8ccbfc3da3e43cba368130603b0cc))
chore(release): 1.8.27 [skip ci]

## [1.8.27](https://github.com/iamkun/dayjs/compare/v1.8.26...v1.8.27) (2020-05-14)

### Bug Fixes

* Add Kinyarwanda (rw) locale ([](https://github.com/iamkun/dayjs/issues/903)) ([f355235](https://github.com/iamkun/dayjs/commit/f355235a836540d77880959fb1b614c87e9f7b3e))
* Add plugin objectSupport ([](https://github.com/iamkun/dayjs/issues/887)) ([52dfb13](https://github.com/iamkun/dayjs/commit/52dfb13a6b84f0a753cc5761192b92416f440961))
* Add Turkmen (tk) locale ([](https://github.com/iamkun/dayjs/issues/893)) ([a9ca8dc](https://github.com/iamkun/dayjs/commit/a9ca8dcbbd0964c5b9abb4e8a2d620c983cf091a))
* Fix CustomParseFormat plugin set locale error ([](https://github.com/iamkun/dayjs/issues/896)) ([8035c8a](https://github.com/iamkun/dayjs/commit/8035c8a760549b631252252718db3cdc4ab2f68f))
* Fix locale month function bug ([](https://github.com/iamkun/dayjs/issues/908)) ([bf347c3](https://github.com/iamkun/dayjs/commit/bf347c36e401f50727fb5afcc537497b54b90d6b))
* Update CustomParseFormat plugin to support Array formats ([](https://github.com/iamkun/dayjs/issues/906)) ([97856c6](https://github.com/iamkun/dayjs/commit/97856c603ef5fbbeb1cf8a42387479e56a77dbe8))","Bug Fixes
Add Kinyarwanda (rw) locale () (f355235)
Add plugin objectSupport () (52dfb13)
Add Turkmen (tk) locale () (a9ca8dc)
Fix CustomParseFormat plugin set locale error () (8035c8a)
Fix locale month function bug () (bf347c3)
Update CustomParseFormat plugin to support Array formats () (97856c6)"
"chore(release): 1.8.15 [skip ci]

## [1.8.15](https://github.com/iamkun/dayjs/compare/v1.8.14...v1.8.15) (2019-07-08)

### Bug Fixes

* Fix dayjs.locale() returns current global locale ([](https://github.com/iamkun/dayjs/issues/602)) ([790cd1a](https://github.com/iamkun/dayjs/commit/790cd1a))
* Fix incorrect Thai locale translation of July ([](https://github.com/iamkun/dayjs/issues/607)) ([43cbfd3](https://github.com/iamkun/dayjs/commit/43cbfd3))
* Lowercase french locale months and weekdays ([](https://github.com/iamkun/dayjs/issues/615)) ([e5a257c](https://github.com/iamkun/dayjs/commit/e5a257c))
* Type - Export Ls object to query all available locales ([](https://github.com/iamkun/dayjs/issues/623)) ([f6bfae0](https://github.com/iamkun/dayjs/commit/f6bfae0))
* Update  nb (Norsk Bokmål) locale ([](https://github.com/iamkun/dayjs/issues/604)) ([907f5c9](https://github.com/iamkun/dayjs/commit/907f5c9))
* Update types of `.diff` API ([](https://github.com/iamkun/dayjs/issues/617)) ([f0f43d2](https://github.com/iamkun/dayjs/commit/f0f43d2))
fix: Update Danish (da) locale ()
Create FUNDING.yml
fix: update pt-br locale ()

* Add weekdays short for portuguese (br) locale.

* Removing dots from 'weekdaysShort' and adding 'weekdaysMin'.

* Add 'weekStart' and 'monthsShort' to pt-br language.

* Removing 'monthsShort' from pt-br locale.

* Removing 'weekdaysShort' from pt-br locale.
docs: Improving pt-br documentation. ()
fix: update Occitan locale Catalan locale ()

* Update

Hormanisation with other time/date framworks

* Correction and harmonisation

Harmonisation + correction for the same reason as https://github.com/iamkun/dayjs/pull/615

* Update ca.js

* Update oc-lnc.js
fix: Return null in toJSON if not valid ()

* fix: toJSON returns null if not valid

* fix: typo in locale

* fix: adding test on toJSON
fix: Update Korean locale meridiem ()
fix: Update weekdaysShort to some locale files ()

This PR adds weekdaysShort to those locale files that they do not have this variable defined.
fix: Fix relativeTime Plugin .FromNow() result error in UTC mode
fix: LocaleData plugin returns all months and weekdays data when pas no argument ()
chore: add .editorconfig ()
fix: Handle locale in WeekOfYear plugin ()
chore: Update localeData plugin logic
chore(release): 1.8.16 [skip ci]

## [1.8.16](https://github.com/iamkun/dayjs/compare/v1.8.15...v1.8.16) (2019-08-27)

### Bug Fixes

* Fix relativeTime Plugin .FromNow() result error in UTC mode ([a385d5c](https://github.com/iamkun/dayjs/commit/a385d5c))
* Handle locale in WeekOfYear plugin ([](https://github.com/iamkun/dayjs/issues/658)) ([0e45b0a](https://github.com/iamkun/dayjs/commit/0e45b0a))
* LocaleData plugin returns all months and weekdays data when pas no argument ([](https://github.com/iamkun/dayjs/issues/645)) ([95e70b4](https://github.com/iamkun/dayjs/commit/95e70b4))
* Return null in toJSON if not valid ([](https://github.com/iamkun/dayjs/issues/633)) ([19affc8](https://github.com/iamkun/dayjs/commit/19affc8))
* Update Danish (da) locale ([](https://github.com/iamkun/dayjs/issues/626)) ([ac2ec77](https://github.com/iamkun/dayjs/commit/ac2ec77))
* Update Korean locale meridiem ([](https://github.com/iamkun/dayjs/issues/642)) ([b457146](https://github.com/iamkun/dayjs/commit/b457146))
* update Occitan locale Catalan locale ([](https://github.com/iamkun/dayjs/issues/630)) ([fef135e](https://github.com/iamkun/dayjs/commit/fef135e))
* update pt-br locale ([](https://github.com/iamkun/dayjs/issues/628)) ([ccf596d](https://github.com/iamkun/dayjs/commit/ccf596d))
* Update weekdaysShort to some locale files ([](https://github.com/iamkun/dayjs/issues/643)) ([cc1f15f](https://github.com/iamkun/dayjs/commit/cc1f15f))","Bug Fixes
Fix relativeTime Plugin .FromNow() result error in UTC mode (a385d5c)
Handle locale in WeekOfYear plugin () (0e45b0a)
LocaleData plugin returns all months and weekdays data when pas no argument () (95e70b4)
Return null in toJSON if not valid () (19affc8)
Update Danish (da) locale () (ac2ec77)
Update Korean locale meridiem () (b457146)
update Occitan locale Catalan locale () (fef135e)
update pt-br locale () (ccf596d)
Update weekdaysShort to some locale files () (cc1f15f)"
"chore(release): 1.8.6 [skip ci]

## [1.8.6](https://github.com/iamkun/dayjs/compare/v1.8.5...v1.8.6) (2019-02-14)

### Bug Fixes

* Add Bahasa Melayu (Malaysia) locale ([](https://github.com/iamkun/dayjs/issues/485)) ([cb208b0](https://github.com/iamkun/dayjs/commit/cb208b0))
* Copy & export built-in en locale to /locale folder as a separate file ([a7e05e0](https://github.com/iamkun/dayjs/commit/a7e05e0))
* Fix bug in customParseFormat plugin while month(MM) is '01' ([9884ca5](https://github.com/iamkun/dayjs/commit/9884ca5)), closes [](https://github.com/iamkun/dayjs/issues/494)
* Fix commonJS require ES Module bug in webpack4 ([23f9f3d](https://github.com/iamkun/dayjs/commit/23f9f3d))
* Fix startOf week bug while week start is not Sunday ([5eaf77b](https://github.com/iamkun/dayjs/commit/5eaf77b))
* Implemented isBetween inclusivity ([](https://github.com/iamkun/dayjs/issues/464)) ([af2f4f1](https://github.com/iamkun/dayjs/commit/af2f4f1))
* Update Swedish and Finnish locales ([](https://github.com/iamkun/dayjs/issues/488)) ([f142082](https://github.com/iamkun/dayjs/commit/f142082))
chore: update 1.8.6 changelog
docs: prettier docs
fix: Word orders corrections for locale 'fa' ()
fix: Update declaration file .diff .isBefore .isSame .isAfter ()
chore: Refactor parseDate ()
docs: Fix doc error in format escaping with curly brackets ()
docs: Fix doc format escape error
docs: Fix typo README-pt-br.md ()
chore: Update issue templates
chore: update bug-report.md
fix: Add plugin type definitions ()
chore: rm ts test temporary
test: add plugin declaration exist test
build: switch to ncp
chore: Update index.d.ts
chore: update d.ts
chore: update isBetween.d.ts
fix: Parse month string 'MMMM MMM (February, Feb)' in customParseFormat ()
test: remove useless test
docs: update customParseFormat docs
refactor: update customParseFormat, allow parse locale from argument
docs: update docs customParseFormat
build: update locale import path in esm

fix
fix: Add Swahili locale ()
chore: swahili version ()
chore: update sw locale
chore(release): 1.8.7 [skip ci]

## [1.8.7](https://github.com/iamkun/dayjs/compare/v1.8.6...v1.8.7) (2019-02-24)

### Bug Fixes

* Add plugin type definitions ([](https://github.com/iamkun/dayjs/issues/418)) ([361d437](https://github.com/iamkun/dayjs/commit/361d437))
* Add Swahili locale ([](https://github.com/iamkun/dayjs/issues/508)) ([b9cee84](https://github.com/iamkun/dayjs/commit/b9cee84))
* Parse month string 'MMMM MMM (February, Feb)' in customParseFormat ([](https://github.com/iamkun/dayjs/issues/457)) ([f343206](https://github.com/iamkun/dayjs/commit/f343206))
* Update declaration file .diff .isBefore .isSame .isAfter ([](https://github.com/iamkun/dayjs/issues/496)) ([4523275](https://github.com/iamkun/dayjs/commit/4523275))
* Word orders corrections for locale 'fa' ([](https://github.com/iamkun/dayjs/issues/491)) ([56050c2](https://github.com/iamkun/dayjs/commit/56050c2))","Bug Fixes
Add plugin type definitions () (361d437)
Add Swahili locale () (b9cee84)
Parse month string 'MMMM MMM (February, Feb)' in customParseFormat () (f343206)
Update declaration file .diff .isBefore .isSame .isAfter () (4523275)
Word orders corrections for locale 'fa' () (56050c2)"
"chore(release): 1.9.1 [skip ci]

## [1.9.1](https://github.com/iamkun/dayjs/compare/v1.9.0...v1.9.1) (2020-09-28)

### Bug Fixes

* Fix objectSupport plugin to get the correct result (zero-based month) ([](https://github.com/iamkun/dayjs/issues/1089)) ([f95ac15](https://github.com/iamkun/dayjs/commit/f95ac15a4577ae5a3d1ce353872a2cd9fc454bc2))
chore(release): 1.9.2 [skip ci]

## [1.9.2](https://github.com/iamkun/dayjs/compare/v1.9.1...v1.9.2) (2020-10-13)

### Bug Fixes

* add arraySupport plugin ([](https://github.com/iamkun/dayjs/issues/1129)) ([be505c2](https://github.com/iamkun/dayjs/commit/be505c2c540261027342cecc55d8919a3d18d893))
* export type of duration plugin ([](https://github.com/iamkun/dayjs/issues/1094)) ([2c92e71](https://github.com/iamkun/dayjs/commit/2c92e71bf55d09601120cdf433da7a19cc8abff6))
* Fix LocaleData plugin longDateFormat lowercase error ([](https://github.com/iamkun/dayjs/issues/1101)) ([7937ccd](https://github.com/iamkun/dayjs/commit/7937ccdeac47d094a60e65ebb62a6020b81c46f4))
* Fix objectSupport plugin bug in UTC ([](https://github.com/iamkun/dayjs/issues/1107)) ([fe90bb6](https://github.com/iamkun/dayjs/commit/fe90bb6944f2ff1969ca975954d303b449dfa95b)), closes [](https://github.com/iamkun/dayjs/issues/1105)
* fix Serbian locale grammar (sr, sr-cyrl) ([](https://github.com/iamkun/dayjs/issues/1108)) ([cc87eff](https://github.com/iamkun/dayjs/commit/cc87eff8b75b0d86ce0956516319d402bccae6c0))
* Fix typo for ""monday"" in arabic ([](https://github.com/iamkun/dayjs/issues/1067)) ([2e1e426](https://github.com/iamkun/dayjs/commit/2e1e42650124f30282dc4d710798d576b928f1c7))
* support dayjs.add(Duration), dayjs.subtract(Duration) ([](https://github.com/iamkun/dayjs/issues/1099)) ([b1a0294](https://github.com/iamkun/dayjs/commit/b1a02942c5238203aaa04ce9a074c73742324ab7))
* update Breton [br] locale relativeTime config ([](https://github.com/iamkun/dayjs/issues/1103)) ([b038bfd](https://github.com/iamkun/dayjs/commit/b038bfdb128889d677c95534d2be29cc30c9e72f))
* update Catalan [ca] locale ordinal ([73da380](https://github.com/iamkun/dayjs/commit/73da38024c8b550bdcfbe3ff7e578e742c7aecf2))
* update German [de] locale relativeTime config ([](https://github.com/iamkun/dayjs/issues/1109)) ([f6e771b](https://github.com/iamkun/dayjs/commit/f6e771b70f93d19ebb12e6b794aa4628a1796248))
* update localeData plugin to add longDateFormat to global localeData ([](https://github.com/iamkun/dayjs/issues/1106)) ([16937d1](https://github.com/iamkun/dayjs/commit/16937d16e053b8c1d4a607622fa2fdbfd9809832))
* Update objectSupport plugin to return current date time while parsing empty object ([f56783e](https://github.com/iamkun/dayjs/commit/f56783e14d8cf50916b015e7188b23bb6fbca839))","Bug Fixes
add arraySupport plugin () (be505c2)
export type of duration plugin () (2c92e71)
Fix LocaleData plugin longDateFormat lowercase error () (7937ccd)
Fix objectSupport plugin bug in UTC () (fe90bb6), closes
fix Serbian locale grammar (sr, sr-cyrl) () (cc87eff)
Fix typo for ""monday"" in arabic () (2e1e426)
support dayjs.add(Duration), dayjs.subtract(Duration) () (b1a0294)
update Breton [br] locale relativeTime config () (b038bfd)
update Catalan [ca] locale ordinal (73da380)
update German [de] locale relativeTime config () (f6e771b)
update localeData plugin to add longDateFormat to global localeData () (16937d1)
Update objectSupport plugin to return current date time while parsing empty object (f56783e)"
"chore(release): 1.8.18 [skip ci]

## [1.8.18](https://github.com/iamkun/dayjs/compare/v1.8.17...v1.8.18) (2019-12-18)

### Bug Fixes

* Add missing locale type definition ([](https://github.com/iamkun/dayjs/issues/716)) ([cde5d0b](https://github.com/iamkun/dayjs/commit/cde5d0b91be7b2f5f3098de4aa0b9a4f0f28ea5c))
* Fix .locale() handel unsupported locale ([78ec173](https://github.com/iamkun/dayjs/commit/78ec173fcecc1299516ab7b44f4554d431b4b2fd))
* Update Italian locale (it) ([](https://github.com/iamkun/dayjs/issues/727)) ([5b53e98](https://github.com/iamkun/dayjs/commit/5b53e98c0a3ba0eb9573a9c77caeb907439be9e7))
* Update locale (fa) ([](https://github.com/iamkun/dayjs/issues/733)) ([9ad2e47](https://github.com/iamkun/dayjs/commit/9ad2e47e0569b23991bb0d5578f49c792c12df08))
* Update locale (zh-cn) ([](https://github.com/iamkun/dayjs/issues/706)) ([e31e544](https://github.com/iamkun/dayjs/commit/e31e54414fb90e1f54da13a117748ba37f52645d))
* Update locale (zh-cn) meridiem ([](https://github.com/iamkun/dayjs/issues/735)) ([15d1b81](https://github.com/iamkun/dayjs/commit/15d1b813e7faf5a1f9d1ea6fc673fd27ac49d8b1))
* Update LocaleData plugin to support dayjs().longDateFormat() ([](https://github.com/iamkun/dayjs/issues/734)) ([aa0f210](https://github.com/iamkun/dayjs/commit/aa0f210a1e3c4f6aba61c3b96f9eb445b43a33f0)), closes [](https://github.com/iamkun/dayjs/issues/680)
* Update Mongolian (mn) locale relativeTime ([](https://github.com/iamkun/dayjs/issues/753)) ([6d51435](https://github.com/iamkun/dayjs/commit/6d51435092c0c94d8e50256d3f0f058cdd15febe))
* Update Swedish locale (sv) fix ordinal error ([](https://github.com/iamkun/dayjs/issues/745)) ([49670d5](https://github.com/iamkun/dayjs/commit/49670d5ae31e4e21636cc5a8bfe35fef0f6d9e4a)), closes [](https://github.com/iamkun/dayjs/issues/743)
fix: Fix CustomParseFormat Plugin to set correct locale
fix: Fix WeekOfYear Plugin wrong calender week number bug

fix
fix: Fix CustomParseFormat Plugin 'YYYY-MM' use first day of the month

fix
fix: Add UpdateLocale plugin to update a locale's properties ()
fix: Update RelativeTime plugin to support function to make additional processing ()

* fix: Update RelativeTime plugin to support function to make additional processing

* chore update fix

* fix: Update ru && uk locale file to support relativeTime with plural
fix: Update ru, uk, cs locale to support relativeTime with plural
chore(release): 1.8.19 [skip ci]

## [1.8.19](https://github.com/iamkun/dayjs/compare/v1.8.18...v1.8.19) (2020-01-06)

### Bug Fixes

* Add UpdateLocale plugin to update a locale's properties ([](https://github.com/iamkun/dayjs/issues/766)) ([82ce2ba](https://github.com/iamkun/dayjs/commit/82ce2ba8d7e402e40f6d005d400eb5356a0b0633))
* Fix CustomParseFormat Plugin 'YYYY-MM' use first day of the month ([ba709ec](https://github.com/iamkun/dayjs/commit/ba709eca86a71ae648bc68bf67d9abdc229198d4)), closes [](https://github.com/iamkun/dayjs/issues/761)
* Fix CustomParseFormat Plugin to set correct locale ([66ce23f](https://github.com/iamkun/dayjs/commit/66ce23f2e18c5506e8f1a7ef20d3483a4df80087))
* Fix WeekOfYear Plugin wrong calender week number bug ([79b86db](https://github.com/iamkun/dayjs/commit/79b86dbbf3cfd3f1e2165b3d479a7061ad1b6925)), closes [](https://github.com/iamkun/dayjs/issues/760)
* Update RelativeTime plugin to support function to make additional processing ([](https://github.com/iamkun/dayjs/issues/767)) ([4bd9250](https://github.com/iamkun/dayjs/commit/4bd9250fbe7131e2fddfb5fa1b3350e8c2262ca9))
* Update ru, uk, cs locale to support relativeTime with plural ([3f080f7](https://github.com/iamkun/dayjs/commit/3f080f7d6bfdc4018cbb7c4d0112ff1ead4ef6b8))","Bug Fixes
Add UpdateLocale plugin to update a locale's properties () (82ce2ba)
Fix CustomParseFormat Plugin 'YYYY-MM' use first day of the month (ba709ec), closes
Fix CustomParseFormat Plugin to set correct locale (66ce23f)
Fix WeekOfYear Plugin wrong calender week number bug (79b86db), closes
Update RelativeTime plugin to support function to make additional processing () (4bd9250)
Update ru, uk, cs locale to support relativeTime with plural (3f080f7)"
"chore(release): 1.11.1 [skip ci]

## [1.11.1](https://github.com/iamkun/dayjs/compare/v1.11.0...v1.11.1) (2022-04-15)

### Bug Fixes

* add Bengali (Bangladesh) [bn-bd] locale ([](https://github.com/iamkun/dayjs/issues/1806)) ([840ed76](https://github.com/iamkun/dayjs/commit/840ed76eedc085afefc4dedd05f31d44196b63b0))
* refactor replace deprecated String.prototype.substr() ([](https://github.com/iamkun/dayjs/issues/1836)) ([627fa39](https://github.com/iamkun/dayjs/commit/627fa393e4daf83c92431162dbe18534b23fcbae))
* Update German [de] locale, adds the abbreviations for month including a . in the end, as in September -> Sept. ([](https://github.com/iamkun/dayjs/issues/1831)) ([4e2802c](https://github.com/iamkun/dayjs/commit/4e2802cc3bec2941ffb737a15fb531c90951eafe))
* update Italian (Switzerland) [it-ch] locale relativeTime ([](https://github.com/iamkun/dayjs/issues/1829)) ([8e6d11d](https://github.com/iamkun/dayjs/commit/8e6d11d053393d97bee1ba411adb2d82de1a58c4))
* update Kurdish [ku] locale strings and formatted output contains non-standard kurdish characters ([](https://github.com/iamkun/dayjs/issues/1848)) ([a597d0b](https://github.com/iamkun/dayjs/commit/a597d0b1b8dd28e626f8c59d326622088f7b51e7))
* update locale bo [Tibetan]: corrected the orders in formats ([](https://github.com/iamkun/dayjs/issues/1823)) ([e790516](https://github.com/iamkun/dayjs/commit/e79051617af6787358f6c9b5443d987b8b53a9e1))
chore: update moment.js to 2.29.2 ()
chore: Improve PT-BR translation for README-pt-br.md ()

I translated the part about the documentation, which is the only thing that isn't translated yet in the README.
chore(docs/test): fix code style, remove commented code and replace `var` to `const` ()
fix: fix UTC plugin .valueOf not taking DST into account  ()
fix: Fix type issue with ManipulateType ()
fix: add OpUnitType (week) to quarterOfYear startOf/endOf types ()
chore: remove old github docs, redirect to day.js.org
chore(release): 1.11.2 [skip ci]

## [1.11.2](https://github.com/iamkun/dayjs/compare/v1.11.1...v1.11.2) (2022-05-06)

### Bug Fixes

* add OpUnitType (week) to quarterOfYear startOf/endOf types ([](https://github.com/iamkun/dayjs/issues/1865)) ([400bc3e](https://github.com/iamkun/dayjs/commit/400bc3e8915e0c58e7abbfd3a1235364b1abaf3e))
* Fix type issue with ManipulateType ([](https://github.com/iamkun/dayjs/issues/1864)) ([d033dfc](https://github.com/iamkun/dayjs/commit/d033dfcfc1d2ced39b2733898e8d85ad5984c9e9))
* fix UTC plugin .valueOf not taking DST into account  ([](https://github.com/iamkun/dayjs/issues/1448)) ([27d1c50](https://github.com/iamkun/dayjs/commit/27d1c506100ae6624f258c21cc06b24768ced733))","Bug Fixes
add OpUnitType (week) to quarterOfYear startOf/endOf types () (400bc3e)
Fix type issue with ManipulateType () (d033dfc)
fix UTC plugin .valueOf not taking DST into account  () (27d1c50)"
"chore(release): 1.8.31 [skip ci]

## [1.8.31](https://github.com/iamkun/dayjs/compare/v1.8.30...v1.8.31) (2020-07-29)

### Bug Fixes

* Rollback LocalePresetType to string ([](https://github.com/iamkun/dayjs/issues/968)) ([b342bd3](https://github.com/iamkun/dayjs/commit/b342bd3d84987d6c7587a0c4590d614fb0e670d7))
* Update Regex to parse 'YYYY' correctly ([](https://github.com/iamkun/dayjs/issues/969)) ([70c1239](https://github.com/iamkun/dayjs/commit/70c123990dcc6bd479fa2b5d7f9985127872a826))
chore(release): 1.8.32 [skip ci]

## [1.8.32](https://github.com/iamkun/dayjs/compare/v1.8.31...v1.8.32) (2020-08-04)

### Bug Fixes

* Add Experimental Timezone Plugin ([](https://github.com/iamkun/dayjs/issues/974)) ([e69caba](https://github.com/iamkun/dayjs/commit/e69caba1b0957241a855aa0ae38db899fa2c3795))
* fix parse date string error e.g. '2020/9/30' ([](https://github.com/iamkun/dayjs/issues/980)) ([231790d](https://github.com/iamkun/dayjs/commit/231790da62af0494732960c2c50d86ae9bf63ec6)), closes [](https://github.com/iamkun/dayjs/issues/979)
* update monthDiff function to get more accurate results ([19e8a7f](https://github.com/iamkun/dayjs/commit/19e8a7f2f7582b717f49d446822e39603694433c))
* Update UTC plugin to support keepLocalTime ([](https://github.com/iamkun/dayjs/issues/973)) ([9f488e5](https://github.com/iamkun/dayjs/commit/9f488e5aca92f0b4c2951459436829d79f86d8d7))","Bug Fixes
Add Experimental Timezone Plugin () (e69caba)
fix parse date string error e.g. '2020/9/30' () (231790d), closes
update monthDiff function to get more accurate results (19e8a7f)
Update UTC plugin to support keepLocalTime () (9f488e5)"
"chore(release): 1.8.20 [skip ci]

## [1.8.20](https://github.com/iamkun/dayjs/compare/v1.8.19...v1.8.20) (2020-02-04)

### Bug Fixes

* Add Bislama Locale (bi) ([](https://github.com/iamkun/dayjs/issues/780)) ([9ac6ab4](https://github.com/iamkun/dayjs/commit/9ac6ab481bc883dd4ecc02caab12c8b2fc218a42))
* Fix weekOfYear plugin to support yearStart locale for better week number result ([](https://github.com/iamkun/dayjs/issues/769)) ([f00db36](https://github.com/iamkun/dayjs/commit/f00db36e70bc7beaca1abadeb30a9b1fbb3261ee))
* Update et (Estonian) locale relativeTime ([](https://github.com/iamkun/dayjs/issues/790)) ([d8e0f45](https://github.com/iamkun/dayjs/commit/d8e0f45f6cd2d5e5704b9797929227454c92d1a5))
* Update LocaleData plugin to support dayjs.localeData().weekdays() API ([287fed6](https://github.com/iamkun/dayjs/commit/287fed6db9eb4fd979b4861aca4dacbd32422533)), closes [](https://github.com/iamkun/dayjs/issues/779)
* Update LocaleData plugin to support dayjs.months dayjs.weekdays API ([144c2ae](https://github.com/iamkun/dayjs/commit/144c2ae6e15fbf89e3acd7c8cb9e237c5f6e1348)), closes [](https://github.com/iamkun/dayjs/issues/779)
* Update pl locale fusional config ([d372475](https://github.com/iamkun/dayjs/commit/d3724758bb27d5b17587b995ba14e7e80dcd1151))
chore: Update readme website ()
chore: Update homepage
fix: Set + Get accept 'D' as the short version of 'date' ()
fix: Update fi (Finnish) locale relativeTime ()
fix: Update DayOfYear plugin type ()
chore: update doc ()
chore(release): 1.8.21 [skip ci]

## [1.8.21](https://github.com/iamkun/dayjs/compare/v1.8.20...v1.8.21) (2020-02-26)

### Bug Fixes

* Set + Get accept 'D' as the short version of 'date' ([](https://github.com/iamkun/dayjs/issues/795)) ([523c038](https://github.com/iamkun/dayjs/commit/523c03880fa8bbad83214494ad02cd606cdb8b30))
* Update DayOfYear plugin type ([](https://github.com/iamkun/dayjs/issues/799)) ([5809652](https://github.com/iamkun/dayjs/commit/5809652e40245b7759827d9bf317abdcfa75a330))
* Update fi (Finnish) locale relativeTime ([](https://github.com/iamkun/dayjs/issues/797)) ([4a470fb](https://github.com/iamkun/dayjs/commit/4a470fbd6fef9e051727d0f26d53cc050b85935d))","Bug Fixes
Set + Get accept 'D' as the short version of 'date' () (523c038)
Update DayOfYear plugin type () (5809652)
Update fi (Finnish) locale relativeTime () (4a470fb)"
"chore(release): 1.8.7 [skip ci]

## [1.8.7](https://github.com/iamkun/dayjs/compare/v1.8.6...v1.8.7) (2019-02-24)

### Bug Fixes

* Add plugin type definitions ([](https://github.com/iamkun/dayjs/issues/418)) ([361d437](https://github.com/iamkun/dayjs/commit/361d437))
* Add Swahili locale ([](https://github.com/iamkun/dayjs/issues/508)) ([b9cee84](https://github.com/iamkun/dayjs/commit/b9cee84))
* Parse month string 'MMMM MMM (February, Feb)' in customParseFormat ([](https://github.com/iamkun/dayjs/issues/457)) ([f343206](https://github.com/iamkun/dayjs/commit/f343206))
* Update declaration file .diff .isBefore .isSame .isAfter ([](https://github.com/iamkun/dayjs/issues/496)) ([4523275](https://github.com/iamkun/dayjs/commit/4523275))
* Word orders corrections for locale 'fa' ([](https://github.com/iamkun/dayjs/issues/491)) ([56050c2](https://github.com/iamkun/dayjs/commit/56050c2))
chore: update npmignore
docs: update doc plugin WeekOfYear
fix: Update relativeTime plugin type definition
docs: update zh-cn doc
refactor: Refactor .format('h hh')
test: Update display.test test
docs: Update zh-cn doc add missing format tokens
docs: update zh-cn format ’SSS‘ translation ()
docs: Update zh-cn plugin CustomParseFormat translation
test: Update plugin advancedFormat test
docs: Fix doc error
chore(release): 1.8.8 [skip ci]

## [1.8.8](https://github.com/iamkun/dayjs/compare/v1.8.7...v1.8.8) (2019-02-25)

### Bug Fixes

* Update relativeTime plugin type definition ([de56f2c](https://github.com/iamkun/dayjs/commit/de56f2c))","Bug Fixes
Update relativeTime plugin type definition (de56f2c)"
"chore(release): 1.7.1 [skip ci]

## [1.7.1](https://github.com/iamkun/dayjs/compare/v1.7.0...v1.7.1) (2018-07-03)

### Bug Fixes

* fix week() error near the end of the year ([fa03689](https://github.com/iamkun/dayjs/commit/fa03689))
fix: DEPRECATED isLeapYear, use IsLeapYear plugin instead
docs: update docs
chore(release): 1.7.2 [skip ci]

## [1.7.2](https://github.com/iamkun/dayjs/compare/v1.7.1...v1.7.2) (2018-07-04)

### Bug Fixes

* DEPRECATED isLeapYear, use IsLeapYear plugin instead ([e2e5116](https://github.com/iamkun/dayjs/commit/e2e5116))","Bug Fixes
DEPRECATED isLeapYear, use IsLeapYear plugin instead (e2e5116)"
"chore(release): 1.11.7 [skip ci]

## [1.11.7](https://github.com/iamkun/dayjs/compare/v1.11.6...v1.11.7) (2022-12-06)

### Bug Fixes

* Add locale (zh-tw) meridiem ([](https://github.com/iamkun/dayjs/issues/2149)) ([1e9ba76](https://github.com/iamkun/dayjs/commit/1e9ba761ff4e3f2759106dfe1aa9054d5826451c))
* update fa locale ([](https://github.com/iamkun/dayjs/issues/2151)) ([1c26732](https://github.com/iamkun/dayjs/commit/1c267321a1a01b4947e1482bac67d67ebc7c3dfa))
chore: update action ()
chore: update action build
chore: update action env
chore: update action node env
chore: update action debug
chore: update ci
chore(release): 1.11.8 [skip ci]

## [1.11.8](https://github.com/iamkun/dayjs/compare/v1.11.7...v1.11.8) (2023-06-02)

### Bug Fixes

* .format add padding to 'YYYY' ([](https://github.com/iamkun/dayjs/issues/2231)) ([00c223b](https://github.com/iamkun/dayjs/commit/00c223b7e92970d07557133994fcb225a6d4c960))
* Added .valueOf method to Duration class ([](https://github.com/iamkun/dayjs/issues/2226)) ([9b4fcfd](https://github.com/iamkun/dayjs/commit/9b4fcfde35b39693894be1821b6c7222fac98657))
* timezone type mark `date` parameter as optional ([](https://github.com/iamkun/dayjs/issues/2222)) ([b87aa0e](https://github.com/iamkun/dayjs/commit/b87aa0ed9a748c478a66ef48230cd1d6350d7b8a))
* type file first parameter date is optional in isSame(), isBefore(), isAfter() ([](https://github.com/iamkun/dayjs/issues/2272)) ([4d56f3e](https://github.com/iamkun/dayjs/commit/4d56f3eb2b3770879d60f824590bf1b32f237d47))","Bug Fixes
.format add padding to 'YYYY' () (00c223b)
Added .valueOf method to Duration class () (9b4fcfd)
timezone type mark date parameter as optional () (b87aa0e)
type file first parameter date is optional in isSame(), isBefore(), isAfter() () (4d56f3e)"
"chore(release): 1.8.28 [skip ci]

## [1.8.28](https://github.com/iamkun/dayjs/compare/v1.8.27...v1.8.28) (2020-05-28)

### Bug Fixes

* Fix CustomParseFormat plugin month index error ([](https://github.com/iamkun/dayjs/issues/918)) ([fa2ec7f](https://github.com/iamkun/dayjs/commit/fa2ec7fcb980dcd2c7498dafe2f9ca2e52d735cf)), closes [](https://github.com/iamkun/dayjs/issues/915)
* Update Ukrainian (uk) locale monthFormat and monthStandalone ([](https://github.com/iamkun/dayjs/issues/899)) ([a08756e](https://github.com/iamkun/dayjs/commit/a08756e80bd1d7126fca28c5ad9e382613fc86c4))
chore(release): 1.8.29 [skip ci]

## [1.8.29](https://github.com/iamkun/dayjs/compare/v1.8.28...v1.8.29) (2020-07-02)

### Bug Fixes

* Duration plugin supports parse ISO string with week (W) ([](https://github.com/iamkun/dayjs/issues/950)) ([f0fc12a](https://github.com/iamkun/dayjs/commit/f0fc12adadcab53fb0577ad8f5e2f1cf784fd8f5))
* LocaleData plugin supports locale order ([](https://github.com/iamkun/dayjs/issues/938)) ([62f429d](https://github.com/iamkun/dayjs/commit/62f429db73a0a069b1267231dea172b85f4b90e3)), closes [](https://github.com/iamkun/dayjs/issues/936)
* Update type definition to support array format ([](https://github.com/iamkun/dayjs/issues/945)) ([81d4740](https://github.com/iamkun/dayjs/commit/81d4740511d47e34f891b21afeb0449ef8a28688)), closes [](https://github.com/iamkun/dayjs/issues/944)
* Update type definition to support strict mode ([](https://github.com/iamkun/dayjs/issues/951)) ([8d54f3f](https://github.com/iamkun/dayjs/commit/8d54f3f7d4d161e72c767fa09699e70a2b3d681c))","Bug Fixes
Duration plugin supports parse ISO string with week (W) () (f0fc12a)
LocaleData plugin supports locale order () (62f429d), closes
Update type definition to support array format () (81d4740), closes
Update type definition to support strict mode () (8d54f3f)"
"chore(release): 1.10.1 [skip ci]

## [1.10.1](https://github.com/iamkun/dayjs/compare/v1.10.0...v1.10.1) (2021-01-03)

### Bug Fixes

* fix typescript type error UnitTypeLongPlural ([](https://github.com/iamkun/dayjs/issues/1302)) ([bfaabe4](https://github.com/iamkun/dayjs/commit/bfaabe4f398c11564eca6cda7c8aded22e1b231a)), closes [](https://github.com/iamkun/dayjs/issues/1300)
fix: fix parse regex bug ()

fix
fix: remove module entry in package.json to revert 1.10.1 change ()
fix: update devHelper add warning ""passing Year as a Number will be parsed as a Unix timestamp"" ()
chore(release): 1.10.2 [skip ci]

## [1.10.2](https://github.com/iamkun/dayjs/compare/v1.10.1...v1.10.2) (2021-01-05)

### Bug Fixes

* fix parse regex bug ([](https://github.com/iamkun/dayjs/issues/1307)) ([db2b6a5](https://github.com/iamkun/dayjs/commit/db2b6a5ea8e70f9fda645d113ca33495aa96b616)), closes [](https://github.com/iamkun/dayjs/issues/1305)
* remove module entry in package.json to revert 1.10.1 change ([](https://github.com/iamkun/dayjs/issues/1314)) ([824dcb8](https://github.com/iamkun/dayjs/commit/824dcb8dfcccf14f64b6a2741a00fcdfe53dcd98))
* update devHelper add warning ""passing Year as a Number will be parsed as a Unix timestamp"" ([](https://github.com/iamkun/dayjs/issues/1315)) ([b0dda31](https://github.com/iamkun/dayjs/commit/b0dda3139e25441ab4e7c1f4f192dee0ecce6ef8))","Bug Fixes
fix parse regex bug () (db2b6a5), closes
remove module entry in package.json to revert 1.10.1 change () (824dcb8)
update devHelper add warning ""passing Year as a Number will be parsed as a Unix timestamp"" () (b0dda31)"
"chore(release): 1.10.6 [skip ci]

## [1.10.6](https://github.com/iamkun/dayjs/compare/v1.10.5...v1.10.6) (2021-07-06)

### Bug Fixes

* add invalid date string override ([](https://github.com/iamkun/dayjs/issues/1465)) ([](https://github.com/iamkun/dayjs/issues/1470)) ([06f88f4](https://github.com/iamkun/dayjs/commit/06f88f425828b1ce96b737332d25145a95a4ee9d))
* add sv-fi Finland Swedish locale ([](https://github.com/iamkun/dayjs/issues/1522)) ([8e32164](https://github.com/iamkun/dayjs/commit/8e32164855cff724642e24c37a631eb4c4d760c8))
* customParseFormat support parsing X x timestamp ([](https://github.com/iamkun/dayjs/issues/1567)) ([eb087f5](https://github.com/iamkun/dayjs/commit/eb087f52861313b8dd8a5c1b77858665ec72859e))
* dayjs ConfigTypeMap add null & undefined ([](https://github.com/iamkun/dayjs/issues/1560)) ([b5e40e6](https://github.com/iamkun/dayjs/commit/b5e40e6f16abeaea6a0facfa466d20aefaa8a444))
* Fix DayOfYear plugin when using BadMutable plugin ([](https://github.com/iamkun/dayjs/issues/1511)) ([0b0c6a3](https://github.com/iamkun/dayjs/commit/0b0c6a31ec9c0aff991b0e8dd6eed116201274cc))
* Implement ordinal in Bulgarian translation (fixes [](https://github.com/iamkun/dayjs/issues/1501)) ([](https://github.com/iamkun/dayjs/issues/1502)) ([b728da5](https://github.com/iamkun/dayjs/commit/b728da5ed9ed08210004ed20ce5fcd52a92de7da))
* more strict delimiter in REGEX_PARSE ([](https://github.com/iamkun/dayjs/issues/1555)) ([bfdab5c](https://github.com/iamkun/dayjs/commit/bfdab5c0d45a5736b68e8e1b1354fc021e05f607))
* parameter type ([](https://github.com/iamkun/dayjs/issues/1549)) ([f369844](https://github.com/iamkun/dayjs/commit/f369844dd69d253c4c7cbf68150939db3db233be))
* update customParseFormat plugin to custom two-digit year parse function ([](https://github.com/iamkun/dayjs/issues/1421)) ([bb5df55](https://github.com/iamkun/dayjs/commit/bb5df55cd3975dc7638b8f4e762afa470b6620f7))
* update names of weekdays and months in Bulgarian [bg] to lowercase ([](https://github.com/iamkun/dayjs/issues/1438)) ([b246210](https://github.com/iamkun/dayjs/commit/b24621091fec9cf6704de21e4b323f6f0c4abbf1))
* update type file `.diff` ([](https://github.com/iamkun/dayjs/issues/1505)) ([6508494](https://github.com/iamkun/dayjs/commit/6508494a4e62977b4397baaeef293d1bcf3c7235))
* update UTC plugin type file for strict parsing ([](https://github.com/iamkun/dayjs/issues/1443)) ([b4f28df](https://github.com/iamkun/dayjs/commit/b4f28df219fe63202dffdbeeaec5677c4d2c9111))
chore(release): 1.10.7 [skip ci]

## [1.10.7](https://github.com/iamkun/dayjs/compare/v1.10.6...v1.10.7) (2021-09-10)

### Bug Fixes

* Add  Spanish (Mexico) [es-mx] locale ([](https://github.com/iamkun/dayjs/issues/1614)) ([3393f2a](https://github.com/iamkun/dayjs/commit/3393f2ad55346d55902683a2e31c6f253d96c8c2))
* Add Arabic (Iraq) [ar-iq] locale ([](https://github.com/iamkun/dayjs/issues/1627)) ([b5a1391](https://github.com/iamkun/dayjs/commit/b5a1391011b247d08863d291542db5937b23b427))
* add format object type to type file ([](https://github.com/iamkun/dayjs/issues/1572)) ([5a79cc6](https://github.com/iamkun/dayjs/commit/5a79cc6408e825d9e123629eb44fc19c996d7751))
* duration plugin when parsing duration from ISO string, set missing components to 0 instead of NaN ([](https://github.com/iamkun/dayjs/issues/1611)) ([252585b](https://github.com/iamkun/dayjs/commit/252585b4b2bd59508150e21bb994908a9d78f9b0))
* narrow type for `add` and `subtract` ([](https://github.com/iamkun/dayjs/issues/1576)) ([1686962](https://github.com/iamkun/dayjs/commit/16869621b1a42563064dbf87f80c1ebfd74c1188))
* update customParseFormat plugin strict x X parsing ([](https://github.com/iamkun/dayjs/issues/1571)) ([08adda5](https://github.com/iamkun/dayjs/commit/08adda54edbcca38601f57841921d0f87f84e49e))
* update Lithuanian [lt] locale spelling for single month ([](https://github.com/iamkun/dayjs/issues/1609)) ([255dc54](https://github.com/iamkun/dayjs/commit/255dc54d9295de135a9037ce6ca13cae4bfd2cfb))
* Update Norwegian Bokmål [nb] local yearStart 4 ([](https://github.com/iamkun/dayjs/issues/1608)) ([7a8467c](https://github.com/iamkun/dayjs/commit/7a8467c0b7d59821f7e19d4a6973bcda8e4c19b1))
* update plugin advancedFormat `isValid` validation ([](https://github.com/iamkun/dayjs/issues/1566)) ([755fc8b](https://github.com/iamkun/dayjs/commit/755fc8bb1c532eb991459f180eee81367d12016c))
* update Sinhalese [si] locale month name ([](https://github.com/iamkun/dayjs/issues/1475)) ([63de2a8](https://github.com/iamkun/dayjs/commit/63de2a8b7dcd7e68c132c85d88572d4c9d296907))
* update utcOffset plugin type file ([](https://github.com/iamkun/dayjs/issues/1604)) ([f68e4b1](https://github.com/iamkun/dayjs/commit/f68e4b1a29fc33542f74cde10ec6d9fb045ca37e))","Bug Fixes
Add  Spanish (Mexico) [es-mx] locale () (3393f2a)
Add Arabic (Iraq) [ar-iq] locale () (b5a1391)
add format object type to type file () (5a79cc6)
duration plugin when parsing duration from ISO string, set missing components to 0 instead of NaN () (252585b)
narrow type for add and subtract () (1686962)
update customParseFormat plugin strict x X parsing () (08adda5)
update Lithuanian [lt] locale spelling for single month () (255dc54)
Update Norwegian Bokmål [nb] local yearStart 4 () (7a8467c)
update plugin advancedFormat isValid validation () (755fc8b)
update Sinhalese [si] locale month name () (63de2a8)
update utcOffset plugin type file () (f68e4b1)"
"chore(release): 1.7.5 [skip ci]

## [1.7.5](https://github.com/iamkun/dayjs/compare/v1.7.4...v1.7.5) (2018-08-10)

### Bug Fixes

* add isBetween API & update ([b5fc3d1](https://github.com/iamkun/dayjs/commit/b5fc3d1))
add sk locale
update locale return type ()

* fix: locale return type should be 'Dayjs'

* fix: function locale should return string type
Fix Korean grammar
Follow moment's translation
Undo the capital letters for Russian locale

It's uncommon that all weekdays and months are starting from the capital letters. It would be much easier to migrate from moment.js on day.js if they were in lower case (https://github.com/moment/moment/blob/develop/locale/ru.js).
add hungarian locale
fixing hungarian locale
Fix file case issue
Synchronizing the pt-br API documentation with the original one.
Link to section 'list of all avaiable units'.
Fixing typo.
Fixing sections links on API reference (pt-br lang).
Fixing link to 'clone' method on API reference.
Add Norwegian Nynorsk Locale (nn)
Add short names to nn locale
add sr and sr-cyrl locales
fix(add dayjs.unix): add dayjs.unix to parse timestamp in seconds && locale update
docs: update docs with new .unix API
docs: update other docs
chore(release): 1.7.6 [skip ci]

## [1.7.6](https://github.com/iamkun/dayjs/compare/v1.7.5...v1.7.6) (2018-09-25)

### Bug Fixes

* **add dayjs.unix:** add dayjs.unix to parse timestamp in seconds && locale update ([5711c5e](https://github.com/iamkun/dayjs/commit/5711c5e))","Bug Fixes
add dayjs.unix: add dayjs.unix to parse timestamp in seconds && locale update (5711c5e)"
"chore(release): 1.10.4 [skip ci]

## [1.10.4](https://github.com/iamkun/dayjs/compare/v1.10.3...v1.10.4) (2021-01-22)

### Bug Fixes

* Correct handling negative duration ([](https://github.com/iamkun/dayjs/issues/1317)) ([3f5c085](https://github.com/iamkun/dayjs/commit/3f5c085608182472f20b84766b10949945663e44))
* Improve `Duration` types ([](https://github.com/iamkun/dayjs/issues/1338)) ([4aca4b1](https://github.com/iamkun/dayjs/commit/4aca4b1b584a15de1146d929f95c944594032f20))
* parse a string for MMM month format with underscore delimiter ([](https://github.com/iamkun/dayjs/issues/1349)) ([82ef9a3](https://github.com/iamkun/dayjs/commit/82ef9a304f06287ac0a14c4da9a7fe6152b5fec9))
* Update Bengali [bn] locale ([](https://github.com/iamkun/dayjs/issues/1329)) ([02d96ec](https://github.com/iamkun/dayjs/commit/02d96ec7189f62d6ef8987135919cbb5ceff20a6))
* update locale Portuguese [pt] yearStart ([](https://github.com/iamkun/dayjs/issues/1345)) ([5c785d5](https://github.com/iamkun/dayjs/commit/5c785d528cc08811638d7cbfc7fc158d67b32d75))
* update Polish [pl] locale yearStart ([](https://github.com/iamkun/dayjs/issues/1348)) ([e93e6b8](https://github.com/iamkun/dayjs/commit/e93e6b8ffa61036b26382f1763e3864d4a7d5df5))
* Update Slovenian [sl] relativeTime locale ([](https://github.com/iamkun/dayjs/issues/1333)) ([fe5f1d0](https://github.com/iamkun/dayjs/commit/fe5f1d0afbe57b70339e268047e6c3028ca3d59b))
chore: revert removed type definitions ()
fix: update Russian [ru] locale yearStart config  ()
fix: Update Finnish [fi] locale to set yearStart  ()
chore: Fix inconsistencies in README-es-es ()
fix: update Swedish [sv] locale to set correct yearStart ()
fix: update Slovenian [sl] locale to set correct ordinal  ()
fix: Update duration plugin change string to number ()
fix(): add meridiem in ar locales ()
fix: update Duration plugin to support no-argument ()
fix: update Russian [ru] locale meridiem and unit tests ()
fix: update UTC plugin to support string argument like +HH:mm ()
fix: fix missing types for ArraySupport plugin ()
fix: update Spanish [es] locale to change month names to lowercase ()
fix: fix Ukrainian [uk] locale ()
Update README.md
Fix broken UTC plugin due to rollup ()
test: add utc plugin test
chore: add ignore
chore(release): 1.10.5 [skip ci]

## [1.10.5](https://github.com/iamkun/dayjs/compare/v1.10.4...v1.10.5) (2021-05-26)

### Bug Fixes

* add meridiem in ar locales ([](https://github.com/iamkun/dayjs/issues/1375)) ([319f616](https://github.com/iamkun/dayjs/commit/319f616e572a03b984013d04d1b3a18ffd5b1190))
* Added Zulu support to customParseFormat ([](https://github.com/iamkun/dayjs/issues/1359)) ([1138a3f](https://github.com/iamkun/dayjs/commit/1138a3f0a76592c6d72fb86c4399e133fa41e2ec))
* fix Bengali [bn] locale monthsShort error ([a0e6c0c](https://github.com/iamkun/dayjs/commit/a0e6c0cf3e1828020dfa11432c6716990f6ed5e0))
* fix missing types for ArraySupport plugin ([](https://github.com/iamkun/dayjs/issues/1401)) ([b1abdc4](https://github.com/iamkun/dayjs/commit/b1abdc40ee6c9d18ff46c311a114e0755677ea6f))
* fix Ukrainian [uk] locale ([](https://github.com/iamkun/dayjs/issues/1463)) ([0fdac93](https://github.com/iamkun/dayjs/commit/0fdac93ff2531542301b76952be9b084b2e2dfa0))
* hotfix for `Duration` types ([](https://github.com/iamkun/dayjs/issues/1357)) ([855b7b3](https://github.com/iamkun/dayjs/commit/855b7b3d049a3903794f91db3419f167c00dabd2)), closes [](https://github.com/iamkun/dayjs/issues/1354)
* timezone plugin DST error ([](https://github.com/iamkun/dayjs/issues/1352)) ([71bed15](https://github.com/iamkun/dayjs/commit/71bed155edf32bff24379930ac684fc783538d8f))
* Update duration plugin change string to number ([](https://github.com/iamkun/dayjs/issues/1394)) ([e1546d1](https://github.com/iamkun/dayjs/commit/e1546d1a0cdb97ae92cf11efe61d94707af6a3a3))
* update Duration plugin to support no-argument ([](https://github.com/iamkun/dayjs/issues/1400)) ([8d9a5ae](https://github.com/iamkun/dayjs/commit/8d9a5ae0749e1b4e76babd4deeaa3b1d9776c29b))
* Update Finnish [fi] locale to set yearStart  ([](https://github.com/iamkun/dayjs/issues/1378)) ([f3370bd](https://github.com/iamkun/dayjs/commit/f3370bda4e435118f714c8a7daf5c88cfc4b69ba))
* update Russian [ru] locale meridiem and unit tests ([](https://github.com/iamkun/dayjs/issues/1403)) ([f10f39d](https://github.com/iamkun/dayjs/commit/f10f39de7db70244a3c35e4a421090a12972457b))
* update Russian [ru] locale yearStart config  ([](https://github.com/iamkun/dayjs/issues/1372)) ([5052515](https://github.com/iamkun/dayjs/commit/5052515fe35b2444201ef8ef87220b1876a94d0a))
* update Slovenian [sl] locale to set correct ordinal  ([](https://github.com/iamkun/dayjs/issues/1386)) ([cb4f746](https://github.com/iamkun/dayjs/commit/cb4f74633b3020d6dbf19548c8cb13613dafca18))
* update Spanish [es] locale to change month names to lowercase ([](https://github.com/iamkun/dayjs/issues/1414)) ([9c20e77](https://github.com/iamkun/dayjs/commit/9c20e77caf7b1b5eccf418175203b198d4e29535))
* update Swedish [sv] locale to set correct yearStart ([](https://github.com/iamkun/dayjs/issues/1385)) ([66c5935](https://github.com/iamkun/dayjs/commit/66c59354964ef456bcd5f6152819618f44978082))
* update UTC plugin to support string argument like +HH:mm ([](https://github.com/iamkun/dayjs/issues/1395)) ([656127c](https://github.com/iamkun/dayjs/commit/656127cc44eda50923a1ac755602863fc32b9e69))","Bug Fixes
add meridiem in ar locales () (319f616)
Added Zulu support to customParseFormat () (1138a3f)
fix Bengali [bn] locale monthsShort error (a0e6c0c)
fix missing types for ArraySupport plugin () (b1abdc4)
fix Ukrainian [uk] locale () (0fdac93)
hotfix for Duration types () (855b7b3), closes
timezone plugin DST error () (71bed15)
Update duration plugin change string to number () (e1546d1)
update Duration plugin to support no-argument () (8d9a5ae)
Update Finnish [fi] locale to set yearStart  () (f3370bd)
update Russian [ru] locale meridiem and unit tests () (f10f39d)
update Russian [ru] locale yearStart config  () (5052515)
update Slovenian [sl] locale to set correct ordinal  () (cb4f746)
update Spanish [es] locale to change month names to lowercase () (9c20e77)
update Swedish [sv] locale to set correct yearStart () (66c5935)
update UTC plugin to support string argument like +HH:mm () (656127c)"
"chore(release): 1.9.6 [skip ci]

## [1.9.6](https://github.com/iamkun/dayjs/compare/v1.9.5...v1.9.6) (2020-11-10)

### Bug Fixes

* fix customParseFormat plugin parsing date bug ([](https://github.com/iamkun/dayjs/issues/1198)) ([50f05ad](https://github.com/iamkun/dayjs/commit/50f05ad3addf27827c5657ae7519514e40d9faec)), closes [](https://github.com/iamkun/dayjs/issues/1194)
* Update lv (Latvian) locale relative time ([](https://github.com/iamkun/dayjs/issues/1192)) ([6d6c684](https://github.com/iamkun/dayjs/commit/6d6c6841b13ba4f7e69de92caf132a3592c5253a))
fix: fix diff bug when UTC plugin enabled ()

fix
fix: update customParseFormat plugin to parse 2-digit offset ()

fix
fix: Add function handling for relativeTime.future and relativeTime.past ()
fix: fix utc plugin diff edge case ()
fix: Update timezone plugin type definition ()
fix: avoid install installed plugin ()
fix: avoid memory leak after installing a plugin too many times
fix: add duration.format to format a Duration ()
fix: fix startOf/endOf bug in timezone plugin ()
chore(release): 1.9.7 [skip ci]

## [1.9.7](https://github.com/iamkun/dayjs/compare/v1.9.6...v1.9.7) (2020-12-05)

### Bug Fixes

* add duration.format to format a Duration ([](https://github.com/iamkun/dayjs/issues/1202)) ([9a859a1](https://github.com/iamkun/dayjs/commit/9a859a147ba223a1eeff0f2bb6f33d97e0ccc6c7))
* Add function handling for relativeTime.future and relativeTime.past ([](https://github.com/iamkun/dayjs/issues/1197)) ([ef1979c](https://github.com/iamkun/dayjs/commit/ef1979ce85c61fe2d759ef3c37cb6aaf2358094f))
* avoid install installed plugin ([](https://github.com/iamkun/dayjs/issues/1214)) ([a92eb6c](https://github.com/iamkun/dayjs/commit/a92eb6c4dc1437ec920e69484d52984f5921a8ea))
* avoid memory leak after installing a plugin too many times ([b8d2e32](https://github.com/iamkun/dayjs/commit/b8d2e32a9eb59661a7ed6200daa070687becaebd))
* fix diff bug when UTC plugin enabled ([](https://github.com/iamkun/dayjs/issues/1201)) ([9544ed2](https://github.com/iamkun/dayjs/commit/9544ed2a6c466b8308d26b33a388a6737435a1f4)), closes [](https://github.com/iamkun/dayjs/issues/1200)
* fix startOf/endOf bug in timezone plugin ([](https://github.com/iamkun/dayjs/issues/1229)) ([eb5fbc4](https://github.com/iamkun/dayjs/commit/eb5fbc4c7d1b62a8615d2f263b404a9515d8e15c))
* fix utc plugin diff edge case ([](https://github.com/iamkun/dayjs/issues/1187)) ([971b3d4](https://github.com/iamkun/dayjs/commit/971b3d40b4c9403165138f1034e2223cd97c3abf))
* update customParseFormat plugin to parse 2-digit offset ([](https://github.com/iamkun/dayjs/issues/1209)) ([b56936a](https://github.com/iamkun/dayjs/commit/b56936ab77b8f6289a1b77d49307b495c4bf9f91)), closes [](https://github.com/iamkun/dayjs/issues/1205)
* Update timezone plugin type definition ([](https://github.com/iamkun/dayjs/issues/1221)) ([34cfb92](https://github.com/iamkun/dayjs/commit/34cfb920b9653ad44d4b31fe49e533692a3ce01b))","Bug Fixes
add duration.format to format a Duration () (9a859a1)
Add function handling for relativeTime.future and relativeTime.past () (ef1979c)
avoid install installed plugin () (a92eb6c)
avoid memory leak after installing a plugin too many times (b8d2e32)
fix diff bug when UTC plugin enabled () (9544ed2), closes
fix startOf/endOf bug in timezone plugin () (eb5fbc4)
fix utc plugin diff edge case () (971b3d4)
update customParseFormat plugin to parse 2-digit offset () (b56936a), closes
Update timezone plugin type definition () (34cfb92)"
"chore(release): 1.8.5 [skip ci]

## [1.8.5](https://github.com/iamkun/dayjs/compare/v1.8.4...v1.8.5) (2019-02-07)

### Bug Fixes

* Add en-gb locale ([](https://github.com/iamkun/dayjs/issues/478)) ([508c3a7](https://github.com/iamkun/dayjs/commit/508c3a7))
* **module:** transpile everything except ES6 modules in the 'module' entrypoint ([](https://github.com/iamkun/dayjs/issues/477)) ([](https://github.com/iamkun/dayjs/issues/480)) ([](https://github.com/iamkun/dayjs/issues/482)) ([767017d](https://github.com/iamkun/dayjs/commit/767017d))
* update customParseFormat plugin support hh:mm ([54947cc](https://github.com/iamkun/dayjs/commit/54947cc)), closes [](https://github.com/iamkun/dayjs/issues/484)
* Update module in package.json ([5c5a7a0](https://github.com/iamkun/dayjs/commit/5c5a7a0))
fix: Add Bahasa Melayu (Malaysia) locale ()
fix: Implemented isBetween inclusivity ()
docs: update isBetween inclusivity docs
fix: Fix startOf week bug while week start is not Sunday
fix: Copy & export built-in en locale to /locale folder as a separate file
chore: Add prettier ()
chore: update prettier setting
fix: Update Swedish and Finnish locales ()

* Add weekdaysShort, weekdaysMin, and monthsShort
Update I18n.md ()

Fixing typo -> missing quotes around locale short code on line 42
docs: fix doc error
fix: Fix bug in customParseFormat plugin while month(MM) is '01'

fix
fix: Fix commonJS require ES Module bug in webpack4
chore(release): 1.8.6 [skip ci]

## [1.8.6](https://github.com/iamkun/dayjs/compare/v1.8.5...v1.8.6) (2019-02-14)

### Bug Fixes

* Add Bahasa Melayu (Malaysia) locale ([](https://github.com/iamkun/dayjs/issues/485)) ([cb208b0](https://github.com/iamkun/dayjs/commit/cb208b0))
* Copy & export built-in en locale to /locale folder as a separate file ([a7e05e0](https://github.com/iamkun/dayjs/commit/a7e05e0))
* Fix bug in customParseFormat plugin while month(MM) is '01' ([9884ca5](https://github.com/iamkun/dayjs/commit/9884ca5)), closes [](https://github.com/iamkun/dayjs/issues/494)
* Fix commonJS require ES Module bug in webpack4 ([23f9f3d](https://github.com/iamkun/dayjs/commit/23f9f3d))
* Fix startOf week bug while week start is not Sunday ([5eaf77b](https://github.com/iamkun/dayjs/commit/5eaf77b))
* Implemented isBetween inclusivity ([](https://github.com/iamkun/dayjs/issues/464)) ([af2f4f1](https://github.com/iamkun/dayjs/commit/af2f4f1))
* Update Swedish and Finnish locales ([](https://github.com/iamkun/dayjs/issues/488)) ([f142082](https://github.com/iamkun/dayjs/commit/f142082))","Bug Fixes
Add Bahasa Melayu (Malaysia) locale () (cb208b0)
Copy & export built-in en locale to /locale folder as a separate file (a7e05e0)
Fix bug in customParseFormat plugin while month(MM) is '01' (9884ca5), closes
Fix commonJS require ES Module bug in webpack4 (23f9f3d)
Fix startOf week bug while week start is not Sunday (5eaf77b)
Implemented isBetween inclusivity () (af2f4f1)
Update Swedish and Finnish locales () (f142082)"
"chore(release): 1.9.0 [skip ci]

# [1.9.0](https://github.com/iamkun/dayjs/compare/v1.8.36...v1.9.0) (2020-09-28)

### Bug Fixes

* Add `setDefault` typing to timezone.d.ts ([](https://github.com/iamkun/dayjs/issues/1057)) ([c0f0886](https://github.com/iamkun/dayjs/commit/c0f088620f17260e6e3ebce7697d561b5623f5f3))
* fix DST bug in utc plugin ([](https://github.com/iamkun/dayjs/issues/1053)) ([3d73543](https://github.com/iamkun/dayjs/commit/3d7354361f042ced1176d91f9ae9edffe6173425))
* Fix optional type for timezone plugin ([](https://github.com/iamkun/dayjs/issues/1081)) ([a6ebcf2](https://github.com/iamkun/dayjs/commit/a6ebcf283a83273562dce5663155e3b3a12ea9a5)), closes [](https://github.com/iamkun/dayjs/issues/1079)
* Fix timezone plugin conversion bug ([](https://github.com/iamkun/dayjs/issues/1073)) ([16816a3](https://github.com/iamkun/dayjs/commit/16816a31ff43220aca9d1d179df6b729182abb55))
* update duration plugin type file ([](https://github.com/iamkun/dayjs/issues/1065)) ([94af9af](https://github.com/iamkun/dayjs/commit/94af9af27c5bc182cbb24f1845e561dd1d82d776))
* update timezone plugin to support getting offset name e.g. EST ([](https://github.com/iamkun/dayjs/issues/1069)) ([cbb755e](https://github.com/iamkun/dayjs/commit/cbb755e5c68d49c5678291f3ce832b32831a056e))
* update utc plugin to support keepLocalTime `.utc(true)` ([](https://github.com/iamkun/dayjs/issues/1080)) ([5ce4e0d](https://github.com/iamkun/dayjs/commit/5ce4e0d2f552f3645262537ff7afdc946f5a7e72))

### Features

* Correct casing for en-sg locale name ([](https://github.com/iamkun/dayjs/issues/1048)) ([2edaddc](https://github.com/iamkun/dayjs/commit/2edaddc22a7eb914f915531f389766217acd7034))
test: test locale names are in lower case
fix: Fix objectSupport plugin to get the correct result (zero-based month) ()
chore(release): 1.9.1 [skip ci]

## [1.9.1](https://github.com/iamkun/dayjs/compare/v1.9.0...v1.9.1) (2020-09-28)

### Bug Fixes

* Fix objectSupport plugin to get the correct result (zero-based month) ([](https://github.com/iamkun/dayjs/issues/1089)) ([f95ac15](https://github.com/iamkun/dayjs/commit/f95ac15a4577ae5a3d1ce353872a2cd9fc454bc2))","Bug Fixes
Fix objectSupport plugin to get the correct result (zero-based month) () (f95ac15)"
"chore(release): 1.8.4 [skip ci]

## [1.8.4](https://github.com/iamkun/dayjs/compare/v1.8.3...v1.8.4) (2019-02-05)

### Bug Fixes

* Allow set start day of week in locale && Allow set week in weekOfYear plugin ([1295591](https://github.com/iamkun/dayjs/commit/1295591))
* Revert default export ([b00da1b](https://github.com/iamkun/dayjs/commit/b00da1b))
* update all locale files with correct week start ([5b03412](https://github.com/iamkun/dayjs/commit/5b03412))
* update es es-do locale adding weekStart && update weekStart test ([66e42ec](https://github.com/iamkun/dayjs/commit/66e42ec))
docs: update changelog
chore(release): 1.8.5 [skip ci]

## [1.8.5](https://github.com/iamkun/dayjs/compare/v1.8.4...v1.8.5) (2019-02-07)

### Bug Fixes

* Add en-gb locale ([](https://github.com/iamkun/dayjs/issues/478)) ([508c3a7](https://github.com/iamkun/dayjs/commit/508c3a7))
* **module:** transpile everything except ES6 modules in the 'module' entrypoint ([](https://github.com/iamkun/dayjs/issues/477)) ([](https://github.com/iamkun/dayjs/issues/480)) ([](https://github.com/iamkun/dayjs/issues/482)) ([767017d](https://github.com/iamkun/dayjs/commit/767017d))
* update customParseFormat plugin support hh:mm ([54947cc](https://github.com/iamkun/dayjs/commit/54947cc)), closes [](https://github.com/iamkun/dayjs/issues/484)
* Update module in package.json ([5c5a7a0](https://github.com/iamkun/dayjs/commit/5c5a7a0))","Bug Fixes
Add en-gb locale () (508c3a7)
module: transpile everything except ES6 modules in the 'module' entrypoint () () () (767017d)
update customParseFormat plugin support hh:mm (54947cc), closes
Update module in package.json (5c5a7a0)"
"chore(release): 1.9.2 [skip ci]

## [1.9.2](https://github.com/iamkun/dayjs/compare/v1.9.1...v1.9.2) (2020-10-13)

### Bug Fixes

* add arraySupport plugin ([](https://github.com/iamkun/dayjs/issues/1129)) ([be505c2](https://github.com/iamkun/dayjs/commit/be505c2c540261027342cecc55d8919a3d18d893))
* export type of duration plugin ([](https://github.com/iamkun/dayjs/issues/1094)) ([2c92e71](https://github.com/iamkun/dayjs/commit/2c92e71bf55d09601120cdf433da7a19cc8abff6))
* Fix LocaleData plugin longDateFormat lowercase error ([](https://github.com/iamkun/dayjs/issues/1101)) ([7937ccd](https://github.com/iamkun/dayjs/commit/7937ccdeac47d094a60e65ebb62a6020b81c46f4))
* Fix objectSupport plugin bug in UTC ([](https://github.com/iamkun/dayjs/issues/1107)) ([fe90bb6](https://github.com/iamkun/dayjs/commit/fe90bb6944f2ff1969ca975954d303b449dfa95b)), closes [](https://github.com/iamkun/dayjs/issues/1105)
* fix Serbian locale grammar (sr, sr-cyrl) ([](https://github.com/iamkun/dayjs/issues/1108)) ([cc87eff](https://github.com/iamkun/dayjs/commit/cc87eff8b75b0d86ce0956516319d402bccae6c0))
* Fix typo for ""monday"" in arabic ([](https://github.com/iamkun/dayjs/issues/1067)) ([2e1e426](https://github.com/iamkun/dayjs/commit/2e1e42650124f30282dc4d710798d576b928f1c7))
* support dayjs.add(Duration), dayjs.subtract(Duration) ([](https://github.com/iamkun/dayjs/issues/1099)) ([b1a0294](https://github.com/iamkun/dayjs/commit/b1a02942c5238203aaa04ce9a074c73742324ab7))
* update Breton [br] locale relativeTime config ([](https://github.com/iamkun/dayjs/issues/1103)) ([b038bfd](https://github.com/iamkun/dayjs/commit/b038bfdb128889d677c95534d2be29cc30c9e72f))
* update Catalan [ca] locale ordinal ([73da380](https://github.com/iamkun/dayjs/commit/73da38024c8b550bdcfbe3ff7e578e742c7aecf2))
* update German [de] locale relativeTime config ([](https://github.com/iamkun/dayjs/issues/1109)) ([f6e771b](https://github.com/iamkun/dayjs/commit/f6e771b70f93d19ebb12e6b794aa4628a1796248))
* update localeData plugin to add longDateFormat to global localeData ([](https://github.com/iamkun/dayjs/issues/1106)) ([16937d1](https://github.com/iamkun/dayjs/commit/16937d16e053b8c1d4a607622fa2fdbfd9809832))
* Update objectSupport plugin to return current date time while parsing empty object ([f56783e](https://github.com/iamkun/dayjs/commit/f56783e14d8cf50916b015e7188b23bb6fbca839))
chore(release): 1.9.3 [skip ci]

## [1.9.3](https://github.com/iamkun/dayjs/compare/v1.9.2...v1.9.3) (2020-10-13)

### Bug Fixes

* fix localizedFormat export error ([](https://github.com/iamkun/dayjs/issues/1133)) ([deecd6a](https://github.com/iamkun/dayjs/commit/deecd6ab8a2f4173ee7046f6b568b41fd2677531)), closes [](https://github.com/iamkun/dayjs/issues/1132)","Bug Fixes
fix localizedFormat export error () (deecd6a), closes"
"chore(release): 1.8.3 [skip ci]

## [1.8.3](https://github.com/iamkun/dayjs/compare/v1.8.2...v1.8.3) (2019-02-04)

### Bug Fixes

* fix ios safari YYYY-MM-DD HH:mm parse BUG ([e02ae82](https://github.com/iamkun/dayjs/commit/e02ae82)), closes [](https://github.com/iamkun/dayjs/issues/254)
fix: Revert default export
add setWeek fucntion to weekOfYear ()
add setting start day of a week in locale ()
fix: Allow set start day of week in locale && Allow set week in weekOfYear plugin
fix: update es es-do locale adding weekStart && update weekStart test
fix: update all locale files with correct week start
docs: update week start docs

close close
chore(release): 1.8.4 [skip ci]

## [1.8.4](https://github.com/iamkun/dayjs/compare/v1.8.3...v1.8.4) (2019-02-05)

### Bug Fixes

* Allow set start day of week in locale && Allow set week in weekOfYear plugin ([1295591](https://github.com/iamkun/dayjs/commit/1295591))
* Revert default export ([b00da1b](https://github.com/iamkun/dayjs/commit/b00da1b))
* update all locale files with correct week start ([5b03412](https://github.com/iamkun/dayjs/commit/5b03412))
* update es es-do locale adding weekStart && update weekStart test ([66e42ec](https://github.com/iamkun/dayjs/commit/66e42ec))","Bug Fixes
Allow set start day of week in locale && Allow set week in weekOfYear plugin (1295591)
Revert default export (b00da1b)
update all locale files with correct week start (5b03412)
update es es-do locale adding weekStart && update weekStart test (66e42ec)"
"chore(release): 1.11.9 [skip ci]

## [1.11.9](https://github.com/iamkun/dayjs/compare/v1.11.8...v1.11.9) (2023-07-01)

### Bug Fixes

* Add null to min and max plugin return type ([](https://github.com/iamkun/dayjs/issues/2355)) ([62d9042](https://github.com/iamkun/dayjs/commit/62d9042eb84b78d78324694ccbeaad1679d37e68))
* check if null passed to objectSupport parser ([](https://github.com/iamkun/dayjs/issues/2175)) ([013968f](https://github.com/iamkun/dayjs/commit/013968f609c32e2269df69b4dd1feb2e8e1e035a))
* dayjs.diff improve performance ([](https://github.com/iamkun/dayjs/issues/2244)) ([33c80e1](https://github.com/iamkun/dayjs/commit/33c80e14cf14f70ceb4f54639e266cd70a3c3996))
* dayjs(null) throws error, not return dayjs object as invalid date ([](https://github.com/iamkun/dayjs/issues/2334)) ([c79e2f5](https://github.com/iamkun/dayjs/commit/c79e2f5d03eef5660b1f13385b69c0c9668d2f98))
* objectSupport plugin causes an error when null is passed to dayjs function (closes [](https://github.com/iamkun/dayjs/issues/2277)) ([](https://github.com/iamkun/dayjs/issues/2342)) ([89bf31c](https://github.com/iamkun/dayjs/commit/89bf31ce0a36dcfc892029dc019d85d3654cf5fb))
* Optimize format method ([](https://github.com/iamkun/dayjs/issues/2313)) ([1fe1b1d](https://github.com/iamkun/dayjs/commit/1fe1b1d9a214d3b8c9f267b432801424a493f1c4))
* update Duration plugin add/subtract take into account days in month ([](https://github.com/iamkun/dayjs/issues/2337)) ([3b1060f](https://github.com/iamkun/dayjs/commit/3b1060f92183ab3a3c49289c2d87fbdd34c1eacc))
* update MinMax plugin 1. ignore the 'null' in args 2. return the only one arg ([](https://github.com/iamkun/dayjs/issues/2330)) ([3c2c6ee](https://github.com/iamkun/dayjs/commit/3c2c6ee4db00bbb43a7a3bb0b56bc0d0f03daddc))
chore(release): 1.11.10 [skip ci]

## [1.11.10](https://github.com/iamkun/dayjs/compare/v1.11.9...v1.11.10) (2023-09-19)

### Bug Fixes

* Add Korean Day of Month with ordinal ([](https://github.com/iamkun/dayjs/issues/2395)) ([dd55ee2](https://github.com/iamkun/dayjs/commit/dd55ee2aadd1009242235e47d558bbf028827896))
* change back fa locale to the Gregorian calendar equivalent ([](https://github.com/iamkun/dayjs/issues/2411)) ([95e9458](https://github.com/iamkun/dayjs/commit/95e9458b221fe35e59ee4a160a5db247313a68fb))
* duration plugin - MILLISECONDS_A_MONTH const calculation ([](https://github.com/iamkun/dayjs/issues/2362)) ([f0a0b54](https://github.com/iamkun/dayjs/commit/f0a0b546b074b3b511c2319a1ce83d412894b91f))
* duration plugin getter get result  0 instead of undefined ([](https://github.com/iamkun/dayjs/issues/2369)) ([061aa7e](https://github.com/iamkun/dayjs/commit/061aa7ed6c31696974665fc9b11a74d30841ebed))
* fix isDayjs check logic ([](https://github.com/iamkun/dayjs/issues/2383)) ([5f3f878](https://github.com/iamkun/dayjs/commit/5f3f8786c796cd432fe6bcb6966a810daea89203))
* fix timezone plugin to get correct locale setting ([](https://github.com/iamkun/dayjs/issues/2420)) ([4f45012](https://github.com/iamkun/dayjs/commit/4f4501256fa1bc72128aae1d841bbd782df86aed))
* **locale:** add meridiem in `ar` locale ([](https://github.com/iamkun/dayjs/issues/2418)) ([361be5c](https://github.com/iamkun/dayjs/commit/361be5c7c628614ee833d710acbe154a598b904d))
* round durations to millisecond precision for ISO string ([](https://github.com/iamkun/dayjs/issues/2367)) ([890a17a](https://github.com/iamkun/dayjs/commit/890a17a8d8ddd43c7c8b806e3afc7b27f3288d27))
* sub-second precisions need to be rounded at the seconds field to avoid adding floats ([](https://github.com/iamkun/dayjs/issues/2377)) ([a9d7d03](https://github.com/iamkun/dayjs/commit/a9d7d0398d22ebd4bfc3812ca0134a97606d54d9))
* update $x logic to avoid plugin error ([](https://github.com/iamkun/dayjs/issues/2429)) ([2254635](https://github.com/iamkun/dayjs/commit/22546357f30924fcff3b3ffa14fd04be21f97a5e))
* Update Slovenian locale for relative time ([](https://github.com/iamkun/dayjs/issues/2396)) ([5470a15](https://github.com/iamkun/dayjs/commit/5470a15e437fac803797363063b24f3ba3bd5299))
* update uzbek language translation ([](https://github.com/iamkun/dayjs/issues/2327)) ([0a91056](https://github.com/iamkun/dayjs/commit/0a910564d76dc7c128da8e0d85d8e11ebdb5660b))","Bug Fixes
Add Korean Day of Month with ordinal () (dd55ee2)
change back fa locale to the Gregorian calendar equivalent () (95e9458)
duration plugin - MILLISECONDS_A_MONTH const calculation () (f0a0b54)
duration plugin getter get result  0 instead of undefined () (061aa7e)
fix isDayjs check logic () (5f3f878)
fix timezone plugin to get correct locale setting () (4f45012)
locale: add meridiem in ar locale () (361be5c)
round durations to millisecond precision for ISO string () (890a17a)
sub-second precisions need to be rounded at the seconds field to avoid adding floats () (a9d7d03)
update $x logic to avoid plugin error () (2254635)
Update Slovenian locale for relative time () (5470a15)
update uzbek language translation () (0a91056)"
"chore(release): 1.8.8 [skip ci]

## [1.8.8](https://github.com/iamkun/dayjs/compare/v1.8.7...v1.8.8) (2019-02-25)

### Bug Fixes

* Update relativeTime plugin type definition ([de56f2c](https://github.com/iamkun/dayjs/commit/de56f2c))
chore: extendable wrapper function ()
fix: Add de-AT locale ()
fix: Adding locale zh-hk ()
fix: Add UTC mode with UTC plugin ()
chore(release): 1.8.9 [skip ci]

## [1.8.9](https://github.com/iamkun/dayjs/compare/v1.8.8...v1.8.9) (2019-03-06)

### Bug Fixes

* Add de-AT locale ([](https://github.com/iamkun/dayjs/issues/515)) ([d93f7b6](https://github.com/iamkun/dayjs/commit/d93f7b6))
* Add UTC mode with UTC plugin ([](https://github.com/iamkun/dayjs/issues/517)) ([caf335c](https://github.com/iamkun/dayjs/commit/caf335c))
* Adding locale zh-hk ([](https://github.com/iamkun/dayjs/issues/516)) ([5fc05a6](https://github.com/iamkun/dayjs/commit/5fc05a6))","Bug Fixes
Add de-AT locale () (d93f7b6)
Add UTC mode with UTC plugin () (caf335c)
Adding locale zh-hk () (5fc05a6)"
"chore(release): 1.6.5 [skip ci]

<a name=""1.6.5""></a>
## [1.6.5](https://github.com/iamkun/dayjs/compare/v1.6.4...v1.6.5) (2018-05-31)

### Bug Fixes

* bugfix, utils update and  locale file update ([ebcb6d5](https://github.com/iamkun/dayjs/commit/ebcb6d5)), closes [](https://github.com/iamkun/dayjs/issues/214)
Improve Turkish localization

Add relative times to Turkish locale file
Add relativeTime support for NL

Adds relativeTime translations for NL
add swedish locale
fix missing comma
fix missing colon
fix missing colon
docs: fix doc typo
Croatian translation
chore: fix lint
Add Catalan (ca) locale
Add French (fr) locale
Fixed French locale name
add thai locale

- short day of week name
- short month name
- test for thai locale
use padStart method of String
reverse util.padStart
remove --fix from lint
test: add short locale test
docs: update format API
test: update short locale test
docs: update i18n docs
chore: add dd format
docs: update docs
refactor: isLeapYear as plugin
docs: isLeapYear doc update
docs: update api doc
docs: add DEPRECATED note
chore(release): 1.6.6 [skip ci]

<a name=""1.6.6""></a>
## [1.6.6](https://github.com/iamkun/dayjs/compare/v1.6.5...v1.6.6) (2018-06-06)

### Bug Fixes

*  format API update and locale file update ([5ca48f0](https://github.com/iamkun/dayjs/commit/5ca48f0)), closes [](https://github.com/iamkun/dayjs/issues/228)","Bug Fixes
format API update and locale file update (5ca48f0), closes"
"chore(release): 1.8.14 [skip ci]

## [1.8.14](https://github.com/iamkun/dayjs/compare/v1.8.13...v1.8.14) (2019-05-07)

### Bug Fixes

* Fix `.format` API returns UTC offset when value is 0 bug ([b254964](https://github.com/iamkun/dayjs/commit/b254964))
* Fix QuarterOfYear plugin bug ([](https://github.com/iamkun/dayjs/issues/591)) ([434f774](https://github.com/iamkun/dayjs/commit/434f774))
* Fix UTC plugin add day DST bug ([](https://github.com/iamkun/dayjs/issues/590)) ([86cd839](https://github.com/iamkun/dayjs/commit/86cd839))
doc: update dead link in API-reference.md ()
fix: Fix dayjs.locale() returns current global locale ()

* fix: Fix dayjs.locale() returns current global locale

* update localeData plugin
fix: Update  nb (Norsk Bokmål) locale ()
docs: Update weekday plugin doc
fix: Fix incorrect Thai locale translation of July ()
fix: Lowercase french locale months and weekdays ()
fix: Update types of `.diff` API ()
docs: Update .diff doc ()
fix: Type - Export Ls object to query all available locales ()
chore(release): 1.8.15 [skip ci]

## [1.8.15](https://github.com/iamkun/dayjs/compare/v1.8.14...v1.8.15) (2019-07-08)

### Bug Fixes

* Fix dayjs.locale() returns current global locale ([](https://github.com/iamkun/dayjs/issues/602)) ([790cd1a](https://github.com/iamkun/dayjs/commit/790cd1a))
* Fix incorrect Thai locale translation of July ([](https://github.com/iamkun/dayjs/issues/607)) ([43cbfd3](https://github.com/iamkun/dayjs/commit/43cbfd3))
* Lowercase french locale months and weekdays ([](https://github.com/iamkun/dayjs/issues/615)) ([e5a257c](https://github.com/iamkun/dayjs/commit/e5a257c))
* Type - Export Ls object to query all available locales ([](https://github.com/iamkun/dayjs/issues/623)) ([f6bfae0](https://github.com/iamkun/dayjs/commit/f6bfae0))
* Update  nb (Norsk Bokmål) locale ([](https://github.com/iamkun/dayjs/issues/604)) ([907f5c9](https://github.com/iamkun/dayjs/commit/907f5c9))
* Update types of `.diff` API ([](https://github.com/iamkun/dayjs/issues/617)) ([f0f43d2](https://github.com/iamkun/dayjs/commit/f0f43d2))","Bug Fixes
Fix dayjs.locale() returns current global locale () (790cd1a)
Fix incorrect Thai locale translation of July () (43cbfd3)
Lowercase french locale months and weekdays () (e5a257c)
Type - Export Ls object to query all available locales () (f6bfae0)
Update  nb (Norsk Bokmål) locale () (907f5c9)
Update types of .diff API () (f0f43d2)"
"chore(release): 1.8.12 [skip ci]

## [1.8.12](https://github.com/iamkun/dayjs/compare/v1.8.11...v1.8.12) (2019-04-02)

### Bug Fixes

* Add .get API ([7318797](https://github.com/iamkun/dayjs/commit/7318797))
* Add 79 locales ([](https://github.com/iamkun/dayjs/issues/541)) ([f75a125](https://github.com/iamkun/dayjs/commit/f75a125))
* Add Calendar plugin ([d1b9cf9](https://github.com/iamkun/dayjs/commit/d1b9cf9))
* Add isoWeeksInYear plugin ([2db8631](https://github.com/iamkun/dayjs/commit/2db8631))
* Add Occitan (oc-lnc) locale file ([](https://github.com/iamkun/dayjs/issues/551)) ([c30b715](https://github.com/iamkun/dayjs/commit/c30b715))
* Add plugin minMax to sopport .max .min ([2870a23](https://github.com/iamkun/dayjs/commit/2870a23))
* Fix set Month Year error in last day of the month ([d058f4a](https://github.com/iamkun/dayjs/commit/d058f4a))
* Update ko locale weekdaysShort  ([](https://github.com/iamkun/dayjs/issues/543)) ([317fd3e](https://github.com/iamkun/dayjs/commit/317fd3e))
* Update localizedFormat plugin to support lowercase localizable formats (l, ll, lll, llll) ([](https://github.com/iamkun/dayjs/issues/546)) ([f2b5ebf](https://github.com/iamkun/dayjs/commit/f2b5ebf))
fix: Fix relativeTime plugin Math.round bug

* fix: Fix relativeTime plugin error Math.round bug

* chore: add comment

* chore: add 'day' will ignore decimal by dayjs at current version
fix: Fix `.add` day/week decimal rouding bug
docs: Typo fix in API-reference.md ()
fix: Fix `.diff` type definition error ()

fix
docs: Update Japanese doc API reference ()
docs: Update doc(zh-cn)
fix: Add weekday (locale aware day of the week) plugin ()

fix
fix: Fix CustomParseFormat plugin bug ()

fix
docs: Update jp doc `weekday` ()
docs: Update backer img ()
fix: Update Indonesian locale()
fix: Allow customizing ""am"" / ""pm"" strings with locale meridiem function ()

* fix: Allow customizing ""am"" / ""pm"" strings with locale meridiem function

fix

* test: Add meridiem test

* docs: Update meridiem docs
fix: Add missing relativeTime and formats for some locales ()
chore: Rename localizedFormat.test
test: Update localizedFormat test
fix: skip square brackets in  buddhistEra, advancedFormat plugins ()

fixes
fix: Update LocalizedFormat plugin lowercase formats logic ()
fix: Update locale month to support both array and function ()
chore(release): 1.8.13 [skip ci]

## [1.8.13](https://github.com/iamkun/dayjs/compare/v1.8.12...v1.8.13) (2019-04-26)

### Bug Fixes

* Add missing relativeTime and formats for some locales ([](https://github.com/iamkun/dayjs/issues/560)) ([96b917e](https://github.com/iamkun/dayjs/commit/96b917e))
* Add weekday (locale aware day of the week) plugin ([](https://github.com/iamkun/dayjs/issues/569)) ([9007cc5](https://github.com/iamkun/dayjs/commit/9007cc5)), closes [](https://github.com/iamkun/dayjs/issues/559)
* Allow customizing ""am"" / ""pm"" strings with locale meridiem function ([](https://github.com/iamkun/dayjs/issues/580)) ([576e93e](https://github.com/iamkun/dayjs/commit/576e93e)), closes [](https://github.com/iamkun/dayjs/issues/578)
* Fix `.add` day/week decimal rouding bug ([800f6c9](https://github.com/iamkun/dayjs/commit/800f6c9))
* Fix `.diff` type definition error ([](https://github.com/iamkun/dayjs/issues/565)) ([c4921ae](https://github.com/iamkun/dayjs/commit/c4921ae)), closes [](https://github.com/iamkun/dayjs/issues/561)
* Fix CustomParseFormat plugin bug ([](https://github.com/iamkun/dayjs/issues/568)) ([1f5a9db](https://github.com/iamkun/dayjs/commit/1f5a9db)), closes [](https://github.com/iamkun/dayjs/issues/555)
* Fix relativeTime plugin Math.round bug ([40bea40](https://github.com/iamkun/dayjs/commit/40bea40))
* skip square brackets in  buddhistEra, advancedFormat plugins ([](https://github.com/iamkun/dayjs/issues/556)) ([9279718](https://github.com/iamkun/dayjs/commit/9279718)), closes [](https://github.com/iamkun/dayjs/issues/554)
* Update Indonesian locale([](https://github.com/iamkun/dayjs/issues/574)) ([0aa7143](https://github.com/iamkun/dayjs/commit/0aa7143))
* Update locale month to support both array and function ([](https://github.com/iamkun/dayjs/issues/581)) ([b6599d3](https://github.com/iamkun/dayjs/commit/b6599d3))
* Update LocalizedFormat plugin lowercase formats logic ([](https://github.com/iamkun/dayjs/issues/557)) ([d409304](https://github.com/iamkun/dayjs/commit/d409304))","Bug Fixes
Add missing relativeTime and formats for some locales () (96b917e)
Add weekday (locale aware day of the week) plugin () (9007cc5), closes
Allow customizing ""am"" / ""pm"" strings with locale meridiem function () (576e93e), closes
Fix .add day/week decimal rouding bug (800f6c9)
Fix .diff type definition error () (c4921ae), closes
Fix CustomParseFormat plugin bug () (1f5a9db), closes
Fix relativeTime plugin Math.round bug (40bea40)
skip square brackets in  buddhistEra, advancedFormat plugins () (9279718), closes
Update Indonesian locale() (0aa7143)
Update locale month to support both array and function () (b6599d3)
Update LocalizedFormat plugin lowercase formats logic () (d409304)"
"chore(release): 1.10.3 [skip ci]

## [1.10.3](https://github.com/iamkun/dayjs/compare/v1.10.2...v1.10.3) (2021-01-09)

### Bug Fixes

* fix customParseFormat plugin strict mode parse meridiem bug ([](https://github.com/iamkun/dayjs/issues/1321)) ([e49eeef](https://github.com/iamkun/dayjs/commit/e49eeefbe8acb36419d36ca2e7ed8bc152f73ac1))
* fix weekYear plugin missing locale bug ([](https://github.com/iamkun/dayjs/issues/1319)) ([344bdc0](https://github.com/iamkun/dayjs/commit/344bdc0eed6843edb05723dc7853a41833d88f08)), closes [](https://github.com/iamkun/dayjs/issues/1304)
* update advancedFormat plugin to add format options for iso week and weekyear ([](https://github.com/iamkun/dayjs/issues/1309)) ([2c54c64](https://github.com/iamkun/dayjs/commit/2c54c6441871a175ac9b95e41e4cd075dbac10cb))
* update devHelper to add dev warning setting locale before loading ([c5cc893](https://github.com/iamkun/dayjs/commit/c5cc89355e1e206ca72433c19c40cb528690b04f))
* update German [de] locale yearStart ([1858df8](https://github.com/iamkun/dayjs/commit/1858df8008de56570680723df89b36a8cbc970ef)), closes [](https://github.com/iamkun/dayjs/issues/1264)
chore: update
fix: Update Bengali [bn] locale ()
fix: Update Slovenian [sl] relativeTime locale ()
fix: Improve `Duration` types ()
fix: update locale Portuguese [pt] yearStart ()
fix: Correct handling negative duration ()
fix: update Polish [pl] locale yearStart ()
fix: parse a string for MMM month format with underscore delimiter ()
chore(release): 1.10.4 [skip ci]

## [1.10.4](https://github.com/iamkun/dayjs/compare/v1.10.3...v1.10.4) (2021-01-22)

### Bug Fixes

* Correct handling negative duration ([](https://github.com/iamkun/dayjs/issues/1317)) ([3f5c085](https://github.com/iamkun/dayjs/commit/3f5c085608182472f20b84766b10949945663e44))
* Improve `Duration` types ([](https://github.com/iamkun/dayjs/issues/1338)) ([4aca4b1](https://github.com/iamkun/dayjs/commit/4aca4b1b584a15de1146d929f95c944594032f20))
* parse a string for MMM month format with underscore delimiter ([](https://github.com/iamkun/dayjs/issues/1349)) ([82ef9a3](https://github.com/iamkun/dayjs/commit/82ef9a304f06287ac0a14c4da9a7fe6152b5fec9))
* Update Bengali [bn] locale ([](https://github.com/iamkun/dayjs/issues/1329)) ([02d96ec](https://github.com/iamkun/dayjs/commit/02d96ec7189f62d6ef8987135919cbb5ceff20a6))
* update locale Portuguese [pt] yearStart ([](https://github.com/iamkun/dayjs/issues/1345)) ([5c785d5](https://github.com/iamkun/dayjs/commit/5c785d528cc08811638d7cbfc7fc158d67b32d75))
* update Polish [pl] locale yearStart ([](https://github.com/iamkun/dayjs/issues/1348)) ([e93e6b8](https://github.com/iamkun/dayjs/commit/e93e6b8ffa61036b26382f1763e3864d4a7d5df5))
* Update Slovenian [sl] relativeTime locale ([](https://github.com/iamkun/dayjs/issues/1333)) ([fe5f1d0](https://github.com/iamkun/dayjs/commit/fe5f1d0afbe57b70339e268047e6c3028ca3d59b))","Bug Fixes
Correct handling negative duration () (3f5c085)
Improve Duration types () (4aca4b1)
parse a string for MMM month format with underscore delimiter () (82ef9a3)
Update Bengali [bn] locale () (02d96ec)
update locale Portuguese [pt] yearStart () (5c785d5)
update Polish [pl] locale yearStart () (e93e6b8)
Update Slovenian [sl] relativeTime locale () (fe5f1d0)"
"[native] `codeVersion` -> 110
Revert ""Temporary changes for staff release""

This reverts commit 1c217ebac9f188da2adfc037dea3b3c35399df20.
[CommCoreModule] Introduce NetworkModule

Summary:
Create a new module that will handle all the networking logic. This module will be called from a global singleton (the next diff).
This whole stack is based on a discussion from a couple of diffs, from which D2285 is the most significant.

Test Plan: After this diff - no changes. Tested with the next diffs.

Reviewers: karol-bisztyga, ashoat

Reviewed By: karol-bisztyga, ashoat

Subscribers: ashoat, Adrian, atul, benschac, boristopalov

Tags: #background-notifications

Differential Revision: https://phabricator.ashoat.com/D2312
[CommCoreModule] Introduce GlobalNetworkSingleton

Summary: Create a global object that can be used to interact with network module. This object is hiding all the threading related logic.

Test Plan: Tested with the next diffs.

Reviewers: karol-bisztyga, ashoat

Reviewed By: ashoat

Subscribers: def-au1t, Adrian, atul, benschac, boristopalov

Tags: #background-notifications

Differential Revision: https://phabricator.ashoat.com/D2313
[CommCoreModule] Use network singleton in CommCoreModule

Summary: Modify functions to use network module via the singleton.

Test Plan: We're not calling this function currently, so nothing should change.

Reviewers: ashoat, karol-bisztyga

Reviewed By: ashoat

Subscribers: Adrian, atul, benschac, boristopalov

Tags: #background-notifications

Differential Revision: https://phabricator.ashoat.com/D2314
[native] Potentially fix iOS notif badging issue

Summary:
Linear: https://linear.app/comm/issue/COM-99/badge-count-issue-on-ios

- My theory is that this is fixed upstream by https://github.com/wix/react-native-notifications/pull/639/files
- I updated my fork accordingly: https://github.com/Ashoat/react-native-notifications/commit/ebaae3332945fc6372f3d227a8108f3628765295
- This diff updates the version of the fork we are using

Test Plan: Test in prod

Reviewers: atul, palys-swm

Reviewed By: palys-swm

Subscribers: Adrian, karol-bisztyga, benschac, boristopalov

Differential Revision: https://phabricator.ashoat.com/D2332
Temporary changes for staff release

1. `expo-media-library`: don't include videos
2. `mediaConfig`: don't treat animated GIFs as videos
3. Enable `processedMessageStore` invariants for `release` build
4. Enable `processedThreadStore` invariants for `release` build
[native] `codeVersion` -> 112","STAFF
Release intended to test [native] Potentially fix iOS notif badging issue"
"Update documentation and examples to v1.0.0

This updates the documentation and examples to use the v1.0.0 or
release-v1.0 branch wherever applicable.

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
ceph: provision OSDs with metadataDevice config

provision OSDs with ceph-volume when metadtaDevice is set ()
always print ceph-volume report before executing ceph-volume.

Signed-off-by: Michael Vollman <michael.b.vollman@gmail.com>
(cherry picked from commit a8395274218fa28da0726fc3ad6c003df9a48e7c)
ceph: upgrade guide describes failing over mons for new port

The default mon port has changed from 6790 to 6789. With the msgr2 work in nautilus,
the mons need to be listening on the default ports. These instructions will
direct the users to failover the mons to the new default port.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit b09ca55f3c248a5d9ae197abf19187664345eee1)
ceph: preserve the non-default port for hostnetworking

Clusters using host networking will not work if the non-default port is
being used by the mons. Previous to rook 1.0 the mons were all
using the non-default port 6790 and now they are using the default port
of 6789 from 1.0. Now host networking will preserve the non-default port
to allow upgrades to continue working.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit dbe3da97a1d5d91edf9d2b1ffa554f5701731a43)
ceph: no need for --public-bind-addr with host networking

The mons require the --public-bind-addr when host networking is not in use
since the pod ip will be different from the service ip that will be
advertised to clients. When host networking is enabled, there is no
need for this argument since the endpoints will be the same to bind
inside the pod as what is advertised to clients.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit cb82f36eba4f718f7b9f197760c2b0a4da2905de)
docs: added missing delete for new manifest structure

This corrects the cleanup instructions to delete operator.yaml but also
common.yaml to remove the reamining objects in one go.

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit 76708d1d523019bf9352d4e34b355db77e9832e8)
Edgefs: Add s3 proxy container to S3X pod

Signed-off-by: Anton Skriptsov <sabbotagge@gmail.com>
(cherry picked from commit 57d4bb28b463082b19f0c0851698dc1b71b06473)
Update documentation and examples to v1.0.1

Signed-off-by: travisn <tnielsen@redhat.com>","Rook v1.0.1 is a patch release limited in scope and focusing on bug fixes.
Improvements
Ceph
Support for metadataDevice for configuring OSDs (, @mvollman)
Upgrades with host networking will be supported from v0.9 (, @travisn)
Upgrade documentation to enable msgr2 protocol, which requires failing over the mons to the new default port (, @travisn)
Teardown documentation updated with the new common.yaml and related changes (, @galexrt)
EdgeFS
S3X not selecting correct EdgeFS version and not starting proxy (, @sabbot)"
"ceph: fix object bucket provisioner when rgw not on port 80

Solves issue where provisioner would not handle other ports

Signed-off-by: Brian Sperduto <brian.sperduto@gmail.com>
(cherry picked from commit 78f72d48d631e7073467c9dc26fd31c5a8202a6b)
ceph: bumping ceph-operator memory limit to 256Mi

* bumping ceph-operator memory limit from 128Mi to 256Mi in order to
avoid OOMkills of the rook-ceph-operator pod
* updating documentation example for operator to denote a limit of 256Mi
instead of 128Mi

When upgrading from rook v1.1.7 to v1.2.0, the rook-ceph-operator pod
continued to get OOMKilled by the kubernetes scheduler.  Manually
bumping this limit to something higher than 128Mi (I tried 256Mi and it
was good) prevented the OOMKills.

Signed-off-by: Jeff Billimek <jeff@billimek.com>
(cherry picked from commit 127e9d289a0c1ab48b3c22cd1602cd880d4b9289)
ceph: add missing vol mount for encrypted osds

""ceph-volume activate"" on encrypted osds needs a ceph.conf as well as
connectivity to the mons. This commit adds that to that ""activate-osd""
init container.

Closes: https://github.com/rook/rook/issues/4558
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 7d115246430aac741542ab9987ae63104d537efd)
ceph: osd add missing ROOK_CEPH_MON_HOST env

The ROOK_CEPH_MON_HOST env var was missing from the pod env so the
CEPH_ARGS won't be populated correctly.

Closes: https://github.com/rook/rook/issues/4558
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 4224f84d7c866359d693bfb12a4eccf458739796)
ceph: Do not log sensitive information in debug mode

Fix security issues identified by TrailOfBits:
Logging of sensitive information in debug mode

Problematic debug lines which can contain sensitive data have been removed

Resolves:

Signed-off-by: Juan Miguel Olmo Martínez <jolmomar@redhat.com>
(cherry picked from commit 7b3e2b006ebbb910e16f914055bf158a551cbdce)
build: update manifest version to v1.2.1

With the v1.2.1 patch release the manifests are now updated

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.2.1 is a patch release limited in scope and focusing on bug fixes.
Ceph
Add missing env var  ROOK_CEPH_MON_HOST for OSDs (, @leseb)
Avoid logging sensitive info when debug logging is enabled (, @jmolmo)
Add missing vol mount for encrypted osds (, @leseb)
Bumping ceph-operator memory limit to 256Mi (, @billimek)
Fix object bucket provisioner when rgw not on port 80 (, @bsperduto)"
"Ceph: adds openshift common issues documentation

- adds guide to troubleshoot Ceph Cluster monitoring on OpenShift

Signed-off-by: Umanga Chapagain <chapagainumanga@gmail.com>
(cherry picked from commit b08b523c2ab98b2148192ed2d7cf11d8eb28e762)
docs: Sort flexvolume docs, update for kubespray

This commit clarifies the Kubespray section (which changed as of v2.11.0 and newer to use the kubelet default plugin directory)

This commit also rearranges the flow of the document to make more sense and be easier to jump straight to the relevant platform-specific section: adding anchor links for the platforms having special instructions on this page. Links to the platform's home page/docs page were moved to a ""see also"" as they may not be as relevant to someone already having deployed their cluster using it.

Signed-off-by: Dennis Field <fury@xibase.com>
(cherry picked from commit 01a2f1683270da3abc904be746630ea078217d1e)
ceph: accept rook owned partitions

If the device is a partition and this partition is owned by rook, we
accept it.

Closes: https://github.com/rook/rook/issues/4797
Signed-off-by: Sébastien Han <seb@redhat.com>
ceph: do not chown osd data directory filestore

The chown takes a long time and is not necessary.

Signed-off-by: Sébastien Han <seb@redhat.com>
ceph: do not skip legacy devices

Do not skip the parent device if its partitions are owned by rook legacy
osds.

Signed-off-by: Sébastien Han <seb@redhat.com>
ci: use latest mimic

So we can get c-v working.

Signed-off-by: Sébastien Han <seb@redhat.com>
ceph: remove owner references to csi driver

The owner references for the csi driver are causing the csi driver
to disappear when the garbage collector rebuilds its references.
To unblock production clusters we remove the owner references
until we can find the correct fix for the owner references.
Neither the apiVersion of v1 or core/v1 is working.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit b6cf2c7ebfb6d7b5cdcf6be5af7da51a11428c9c)
Ceph: Improve detection of stale canaries.

In the case where the node disappears abrubtly,
there was nothing to trigger the nodedrain reconciler to clean up
the stale canary.

Signed-off-by: Rohan CJ <rohantmp@gmail.com>
(cherry picked from commit 9d1419864e2f9b1ee7888a0fba67957e5456723f)
Ceph: Info log significant events in the nodedrain controller.

Info log events where a drain canary is either scheduled on a new node
or removed from a node.

Signed-off-by: Rohan CJ <rohantmp@gmail.com>
(cherry picked from commit eaab7b161dd9d96d06020f1a26d653e2670c8099)
ceph: ability to set target_size_ratio

target_size_ratio is used the tell the Ceph cluster the excepted
occupancy of a pool in the cluster.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit cface953177a0f2993939a42958f7bf88cd10e18)
ci: unblock wipe job

Somehow the job was stuck on 'fdisk -l', the logic to wipe the block
device changed and we don't need that command anymore.
We wipe the disk in the PV loop.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit c1534e951a3a810af0513159a8ab36e8b198db19)
ceph: nits from https://github.com/rook/rook/pull/4679

- Use %q when possible
- don't use fmt.Errorf
- use the right type when returning errors

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 2e9ee105ed55feab9c6a6758a36fcbbcc20c4908)
build: set manifest versions to v1.2.4

For the patch release, set the manifest versions to
v1.2.4.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.2.4 is a patch release limited in scope and focusing on bug fixes.
Ceph
Stop garbage collector from deleting the CSI driver unexpectedly (, @travisn)
Upgrade legacy OSDs created with partitions created by Rook (, @leseb)
Ability to set the pool target_size_ratio (, @leseb)
Improve detection of drain-canaries and log significant nodedrain scheduling events (, @rohantmp)
Sort flexvolume docs and update for kubespray (, @ftab)
Add OpenShift common issues documentation (, @umangachapagain)
Improved integration test when cleaning devices (, @leseb)"
"Doc (Yugabyte DB): Fix hostname in API connection ()

Use the correct hostname when accessing the API.

Resolves:

Signed-off-by: Kristoffer Grönlund <kgronlund@suse.com>
(cherry picked from commit c2b75db41c5eee689eb8b5c5c76c8b56d4b62523)
Disable Flexdriver in helm chart

in commit https://github.com/rook/rook/commit/c7b861a21d729da0a4e5a86349efc8a290130bb8
flexdriver got enabled  by mistake, This will fix it

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 15f36e9c634be3c9f9672db931cd4055387cdbe0)
Disable flex driver in operator-openshift.yaml

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 7a407fb0455fe9f696add559ab916b4dc8bb4736)
Add KUBELET_DIR_PATH to operator-openshift.yaml

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit d71d57f0e9e302f58fe1fa38c910462d0a1fbff0)
Remove containerized flag from provisioner

containerized is only useful in nodeplugin
not the provisioner pod

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit ac295a57a5d6bc9dbc7e7260291cbf7a68d19104)
Ceph: Remove finalizer even if flex is disabled

When the flex driver is disabled, the check for
volume attachments will fail and the finalizer
is never removed. To avoid this, just log the
failure to list volumes and remove the
finalizer anyway.

Resolves

Signed-off-by: Kristoffer Grönlund <kgronlund@suse.com>
(cherry picked from commit fb599dd02be492fd9c097c94fa84c5cc32350480)
We were defaulting to `ext4` at first and then moved to
`xfs`. However further testing shows that, ext4 should be
the default or preferred fs for RBD devices.

This patch bring that change

Signed-off-by: Humble Chirammal <hchiramm@redhat.com>
(cherry picked from commit 3da95141910ffc51430d0ea3f46b4dc00e7f8337)
remove `/` host mount from pod template

set containerized flag as false

This is not required as we are setting
containerized=false and we have deprecated
this flag in ceph-csi.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 915bed0c3caba45833fc72157509cac9f278ba62)
ceph: fix various spelling issues

Correct spelling.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit d8813513eb31c975bc2a972a6841f0c0573ad9c5)
ceph: osd reset 'run dir' to default location

Previously, ""run dir"" was used to place a number of file and config on
dataDirHostPath. Now, since a lot of configs and options have moved
either on the OSD's startup CLI line or remove with bluestore we don't
need to change the default.

Also, it was confusing for user and difficult to find the socket.
The is is not breaking any config in dataDirHostPath since all the
elements (keyrings) are hardcoded in the config file.

Closes: https://github.com/rook/rook/issues/3966
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit ad514606bf79f21a6f27bd9dd6ebca146bdf6420)
ceph: osd add debug logs for ceph-volume on prepare

Previously the debug flag was turned on for the 'activate' call only,
now 'prepare' will also take advantage of it.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 9b2afbca14b9a162ea9931c5dc90359525a33d24)
ceph: osd, fix lvm filter regexp

The lvm documentation uses commas to separate the regular expressions.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 3404460d3c108c5eab464f3aef84c996a67f0d6d)
ceph: osd run lvm config all the time

Previously, we were applying lvm config changes to OSD running on PV. So
now, we do this for any type of cluster deployment (bare metal or
Cloud).

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 42cebf6311562b87549a59305a28ef4727a5057c)
Update service if already present

previously we are not updating the service
if it's already present. with this change,
we will update the service. this does not
trigger any error message if service
already present.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit bdfdac8ee4fd5c9abbde3e15eb83e911c68e0396)
use v1.2.1 cephcsi release

update CSI deployment templates and
doc to use new cephcsi v1.2.1 release

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 0a516d5f329720d5e943bbfa75511424030c96db)
Added validation for cephBlockPool,cephfs and cephnfs.Added changes in ceph_manifest.go and resources.yaml according to common.yaml.

Signed-off-by: RAJAT SINGH <rajasing@redhat.com>
(cherry picked from commit 4a02c568e7947cd56a719d49db92266fc3cf9035)
ceph: clarify docs around settings configmap

The configmap for advanced configuration can be created before the
cluster is created. In that case, the daemons will all pick up the
settings the first time they are started. Otherwise, the daemons
need to be restarted

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 94c607b1d76b20f40ce679afefd94a5f71a237e0)
ceph: fix encrypted osd startup

Encrypted OSDs are failing because ceph-volume is unable to determine
how to contact the monitors.  Setting the CEPH_CONF env variable for OSD
pods fixes this issue. ()

Signed-off-by: Michael Vollman <michael.b.vollman@gmail.com>
(cherry picked from commit e12bbd6f7cd3a72ccafd4faf6f7c95390a226ff5)
Add check for csi volumes before cluster delete

Add a finalizer to the CephCluster to check
the PV created by CSI so that we can block the
cluster deletion till the PVC are deleted.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit ec9784203e82cf44faa62b642fe4a310b0b59906)
ceph: allow setting affinity on the ceph version job

A job is started to detect the Ceph version. This job now allows setting
the node affinity and tolerations with the same setting that is
specified for the mon placement. No new placement spec is required, but
we will simply use the same spec that the mons use.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 0f5f2a81d74d5f02ac176816de2d16b84751ca8c)
Rename AddNodeAffinity to GenerateNodeAffinity

function AddNodeAffinity was not adding any node
affinity instead it was forming the nodeaffinity
object. renamed it to GenerateNodeAffinity for more
meaningful

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 3af3cd63ab895dbcbb592d543f90c9ac5bc2c33b)
rename kserrors to k8serrors

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 55e9340737ef5e62241224b8aa96c48014c7aabd)
Add Toleration and NodeAffinity to CSI

Add support for setting Toleration and NodeAffinity
to CSI Provisioner deployment or statefulset and
plugin daemonset through ENV variables.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 9d298fe4f00d10337b8bf3032a25c61e03f3acb2)
ceph: osd remove config file

We don't need to force any Ceph config file for ceph-volume based OSDs
since the 'ceph-volume activate' command mount everything at start time
in the right place.
So now, OSD will keep running normally and they will also read back
normally the default location of the ceph configuration:
/etc/ceph/ceph.conf which will allow OSDs to read any configuration
overrides.
We cannot remove the generation of that file in /var/lib/rook/osd* since
we cannot tell at the stage that triggers the generation if we run
ceph-volume or not. So let's keep it around for some time.
If you are wondering how the OSD connects to the mons this is done via
the CEPH_ARGS env variable which was introduced in
https://github.com/rook/rook/pull/3894.

Closes: https://github.com/rook/rook/issues/3926
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit a4a180b8fb3efba113435b8baedd793aae2f01d9)
ceph: osd add fsid to daemon flag

Now that the ceph.conf is gone, it's safer to run the OSD with the
cluster fsid flag.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit ae8e45585f031d4962c0f33de2d56ab1b7e3695f)
ceph: osd add crush_location on startup flag

Since we remove the ceph.conf files from the OSD we lost the ability to
set the crush location of the OSD. So adding this capability back to the
CLI startup line.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit a5ab7ae960bf01ee7434436651e0ada012c0d685)
ceph: set ssl to true in cluster-minimal.yaml

The scripts for running backend dashboard requests in rook expect this
to be an SSL-enabled port. Ensure that it is.

https://tracker.ceph.com/issues/42089
Signed-off-by: Jeff Layton <jlayton@redhat.com>
(cherry picked from commit b5a5a65666a798ffa9591fe346b03d5c58caefea)
ceph: set default Ceph CSI images as var not const

Set the default Ceph CSI images as vars in the code instead of consts.
This allows these values to be overridden at build time with Go linker
-X flags. This allows users to build Rook in such a way that it will
automatically update the CSI images to a custom opinionated default
without having to manually manage the environment variable-based
overrides at upgrade time.

Signed-off-by: Blaine Gardner <blaine.gardner@suse.com>
(cherry picked from commit 24d2187f1a8ab176a2bad87a1b792ed4bff47a01)
ceph: Set ssl to true in cluster-test.yaml and cluster-on-pvc.yaml

Dashboard requires ssl to be turned on for running backend requests in rook.

Signed-off-by: Varsha Rao <varao@redhat.com>
(cherry picked from commit a83939319d5c5d69f0abd86434932e69f853881d)
Updated rook-ceph-osd clusterrole for helm chart

Signed-off-by: rohan47 <rohgupta@redhat.com>
(cherry picked from commit 47dc6c0347428e72435d2fafc9eb30918aa66edc)
release: update the rook version tags to v1.1.2

Update the manifests to point to the new v1.1.2 release

Signed-off-by: travisn <tnielsen@redhat.com>","Improvements
Rook v1.1.2 is a patch release limited in scope and focusing on bug fixes.
Ceph
Ceph config overrides were ignored for OSDs (, @leseb)
Resolved topologyAware error for clusterrole issue in helm chart (, @rohan47)
Fix encrypted osd startup (, @mvollman)
Various osd fixes and improvements with lvm and ceph-volume (, @leseb)
Reset OSD 'run dir' to default location (, @leseb)
Affinity on the ceph version job will use the affinity for mons (, @travisn)
Add check for csi volumes before cluster delete (, @Madhu-1)
Add Toleration and NodeAffinity to CSI provisioners (, @Madhu-1)
Use v1.2.1 cephcsi release (, @Madhu-1)
Update CSI service if already present (, @Madhu-1)
Fix umount issue when rbd-nodeplugin restarts (, @Madhu-1)
Set default filesystem to ext4 on RBD device (, @humblec)
Allow default Ceph CSI images to be configurable in the build (, @BlaineEXE)
Remove finalizer even if flex is disabled (, @krig)
Disable Flexdriver in helm chart and operator-openshift by default (, @Madhu-1)
Added validation for cephBlockPool,cephfs and cephnfs (, @rajatsingh25aug)
Set default dashboard ssl to true (, @jtlayton)
YugabyteDB
Incorrect hostname in YugaByte example (, @ybnelson)"
"CSI: update kubernetes sidecar images

update csi sidecar images to fix CVE-2019-11255

more info:
https://github.com/kubernetes/kubernetes/issues/85233
https://github.com/kubernetes-csi/external-snapshotter/issues/193
https://github.com/kubernetes-csi/external-provisioner/issues/380

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 49381b322db5bc7ed5f66cfc1c9f30a4398d5ecf)
Ceph: Add delay between drain switches

Earlier, simultaneous drains could allow the drain detection to switch
disabled PDBs before the Ceph health had fully reflected the effects.

Signed-off-by: Rohan CJ <rohantmp@gmail.com>
(cherry picked from commit e408c5fd7fff09be7f427a8aa64a6076b6f4ba1a)
CSI: update ceph-csi from v1.2.1 to v1.2.2

cephcsi v1.2.2 release is out and the image is available
for use, updating rook to use latest available release
image

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 7f14b52ba62238521149bb890388ebac8a1b5b69)
ceph: add build version support

Rook now supports a build versions with a format of:

ceph version 14.2.4-64

Where -64 represents the 64th version of that package.
This is needed in order to properly detect upgrades.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 7fe410a747aba6a33bddfd09d760166f291c22d7)
ceph: fix mds and rgw upgrade

Checking for isUpgrade is irrelevant since we need to restart the
deployment because the the spec has changed, the only thing that might
change is whether or not we perform upgrade checks.

Closes: https://bugzilla.redhat.com/show_bug.cgi?id=1775624
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 2c8535d51cc199afd7eabed6cbe5f528b6d27731)
ceph: fix array indexes for versions

The indexes were wrongly positionned and were pointing to the previous
one instead of the one that failed to be converted to an int.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 9a33429ec14d74de27d903281af95c96f6ee7cf8)
ceph: clarify log message for Ceph upgrades

Some log messages indicate when the upgrade checks will be
performed. If the Ceph image hasn't changed, the upgrade checks
are skipped. The messages were confusing if running a Rook
upgrade.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 87e2b09453737db7907170d9dc3001a468f91ca6)
ceph: fix race condition on crd child update

We recently discovered a race condition which happens not to update the
child CRDs when CR image changes.

The race happens under the following sequence:

* orchestration onAdd() is called when the operator image restarts
or its image updated
* the orchestration then goes into processing mon/mgr/osd
* during this the cluster CR is updated so onUpdate() is called,
however, onAdd() is not done yet for child CRDs (mds, rgw)
* onUpdate() runs against the cluster CR and updates the cluster images
* by the time the child CRDs reached onUpdate() from their respective
ParentClusterChanged() methods, the image is already up to date
so we were exiting since our check for updating
these resources are based on the cluster image version

To fix this, we changed the comparison, but using isUpgrade instead and
slightly changed the way isUpgrade operates. So now, isUpgrade is true
even if the Ceph version is identical which allows us to verify whether
or not the image changed.

Closes: https://bugzilla.redhat.com/show_bug.cgi?id=1775624
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit db614473c267a698e6c823d8635f0bb4abb5f76c)
CSI: Ability to disable snapshotter from ceph-csi rbd

we need to set a ENV `CSI_RBD_ENABLE_SNAPSHOTTER`
variable to ""false"" in operator template to disable
deployment of snapshotter sidecar in ceph-csi rbd
provisioner.

Fixes:
Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit cc418bce3b41a9be95d3f4961b695c4a5fd90faf)
Ceph: Generate new client config for controller-runtime

Reusing the kubeconfig was resulting in concurrent access issues.

Signed-off-by: Rohan CJ <rohantmp@gmail.com>
(cherry picked from commit 3b5ee8b4c6beecce2c6f032ecee172aaa58ee70d)
ceph: continue orchestration on osd update errors

During an orchestration if there were failures to update any OSD deployment,
the orchestration would fail and continue trying again. If the OSD(s)
continued failing, the operator would be stuck in a loop and never
respond to other CR updates.

Now the operator will log the OSD errors, if any, and complete the
orchestration. We will rely on K8s to continue to attempt to start
the OSD pods instead of the operator being stuck in the loop.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit add3129c12f1c558fda587e75b57e4172c26875d)
build: set the v1.1.8 release tag

With the v1.1.8 release we update the manifests with the new tag.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.1.8 is a patch release limited in scope and focusing on bug fixes.
Ceph
Continue orchestration on osd update errors to avoid retrying forever (, @travisn)
Operator crashing on concurrent map read and map write (, @rohantmp)
Ensure filesystem and object store are upgraded with new Ceph version (, @leseb)
Clarify log message for Ceph upgrades (, @travisn)
Ability to disable snapshotter from ceph-csi rbd (, @Madhu-1)
Update kubernetes CSI sidecar images (, @Madhu-1)
Update ceph-csi from v1.2.1 to v1.2.2 (, @Madhu-1)
Add delay between drain switches for managed PDBs (, @rohantmp)"
"docs: update docs/yaml to use v0.8.0

Signed-off-by: Jared Watts <jbw976@gmail.com>
Truncate too long name for ObjectMeta.Name

Resolves

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit faddfb018425f7707bbc3218cd1deaef962adf8d)
operator: Set min_size to dataChunkCount for ec pools

Resolves

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit a7d002fe5c3909a4ed91de9355dcc41b8b8600f8)
ceph: update to 12.2.7

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 27ba0cb3c5a1adb87d3ced24c1545f61d03f3326)
operator/osd: Use UpdateStrategy Recreate

This fixes issues with a new OSD Pod in the same Deployment coming up and
directly entering CrashLoopBackOff because the old OSD Pod hasn't been fully
terminated yet (released it's locks).

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit 56544c51d441f46a1a41f091d111890f698ea7fb)
validate storage nodes before preparing osds

Signed-off-by: Huamin Chen <hchen@redhat.com>
osd: init container to initialize config at startup

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 1d928ecd3678d487c854a21b83929a604b7eeb02)
Improve flexvolume docs with better structure

Added OpenShift and Atomic flexvolume info

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit 5a3f9cb997b55799b9a6ada9eec8c3e8a82e1fce)","Rook v0.8.1 is a patch release limited in scope and focusing on bug fixes.
Improvements
An upgrade guide has been authored for upgrading from the v0.8.0 release to this v0.8.1 patch release. Please refer to this new guide when upgrading to v0.8.1. (@travisn)
Ceph is updated to Luminous 12.2.7. (@travisn)
Ceph OSDs will be automatically updated by the operator when there is a change to the operator version or when the OSD configuration changes. See the OSD upgrade notes. (@travisn)
Ceph erasure-coded pools have the min_size set to the number of data chunks. (@galexrt)
Ceph OSDs will refresh their config at each startup with an init container. (@travisn)
Ceph OSDs will respect the placement specified in the cluster CRD. (@rootfs)
Ceph OSDs will use the update strategy of recreate to avoid resource contention at restart. (@galexrt)
Pod names for Ceph OSDs are truncated in environments with long host names (@galexrt)
The documentation for Rook flexvolume configuration was improved to reduce confusion and address all known scenarios and environments (@galexrt)"
"ceph: remove invalid verbose params from lv activate

The activation of the lvs for OSDs had an invalid
argument to vgchange. The invalid argument is now reverted
to enable the OSDs in this scenario again.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit af54349a5ef245bdf54bb85dd818be12a4faf426)
ceph: set test default pool size to one

In test environments there may only be a single node, so we set
the default pool size in the test example to one.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit dc7802e369c42ce9b3248d84587ec42915e3fe6c)
ceph: fix import script csi details

The cephfs csi driver expects both adminID and adminKey instead of
userID and userKey which are only specific to rbd.

Closes: https://github.com/rook/rook/issues/5432
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 36985defd91d1f4867d999c1ddc61c7fde4ed336)
CSI: fix typo in operator.yaml and operator-openshift.yaml

there was a typo in operator.yaml and operator.openshift.yaml
file for priorityclass , This PR fixes the typo.

Resolves

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit e8a999daea5d5f578ced74dc61aa9888c1e8c513)
ceph: update ceph-upgrade.md for handling a known issue

Because of the ClusterRole api version change may occur
when upgrading the rook chart to the latest version.
This pull request updates `ceph-upgrade.md` for handling the issue.

Signed-off-by: binoue <banji-inoue@cybozu.co.jp>
(cherry picked from commit ff2ba9c890aec7cd2a209a6e8882f879c90043f1)
ceph: Python script to generate needed external cluster resources in JSON format

This script will generate JSON format of all the needed resources.
Script can also generate the output in Shell script format.

Signed-off-by: Arun Kumar Mohan <arun.iiird@gmail.com>
(cherry picked from commit 23d219114758097691f0c86f7123161f03182925)
ceph: create missing secret on external cluster

When Rook-Ceph is connected to an external cluster and the admin tries
to create resources such as CephFilesystem or CephObjectStore, we must
create the rook-ceph-config secret so that the daemons can get their mon
information.

Adapted version of 1fef75bc6ab86f3f747bfea44c7e310356029f00 since
cherry-picking wasn't possible.

Signed-off-by: Sébastien Han <seb@redhat.com>
ceph: add missing op option for ocp

Resync with operator.yaml

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 8a5500636501f8104c79921672bde61cc3d2258c)
csv: add external cluster script

We now include the newly created script for external cluster in the CSV.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit c4c873c27e810de37d7039d3265a5aaf87c25084)
ceph: obc relax error handling and user deletion

When a user or a bucket does not exist anymore, let's stop the reconcile
loop instead of waiting forever.
Also, unlink the user before deleting it otherwise the deletion fails.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 58577a353743fe28c5df243675d585bb68dd12ae)
csv: add missing CephFilesystem

Somehow the CephFilesystem was not present so adding it.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 954b4e77dfc10596a53ae030ae6e08628032030f)
script: add 2 new SC

* Clarify the helper for the run-as-user argument
* Add 2 new storage class and put the data so we stick with the same
pattern as the Secret and ConfigMap

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 362086d16cf473ceaabc436380d3759f4ac85deb)
ceph: revert ""objectstore: Add ceph group as FsGroup""

This reverts commit 68fc50686a8280503a43bce573cca87b58882957 since it
now conflict with OCP environments with the other scc in place.

Closes: https://github.com/rook/rook/issues/5468
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 812f1bd4bb5e87a402f2a1647c5e71e3be5b0b0f)
doc: ceph fix rgw links

links were pointing to dead pages.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit a760b6d5ae4743feac309e8cbea5515efd86214a)
ceph: change rgw certificate mode

Because the secret is mounted and owned by root and the rgw is running
under the 'ceph' user then it cannot access it. So moving from 0400 to
0444 fixes the issue.

Closes: https://github.com/rook/rook/issues/5265
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit bc581da75ee5139612698c3df4f9a945aef133a8)
op: add scc reminder

On Octopus cluster, we don't use the host PID anymore to run OSD so
adding a reminder to remove it later.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 5fffb76d24f3ecdbed75568833f9ef106bf6172d)
ceph: set pg_num_min on new rgw metadata pools

pg_num_min needs to be set on all new and existing rgw
metadata pools so the autoscaler won't immediately
increase the pg count. The pg_num_min was only being set
on existing pools and not on new pools.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 6d130864f39a37e1dd080c4eca2a9d5ed25e5d73)
ceph: fail for unsupported version

We must return `err` instead of nil so that we can fail the
orchestration properly.

Closes: https://github.com/rook/rook/issues/5498
Signed-off-by: Sébastien Han <seb@redhat.com>
ceph: set external creds if admin key is available

If the admin key is available, set the external creds struct
to use that admin username and key instead of requiring the
callers to check every time if they should use the admin
key or the external key.

Signed-off-by: Sébastien Han <seb@redhat.com>
Co-authored-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 90fa3a6d22806e22c76339d7efe489c20e103a3c)
ceph: pool resize test hangs during cleanup

In Octopus 15.2.2 there is an rbd change that causes the rbd ls command
to hang if there are not sufficient OSDs to meet the replica requirement.
The smoke suite just started hanging today since the 15.2.2 image was
released with this change. Therefore, the test that resizes the pool
to replica 3 must resize back to 1 before cleaning up.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit e1a9a9039b50243d64167e6d7c94355e45c8ca00)
ceph: fix lvm arg

Add the valid verbose flags back.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 712c9582023d0a747238e2629fb5f4648f13c92d)
Ceph: Newer mechanism to scale MDS for Nautilus+

ceph mds deactivate is not valid command for Nautilus, changing the mechnaism of upgrading so that it can be done in the way Nautilus does it.

Closes: https://github.com/rook/rook/issues/5278
Signed-off-by: RAJAT SINGH <rajasing@redhat.com>
(cherry picked from commit 9feb0287c509dfead7245b8615ec9cafe03b5d7e)
ceph: finalizer for OBC cleanup

This PR is for rebasing with master. With new controller runtime changes most the changes with got redundant.
Only valid change is waiting for all the object buckets to be cleaned up before removing the finalizer.

Co-authored-by: Elise Gafford <egafford@redhat.com>
Signed-off-by: Santosh Pillai <sapillai@redhat.com>
(cherry picked from commit 5ef88f8f090978f43e73ebcfe05b4755be7b9b0d)
ceph: define WaitForRequeueIfFinalizerBlocked result

In master the WaitForRequeueIfFinalizerBlocked reconcile result
was defined for a separate feature from the OBC finalizer.
For release-1.3 we now define it for the OBC finalizer.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
release: update manifest versions to v1.3.4

For the v1.3.4 release we update the manifest versions.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.3.4 is a patch release limited in scope and focusing on small feature additions and bug fixes.
Ceph
Finalizer for OBC cleanup (, @sp98)
Remove invalid MDS deactivate command during upgrade (, @rajatsingh25aug)
Enable verbose logging for LVM commands (, @leseb)
Set external creds if admin key is available (, @leseb)
Fail more gracefully for an unsupported Ceph version (, @leseb)
Set pg_num_min on new rgw metadata pools (, @travisn)
Object store deployment failed to start on openshift (, @leseb)
Relax OBC error handling and user deletion (, @leseb)
Create missing secret on external cluster (, @leseb)
Python script to generate needed external cluster resources (, @aruniiird)
Docs: clarify required version of helm for upgrades (, @binoue)
CSI priority class example update (, @Madhu-1)
Set test default pool size to one (, @travisn)
Remove invalid verbose params from lv activate (, @travisn)"
"ceph: set min size to 0 on pool replication

The replication and erasure code settings are mutually exclusive
so must both be treated as optional by the schema validation.
The minimum must be set to 0 to treat them as optional.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit dbfcef8c194b2e298efd8861a71190ad1379075f)
helm: update charts for cephcsi v2.0.0

Updating clusterroles for cephcsi v2.0.0 permissions

Signed-off-by: Ryan Despres <rdespres117@gmail.com>
(cherry picked from commit 712873641a2549e5f17831c5f26a1d0d2cd1eb85)
ceph: force enabling balancer module with older clients

When running old client version, we must force the compatibility
features so that the orchestration does not fail in a loop.

Closes: https://github.com/rook/rook/issues/4842
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit b6c1cb13a5aa7d165317e1f4b92b50d8f8c139d2)
Ceph: adds ""rook-ceph-operator-config"" configmap

""rook-ceph-operator-config"" can be used to override Env Var
initialized during operator deployment.

This commit makes use of the ConfigMap to determine NodeAffinity
and Tolerations for ceph-csi drivers.

Closes
Signed-off-by: Umanga Chapagain <chapagainumanga@gmail.com>
(cherry picked from commit 7b201b8dae9ac514da96052ddbee95797cd79a15)
ceph: populate CSI configmap for external cluster

The configmap for csi wasn't created so csi wasn't working.

Closes: https://github.com/rook/rook/issues/4816
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 04ee2d91fd8fd864f4e97880f0cb915de603a03b)
docs: fix CephCluster PVC based example

The `cephVersion` was missing in the PVC based Ceph Cluster example.
Otherwise the Ceph Cluster would fail to be created due to no Ceph
version being specified.

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit 02674b851b74e51ad2b823dd82ffd5924514324f)
ceph: fix status for EC pool creation

Creating an EC pool was succeeding, but then the update to the
status was failing because of an incorrect check for changing EC
parameters. Now we correctly check if EC parameters are changing
unexpectedly.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit a9903ed8d7af3d3edb815fac7324c8d3603f0b2f)
ceph: bump ceph version to v14.2.7

The ceph/ceph:v14.2.7 image is released so we can pick these fixes
up as the recommended version of ceph.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit e35939b26c40f0ec44e0dce72ca61875ebfd1d03)
ceph: bump remaining manifests to v14.2.7

The backport from master did not change all the references to v14.2.6
since master has changed. Now updated the remaining manifests and
documentation.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
ceph: allow mons from external cluster in toolbox

The toolbox generates a ceph.conf and extracts the names of the mons
based on the assumption that they all had the prefix rook-ceph.
This is no longer true for external clusters. The external clusters
may have mons with any variety of names.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit d754520e1cb310bd54b919ea2789102a2b3fd45f)
build: set manifest versions to v1.2.5

For the patch release, set the manifest versions to v1.2.5.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.2.5 is a patch release limited in scope and focusing on bug fixes.
Ceph
Set recommended Ceph version v14.2.7 (, @travisn)
Allow mons from external cluster in the toolbox (, @travisn)
Set successful EC pool creation CR status on the pool CR (, @travisn)
Populate CSI configmap for external cluster mons (, @leseb)
CSI settings are configurable in the operator via a ConfigMap (, @umangachapagain)
Enabling balancer module with older clients (, @leseb)
Helm chart fix for deploying the CSI 2.0 driver (, @rwd5213)
Make replication setting optional for EC pools (, @travisn)
Docs: Set Ceph version for the PVC based example (, @galexrt)"
"rgw: change default frontend on nautilus

As per: ceph/ceph, Beast is now the
default fronted for rados gateway.
Newly created cluster as of Nautilus will use it by default.

Re-added version of 03587352d531becc4d53ff7635a3d183176fa51b
Resolves:
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 0317de90968d40d5783255d8366ad7f952d4a4ea)
ceph: upgrade apply osd nautilus flag

When OSDs are running on Nautilus we always disable old osd features and
aplpy the onces for Nautilus as described in the upgrade doc.
During an upgrade or the next time an orchestration will be called the
command will be applied. The command is idempotent so we can run it each
time.
This can be backported for 1.0.3

Closes: https://github.com/rook/rook/issues/2960
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit cba9a359a0b546aa84e852936d11d3a2c5eb2f92)
ceph: stop enforcing crush tunable

This requirement is long gone and was reported in 2017. Clients should
have been updated by then, so there is no reason to set the CRUSH
tunable to such an old client. Actually, we should let Ceph run its own
tunable. They can always be changed later. Also, this was really
restrictive and applied on every orchestration and thus would override
any other config done by an administrator. Even worse, this will trigger
data movement back and forth...

Closes: https://github.com/rook/rook/issues/3138
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit d3845e7f7598d154a7ab39d4b35090ec7c3e4c30)
ceph: add metrics for flexvolume driver

This allows to export persistent volume metrics.

Signed-off-by: Maksim Nabokikh <maksim.nabokikh@flant.com>
(cherry picked from commit cb3b8168a0209e953f240a754c0c1952d1c4782a)
remove obsolete check for setting the resource ownerreferences

The check for whether to set the OwnerReferences is no longer
necessary. When passing the correct value to the apiVersion,
the OwnerReferences can be successfully set for OpenShift.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 8226d577f6e46e60ae0e8b4875d980fd690715e2)
set the fully qualified apiVersion for OwnerReferences

OwnerReferences are now created with the fully qualified apiVersion
such that the references will work properly on OpenShift.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 9d7474467cd238c43cdb7e56d1595995b000c2cb)
ceph: osd: fix startup on sdn

This commit adds a new flag to the osd startup so that on msgr2 (default
on Nautilus and above) the osd is able to find the IP address in the
container to bind to.

This requires this Ceph patch https://github.com/ceph/ceph/pull/28589
and is already present in Octopus.

Closes: https://github.com/rook/rook/issues/3140
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit b2f2ff6b9dd91a3f3f8f4016cb276df36517c987)
ceph: osd: fix cli arg

Somehow during startup the arg got misinterpreted by ceph-osd and was
failing with:

2019-06-19 15:23:09.098967 I | exec: Running command: ceph-osd --foreground --id 0 --osd-uuid feceb7d7-3148-4a0d-af7a-753ba2f21a92 --conf /var/lib/rook/osd0/rook-ceph.config --cluster ceph --default-log-to-file false --ms-learn-addr-from-peer false
2019-06-19 15:23:09.135921 I | unrecognized arg false
failed to start osd. Failed to complete '': exit status 1.

Now we concatenate the whole flag to avoid that.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 6d620054723d4fc0ebc47d6d103d8410b4a8a544)
rgw: remove legacy code

This code can be removed since 1.0 shipped.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit f6f1aa772f6f6fa06caed449758290457764af5b)
ceph: refactor rgw bootstrap

This commit does multiple things:

* remove support for AllNodes where we would deploy one rgw per node on
all the nodes.
* a transition path is implemented in the code so that if someone has an
existing deployment, daemonsets will be removed and replaced by an
deployments.
* when using ""instances"", each rgw deployed has its own key which makes
Ceph reporting the exact number of rgw running, see:

```
[root@rook-ceph-operator-775cf575c5-bh4sr /]# ceph -s
  cluster:
    id:     611fcf39-0669-4864-9a12-debb35c0397a
    health: HEALTH_OK

  services:
    mon: 3 daemons, quorum a,b,c (age 12h)
    mgr: a(active, since 12h)
    osd: 3 osds: 3 up (since 12h), 3 in (since 12h)
    rgw: 3 daemons active (my.store.a, my.store.b, my.store.c)

  data:
    pools:   6 pools, 600 pgs
    objects: 235 objects, 3.8 KiB
    usage:   3.0 GiB used, 84 GiB / 87 GiB avail
    pgs:     600 active+clean
```

Closes: https://github.com/rook/rook/issues/2474, https://github.com/rook/rook/issues/2957 and https://github.com/rook/rook/issues/3245
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 93b2448619e42b14e6c4b719f0ab7ede8445e72e)
ceph: controller: fix panic on cr update

If we are running a Ceph cluster that has an unsupported version and if
we have set allowUnsupported: false, a newly bootstrap operator will
fail to start. To fix this, the user will update the CR and set
allowUnsupported: true, however at this point clusterInfo hasn't been
initialized so the operator will panic because we were referencing a nil
pointer.

To fix this, we re-populate clusterInfo if necessary and things go
smoothly.

Closes: https://github.com/rook/rook/issues/3137
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit f183ad2bb19238eebfb827d5d6198055c4cb559f)
ceph: fix typo error storegeclass

The word ""storegeclass"" should be ""storageclass""

Signed-off-by: Joel Huang <joelhy@gmail.com>
(cherry picked from commit d4945d65333d34c30325255a557275e675c540cb)
increment yaml and doc versions to v1.0.3 for the release

Signed-off-by: travisn <tnielsen@redhat.com>
support for rook Device.FullPath

Signed-off-by: Dmitry Yusupov <dmitry.yusupov@nexenta.com>
(cherry picked from commit 5ffe2f037c438df825c2fc5e3705c8a6917aeb29)","Rook v1.0.3 is a patch release limited in scope and focusing on bug fixes.
Improvements
Ceph
OSD startup on SDN for error ""Cannot assign requested address"" (, @leseb)
Change default frontend on nautilus to beast (, @leseb)
RGW daemon updates:  (, @leseb)
Remove support for AllNodes where we would deploy one rgw per node on all the nodes
Each rgw deployed has its own cephx key
Upgrades will automatically transition these changes to the rgw daemons
Correct --ms-learn-addr-from-peer=false argument for ceph-osd (@leseb)
When updating the CephCluster CR to run unsupported octopus, fix operator panic (, @leseb)
Add metrics for the flexvolume driver (, @nabokihms)
Set the fully qualified apiVersion on the OwnerReferences for cleanup on OpenShift (, @travisn)
Stop enforcing crush tunables for octopus warning (, @leseb)
Apply the osd nautilus flag for upgrade (, @leseb)
EdgeFS
Support for rook device full path (, @dyusupov)"
"ceph: storage warn iare specified but ignored

In the cluster CR the nodes element will be ignored under storage when
useAllNodes is true. The nodes will only be applied when useAllNodes is
false. It is a common usability problem that users can't figure out
why their nodes are not configured. At least this log entry can give
them a clue.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 69c9ed4206f47644687733396d87022e93d312a3)
ceph: properly lookup the K8s topology labels for OSDs

The OSDs pick up on several topology labels for CRUSH hierarchy.
The GA label topology.kubernetes.io was partially implemented, but
not picked up by the OSDs. Now the OSDs will pick up both the topology
labels from pre-1.17 such as failure-domain.beta.kubernetes.io/zone
and topology.kubernetes.io/zone.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit ba07a63033e0185c702ff0a9a7ffe577cadc0b92)
ceph: bump to 14.2.8

Ceph 14.2.8 just got released so let's use it.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 14cb46ae397b83634e65e64535a9677f077d9953)
ceph: osd re-add udev bindmount

The OSD needs to talk to the udev socket to get information about a device.
like serial, vendor etc. So that it can populate the output of:
`ceph osd metadata $n` correctly.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 619f301eb718b61c4ac2f4a20b9e4b1f648c8a55)
ceph: run osd initContainer in priv mode

To access a special block device the container must run privileged.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 723671f58c2a7fdd1682006dd993c2272200ce9f)
yugabyte: tests should use image built by rook

The integration tests for yugabyte were pointing to an image
outside of the rook repo. Since that image changed unexpectedly
it broke the rook integration tests. The tests need to use
the image built by rook.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit dabf0b66189c49bd218f12222bdfba6927575593)
ceph: add missing 'rook_cluster' label to crash

The crash deployment was missing the 'rook_cluster' label to indicate
which ceph cluster it is part of.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 1edc3adc583b4e06dc4a089161edc367897d792f)
build: set manifest versions to v1.2.6

For the patch release set the manifest versions and docs to v1.2.6.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.2.6 is a patch release limited in scope and focusing on bug fixes.
Ceph
Update default Ceph version to v14.2.8 (, @leseb)
Fix for OSDs on PVCs that were crashing on Ceph v14.2.8 (, @leseb)
Mount /udev so the osds can discover device info (, @leseb)
Query for the topology.kubernetes.io labels in K8s 1.17 or newer for the CRUSH hierarchy (, @travisn)
Log a warning when useAllNodes is true, but nodes are defined in the cluster CR (commit, @travisn)"
"ceph: add option to continue on unclean PGs

A new CRD option `continueUpgradeAfterChecksEvenIfNotHealthy` is added.
When upgrading, Rook goes OSD by OSD and then waits for PGs to be clean
before proceeding to the next OSD. Currently, Rook waits for 5 hours but
there might be circumstances where PGs need more time to settle.
Thus setting `continueUpgradeAfterChecksEvenIfNotHealthy` to true will
pursue the upgrade process, even if PGs are not 100% active+clean.

Closes: https://bugzilla.redhat.com/show_bug.cgi?id=1786029
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 05aa639317884c7ff29ddfc2698ec52f8c1ce588)
util: no verbose logging for retry messages

The retry messages are too verbose with the stack trace
since the aggregated messages were added. This change
turns off the verbose message.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit e2dcfc63302d529988e1feb21a1089878ea71330)
core: k8s 1.17 zone/region failure domain labels

Add support for the k8s 1.17 official zone/region failure domain labels.
Our earlier guess that the official labels would be
<failure-domain.kubernetes.io> was wrong; the official is now
<topology.kubernetes.io>.

Signed-off-by: Blaine Gardner <blaine.gardner@suse.com>
(cherry picked from commit facc473f59230a6c30bb4018e3f32c1818cfdd2c)
CSI: Add privileged securityContext to all daemonset containers

On systems with SELinux enabled, non-privileged containers
can't access data of privileged containers.
Since the socket is exposed by privileged containers,
all sidecars must be privileged too.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit d9dd91d9fb7d9558aadf72b4fdbb08afa1623aa1)
CSI: use empty dir to store provisioner socket file

currently we are making use of hostpath
directory to store the provisioner socket, as this
socket is not needed by anyone else other than containers
inside the provisioner pod using empty directory
to store this socket is  the best option.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 7a7e65a9b255a99d3f0d3d38bc754db1fd78d838)
ceph: remove last bits of osd min_size

As agreed in https://github.com/rook/rook/issues/2543, Rook must not set
min_size for a pool and should let Ceph handle that calculation.

Also, stop setting this property to EC pools.

Closes: https://github.com/rook/rook/issues/2543
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 289503a6ec23a9cf1cbe86b73a0602a4427612b8)
fix(context): ceph : Change in operator-openshift.yaml the env variable ROOK_CURRENT_NAMESPACE_ONLY to false

When configuring a cephcluster CRD on a different namespace than rook-ceph, like for example when deploying a external cluster, we need to set ROOK_CURRENT_NAMESPACE_ONLY to true so the operator can watch for CRD modifications on other namespaces.

Closes: https://github.com/rook/rook/issues/4667
Signed-off-by: Daniel Parkes <dparkes@redhat.com>
(cherry picked from commit 9762dee4b870345ec03297467f2eb71bb32575f4)
ceph: simplify arguments to getConfigEnvVars method

The method to construct osd environment variables is simplified
by passing a struct param instead of individual params

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit aacec0dcda3ad55d0224e540cfdb18963e78e8d1)
ceph: fix non-portable osd crush host name

The host name of an OSD in the CRUSH map should be the real
host name for non-portable OSDs. It was incorrectly being set
to the PVC name. Now the non-portable OSDs based on PVCs will
corretly have the host name set to the node name.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 078e87a72254aae47fba8cb82066bccd9e7fab38)
yugabytedb: fixed replication factor flag and the master addresses.

This PR fixes the replication factor flag for yugabytedb deployments.

Signed-off-by: Arnav Agarwal <14933889+Arnav15@users.noreply.github.com>
(cherry picked from commit 17d5ab65a52dd0e702413a9de98f6c20ca86f6dc)
yugabytedb: added single rf container command test

adds test to verify container create command with RF=1

Signed-off-by: Arnav Agarwal <14933889+Arnav15@users.noreply.github.com>
(cherry picked from commit 11244925edb11ef9f0f28095d0cd1eecb39ee519)
ceph: Fixed CephMonHighNumberOfLeaderChanges alert

The alert was showing wrong POD and hostname in the
alert description. Fixed the query for the same by
adding the right labels from ceph_mon_metadata query
to the original query.

Signed-off-by: Anmol Sachan <anmol13694@gmail.com>
(cherry picked from commit caf79f971f8cd01b03855fd02a1e16db0b553a5f)
tests: parsing flags causing integration test failure locally

Running integration tests locally on k8s 1.13 was causing an error
with parsing the command line flags. We can't call flags.Parse()
from an init() method.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 47840b9fefb44f7890c94394d312fe9757763faa)
tests: allow integration tests in minimal config to run on multiple versions

When the tests run in a PR, they can only run against a single version
of K8s by default. If more than five k8s versions are supported in hte
CI, we will need to run some of the suites on multiple versions.
The versions are comma-separated in the list.

(cherry picked from commit 2d892b0e888b7aea4f6e90e240ef06a47334cdde)
Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
build: Add k8s 1.11 to the integration tests

With production environments remaining up for much longer
than the lifetime of upstream k8s releases due to the downstream
releases of k8s, let's keep running more versions of k8s
in the integration tests to give some assurance that Rook
will continue to run in those older K8s versions.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
osd: Added check for --crush-location

Added a check for --crush-location, if --crush-location is not present,
the node topology is not applied and the operator will need to determine
the value based on the node labels instead of skipping this setting.

Signed-off-by: rohan47 <rohgupta@redhat.com>
(cherry picked from commit fda2b5d96c0cff2265493168205912d8403bff5e)
ceph: bump to 14.2.6

14.2.6 is released, let's use it!

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit dec0c7d4b0fb6e19263e3f3833fd739fed88dd7f)
Ceph: updates CephCluster CRD doc to include monitoring options

adds documentation on spec to enable/disable monitoring of Ceph
clusters using prometheus. prometheus still needs to be deployed
separately.

Signed-off-by: Umanga Chapagain <chapagainumanga@gmail.com>
(cherry picked from commit 55e45862ae309dd6eb7d67b8909a65c3cc9ad449)
ceph: fix external cluster crash k8s secret

The external cluster now creates the crash key when appropriate.

Closes: https://github.com/rook/rook/issues/4553
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 4de61b01d4e1cb4f9828f9007050976839c1b978)
ceph: ability to disable crash controller

A new CR setting has been introduced to disable the crash controller.
To disable it, add `disable: true` on the crashCollector section.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit bb214b2f275358a4419243494b8ec3bc81d355dd)
ceph: Skipping quorum check if no. of ready mons is 0

If all mons are down (e.g. set the replicas to 0 on all the mon deployments) and the operator is restarted, the operator waits indefinitely for a single mon to start. This PR fixes this issue by skipping the quorum check of mons if the number of ready mon pods is equal to 0.

Signed-off-by: Ashish Ranjan <ashishranjan738@gmail.com>
(cherry picked from commit 44a472215598901563845517f57994995e185e48)
ceph: remove devicesInUse

When the OSDs are being provisioned,
if one cluster has already provisioned the OSDs,
the new cluster will skip them since it will see they are already in use.
So we don't need this check anymore.
Coordinating the flag across multiple cluster instances is more complicated than it's worth.
Someone also might want useAllDevices: true in multiple clusters
and they would keep them on separate nodes by using the node labels and selectors.

Closes: https://github.com/rook/rook/issues/4633
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit ed21121f8757debabf508d4391fc9fb51da55f7c)
build: set the v1.2.2 release tag

With the v1.2.2 release we update the manifests with the new tag.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.2.2 is a patch release limited in scope and focusing on bug fixes.
Ceph
Allow multiple clusters to set useAllDevices (, @leseb)
Operator start all mons before checking quorum if they are all down (, @ashishranjan738)
Ability to disable the crash controller (, @leseb)
Document monitoring options for the cluster CR (, @umangachapagain)
Apply node topology labels to PV-backed OSDs in upgrade from v1.1 (, @rohan47)
Update examples to Ceph version v14.2.6 (, @leseb)
Allow integration tests in minimal config to run on multiple K8s versions (, @travisn)
Wrong pod name and hostname shown in alert CephMonHighNumberOfLeaderChanges (, @anmolsachan)
Set hostname properly in the CRUSH map for non-portable OSDs on PVCs (, @travisn)
Update OpenShift example manifest to watch all namespaces for clusters (, @likid0)
Use min_size defaults set by Ceph instead of overriding with Rook's defaults (, @leseb)
CSI driver handling of upgrade from OCP 4.2 to OCP 4.3 (, @Madhu-1)
Add support for the k8s 1.17 failure domain labels (, @BlaineEXE)
Add option to the cluster CR to continue upgrade even with unclean PGs (, @leseb)
Add K8s 1.11 back to the integration tests as the minimum version (, @travisn)
YugabyteDB
Fixed replication factor flag and the master addresses (, @Arnav15)"
"doc: Add OBC details to admin guide

This patch adds required documentation to consume OBC for a user

Signed-off-by: Jiffin Tony Thottan <jthottan@redhat.com>
(cherry picked from commit 5a72f9a299432e624dd257cd4ec922fc9453ce2d)
ceph: restructure the object store guide for OBCs

The guide for configuring object stores has a new flow for creating
buckets in the object store. This requires a new approach instead of
asking the user to create user creds and a bucket with other commands
such as s3cmd.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 51cc8a752f2986c4f1b708fa635134f4d23de064)
build: set the v1.1.6 release tag

With the v1.1.6 release we update the manifests with the new tag.
The v1.1.5 release was skipped due to a merge to the release branch
after the tag, but before the v1.1.5 official build was started.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.1.6 is a patch release limited in scope and focusing on bug fixes. Note that the v1.1.5 release was skipped.
Ceph
Flex driver should not allow attach before detach on a different node (, @travisn)
Properly set the ceph-mgr annotations (, @d-luu)
Only trigger an orchestration if the cluster CR changed (, @nizamial09)
Fix setting rbdGrpcMetricsPort in the helm chart (, @galexrt)
Document all helm chart settings (, @galexrt)
Support all layers of CRUSH map with node labels (, @travisn)
Skip orchestration restart on device config map update for osd on pvc (, @sp98)
Deduplicate tolerations collected for the drain canary pods (, @rohantmp)
Role bindings are missing for pod security policies (, @jmolmo)
Continue with orchestration if a single mon pod fails to start (, @travisn)
OSDs cannot call 'restorecon' when selinux is enabled (, @leseb)
Use the rook image for drain canary pods (, @rohantmp)
Allow setting of osd prepare resource limits (, @leseb)
Documentation for object bucket provisioning (, @thotz)
NFS
Set correct owner reference for garbage collection (, @leseb)"
"docs: update docs and examples for v0.8.2

Signed-off-by: travisn <tnielsen@redhat.com>
Added missing RBAC in quickstart Cluster definition

Corrected the cluster namespace in some examples to rook-ceph

Updated PodSecurityPolicy hostNetwork ports

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit b83595e5cbd4dad3e2b2e679f41077e5f57808f0)
Revert ""log the output of blkid to see if device should be formatted""

This reverts commit c67542829b0f4042bb2ef57e8ed96efedbc91656.

Signed-off-by: Huamin Chen <hchen@redhat.com>
(cherry picked from commit 3832708c4faae245fe86999e872d35ab80273988)
osd: use the node hostname labels instead of node names

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 7d97b6ad763fffdc220d2ff52d60e551d8d3fddb)
docs: update docs and examples for v0.8.3

Signed-off-by: travisn <tnielsen@redhat.com>","Rook v0.8.3 is a patch release limited in scope and focusing on bug fixes.
Improvements
OSD can now be configured in K8s clusters where the hostname label is different from the node name  (@travisn)
Fix regression in v0.8.2 that caused PVCs to fail to be mounted in some clusters due to unexpected logging (@rootfs)"
"docs: Update the build process to use the new docs build process

Signed-off-by: Michael Goff <thephred@gmail.com>
(cherry picked from commit f88a9b78baa4f2f847f4412d9e0f59c515f5f995)
build: Update node to 10.x in cross container

Signed-off-by: Michael Goff <thephred@gmail.com>
(cherry picked from commit 3764ecf547340f07d12de60ba50fff1e945f865c)
docs: update troubleshooting for mons failing to form quorum

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 5bb60dd8bddbffa80ee08d95272c6d10e3f62220)
handle ceph mon failover more gracefully

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit b72c6436ef99640ca03a53643f97342dde81d56d)
cassandra: fix wrong mount point

Signed-off-by: Yannis Zarkadas <yanniszark@arrikto.com>
(cherry picked from commit 7cc217137d05fc12ae4a98dacf4a7f5ee6b75b21)
cassandra: operator upgrade documentation

Signed-off-by: Yannis Zarkadas <yanniszark@arrikto.com>
(cherry picked from commit cc674d4a42b83040586711e368bf0056902ea680)
Added ROOK_HOSTPATH_REQUIRES_PRIVILEGED as value to Helm Chart

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit dcc5d2b5ea494f9bec6596a2cc1aa44af5c29b48)
ceph: share host ipc namespace with provision pod

this is needed as cryptsetup in the pod and udev on the host coordinate
via a semaphore that must be visible in both contexts.

note that additionally the host needs to have dmcrypt compiled with udev
synchronization, which at least one minikube version does not have.

fixes:

Signed-off-by: Noah Watkins <noahwatkins@gmail.com>
(cherry picked from commit 6597531ed0b0324f48141bfdc65c8b6431abaff7)
set the rook images to v0.9.3 in the example yamls

Signed-off-by: travisn <tnielsen@redhat.com>","Rook v0.9.3 is a patch release limited in scope and focusing on bug fixes.
Improvements
Cassandra
Fix the mount point for the PVs (, @yanniszark)
Ceph
Improve mon failover cleanup and operator restart during failover (, @travisn)
Enable host ipc for osd encryption (, @noahdesu)
Add missing ""host path requires privileged"" setting to the helm chart (, @galexrt)"
"Ceph upgrades: object RGW allNodes deprecation

Add step to update CephObjectStores as part of the upgrade guide now
that `allNodes` has been deprecated for 2 releases.

Signed-off-by: Blaine Gardner <blaine.gardner@suse.com>
ceph: dashboard - get right ssl port from ceph settings

Starting with Nautilus 14.2.1 the dashboard SSL port is readed from <<mgr/dashboard/ssl_server_port>> ceph setting.
Previous versions use the port specified in <<mgr/dashboard/server_port>>

Addressed @travisn suggestion about use of <ssl> attribute in conditional.
This suggestion drove me to change the type of the SSl attribute (from *bool to bool) in the DashboardSpec Struct.
This makes code more clean/safe and make sure that the SSL atribute has always a meaningful value.

Now if you want to run the <secure dashboard> you need to set explicitly SSL to true, as is demonstrated in unit tests.

[x] Code generation (make codegen) has been run to update object specifications

Signed-off-by: Juan Miguel Olmo Martínez <jolmomar@redhat.com>
(cherry picked from commit 4700193b1f49d6eb5cf720b3616d7ec1ffbc09ca)
Changed description for CephDataRecoveryTakingTooLong alert

Previous alert description was confusing. This makes it more
generic and user understandable.

Signed-off-by: Umanga Chapagain <chapagainumanga@gmail.com>
(cherry picked from commit ddb006152b8c166d46bc726c07832490527c97a2)
ceph: make lifecycle hook chown less verbose

It looks like on large store, the `--verbose` option is going over grpc
message buffer, since the output might be quite big.

See the error:

([chown --recursive --verbose ceph:ceph /var/log/ceph /data/rook-storage/osd11]) for
 Container ""osd"" in Pod ""rook-ceph-osd-11-85dbbb5cd6-djttp_rook-ceph(4bf77ccd-d631-11e9-8334-fa163ed365ca)"" failed - error: rpc error: code = ResourceExhausted desc = grpc: trying
to send message larger than max (15133688 vs. 8388608), message: """"

Removing the verbose flag should fix this.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 5b930872b9379cb505bff45216ec83fc586d78ae)
nfs: fail if no mds are running

In order to run ganesha exporting cephfs we must have an MDS server
running. So, we check if the pool was created.
If not present we fail the instanciation of the CR.

Closes: https://github.com/rook/rook/issues/3835
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit c0843f21849741ce05f0cd2f86e1b6062f67d3c8)
Remove helm incompatible chars from values.yaml

Remove %% around VERSION in charts yaml, so helm can process it.

Otherwise helm complains:
""unmarshal vendor values: yaml: line 7: found character that cannot start any token""

Signed-off-by: Dinar Valeev <k0da@opensuse.org>
(cherry picked from commit df7580e86cae4f68b808bf7a462c62c4d715b96c)
docs/ceph: add list of unusable directories paths

This adds a list of unusable directories paths to the Ceph Cluster CRD
doc page and the Ceph operator validation code. Reason for adding these
directories is that they are causing errors during Ceph OSD deployment.
Example: When an user wants to use `/rook` as a directory for an OSD,
the cluster deployment fails because the `mountPath`s must be unique:
```
Job.batch ""rook-ceph-osd-prepare-NODE"" is invalid: spec.template.spec.containers[1].volumeMounts[4].mountPath: Invalid value: ""/rook"": must be unique
```

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit 0827df646a29c380b49bce4881b66ba4d411b2b5)
ceph: more mgr autoscaler option

Now that the pg_autoscaler is on by default, it is ""normal"" (and okay) to
have a small number of PGs in the cluster if the overall cluster usage is
also low. This setting just results in a health warning out of the box
when you create a pool and haven't written any data yet.

fyi: ceph upstream https://github.com/ceph/ceph/pull/30352

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 11d3831d742639148b21799fb37f6a76b26a45dc)
ceph: disable bluestore warn on legacy statfs

When upgraded to Octopus or 14.2.5, OSDs will fix themselves on the fly at
startup, so we just need to silence this warning for now.
No migration is needed.

Closes: https://github.com/rook/rook/issues/3539
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 22c9c3a8139e1c88633373db2d1b556cf9b0b4a0)
ceph: ensure the csi secret exists on upgrade

The CSI secret was only being created for new clusters.
Upgraded clusters did not have the secret generated. To support
upgraded clusters to use CSI, we always ensure the csi secret
exists when the orchestration runs.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 60290943efbb06f91503e2533cd5a92d8b7cfcbc)
ceph: fix upgrade commands

Several commands were not using the cli finalizer function which builds
up the right argument to run a ceph command. This was working on the
operator since it used to have an /etc/ceph/ceph.conf file so we could
ran the command without specifying the ceph conf and key paths.
However, we recently removed that and it silently broke this ""already""
broken code :).

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 171c4ac438c5005e2d12b9d181accf2a0944e970)
operator: ceph disable flexdriver

Since Ceph CSI is stable and deployed by default, we don't need to
deploy the rook-ceph-agent daemonset.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 7f359ba41bca9f07085bb6d495d1d07ec0b6bfeb)
ceph: bump to v14.2.4

v14.2.4 just got released so let's use it.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit bc6dcb99956bf417f34b5f4357d7b1473a8a9291)
Ceph: Enable SSL for dashboard by default

With, the default value for ssl changed
from enabled to disabled, so to get SSL for
the dashboard we will need to enable it
explicitly.

Signed-off-by: Kristoffer Grönlund <kgronlund@suse.com>
(cherry picked from commit 35109e69f28d6477402780c4ddaf3db225f9098a)
Ceph: Use HTTP port if SSL is disabled

Using port 8443 / dashboardHTTPS when not running HTTPS
is confusing, so use the dashboardHTTP port (7000 by
default) instead.

Also don't expose the dashboard port as ""https-dashboard""
when not using https, instead expose as ""dashboard"".

Resolves

Signed-off-by: Kristoffer Grönlund <kgronlund@suse.com>
(cherry picked from commit d67ef2bcddd4c833b017b63685a844f896113ec4)
Include CSI image in helm chart values

The Helm Chart should include values for the CSI
images so Rook with CSI can pull the required
images from a private container registry.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit c7b861a21d729da0a4e5a86349efc8a290130bb8)
ceph: add a new CR property to force upgrades

On rare occasion, the ceph checks might not be 100% correct and the user
might decide to force an upgrade anyway.
Correctly, if we are in an upgrade, we perform `ok-to-stop` check for
each daemon, if one of them fails, we retry and eventually fail.
They are corner-cases where users would like to force the upgrade anyway.

Enhance the new CR property: ""skipUpgradeChecks: true"".

Closes: https://github.com/rook/rook/issues/3872
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 087d71106b469704ce4bb14ead299d9972f5544e)
ceph: enable ceph-volume debug logs

It's fine to enable debug logs from c-v, it's not so verbose and really
useful when debugging.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit c96fe8b5f83ce340cfe614bee8e03b61251737d2)
update csi upgrade document

updated required rules for upgrading CSI from
v1.0 to v1.1 and also updated the document with
required steps

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 4a8b821c79532f67f1c7193cbff5578ae97acb9e)
fix(fencing): change mdb controller to use namespace for checking status

This commit changed mdb controller to make use of cephCluster's namespace instead of cephCluster's name for checking the ceph health as the ceph config is located in the cephCluster's namespace folder which can makes mdb controller fail when rook operator is deployed in any other namespace apart from rook-ceph.

Signed-off-by: Ashish Ranjan <aranjan@redhat.com>
(cherry picked from commit c4ee336fe0c722583ad0648e950fa68db4e8d5a0)
Make kubelet path configurable in operator

currently CSI templates have hardcoded kubelet
path which will  be used for  mounting PVC,this
will not work if kubelet is configured to use
different path, with this PR  kubelet path
can be configured for CSI.

Fixes:

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 345f099bbc4ffdba4bd9b25c7eec9a4e7993d3e5)
group csi variables under single if check

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 3235676a5a9bce02fef1098230e4ed9eb3c59ad4)
ceph: osds to always use hostname for node selector

The node selector for running OSDs on PVCs was using the node name
rather than the node's hostname. In clusters where the node name
is different from the hostname this would cause the osd daemons
to be in pending state indefinitely. Now the node selector will
use the hostname as expected.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 57d446ec6f151747d5de8ae618fca12bb7c8a4e9)
release the device held onto by lvm

When running osds on pvc, the lvm is still holding the device when the cluster is deleted. As a result the PVs go into `failed` state
when the cluster is deleted. On deactivating the device, the 'failed' pvs get deleted as well. Solution involves:
- Running `lvchange -an <vg group name>` to deactivate the device.
- This command runs after 'osd prepare' completes.
- This command also runs after the 'osd daemon pod' is deleted or if the ceph-osd process terminates for some reasons.

Signed-off-by: Santosh Pillai <sapillai@redhat.com>
(cherry picked from commit 9db863377ad35da5a00365ee520322a815d13bf0)
Add CephNFS to CSV

Signed-off-by: Rohan CJ <rohantmp@gmail.com>
(cherry picked from commit d332c6a654b8516417f0546f448d9a0bb101d585)
Pick up tolerations for drain canary pod from the osd.

This change is necessary drain canary pod needs to be schedulable on
the same nodes as the OSDs. Since it affects multiple OSDs, we need to
gather tolerations from multiple OSDs.

Signed-off-by: Rohan CJ <rohantmp@gmail.com>
(cherry picked from commit 195f20ad011bbdd7cfbe925487c1c3a3aaa8a022)
ceph: allow running minimal test matrix for ceph tests

There are six test suites and six k8s versions where we currently run
the tests. For efficiency we can restrict the testing to one suite
per k8s version. Bigger or riskier changes should still run the full
set of suites on all versions. To trigger the smaller test matrix, add
[test ceph min] to the PR description

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit bd672de7db13d1b7bff1c18818b0fab9671a22a5)
ceph: configure additional lvm settings for rhel8

RHEL8 introduces some lvm changes. For OSDs on PVs to work
we need to set allow_changes_with_duplicate_pvs = 1.
This is required since we're copying the block image
under another location.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit f3ce2148221b0406bfde036b85f1651356a21fc9)
set image tags for the v1.1.1 release

Signed-off-by: travisn <tnielsen@redhat.com>","Improvements
Rook v1.1.1 is a patch release limited in scope and focusing on bug fixes.
Ceph
Disable the flex driver by default in new clusters (, @leseb)
MDB controller to use namespace for checking ceph status (, @ashishranjan738)
CSI liveness container socket file (, @Madhu-1)
Add list of unusable directories paths (, @galexrt)
Remove helm incompatible chars from values.yaml (, @k0da)
Fail nfs ganesha if CephFS is not configured  (, @leseb)
Make lifecycle hook chown less verbose for OSDs (, @leseb)
Configure LVM settings for rhel8 base image (, @travisn)
Make kubelet path configurable in operator for csi (, @Madhu-1)
OSD pods should always use hostname for node selector (, @travisn)
Deactivate device from lvm when OSD pods are shutting down (, @sp98)
Add CephNFS to OLM's CSV (, @rohantmp)
Tolerations for drain detection canaries (, @rohantmp)
Enable ceph-volume debug logs (, @leseb)
Add documentation for CSI upgrades from v1.0 (, @Madhu-1)
Add a new skipUpgradeChecks property to allow forcing upgrades (, @leseb)
Include CSI image in helm chart values (, @Madhu-1)
Use HTTP port if SSL is disabled (, @krig)
Enable SSL for dashboard by default (, @krig)
Enable msgr2 properly during upgrades (, @leseb)
Nautilus v14.2.4 is the default Ceph image (, @leseb)
Ensure the ceph-csi secret exists on upgrade (, @travisn)
Disable the min PG warning if the pg_autoscaler is enabled (, @leseb)
Disable the warning for bluestore warn on legacy statfs (, @leseb)
NFS
Added an example to consume the nfs export created by nfs operator (, @rohan47)"
"ceph: adds retry to ObjectUser creation

retry ObjectUser creation as long as valid input is provided
or it times out. Retry every 15sec for 5min.

integration test creates ObjectUser before ObjectStore to
ensure that ObjectUser waits for ObjectStore to be created
and available

Closes: https://github.com/rook/rook/issues/3937
Signed-off-by: Umanga Chapagain <chapagainumanga@gmail.com>
(cherry picked from commit 6dd474d6f4bd2a7adf8b64f311aecd590fe324bc)
ceph: fixes mon failover test

Real mons and canary both have the same rook-ceph-mon label.
It creates a confusion while retrieving list of mon deploymets
using label selector. This commit adds a check to remove canary
deployments from the deployment list.

Signed-off-by: Umanga Chapagain <chapagainumanga@gmail.com>
(cherry picked from commit c90c5f87115055eb003fd6d61e09962cc2359341)
Ceph: Create ObjectStore before ObjectStoreUser

Signed-off-by: Umanga Chapagain <chapagainumanga@gmail.com>
(cherry picked from commit 69c1c4c8ffe5e93e4b5cda39e41683555a055f33)
ceph: create csi keys and secrets for external cluster

Once the cluster is connected, we need to create the CSI keys so that we
can provide persistent storage to containers, via ceph csi.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 10c57f834d7e2ab85e03b713573054e9de785ae3)
ceph: skip osd prepare job creation if osd daemon exists for the pvc

When an orchestration is restarted or retriggered and starts new osd prepare pods, they are unable to start because the device is already in use by the osd daemon pods.
This fix simple skips the osd prepare pod creation if the daemon is already running.

Signed-off-by: Santosh Pillai <sapillai@redhat.com>
(cherry picked from commit 26360689f59370d3c1b6739f2fb0e5fe119f9536)
ceph: fix error message

Re-phrase error message and use %q to put the var into quotes.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 386ec120326719e1330a2252f593414a603f8e53)
ceph: add missing errors

The current code wasn't returning the full error properly.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit de172b96e874e9cc582f40d7b3965ef221bf64fb)
ceph: hide wrong error

WriteConnectionConfig() is called after the controller starts and thus
the 'osd find' command fails to complete because there is no ceph.conf
or key on the operator.
Let's skip this error print if that's the case since it's misleading and
polluting the logs.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit d8b5d524383697dacba7d554abcf66aaace8d727)
ceph: print the full err fields

Let's print the whole struct and its fields.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit f45bdb119d71438c213c18b2f96fbd8ec593c2c3)
ceph: use %q to print

Since I was parsing this file with the previous commits let's add some
cosmetic changes.

%q is more readable since it doubles quotes the variable.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 7dac59f68e0ad21443b04f412b3882889efeadb4)
ceph: Updated storage utilization thresholds and timings

This PR mainly takes a proactive approach to
alert the user to take action when the cluster
utilizartion is getting close to the maximum capacity.
Since ceph stops I/O at 95% utilization, the user should
be warned before it.

Signed-off-by: Anmol Sachan <anmol13694@gmail.com>
(cherry picked from commit 09af8320857b1d0d34560a91e564628a79ec3501)
Revert ""ceph: osd hide 'restorecon' when necessary""

This reverts commit d224fbdef1a7711df8ab0ad6d49b298e7f9b92db.
Since https://github.com/ceph/ceph/pull/31421, the monkey patching of
'restorecon' is not needed anymore.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 76c33e0f851d6199cc786805c021e0a20ba5ebb4)
ceph: add CEPH_VOLUME_SKIP_RESTORECON env var

This will tell ceph-volume not to run any restorecon commands.

This relies on https://github.com/ceph/ceph/pull/31421

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit a0fdf1bb5f42228c387b300d8e9fa421381cf5c1)
Ceph: Fix topologyAware in clusterdisruption package does not respect the rook topolgy prefix.

Allow the clusterdisruption package to recognize node topologies other than zone.

Signed-off-by: Rohan CJ <rohantmp@gmail.com>
Ceph: Fix node name checking in the clusterdisruption controller.

Signed-off-by: Rohan CJ <rohantmp@gmail.com>
Ceph: Add node topology labels to the drain-canary.

This serves to make the drain-canary selectable by failure domain.

Signed-off-by: Rohan CJ <rohantmp@gmail.com>
Ceph: Set the drain-canaries deployment ownerReference to the rook operator.

The drain canary was not being garbage collected properly.

Signed-off-by: Rohan CJ <rohantmp@gmail.com>
Ceph: Clean up canaries on nodes that no longer have OSDs or when the node is deleted.

This prevents long-lasting false positives that prevent the ordered progression
of drains.

Signed-off-by: Rohan CJ <rohantmp@gmail.com>
ceph: update lvm filter

The following commit from LVM
https://github.com/lvmteam/lvm2/commit/08396b4bce45fb8311979250623f04ec0ddb628c#diff-13c602a6258e57ce666a240e67c44f38
updated the lvm.conf and thus changed our filter. So now it does not
match anymore.
Updating the filter to match fixes that issue.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 8c3db31e35e673d3dbb4efb70c11bbeedc7cc31a)
Ceph: Ensure draining state is set and checked correctly.

- Checking whether drain was incorrectly checked precense in map instead
  of string length. The actual zero value was an empty string.
- Unsetting drain did not check if the cluster was clean.

Signed-off-by: Rohan CJ <rohantmp@gmail.com>
(cherry picked from commit e51e9f3ec93b5d170ba2ea3dce39d41a0517e8fe)
Ceph: Fix bug: clusterdisruption noout timestamp was being reset periodically

The timestamp was being periodically cleared and reset, so the noout never expired.

Signed-off-by: Rohan CJ <rohantmp@gmail.com>
(cherry picked from commit e8198d44d506a8673816708a9df3196b488ba824)
k8sutil: cmdreporter: properly set app name

The app name was not being set in k8sutil's cmdreporter code, resulting
in jobs being labeled `app=` with no name. Change cmdreporter's `New`
method to validate the contents of the config struct and not the inputs
to the `New` method to help prevent an issue like this from creeping up
in the future.

Signed-off-by: Blaine Gardner <blaine.gardner@suse.com>
(cherry picked from commit 71573077d30a2b691865dd4f26939b8390442059)
ceph: add anti-affinity for the example of osds on pvcs

OSDs on PVCs need some anti-affinity or other node affinity in order
to attempt to spread the OSDs across nodes. The OSD anti-affinity
is only effective when the number of OSDs matches the node count,
but at least it is a start.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit dd04c5f1bcb19b733a64d2bf2b5384ec5bd1ca6e)
ceph: release the LV immediately after the osd process exits

When the OSD is running on a PVC, the LV needs to be released immediately
after the OSD process exits. The cleanup was being skipped when the OSD
process exited and returning an error rather than allowing the
LV cleanup to proceed.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 9eea60f9f4ec1a8744bdcf2e80b68424621dc71b)
ceph: stop osd process more quickly during pod shutdown

The OSD needs to shut down quickly during upgrade, or other scenarios
where the OSD is being restarted. To facilitate this fast shutdown,
rook will run kill -9 on the osd process. The Ceph OSD is designed
to be safe even when killed like this. This allows the
ECONNREFUSED to be returned sooner, which will redirect the OSD
traffic to other OSDs and cause less downtime.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit ba6fcffd8fa3f8ac9cd9b597dbd17a2740674697)
build: set the v1.1.7 release tag

With the v1.1.7 release we update the manifests with the new tag.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.1.7 is a patch release limited in scope and focusing on bug fixes.
Ceph
Skip osd prepare job creation if osd daemon exists for the pvc (, @sp98)
Stop osd process more quickly during pod shutdown to reduce IO unresponsiveness (, @travisn)
Add osd anti-affinity to the example of OSDs on PVCs (, @travisn)
Properly set app name on the cmdreporter (, @BlaineEXE)
Ensure disruption draining state is set and checked correctly (, @rohantmp)
Update LVM filter for OSDs on PVCs (, @leseb)
Fix topology logic for disruption drains (, @rohantmp)
Skip restorecon during ceph-volume configuration (, @leseb)
Added a note around snapshot CRD cleanup (, @mohahmed13)
Storage utilization alert threshold and timing updated (, @anmolsachan)
Silence disruption errors if necessary and add missing errors (, @leseb)
Create csi keys and secrets for external cluster (, @leseb)
Add retry to ObjectUser creation (, @umangachapagain)"
"docs: update docs/yaml to v0.6.1
Not create rbac roles on k8s cluster that have rbac disabled.

Fixes https://github.com/rook/rook/issues/1221","Rook v0.6.2 is a patch release limited in scope with one bug fix.
Improvements
Allow Rook to run when RBAC is disabled in the Kubernetes cluster (@kokhang)"
"build: update manifest-tools version to v1.0.2

This updates the manifest-tools from v1.0.0 to v1.0.2 to
pickup the following fix
https://github.com/estesp/manifest-tool/pull/90.

This currently prevents the build to push images to Docker
hub.

Resolves

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit e5ba1fa7a837c8e25c860c36124e034419fd3c63)
tests: fix minor bugs

- `helm_read` is not a command, but a variable
- If `helm` was installed in `helm.sh up`, the following `heml.sh clean`
  fails since `helm_rest` can't find the installed `helm`.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 7bd17c4806fa23cd5f0084a1226243ba4ca802c8)
ceph: prevent pre-exisiting lvms from wipe

Ceph integration test tries to wipe all lvms including
the ones that are not related to this test.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 7e4f32790db209b071f15dce75082b4d60314199)
ceph: suppress shellcheck warnings

Suppress the following shellcheck warnings.

https://github.com/koalaman/shellcheck/wiki/SC2018
https://github.com/koalaman/shellcheck/wiki/SC2019
https://github.com/koalaman/shellcheck/wiki/SC2021

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit ea5177c4a12ec0259617690ed98cbce10e086f69)
ceph: Add example for using a specific partition for storage

The documentation has no example yet about how to use a specific partition

Signed-off-by: András Soltész <soltesz.andras@gmail.com>
(cherry picked from commit a70cafdd9bebdc496343ddd89dcdd10edba71e40)
docs: Fixing path on ceph-quickstart to include rook

Signed-off-by: Josh Cox <josh@webhosting.coop>
(cherry picked from commit 263661adbe5475a9d5e6fa43768d3198769a880e)
ceph: helm add missing subresources to CRD

The subresources field was missing, this was missed in
https://github.com/rook/rook/pull/4964.

The .metadata.generation field is updated if and only if the value at the .spec subpath changes.
Additionally, if the spec does not change, .metadata.generation is not updated.
This is a must-have for the controller-runtime work, if we don't have
this, the generation field will always be incremented, resulting in a
endless reconcile loop.

Closes: https://github.com/rook/rook/issues/5173
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 0e42222c50f03f5407ea76633b6d0cf93675d942)
ceph: update the object store service port during upgrade

In the v1.3 release the target port for the rgw daemons changed to 8080.
The upgrade was skipping the service update anytime the service already existed.
Now the service will be updated with every reconcile to ensure the target port
is correct.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 24789f4c6a9d1284dbcc2802dfc9f5af333c3440)
build: set manifest versions to v1.3.1

Set the manifest version to v1.3.1 for the patch release.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.3.1 is a patch release limited in scope and focusing on bug fixes.
Ceph
Stop the pool controller from staying in a reconcile loop (, @leseb)
Update the rgw service port during upgrade (, @travisn)"
"ceph: default the device set template name to data

In 1.3 we added support for the metadata pvcs, thus requiring the name
to be set on the templates to differentiate between data and metadata.
For backward compatibility we need to assume the template is for data
if it is not set.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 8bb4f603e65b4c6f327dccc8f8c93fa56ec60cce)
ceph: do not enforce osd-memory-target

As of Nautilus Ceph auto-tunes its osd_memory_target on the fly so we don't need to force it.
ROok does not support Mimic anymore so this can be removed.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 062e58e0530456cdc351898083122d8323e2e53f)
ceph: add missing security context to crash collector

The crash collector was missing the security context to properly run on
OCP, thus crashing when trying to post a crash dump.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 0ed8e73942d761edc66b901d6a95fb6c2c9890a8)
ceph: enhancement cleanup with disks

Now, we can not only cleanup monitor data, logs and crashes but the
disks too. As part of the cleanupPolicy CR spec, we have a new setting
called sanitizeDisks which holds more details:

* confirmation: the confirmation message to sanitize disks,
use ""yes-really-sanitize-disks"" to confirm

This will **only** wipe the metadata, so it's a fast cleanup allowing
you to re-install later but won't remove all the data from the drive.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit c799e11032bd6f47ab05a13ba58a940c861018a6)
ceph: add the description how to know whether there is a filesystem on top of a device

It's better to tell users to know whether their devices can be used as OSD
in the quick start guide.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit c3a267788327b39df8ad04d4e6197c8df4317844)
Ceph: Added the missing double quotes in JSON output

Without the double quotes, operator is unable to parse the json output from the script

Signed-off-by: Arun Kumar Mohan <arun.iiird@gmail.com>
(cherry picked from commit 2f195bbdfaaaa5520bc45eebecc4441f94d2fe6e)
ceph: refactor pod deletion to k8sutil package

The pod deletion is needed by other daemons besides the osds,
so we move the helper method into the k8sutil package.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 171910707b1b55fc80f37abf6ecff3a1378d299b)
ceph: set osd health check interval to 60s

The osd health check every 5 min is not frequent enough to respond
quickly enough to osds going down. Reducing the time interval
to one minute for faster response time.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 07f095c77275ea6d4c39c74b4ffbccf14526189e)
ceph: force restart mon pods if on bad node

If a mon is stuck in terminating state on a failed node,
force delete the pod so it can attempt to restart. If
the mon is backed by a PV the mon can start on another
node as well.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 3ab060965c4561daa59af3664a66d42d08fbef90)
ceph: start the cluster monitoring goroutines immediately after restart

The monitoring goroutines that check for mon and osd health,
the ceph cluster status, and the bucket provisioner should
be started immediately with the first reconcile after an
operator restart instead of waiting until the first
reconcile is completed. This way the cluster health will
be monitored even during the first reconcile.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
docs: update the obc provisioner name

The OBC provisioner name changed recently to include the namespace
as a prefix, but the docs were not updated.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 0d1c83c9c37b8ab5b7f744f28139dff90152411b)
ceph: start csi driver in parallel of cluster

The csi driver does not need to be started before the cluster
is created. When the csi driver fails to load, neither should
it prevent the cluster from being created. Therefore, we
initialize the basic constructs in the csi driver that are required
for cluster creation, then start the csi driver in a goroutine
so the cluster creation can continue. If the csi driver fails
or takes a long time to load, it will no longer affect cluster
creation.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 6c249e751b12425602351eae6b393da6973ccaef)
ceph: fix obc additionalConfig field

Some external consumers of Rook-Ceph are using the
lib-bucket-provisioner operator which creates different CRDs for both
objectbuckets.objectbucket.io and objectbucketclaims.objectbucket.io.
They have the `additionalConfig` declared in their spec. Rook-Ceph does
not and thus ignores it.
For the OB creation to work, the `additionalConfig` must be acknowledged
by the operator and populate or initialize it if empty.

This is preventing the following error:

controller.go:190] error syncing 'default/ceph-retain-bucket-converged': error creating OB """": ObjectBucket.objectbucket.io ""obc-default-ceph-retain-bucket-converged"" is invalid: spec.endpoint.additionalConfig: Invalid value: ""null"": spec.endpoint.additionalConfig in body must be of type object: ""null"", requeuing

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit a90c18e0cbca49527f61af829e3d1872827714f6)
obc: Do not delete user for retain policy if it is owner

When obc is deleted, the attached ceph user will be also removed
This will cause obc creation failure for the same bucket since user
was missing. With this patch the user will be retained revoking his permissions

Also removed 'GetBucketPolicy' permission from Allowed action. The same set of
permission is used for denying the owner/old user of OBC. So that in the next
obc request for the bucket, owner can set polciy for the new user

Closes: https://github.com/rook/rook/issues/5510
Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit 9a3ffbaab2425a771f6b2e4c89f7eba9e1deb84a)
ceph: do not use external node IP for mon endpoint

When the cluster is using HostNetworking, Rook was either picking up the
external or internal IP of the node. This resulted in mon endpoints have
public IP addresses. Those IP are not reachable from within the cluster
so OSD/CSI couldn't access the monitors from the configmap endpoint.

Also, exposing the cluster on a public network does not seem realistic,
so sticky with private/internal IP addresses is better.

Closes: https://github.com/rook/rook/issues/5495
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit bfa3b4daf46a3e9dcbc70e19b522354e022fba57)
ceph: add preferred pod anti-affinity on rgw if not host network

If host networking is not enabled add preferred pod anti-affinity on rgw pods to
improve spread of them

Signed-off-by: n.fraison <n.fraison@criteo.com>
(cherry picked from commit c8df6c0fafe73f9e2089e71cc49a00b856594c17)
ceph: fix the document of OSD management

Removing a disk is not mandatory after the data in the corresponding
OSD is moved to other OSDs. It's better to just let users to know it's
safe to remove the disk.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 91e791233687e81c9197d18dc152d5211b2c7c8b)
docs: set the release version to v1.3.5

With the release of v1.3.5 we update the documentation and example
manifests.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.3.5 is a patch release limited in scope and focusing on small feature additions and bug fixes.
Ceph
Use internal node IP for mon endpoint when host networking enabled (, @leseb)
Set preferred anti-affinity for RGW when host networking not enabled (, @ashangit)
Do not delete OBC user for retain policy if the owner (, @thotz)
OBC additionalConfig field initialization (, @leseb)
Start the CSI driver in parallel of cluster configuration (, @travisn)
Handle node failure more gracefully (, @travisn)
Document how to find whether there is a filesystem on a device (, @satoru-takeuchi)
Cleanup disks during uninstall if the confirmation flag is set (, @leseb)
Add missing security context to crash collector for OpenShift (, @leseb)
Do not enforce osd-memory-target (, @leseb)
Default the device set template name to data (, @travisn)"
"ceph: update cephcsi to v2.1.2

Cephcsi v2.1.2 is released with bug fixes,
refer https://github.com/ceph/ceph-csi/releases/tag/v2.1.2
for release details.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 09ccf55453c1f092b6a0d4749c6ee15b52085826)
ceph: check if ok-to-stop even on failure

Even if we cannot determine wheter all the OSDs are running on the host,
we still need to perform the ok-to-stop check. It is far more common to
have more than 3 OSDs anyways.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 5520ee35bb4d6ca442cc5dde78466924f70088cb)
ceph: fix osd number detection on upgrade

If the cluster has 3 OSDs, during the upgrade when the OSD restarts it
will temporarily disappear from the ""ceph versions"" list so we need a
more robust way to list the number of OSDs and always returns the total
number of OSDs.

Closes: https://github.com/rook/rook/issues/5521
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 3c7a25286245d165c5d68d16a66591f80c634038)
ceph: increase liveness probe start delay on OSD

When the cluster is loaded and we restart an OSD, it will need some time
to respond to socket calls, basically more to be ready.
Increasing the initialDelaySeconds of the liveness probe fixes that
issue. For OSD, it waits for 45 sec, where other daemons 10 sec.

Closes: https://github.com/rook/rook/issues/5492
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit c8de7009de053feeee100fc0d5408f140ea9cb31)
ceph: hardcode service port and container port names

When integrating rook with istio, service port names need to be prefixed by their protocol.
Trying to fix this by removing static port names in favor of configurable names.

Closes:

add protocol prefix to service port names, hardcoded as discussed. renamed container ports

Signed-off-by: Alex Flom <alexander.flom@gmail.com>
(cherry picked from commit 9a4d535f09c08a39470bdcc3b3bb37ee2e053d65)
ceph: remove dead osd code

The completeProvisionSkipOSDStart function is no longer used.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit daeb9b56b042b110d11e034a2ad660e11afce46d)
ceph: increase osd size when pvc template increases

When the PVC template increases in size for the storageClassDeviceSet
in the cluster CR, we need to increase the size of the PVC and restart
the OSD. The OSD is restarted by changing a variable on the pod spec
that indicates the desired size of the OSD.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 282a2a374123368123999806da6fe7762f5b0c73)
ceph: do not activate crash module

The mgr crash module is always enabled so we don't need to run the
command again. It saves some orchestration time.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 274903531512fa21b7da7122894e018eb2660679)
ceph: always turn on balancer on octopus

When running Octopus, we still need to turn on the balancer module. The
distinction is tricky, the module is ""enabled"" but it has to be ""turned
on"" and configured.

This was only working when the `pg_autoscaler` module was explicitly
listed in the CephCluster spec mgr section module section but not
automatically configured when running Octopus (the `pg_autoscaler`
module is already enabled).

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 993af443a4e573b3529a598955332e303e8d038e)
ci: auto-detect storage provider

If the PR follows our contribution guideline https://rook.io/docs/rook/master/development-flow.html#commit-structure
and then the PR title contains for example ""ceph: add a feature"", then
the CI will run the ceph storage integration tests.

Closes: https://github.com/rook/rook/issues/5612
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 4e8f7e725d56c2aec5a02e18eb24a4289763177b)
ci: more debug

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 33a90a10d127d896bc4e861573688c58fa414c38)
ceph: introduce new function for cleaning resources

Combining DeleteUser() and DeleteBucket() into single function
Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit 9fccfb0e6f3e0e2cbc4c61c4d8c4b0e342fc6f69)
ceph: remove deleteCephUser() and deleteBucket()

Replacing deleteCephUser() and deleteBucket() with deleteOBCResource()
Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit 07f5aa7a191568b3c29bfbdb37ae1d7815fe7902)
ceph: clean up resources incase of failure

When obc creation fails in Grant() or Provision() the resources such as rgw user or bucket
created while provisioning need to remove.

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit c0e23e0e16337865964d8c1b9ce28c0041498faf)
ceph: remove unlinking user in revoke api for obc

UnlinkUser works if bucket owner is obc user, otherwise it result in mismatch.

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit 96e3d1529e8e01989b849dde5f84657f016c9b3a)
ceph: metadata pvcs use a map instead of slice index

The volume sources for an OSD on PVC were relying on the ordering
of the volume sources slice. While this was working, it was causing
headaches and potential future developer error when being
interpreted incorrectly. The addition of the wal pvc device
would make the issue even more pronounced. Now each PVC used
for the OSD will be identified in a map by name such as data
 and metadata.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 5a02de56218d70de219404512b47a023e32951b1)
nfs: changing the loglevel into INFO

Signed-off-by: Andreas Feldmann <an.feldmann@googlemail.com>
(cherry picked from commit 05cfbf3dda277c635f98636aa459f966f4cd7d92)
ceph: fix script IP parsing

The script wasn't allowing IPs like 192.168.0.2, 0 has part of the
subnet is valid.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 82877f0c02764240ec13a6503457eb002ca3ffc5)
ceph: add the ability to set any pool property

We can now explicitly set any property on a given pool by using the new
Property field in the CephBlockPool Spec.

Also, this fixes the case where both `CephBlockPool` and `CephCluster`
are created at the same time. When Rook creates the pool, the cluster is
still being bootstrapped and the global option
`osd_pool_default_pg_autoscale_mode` has not bee set yet. So the pool
gets created but its `pg_autoscale_mode` property is set to `warn`
instead of `on`.

Closes: https://github.com/rook/rook/issues/5608V
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit c7f255a0e88c482e37bbb4cdc59234deb8349d72)
ceph: update maxMonId if incorrect

When the operator loads the mons and checks for a valid maxMonId
the check of the id against the currently running mons was outdated
from legacy mon ids. The check now has to parse the new id which is
just the letter instead of having a number from legacy mon ids.
Without this fix, the maxMonId would stay incorrect if it was somehow
corrupted.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 0e4c5e1d5883581110f5fd5265e0e21f34fcdec4)
build: set manifest versions to v1.3.6

For the patch release set the manifest versions and docs
to v1.3.6.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.3.6 is a patch release limited in scope and focusing on small feature additions and bug fixes.
Ceph
Increase OSD PVC size when the template size increases (, @travisn)
Update CSI driver to v2.1.2 (, @Madhu-1)
Autocorrect the mon failover id if incorrect (, @travisn)
Add the ability to set any pool property (, @leseb)
OSD metadata pvcs implemented with a map instead of an index (, @travisn)
Clean up OBC resources in case of failure (, @thotz)
Do not activate the crash mgr module (, @leseb)
Always enable the balancer mgr module for Octopus (, @leseb)
Configurable Service Port Names (, @afflom)
Ensure waiting for clean PGs during OSD upgrade in small clusters (, @leseb)
Increase the liveness probe start delay on OSDs (, @leseb)
NFS
Set the log level to info instead of debug (, @aberfeldy)"
"ceph: dont set ownerRef when creating csidriver object

currently, we are setting the rook operator as the
owner on the csidriver objects, as csidriver is cluster
the scoped object we should not set a namespaced object
as owner on cluster scoped object.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit b88373f9f3905ca044cb3d8621e31347cb737b61)
build: update manifests and docs to v1.3.11

With the patch release we update the manifests and documentation
to v1.3.11

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
ci: change name of the disk used in the build

The name of the disk in the CI changed from xvdc to nvme0n1

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.3.11 is a patch release limited in scope to a single bug fix.
Ceph
The Ceph-CSI driver was being unexpectedly removed by the garbage collector in some clusters. For more details to apply a fix during the upgrade to this patch release, see these steps. (, @Madhu-1)"
"ceph: allow running rgw in rook with external mode

We don't fail anymore if the cluster is external and user wants to
bootstrap rgw gateways in Kubernertes.

Closes: https://github.com/rook/rook/issues/6217
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit a51b76889afdae762eaf75d8bbcbcd20343030f1)
ceph: do not change selector labels during upgrade

The selector labels used for mons cannot change during upgrade
or else the upgrade will hang when the cluster is checking
for mon status immediately after the upgrade begins.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit da863e4156bfbe04f76c8a769968c4918aac34e3)
ceph: tweak removeOSDsIfOutAndSafeToRemove wording

- Corrects what I think was a typo (""when then"" -> ""when they"")
- Picks a single tense
- capitalizes OSD

Signed-off-by: Josh McSavaney <me@mcsau.cc>
(cherry picked from commit cc7b07c840629123ce5fcfc9a0ff18bb87ed2f06)
ceph: use truncated node name

Signed-off-by: fanjunwei <fanjunwei@t2cloud.net>
(cherry picked from commit f013add62ec7794e0ed1a9f2ee57506f612be28b)
build: update manifests and docs to v1.4.4

With the patch release we update the manifests and documentation
to v1.4.4

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.4.4 is a patch release limited in scope and focusing on small feature additions and bug fixes.
Ceph
Upgrade to v1.4.3 for cluster-on-pvc hung due to changing label selectors on the mons (, @travisn)
Remove osd status configmap for nodes with long names (, @fanjunwei)
Allow running rgw daemons from an external cluster (, @leseb)"
"external: create ceph cluster namespace

We need to create the namespace with the import script,
As per the documentation

The import script creates the secrets and
cm which is later used by the operator for cluster creation.

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit f9f880e52852d88a8d25819ba99c3a41c443965c)
docs: update the external doc format

Cephobjectstore is not formated correctly
https://rook.io/docs/rook/v1.12/CRDs/Cluster/external-cluster/#connect-to-an-external-object-store

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 8a445ef0cb784c415df777967c0710ebe851d28d)
operator: fix formatting of some logger methods

Some logging instructions use formatting syntax `%q`, but the logging method is
`Info` or `Debug` instead of `Debugf` and `Infof`. As a result, the arguments of
the method were concatenated instead of formatted properly.

Signed-off-by: Lucas Henry <polyedre@disroot.org>
(cherry picked from commit c948183c0e3d9a4729a607649546e799fd52c494)
csi: add holder pods to the list to delete pod

Add holder pods label to the list so that Rook
can get all the pods on the failed node and
force delete the pods stuck in terminating state.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 22bfc9de3d518d640d4beea4c0296ba6ede4fb1d)

# Conflicts:
#	pkg/operator/ceph/cluster/cephstatus_test.go
csi: add nfs pods to the list to delete pod

Add nfs pods label to the list so that Rook
can get all the pods on the failed node and
force delete the pods stuck in terminating state.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 29faca9032a72bed543cb442a2665c9458627c6a)
ci: add detached mode in tmate

with detached mode, we don't need to wait for the
tests to complete. Now, we can get inside tmate before
the tests start and we can monitor the tests.

By default, this mode will wait at the end of the job for
a user to connect and then to terminate the tmate session.
If no user has connected within 10 minutes after the post-job step started,
it will terminate the tmate session and quit gracefully.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit f171e1c037626c58590fba1aae1d06ff2385fd8c)
ci: add github action to free space in runner

adding github action to free space in runner
which will help us avoiding mon low space error

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 334a632ecd34c7bab474b06360a7639aa8f17c2f)
ci: same ceph version in toolbox and cluster-test

Let's use same ceph version(latest Reef) in both
cluster-test and toolbox.yaml so that we don't need
to pull image twice. Alos, github action helper script
was calling `deploy_manifest_with_local_build` which
is required for operator.yaml and not for toolbox.yaml.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit b9c41fd548bc6b14cb89405efdaba3334b9a039f)
multus: use right interface in ci validation

runner version `2.306` had the interface `net`
but somehow version `2.307.1` which is latest
doesn't have `net` it has `eth0*` so using that.

```
cat /proc/net/dev
Inter-|   Receive                                                |  Transmit
 face |bytes    packets errs drop fifo frame compressed multicast|bytes    packets errs drop fifo colls carrier compressed
    lo:       0       0    0    0    0     0          0         0        0       0    0    0    0     0       0          0
 tunl0:       0       0    0    0    0     0          0         0        0       0    0    0    0     0       0          0
  eth0:     446       5    0    0    0     0          0         0        0       0    0    0    0     0       0          0
sh-4.4# grep etho /proc/net/dev
sh-4.4# grep eth0 /proc/net/dev
  eth0:     446       5    0    0    0     0          0         0        0       0    0    0    0     0       0          0
sh-4.4# exit
```

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 4502ea8ee141834a87b91fed3f41517f1d9285f6)
object: avoid creating same bucket for two different OBC

If bucket exists for Provision(), then check whether user in the OBC and
owner of bucket are same.

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit b39e813290ab6ed79c27aa14e80f31b4e8730ae9)
object: unique username for OBC even when preceding OBC was retained

For an OBC's name we cannot simply use the OBC's namespace and name,
because they can be reused, while the preceding bucket might be
retained by reclaimPolicy. (Commit 2733375ca4ef also didn't solve
this issue, as it is an intra-cluster issue.) Therefore we instead
use the OBC's UID which should be unique within the cluster and
across clusters.

Signed-off-by: Sebastian Hasler <sebastian.hasler@stuvus.uni-stuttgart.de>
(cherry picked from commit 041fc1a71ce5fc6c6f7be323fb855642a7c86452)
build: update the release version to v1.11.11

For the patch release, update the docs and examples to
v1.11.11

Signed-off-by: travisn <tnielsen@redhat.com>","Improvements
Rook v1.11.11 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
object: Unique username for OBC even when preceding OBC was retained (, @haslersn)
object: Avoid creating same bucket for two different OBC (, @thotz)
csi: Add csi pods to the list to force delete pod on an unavailable node (, @Madhu-1)
operator: Fix formatting of some logger methods (, @polyedre)"
"test: do not allow go.test parallel dependencies

Dependencies for `make go.test` have to run in order, so call them
explicitly from the target rather than allowing them to be done in
parallel if `make -j` flag is used.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit a818a01a13c04cff5dc89c3ce92fa2cbc4217ce3)
ceph: allow pool replica min size 0 for EC pools

In v1.6 EC pools are being disallowed by the schema since the minimum
is set to 1 on the replicated.size. We expect the replicated.size to be
0 if an EC pool is being created.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 9da066eb3f6350cc9844b128b9362585acb14d85)
ceph: change radosgw-admin workaround log to debug

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 8aef8b756d64e5fc8bbdafca43a495504a0afa3c)
ceph: fix multiple imports

This mops up the last of the multiple-imports within ceph-related
packages, in pkg/daemon/ceph/agent/flexvolume/manager/ceph and
pkg/daemon/ceph/osd.

Signed-off-by: Lars Lehtonen <lars.lehtonen@gmail.com>
(cherry picked from commit bb323de4039c325ba6e40de85d0b48ef375718da)
ceph: revert ""ceph: preserve volume claim template metadata in schema""

This reverts commit a9fb9d20bb3f95f2df3b91df7752f4ce58a8465d. During the
CSV generation we strip the description lines from the CRD spec, however
the 'sed' command relies on the 'descrition' section to operate. Next
commit will fix this.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 341aefc95daa4d3551713da7cfb94c08921eaa80)
ceph: preserve volume claim template metadata in schema

The schema generation was not generating the metadata properties
under the VolumeClaimTemplate type, resulting in the properties being
ignored by the api server. The preserve unknown fields tag was
not working recursively on the volumeClaimTemplates since the subtypes
were defined. Now we post-process the schema so we can preserve
the unknown fields for the volume claim templates metadata.

We now use 'yq' to hot-fix the CRDs, the only 'downside' is that 'yq'
will not preserve the existing formatting, this is a known problem:

https://github.com/mikefarah/yq/issues/465

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 21d6001ed28bb4a86bc3aa7f11ecb8ed19a493e8)
ceph: always apply config flags for mds and rgw

We now always set the config flags on reconcile. Previously we were
looking for non-existing rgw or mds which means that on upgrade we would
never set those flags. However, we want to set those flags on ""old""
cluster that got upgraded.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit ca1cf6672e80cc1bab764d2d29751cdb4906e89d)
ceph: add option to toggle host networking in csi plugin pods

As host networking is no longer necessary for CSI driver,
it will be disabled by default.
An option CSI_ENABLE_HOST_NETWORK is added to rook-ceph-operator-config
configmap and enableCSIHostNetwork in helm chart values.yaml to
enable/disable host network in CSI plugin pods.

Closes:

Signed-off-by: Rakshith R <rar@redhat.com>
(cherry picked from commit f5a3f6fa71b922bc8a348cb532d86b4da0539294)
ceph: fix healthcheck incase ssl enabled for rgw

In case ssl enabled for RGW, bucket healthcheck won't work since access is denied from the server.
In that case configure S3 agent using ""InsecureSkipVerify: true"" option.

Fixes: 7288
Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit bcbe707bcba2d663ac2a1727779864af5c7fd02c)
ceph: removing serviceIP from bucketChecker struct

serviceIP is not used by the health bucket checker, hence removing it.

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit 70f94a2d3cceda4ec157d36fb204287576269308)
ceph: use v14 again

Since Rook 1.6 is using raw mode for simple OSD scenarios we can use v14
again without having issue with ceph-volume.

We keep the upgraade test with v14.2.12 since Rook 1.5 does not have the
raw code to deploy OSDs.

Closes: https://github.com/rook/rook/issues/7669
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit d35ddcbecc16cda28fbd2b0515d7f3f666617d33)
ci: add rbd-mirror integration test

Long due but finally there, the CI now test the block mirroring between
2 clusters.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 9a28e130b6c2239f3c86950c8ca57d9bd897f32f)
build: fix new sed line to work on mac

The POSIX spec for sed requires the flag -i to have a string specified.
`sed -i'' -e '<expression>'` is portable

The POSIX spec for sed also requires the insert ""i"" option to have
newlines. The following is portable:
```
sed -i'' -e '<line-num>i\
text'
```

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 02e2a3d2eb9baa8cef6cda46fc1e5eb1b3089082)
ci: add missing condition for action

Let's skip multi-cluster-mirroring if skip-ci label is set.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 2b87efef89611f61213a8f27c155660171ebb6a2)
ci: build and run various make commands on MacOS

Introducing a small action on MacOS to help us catch errors with various
'make' command on OSX, most notably 'sed' versus 'gnu-sed'.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 57131e1a90be777689def73e22ceb3f63ec61f1d)
ceph: allow passing 'osd-crush-initial-weight'

Ceph support the option '--osd-crush-initial-weight' upon OSD start,
which sets an explicit weight (in TiB units) to specific OSD. Allow
passing this option all the way from the user (similar to
'DeviceClass'), for the special case where end users wants it cluster
to have non-even balance over specific OSDs (e.g., one of the OSDs is
placed over a partition alongside OS-partition).

ROOK issue: https://github.com/rook/rook/issues/7448

Signed-off-by: Shachar Sharon <ssharon@redhat.com>
(cherry picked from commit 9766e9b8fb2c03ee2cd02c8dade569c1d41cbb2e)
ceph: use ceph-volume v2 report format for Pacific

This fixes cases where raw provisioning mode still cannot be used for
Rook v1.6 and Ceph Pacific clusters where json.Unmarshal fails to read
the ceph-volume output after OSD provisioning.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit b4946aba95cc24488e14df834d309f5f824d6d62)
ceph: use v16.2.1 for operator image

This is the first bugfix release in the Pacific stable series. It
addresses a security vulnerability in the Ceph authentication framework.
 We recommend users to update to this release. For a detailed release
notes with links & changelog please refer to the official blog entry at
https://ceph.io/releases/v16-2-1-pacific-released.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 4a425eddca6ce92f449ae773a1a5638ce9492d02)
ceph: stop vendoring

We generate vendor directory in building process. It doesn't reduce
build time. In addition, we have encountered some vendoring-related
problems. So let's stop vendoring.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 8a48dbb00d3451fc2149cac95820b052a8386463)
ceph: allow any device class for the osds in a pool

The device class can be any arbitrary value for a pool, depending
on the device class either automatically detected for the OSDs
or an arbitrary device class applied to OSDs in the cluster.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 213b1b4339576ee4537cbd46395259ea2c4a00b3)
build: only build linux platform

No need to include darwin and windows in the list of platforms
since rook is only containerized and expected to run in a linux
environment.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 2398b1636b67432d56804a34529a58ac0a9ba123)
ceph: update cephcsi to v3.3.1

As we have cephcsi v3.3.1 release
with couple of bug fixes and a CVE fix
updating the cephcsi to latest release.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 6bc3c1ac3a629218f421a3d3afa348f4296927f7)
ceph: update OSDs reconcile

OSDs not automatically started when adding nodes to existing cluster.
Call the helper NormalizeCrushName(name) to make sure the node name can match the name in the crush map before querying for the node in the crush map, and reconcile when new nodes get added.

Closes: https://github.com/rook/rook/issues/7462
Signed-off-by: parth-gr <partharora1010@gmail.com>
(cherry picked from commit f6bd25ae01c2f295d602fc16c9d1eba11b9edfc0)
ceph: operator loops forever over existing nodes

When the node get added to the cluster the operator always watches for node events and starts a reconcile when a node is ready.
Checking the Node if they already have OSDs present and stopping them from reconcile.

Closes: https://github.com/rook/rook/issues/7534
Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 80a9b26bfdf7fb3ea9a503eedddcfc37169b37d8)
ceph: example manifests deploy with v15.2.11

The latest octopus release is v15.2.11 so we should use
it in the default examples to pick up the latest fixes.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 43594adbbbc38c4247a02fd61dc9eab468f5a738)
docs: document command for detecting resources still in use

have found many times that the namespaces is in Terminating state even after trying to clean properly. Added the command to check this and remove all dangling objects

Signed-off-by: Alex Punnen <alexcpn@gmail.com>
(cherry picked from commit ffc0a252b30c87d655ad13a1c8eb49e113848610)
build: set release version to v1.6.1

The new release version for documentation and example manifests
is v1.6.1

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.6.1 is a patch release limited in scope and focusing on small feature additions and bug fixes.
Ceph
Disable host networking by default in the CSI plugin with option to enable (, @Rakshith-R)
Fix the schema for erasure-coded pools so replication size is not required (, @travisn)
Improve node watcher for adding new OSDs (, @parth-gr)
Operator base image updated to v16.2.1 (, @leseb)
Deployment examples updated to Ceph v15.2.11 (, @travisn)
Update Ceph-CSI to v3.3.1 (, @Madhu-1)
Allow any device class for the OSDs in a pool instead of restricting the schema (, @travisn)
Fix metadata OSDs for Ceph Pacific (, @BlaineEXE)
Allow setting the initial CRUSH weight for an OSD (, @synarete)
Fix object store health check in case SSL is enabled (, @thotz)
Upgrades now ensure latest config flags are set for MDS and RGW (, @leseb)
Suppress noisy RGW log entry for radosgw-admin commands (, @BlaineEXE)"
"ceph: skip smoke suite on k8s 1.11

The smoke suite relies on the csi driver for all the file and block
tests. In the release branch on k8s 1.11 we only need to run the
flex suite and can skip the smoke suite.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit c13d1edf229596885190fa3a722a083b83fdb1ad)
ceph: check underlaying block status

During the initialization encrypted OSD initialization sequence, we check
for the presence of the encrypted container. If it exists we don't try
  to open it again since this will result in an error.
However, there is another case we need to handle, when the underlying
device is gone. For instance, if the pod/PV couple was drained and move
back, living the orphan dm. Once the pod comes back, the dm is still
present and perfectly matches. Unfortunately, the underlying disk is
different and thus the dm must be removed and the disk re-opened.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 95ac992e48ccfd6f0872292755d6b50ce19395d1)
ceph: prevent closing of channel more than once

Once we close the channel for the monitoring daemons, we update the
monitoring status so as to not call them again.

This is to prevent ""close of closed channel"" panic.

Co-authored-by: Travis Nielsen <tnielsen@redhat.com>
Signed-off-by: Nitin Goyal <nigoyal@redhat.com>
Signed-off-by: Raghavendra Talur <raghavendra.talur@gmail.com>
(cherry picked from commit 0c21abd535319ce4849d24a8b3a08d4555c69863)
edgefs: edgefs deprecation documentation fix

Update EdgeFS status to 'Deprecated'

Signed-off-by: Anton Skriptsov <anton.skriptsov@gmail.com>
(cherry picked from commit d9ba495425f52091f687e89d2534919131b6de3c)
docs: update obc documentation

Remove wrong information from OBC CRD example

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit e837082de713b64f7f4143fd668bad93c9595f19)
ceph: support IPv6 single-stack for ceph

Add --ms-bind-ipv6 true args to mom, osd, mgr, object, mds, rbd daemons.

Signed-off-by: Santosh Pillai <sapillai@redhat.com>
(cherry picked from commit 70c5f70701e487e579143d27296da2d6517c1ad4)
ci: fix an intermittent failure of ceph flex suite

Sometimes CephFlexSuite fails with the following backtrace.

```
--- FAIL: TestCephFlexSuite (584.14s)
    --- PASS: TestCephFlexSuite/TestBlockStorageMountUnMountForDifferentAccessModes (163.66s)
    --- PASS: TestCephFlexSuite/TestBlockStorageMountUnMountForStatefulSets (83.21s)
    --- FAIL: TestCephFlexSuite/TestFileSystem (119.51s)
        ceph_base_file_test.go:487:
                Error Trace:    ceph_base_file_test.go:487
                                                        ceph_base_file_test.go:265
                                                        ceph_flex_test.go:113
                Error:          Expected nil, but got: &errors.errorString{s:""kubectl exec command bash failed on pod rook-ceph-tools in namespace flex-ns. Failed to run: kubectl [exec -n flex-ns rook-ceph-tools -- bash -c mount -t ceph -o mds_namespace=smoke-test-fs,name=admin,secret=$(grep key /etc/ceph/keyring | awk '{print $3}') $(grep mon_host /etc/ceph/ceph.conf | awk '{print $3}'):/ /tmp/testrook] : exit status 32""}
                Test:           TestCephFlexSuite/TestFileSystem
```

It's due to insufficient retry of mount.

There is only one difference between CI logs of both ""PASS"" cases and ""FAIL"" cases.

The log of PASS cases:
```
2020-09-30 21:47:03.369019 D | exec: Running command: kubectl exec -n flex-ns rook-ceph-tools -- bash -c mount -t ceph -o mds_namespace=smoke-test-fs,name=admin,secret=$(grep key /etc/ceph/keyring | awk '{print $3}') $(grep mon_host /etc/ceph/ceph.conf | awk '{print $3}'):/ /tmp/testrook
2020-09-30 21:47:03.679359 D | exec: Running command: kubectl exec -n flex-ns rook-ceph-tools -- mkdir -p /tmp/testrook/foo
```

The log of FAIL cases:
```
2020-09-30 21:49:21.591702 D | exec: Running command: kubectl exec -n flex-ns rook-ceph-tools -- bash -c mount -t ceph -o mds_namespace=smoke-test-fs,name=admin,secret=$(grep key /etc/ceph/keyring | awk '{print $3}') $(grep mon_host /etc/ceph/ceph.conf | awk '{print $3}'):/ /tmp/testrook
2020-09-30 21:49:36.592161 I | exec: timeout waiting for process kubectl to return. Sending interrupt signal to the process
2020-09-30 21:49:40.355420 E | utils: Failed to execute: kubectl [exec -n flex-ns rook-ceph-tools -- bash -c mount -t ceph -o mds_namespace=smoke-test-fs,name=admin,secret=$(grep key /etc/ceph/keyring | awk '{print $3}') $(grep mon_host /etc/ceph/ceph.conf | awk '{print $3}'):/ /tmp/testrook] : timeout waiting for the command kubectl to return.
```

Everything looks fine before showing the above-mentioned error in FAIL cases.
In addition, this problem hasn't happened in high-spec local machine
over 10 times.

Related issue: 6358

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>

(cherry picked from commit 9cd42a17a405409df4961c14c122383b3fbf03f0)
docs: updated badge url

This updates the badge image url and removes one differently styled
badge design param.

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit 41a2f7b6ada0dc21e3f99b4c975c1dfb8c381d28)
docs: add a badge for graduation status

To more quickly show the graduation status on the main readme,
we add a badge that shows rook is graduated.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 3bbd14efb6192a9116bf805742536ddb59884abd)
ceph: reduce s3 max retry

When rgw is not responding the aws-sdk retries using exponential
backoff. Having 20 retries means we would wait for a while (hours) to
eventually fail. This is a problem as we cannot reflect the status of
the bucket properly.
Now we use 5 max retries which means around 8 seconds.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit d01a35cadda98dcfe62dee31ee01a10f804b81cb)
ceph: log stderr in error when exec with output file

In order to properly debug errors, we need to merge stderr inside the
`err` reported so that we don't only see the stdout.
We were doing this when executing without file output, doing the same
for the output file.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 9b980d136fb1e738b8a464baba15c305f24fb56b)
docs: update main readme for graduation

There are several small updates to the readme, including changing
a reference of incubation status to graduation, removing the
framework as an independently listed status since the operator
versioning is the critical point that depends on the framework,
moving the security reporting under bug reports, and reordering
cassandra to be alphabetically before cockroach.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit efed0eff08ee6f46485e3c7b5db007746477134d)
docs: remove unused documentation for test clusters

Rook should not be maintaining documentation for starting a K8s cluster
such as minikube or kubeadm. For simplicity, we just link to their documentation
to help them get started. Also removed is a section in the dev guide that
nobody has used for debugging operators locally.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 193def940dadda2a170614c1f31f2beb9e2619d1)
docs: clarify that the flex driver is disabled by default

The ceph flex driver has been disabled by default for some time.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 13da75a1db779620cb457f1cb5d21824145c52cd)
docs: move ceph common issues subtopics under ceph tools

The ceph tools were split across different areas of the table of contents
that was confusing. Now the Ceph tools and troubleshooting guides are all
found under the Ceph tools.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit c1d553c3180c51bd1f01d71db4f87f3ac75acde9)
docs: remove obsolete reference to v1alpha2 in design doc

The storageClassDeviceSets unnecessarily references the obsolete v1alpha2
version.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 2f86051b1c9c910aeb2c616551357ca53955afd6)
ceph: adding '--upgrade' option to external script

An '--upgrade' option is added to the option list, which upgrades the user
permissions (caps) to match newer version. Will try to detect
'rgw-pool-prefix' or user can provide it through the argument.

Segregated the command line arguments into three groups, common, output and
upgrade

Signed-off-by: Arun Kumar Mohan <amohan@redhat.com>
(cherry picked from commit fbb8af12e14b098644b771ae7e5bb92fe2aa4e44)
ceph: add ceph-volume log to non-pvc scenario

When deploying on non-PVC, we still need to gather c-v logs on failures.
Now if the bootstrap fails, the c-v log will be printed.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit b623133fb66da28dfce7a82ca7fbfc38443ef5da)
ceph: use raw mode instead of lvm mode even if lv-backed PVC

It can simplify OSD management in many ways and can avoid many problems
that come from LVM.

Closes: https://github.com/rook/rook/issues/5939
Signed-off-by: Yuji Ito <llamerada.jp@gmail.com>
Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit b9f29349ed1d9da7b0bd8bc5f9b56b03d6451bfc)
ceph: reduce the number of provisioner pods in small K8s cluster

The default number of provisioner pods are 2. When there is only one node,
for example the CI environment, one of these becomes Pending state.
Although it's harmless, it's better to reduce this value to 1.

Closes: https://github.com/rook/rook/issues/6294

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit e22bedbd9b7bc03c7b468a523756ec8441a3443d)
build: update manifests for v1.4.6 release

The manifests and docs are now updated for the v1.4.6 release.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.4.6 is a patch release limited in scope and focusing on small feature additions and bug fixes.
Ceph
Support IPv6 single-stack (, @sp98)
Only start a single CSI provisioner in single-node test clusters (, @satoru-takeuchi)
Raw mode OSD on LV-backed PVC (, @satoru-takeuchi)
Capture ceph-volume detailed log in non-pvc scenario on failure (, @leseb)
Add --upgrade option to external cluster script (, @aruniiird)
Capture stderr when executing ceph commands and write to log (, @leseb)
Reduce the retry count for the bucket health check for more accurate status (, @leseb)
Prevent closing of monitoring channel more than once (, @raghavendra-talur)
Check underlying block status for encrypted OSDs (, @leseb)"
"ceph: run helm tests without admission controller

The helm tests frequently hit an issue with the admission controller.
The admission controller is also enabled in other test suites, so
it seems safe enough to disable for the helm test suite.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 7cec49b2d817d40e638175ffef2aaf467652cfc5)
ceph: scaling down nfs deployment was failing

When scaling down the nfs deployment gracefully, the wrong error code was checked,
resulting in a failed scaling down even though the condition was expected.
Now we check properly if the deployment was removed properly.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 4b1cf51ef1b8d28a5f939f236dee49de85be1809)
ceph: update blockPoolChannel before starting the mirror monitoring

update blockPoolChannel monitoringRunning field to `true` before
starting the goroutine to monitor mirroring

Signed-off-by: Santosh Pillai <sapillai@redhat.com>
(cherry picked from commit 8d48a9e10ad749c94c5f217eb459ca379aee15c0)
ceph: disable mirroring

The PR disables mirroring on a pool when PoolSpec.Mirroring.Enabled
is set to false
- disable mirroring on the pool for `Mirroring.Mode == pool`
- Add warning for the user to disable mirroring manually for `Mirroring.Mode == image`
- Stop the mirroring health checker goroutine
- Reset the mirroring health check status in the CR.

Signed-off-by: Santosh Pillai <sapillai@redhat.com>
(cherry picked from commit 05b0ae09bbb449e1e7594998649d1ca474109280)
ceph: enable debug for adminops client if the rook loglevel <= debug

The debug for adminOps client can be enabled by setting `Debug` flag.
In this PR, it is enabled for OBC and cephobjectstore not healthchecker.
Also add similar changes while calling `NewS3Agent` in the bucket
provisioner code path.

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit 560f44b07e154ad94af6d736ecc35501560fdaaa)
ceph: fetch rgw port from cephobjectstore crd for obc

Currently `setObjectStorePort()` queries port from RGW service and
picks up the first port from the list, other places of the code
prefers for TLS, if it is enabled so for OBC's we end up having
`https` endpoint with non-secure port.

Fixes:
Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit e4a9b4bac1fb67da936c1261087a62f056fd0774)
ceph: proxy ceph commands when multus is configured

When the CephCluster is configured with Multus and multiple networks are
used to deploy Ceph some commands are failing to be executed from the
Operator. These commands, in particular, `radosgw-admin` ones need access
to the ""ceph public network"" to talk to OSDs. Unfortunately, the
Rook-Ceph Operator does not have the network annotations and thus
doesn't have the networks available and cannot reach OSDs. So the commands end
up hanging and eventually time out.
Applying the annotations to the Operator pod is possible but will result
in restarting the operator too and this should be avoided at all costs.
Also, applying the annotations beforehand is not possible since the
Multus declaration is in the CephCluster specification. So we would have
no idea what to do.

So the current approach runs a new sidecar container in the mgr pod to
act as a proxy for ""some"" ceph commands, only the `radosgw-admin` ones
for multi-site setup. This is a small container with admin access
running idle waiting for commands to be executed. In a sense, it is
similar to the toolbox but we didn't want to clearly expose it, so
running as a sidecar is quite nice.

Proxying command is obviously not always recommended since we add an
extra hop in the network path. Now each request has to go from the
operator pod to the API server to the remote pod to Ceph. Previously,
the command only goes from the operator to Ceph.

It's worth noting that external mode is not impacted since no rgw pod
is configured. This scenario is flexible and allows us to scale
pretty well since any CephCluster with Multus will see its mgr sidecar
deployed and can then talk to Ceph. We are not limited.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit bd58790c318c3592030b2f94f35aa957fb3946f4)
ceph: fix pdb of RGW instances

It's better to create PDB of RGW if ObjectStore's `instances` field is 2.
In the current implementation, at least three desired RGW instances are needed
to create this. If `instances` is 1, we can still safely skip the creation
of PDB because it's useless.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 7885b775ec66aca12a5ca64e4406df3f86b280ac)
ceph: always rehydrate the access and secret keys

Prior to that the access and secret keys were left empty if the user
already existed, which led to updating the secret with empty values when
the operator restarts.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 1e45eaa4360b63a23f256b96ad34946e9ca35ab8)
ceph: get the s3 user first instead of create

The Rados Gateway Admin OPS API has changed its behavior from Nautilus
to Pacific. Calling user create on an existing user wil generate
additional keys to the user on Nautilus. Where in Pacific it will report
an error with UserAlreadyExists.
So to handle both scenarios, let's first get the user, and if the user
does not exist (NoSuchUser) we then create it.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit f074c12c4d1c655d38cd1599afeb0ffa74cd3086)
ceph: add missing spec to the object context

The CephClusterSpec was missing from the object context, so the check
for the network provider in RunAdminCommandNoMultisite() was not
discovering the network property correctly.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit ad54ed8aacf6d6e7fc49657568ebc051a0f2ae76)
ceph: create pdb for all rgw and cephfs

Fix the improper breaking from the loops to add pdbs.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 5418d2dceb5276e8b62aab5d70e03ce109bbd8a3)
ceph: add missing ceph cluster spec

The lib-bucket-provisioner was missing the cephCluster spec so the check
in RunAdminCommandNoMultisite would fail.
This is similar to ad54ed8aacf6d6e7fc49657568ebc051a0f2ae76 just a
different place.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 1fd76a11685f950425bdfc1db43da37f5aeda58b)
ceph: mount dev directory in lvm mode osd on  osd on lv-backed pvc

""/dev/"" is only mounted on OSD on device. However, this directory
should also be mounted on OSD on LV-backed PVC.

Closes: https://github.com/rook/rook/issues/8264

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 763b076c754d1091e4418539b404a9441918c27f)
docs: add the example of pvc-based ceph cluster on top of bare metal

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit fe8efeb028004228a43466a5b89f790c4f6f0154)
ceph: create new keyring for osd

when osd pods removed, they are not able
to add back due to missing `ceph auth`
or different `ceph auth`.

this commit mounts the secret `rook-ceph-admin-keyring`
inside the osd activate initcontainer which has
admin keyring.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit d254c935e83e92d024dde9e3ec74e44a16548b57)
ceph: proxy rbd commands when multus is enabled

We now pass the networking spec to the clusterInfo so that the executor
can make the right decision on how to execute a command.
This is a small change that allows us to remove the CephBlockPool CR
since it's checking for rbd images. On a Multus deployment, the operator
does not have the network annotations, thus has no access to the OSD
network then rbd commands are hanging forever.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 19001609395247e68d0cbf2a59170815549b3022)
ceph: reconcile mgr services with every reconcile

When there are multiple mgr daemons, the mgr sidecar owns reconciling
the services for the active mgr. However, for efficiency the sidecar
only reconciles the services if the active mgr changes. Now the operator
will also reconcile the mgr services to ensure that services are re-created
after being deleted, or otherwise in an incorrect state.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 107f89260d296e88bb490e5458c89a15bdb39abc)
ceph: create rook-ceph-system ClusterRoleBinding in operator namespace

Operator can run on a namespace not named rook-ceph
The ClusterRoleBinding muste rely on .Release.Namespace helm value
Also move the ClusterRole and ClusterRoleBinding in appropriate yaml file

Signed-off-by: n.fraison <n.fraison@criteo.com>
(cherry picked from commit db2c8792b025ff33c9aab909f3c23b86442d66bd)
ci: change yq path to /usr/local/bin/yq

Override the default install of yq that may come on the host

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
ceph: add support for tls certs via k8s tls secrets for rgw

With this PR the RGW can accept TLS certs as K8s TLS secrets

Fixes: 2079
Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit 1665ad6ea7d7e58ec7a4d8e5a35720452bee3d2a)
Signed-off-by: Alexander Trost <galexrt@googlemail.com>
ceph: update PodDisruptionBudget from v1beta1 to v1

This commit update the PodDisruptionBudget policy to use version v1
Updated to policy/v1 as policy/v1beta1 PodDisruptionBudget is deprecated in v1.21+

Closes: https://github.com/rook/rook/issues/7917
Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 77813f709353f73208cfab99c2ad7b99049f94db)
ceph: disable raw mode for disks

Even if we can use raw mode, do NOT use raw mode on disks. Ceph bluestore disks can
sometimes appear as though they have ""phantom"" Atari (AHDI) partitions created on them
when they don't in reality. This is due to a series of bugs in the Linux kernel when it
is built with Atari support enabled. This behavior does not appear for raw mode OSDs on
partitions, and we need the raw mode to create partition-based OSDs. We cannot merely
skip creating OSDs on ""phantom"" partitions due to a bug in `ceph-volume raw inventory`
which reports only the phantom partitions (and malformed OSD info) when they exist and
ignores the original (correct) OSDs created on the raw disk.

Resolves https://github.com/rook/rook/issues/7940

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit c8a2db368a85e1de8d13fa13652280a357347b50)

# Conflicts:
#	Documentation/ceph-common-issues.md
ceph: update test to watch for v1 cronjob

The v1beta1 cronjob is deprecated and needs to use v1 for K8s 1.16 and newer

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 07ddcda0ce6c62d3cff9fcd529cce39962c84dc3)
build: update patch version to v1.6.8

With the patch release the version is updated in the manifests and examples

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.6.8 is a patch release limited in scope and focusing on small feature additions and bug fixes.
Ceph
Re-enable lvm mode for OSDs on disks. See details to know if your OSDs are affected by unexpected partitions (, @BlaineEXE)
Update test to watch for v1 cronjob instead of v1beta1 (, @travisn)
Update PodDisruptionBudget from v1beta1 to v1 (, @parth-gr)
Add support for tls certs via k8s tls secrets for rgw (, @thotz)
Create correct ClusterRoleBinding for helm chart in namespace other than rook-ceph (, @ashangit)
If two mgrs, ensure services are reconciled with the cluster (, @travisn)
Proxy rbd commands when multus is enabled (, @leseb)
Proxy ceph command when multus is configured (, @leseb)
Ensure OSD keyring exists at OSD pod start (, @subhamkrai)
Add an example of a pvc-based ceph cluster on bare metal (, @satoru-takeuchi)
Mount /dev for the OSD daemon on lv-backed pvc (, @satoru-takeuchi)
Add ceph cluster context for lib bucket provisioning reconcile (, @leseb)
Create PDBs for all rgw and cephfs (, @satoru-takeuchi)
Always rehydrate the access and secret keys (, @leseb)
Fix PDB of RGW instances (, @satoru-takeuchi)
Ability to disable pool mirroring (, @sp98)
Fetch rgw port from the CephObjectStore the OBC (, @thotz)
Enable debug logging for adminops client log level is debug (, @thotz)
Update blockPoolChannel before starting the mirror monitoring (, @sp98)
Scaling down nfs deployment was failing (, @travisn)"
"osd: remove stale dm device during osd-prepare-job

During osd-prepare-job,

The encrypted device is found to be closed in some cases when
the OSD deployment has been removed manually accompanied
by any of following cases:
- node reboot
- csi managed PVC being unmounted etc

while re-opening the block to re-hydrate the OSDInfo,
the dm device `<pvc-name>-block-dmcrypt` clashes with
the one used by OSD pod which is stale by now.
This commit adds cmd to remove this stale dm device.
Error with output ""No such device"" is ignored.

Signed-off-by: Rakshith R <rar@redhat.com>
(cherry picked from commit 24fa9ed935b3287acaf2867c58d015f5addd1b43)
docs: fix notes in CephBucketTopic docs

Signed-off-by: xiaobaowen <xiaobaowen@deeproute.ai>
(cherry picked from commit 8f23c1ba9e097a169a2c59976cff27743b1a99ed)
osd: allow mpath_member filesystem for mpath disks

Multipath devices may have an FSTYPE=mpath_member even though
a valid device for creating an OSD. The device will be allowed
in this case when creating the OSD on a PV since it is a device
specifically provisioned for the OSD.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 8a94bb20ae3ed9cc60f843d2588176f2bb600901)
osd: replace dot with dash in pvc names

The volume names of a pod must follow the standard naming convention
which does not allow periods in the name. Since the device set name
is used as the pvc name and then the volume name to attach to the osd
prepare job, we must sanitize the name for the invalid character
and replace it.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 4a70d3489d31ebbf3133a444b242ad0e21e73421)
ci: upgrade minikube action to latest version

upgrading minikube action to latest version which has
the fix of crictl, currently CI is failing due to this.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit a877771748dbe15c59578aecd83279baa1b55f90)
docs: import external K8s cluster on existing cluster

If there is a external k8s cluster which need to use rook-ceph as
a storageclass backend then user can do the following steps import
it to the running rook-ceph cluster

Closes:https://github.com/rook/rook/issues/11404
Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 8d6be0bcf3ffc3b323bbf548dc3ccf0264b9d625)
operator: disable webhook by default

disable webhook in downstream cluster.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 159fe3ae6fa6ef9eea0c308d8dd45ff4b39807b9)
osd: cannot create volumes on pvc based osd with alias dev mapper

It removes the condition that select the devices name prefixed with /dev/mapper as it is causing the ceph-volume command to fail.

Closes:
Signed-off-by: ausias-armesto <ausiasarmesto@gmail.com>
(cherry picked from commit f55c4573cf89884696aebc502f83e667ad8782cc)
core: remove unnecessary env vars from pod specs

The fsid, username, and user secrets were from legacy and no
longer needed on the osd daemon or mon pods. This removes the
unnecessary env vars from the pod specs.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 33e824a323291de1a261b70e9bd255d5049ee02b)
core: read mon secret from file instead of env var

Environment variables are not recommended for secrets in pods since
they can be easily leaked if the environemnt variables are logged.
By mounting the mon secret as a file, the mgr and osd prepare pods
can read the mon secret from a file for better security.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 403335177a3dfb500f51e3624b533d52a657dcf0)
manifest: toolbox and jobs mount secret volume

The toolbox, toolbox job, and osd prepare jobs need to mount the
ceph admin keyring as a file instead of using an env var.
The toolbox script will still allow setting of the env var
for backward compatibility, though all the examples are now
updated to use the keyring as a file.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 4f7766486201a8d2a5ba02e53110d3cc2ce1a6a7)
core: allow ceph.conf to be updated if already exist

The ceph.conf was being written with 0x444 permissions, which means
the file could not be updated if it already exists. Specifically, when
an osd is purged, if the operation is retried multiple times, only
the first operation was succeeding. The subsequent requests to purge
an osd were failing due to the config already existing. If we make
the config writeable with 0x644 then the operator can always write the file.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 9975e094060a8af66c9e07b00e6d599b2f996860)
osd: improve error message for osd purge

The OSD purge was printing an incorrect sentence, so this now
fixes the grammar.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 2a16cd857ce91b60759bed59eeed919ee11ab409)
operator: adding logs for debugging

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit de604d3689dc163734646524076631396d6d673e)
docs: add link to failover and failback topic

A note in the rbd mirroring topic was missing a link
to the failover and failback doc.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 2991ee1e6148b83e0bae52e65310bb61790b8fa0)
build: move to Go 1.19 as default version for building services

Go 1.18.5 and other Go 1.18 version patches provided many vulnerability fixes
but as go.mod doesn't support minor version i.e why moving to next go release

Signed-off-by: Pratik Raj <rajpratik71@gmail.com>
(cherry picked from commit cc921a53f04efdec6627cc8c7ffd6823383481a4)
docs: auto generate helm chart docs using helm-docs

Signed-off-by: Zuhair AlSader <zuhair@koor.tech>
helm: allow to specify allowed topologies for storage class

Signed-off-by: Tomáš Sýkora <tomas@reservio.com>
(cherry picked from commit 57babee11f075d8cad642702e8d3d43929ba3341)
docs: update csi registry in custom-images

updated the outdated registry URL
for the CSI sidecar images in the custom-images

fixes:

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 2d544d59f163517ce142065bde7a85282b350913)
csi: add missing update rbac

when a PVC is cloned external-provisioner
still required update access or else a warning
will be logged in the pvc describe output

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 61c533ba41d4339b4c740428cd631318ab97c2f7)
build: update the release version to v1.10.8

For the patch release update the examples and docs to
v1.10.8

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.10.8 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
helm: Allow to specify allowed topologies for storage class (, @steache)
docs: Auto generate helm docs (, @zalsader)
ci: Build with Go 1.19 in the CI (, @Rajpratik71)
operator: Debug logging admission controller deletion (, @subhamkrai)
core: Allow ceph.conf to be updated if it already exists (, @travisn)
osd: Create OSDs without overriding with the /dev/mapper alias (, @ausias-armesto)
osd: Replace dot with dash in device set names since used as volume names (, @travisn)
core: Read mon secret from file instead of an env var in the mgr, osd prepare, and toolbox (, @travisn)
core: Remove unnecessary env vars from pod specs (, @travisn)
operator: Clean up webhook when disabled (, @subhamkrai)
docs: Import external K8s cluster on existing cluster (, @parth-gr)
csi: Add missing update RBAC for CephFS and NFS (, @Madhu-1)
ci: upgrade minikube action to latest version (, @subhamkrai)
osd: Allow mpath_member FSType for mpath disks (, @travisn)
osd: Remove stale dm device during osd-prepare-job  (, @Rakshith-R)"
"object: do not check for upgrade on external mode

The object child controller should not compare versions if the object
store is external. The current version comparison is using the
cmdreporter to check the ceph version of the image in the CephCluster spec.
In external mode, this image is not set so the cmdreporter fails.
Also, this check is only valid for converged mode, so external mode
should be skipped.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 856b14e60a1a49f61f9f1bf0d63f4f70c13b326a)
rgw: fix variable assignment

We need to explicitly assign the ceph version within each scope since
one function returns a pointer and one is not.
Previously, the `desiredCephVersion` was recreated in the scope of the
`else` and thus a new variable `desiredCephVersion` was initialized (see
the `:=`).
Now, each scope creates and assign to clusterInfo a `desiredCephVersion`
value.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 7f32461b8fee0b41f362c10f6a30367c3370fbeb)
csi: add comment after namespace

adding comment after namespace to identify if
it cluster namespace or operator namespace.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 5b49d36167721943e3a41d0f4e9318a26e9ec486)
csi: cleanup csi driver resources when zero cephclusters exist

This commit modifies ceph-csi controller to be able to cleanup
ceph-csi deployment,daemonset,services & csidriver objects
when no cephcluster exists.

It makes the following changes:
- redundant check for tp.DriverNamePrefix is removed.
- retry to start drivers within reconcile loop is removed,
  controller will retry in case of error now.
- stopDrivers() will now return error in case of failure.
- predicate delete func will now respond to cephcluster deletion.
- CSI resources will be cleaned up when cephcluster does not exist.

Fixes:

Signed-off-by: Rakshith R <rar@redhat.com>
(cherry picked from commit 1e9920fb85f54b467a2c4f3e9d75a00daf20279b)
osd: write log message when node is being skipped

When a node is being skipped for creation of OSDs, log a message
that indicates whether it was from the node being unschedulable,
the node is not ready, or the node does not meet the placement
criteria specified in the cluster CR.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 4570204a1d06052b2648f15709f6ed9160b4e201)
object: fix backend path for transit engine for rgw kms

The backend path was added with additional `transit` to it.
Also added PR test case to check transit engine

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit 0b4cdb992b30abcef8f6874286eaa3154f4b3427)
csi: modify upgrade flag in external cluster

The upgrade function doesn't seem to be that smart
for now so it can update the new auth caps listed
with the existing one, it only compares the value of
the current cap with the MIN_USER_CAP_PERMISSIONS,

Modified the upgrade flag functionality so we can use
this while upgrading the cluster clients

Closes: https://github.com/rook/rook/issues/9589

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 9b20b475cfa3cf08bed69478f569774bd754dafa)
csi: make use of common user creation method

refactor the code so we can use common csi user
creation method

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 3e64525b62f19e21956f594c6dbb7685d1536665)
test: update bucket notification integration test with http server

Add test cases to check notification is received by http server. For
this a sample http server https://github.com/thotz/pythonwebserver is
used.

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit 438cf6abf11b075e619c2a08ffea14623aaa8fce)
docs: add multus known limitations

Add doc to explain why some daemons are not listening to the NAD.

Closes: https://github.com/rook/rook/issues/9488
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit a25dd4ec4c5e7879df436dabf8a87a8b673773c9)
core: remove rbd_default_features setting

Instead of setting the default values in the Rook
we should use the defaults provided by the ceph
it self. This configuration is causing problem
for the rbd image creation, this is not allowing
the rbd images to have default image features
which comes with librbd.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit f482b1ceba272a8638aa809458ce08a02e72dd88)
core: check for canceled context in external mode

This is fixing a potential race where the context is canceled and the
external cluster is trying to fetch the cluster info. If the context is
canceled then the loop will be stuck forever. Now we check for the
canceled context and return appropriately.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit fdcad15b873bc711a24fed39c9b161e300b28104)
core: move clusterInfo discovery in converged cluster

The external code has its own mechanism to look up the clusterInfo so
let's move this to the non-external condition to clarify the code.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 47b8bb989e1bcab1f5d661c64483ab3235c7eb4e)
core: remove unnecessary secret validation

We don't need to validate the name of Ceph-CSI secret, simply because
the names can be different. The default example have default names but
since the secret can be created by the administrator we should not
assume anything. This check will fail if the secret names are different
for whatever reason. This is especially true for external mode. In
converged mode Rook creates the secrets on its own if needed to ease the
integration with the default StorageClass examples.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 0143a8f8ee6b40b8eab9464a5555c2a4f0b752b7)
osd: return error if fail to list osds in prepare job

The OSD prepare job was succeeding even if the OSDs failed to be listed
by ceph-volume. These errors should be returned and fail the job, resulting
in a retry to retrieve the OSDs. Otherwise, the failure is masked and
the admin needs to dig through logs to find why the OSDs were not configured
on that node.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit d4b8fa19b27338b4020ddaf2301e9695360a18cd)
docs: clarify teardown disk zap section

Users have reported some problems understanding the teardown
""Zapping Devices"" section. Break the section in to per-disk and
all-disks-on-host parts, and clarify that they are not one-size-fits-all
scripts.

Resolves
Resolves

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 325eda655c38a884855a1a6b8f7b880cdf534f4e)
docs: warn in quickstart about using a vm

If Rook is run on a developer machine, devices may accidentally
be consumed by rook and cause data loss.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit eb4ac1d6c92c9208460df74265eb12b8c1361fc8)
helm: fix csiAddons enabled flag

We should use csiAddons.enabled to check whether csiAddons is used.

Signed-off-by: Shinya Hayashi <shinya-hayashi@cybozu.co.jp>
(cherry picked from commit c82099c107f4ae2a4c71b03833b325582cde7d45)
docs: fix broken links in ceph-object-multisite.md

The docs have links pointing /design directory in the codebase which
hidden in https://rook.io so change them to rook github repo links.

Fixes:
Signed-off-by: Jiffin Tony Thottan <jthottan@redhat.com>
(cherry picked from commit 1f13938bdc135869a581f2818f4b5c74a33e6c07)
docs: correct vault backend path

Based on my testing with the guide above,
the original value in the sample code here:
`VAULT_BACKEND_PATH: rook/ver1`
...did not work and resulted in
a Vault path error when Rook attempted
to provision the OSD filesystem.
When I simplified it to:
`VAULT_BACKEND_PATH: rook`
... then it worked.

I also took the opportunity to add
a comment/clarification about the `VAULT_ADDR` URL.

Co-authored-by: Shahak Nagiel <snagiel@yahoo.com>
Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit cbc9bbff322b8d7059635dd3f6c3e4b0fde978e0)
test: collect fuller logs for CI tests

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 9a5d43761d11bc8a018b237bb9fc80d9828bec72)
test: fix helm suite conflicting artifact

Two test jobs were collecting artifacts to the same artifact name, which
can cause race conditions and failures to upload artifacts.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 7a7d278ab4854d0d37c775366376edefef894eb5)
monitoring: making alert firing timeout and the doc timeout same

Signed-off-by: Arun Kumar Mohan <amohan@redhat.com>
(cherry picked from commit 054d009af6a345d65c882a6b352dba3054abf91e)
helm: allow setting priority class on operator and toolbox

The operator and toolbox pods were not configurable for
their priority class in the helm chart. Now the settings
are exposed in the values.yaml.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 1d1de69f3e7524b34a44afbe1382c64ace00cef9)
core: eliminate unnecessary code

We can eliminate the OSD creation code for Ceph < v15.2.0 because Nautilus(v14.2.z)
is no longer supported. In other words, we can now expect that all newly-created
OSDs on PVC are raw mode.

Please note that the existing lvm mode OSDs on PVCs still be supported after this change.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 2d8f9b67c63d67acae9fca98e3e1cafd0f716e3e)
Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
osd: re-enable raw mode on disk

We can re-enable raw mode OSD on disk if Ceph version is at least v16.2.6.

https://github.com/ceph/ceph/pull/42469

Closes: https://github.com/rook/rook/issues/9659

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
file: allow filesystem removal even with failures

If the filesystem is in a bad state such as never being
created successfully in the first place, the filesystem
removal will continuously fail and prevent the CR from
being removed. Thus, we treat the filesystem removal
as a best effort and log the issue instead of failing
the uninstall reconcile.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 1f8f71b396013c731d333fcbbdae1d9364ae16aa)
build: update release version to v1.8.6

With the patch release we update the examples and docs to v1.8.6.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.8.6 is a patch release limited in scope and focusing on small feature additions and bug fixes to the Ceph operator.
osd: Enable raw mode for OSDs for Ceph v16.2.7 and newer (, @satoru-takeuchi)
file: Allow filesystem removal even with failures (, @travisn)
helm: Allow setting priority class on operator and toolbox (, @travisn)
docs: Warn in quickstart guide about using a vm (, @travisn)
helm: Fix the enabled flag for csiAddons (, @peng225)
osd: Return error if fail to list osds in prepare job (, @travisn)
core: various external mode enhancements (, @leseb)
ceph: remove rbd_default_features setting (, @Madhu-1)
docs: clarify teardown disk zap section (, @BlaineEXE)
docs: Add multus known limitations (, @leseb)
csi: Modify upgrade flag in external cluster (, @parth-gr)
object: Fix backend path for transit engine for rgw kms (, @thotz)
osd: Write log message when node is being skipped (, @travisn)
csi: Cleanup csi driver resources when zero cephclusters exist (, @Rakshith-R)
object: do not check for upgrade on external mode (, @leseb)
Also try out the new v0.1.0 release of the Rook Krew Plugin!"
"ci: update mon_data_avail_warn percentage

I see the mon_data_avail_warn is set to 500M
but acording to ceph doc this should be in percentage
And by default this percentage is 30%,
So re assigned to 10% for the CI

Closes: https://github.com/rook/rook/issues/11130
Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit d392129cdde8a17e02b7d48b6bf88bebd90a4e9f)
security: update ""s5cmd"" to ""v2.0.0""

update ""s5cmd"" to ""v2.0.0"" as ""1.4.0"" was built using go v1.16 and has many vulnerabilities

Resolves

Signed-off-by: Pratik Raj <rajpratik71@gmail.com>
(cherry picked from commit db9bd9f918aca84a726909ed6a1167eae0ae1fdd)
security: run the crash collector as ceph user

The crash collector does not have the command line arguments
to run as ceph user id 167, so we set the security context
to run as the ceph user in the main crash collector
container.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit df6d7af355440eab3fae7eea970f9196b5de125f)
build: update release version to v1.9.13

For the patch release the examples and docs are updated
to v1.9.13

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.9.13 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
security: Run the crash collector as ceph user (, @travisn)
security: Update s5cmd to v2.0.0 (, @Rajpratik71)
ci: Update mon_data_avail_warn to a valid percentage for test clusters (, @parth-gr)"
"docs: emphasize unit tests in development guide

Emphasize unit tests in the development guide, and provide guidelines to
help contributors create good unit tests.

Also clarify that Rook's CI will run integration tests and that users
aren't expected to run integration tests locally.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit dc3c84ef27593def7b92003359f87dab16f5c3ed)
ceph: fix lvm osd db device check

Signed-off-by: Jonas Zeiger <jonas.zeiger@talpidae.net>
(cherry picked from commit 0e72a7c2bf2a1577270f51d715c0ab9122e42fd8)
bot: add more ceph commit prefixes

With the storage providers moved to their own repo,
we add more possible prefixes for commits to the
ceph operator, including the ceph daemons and csi
driver.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit a32b11c5729145e5349a43d65d5a25f70f942bce)
build: use pkg/operator/ceph/csi/spec.go for csi images

it has happened more than once that the manifests do not
reflect the images so now reading from `pkg/operator/ceph/csi/spec.go`
as this what code uses.

Closes: https://github.com/rook/rook/issues/8687
Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 284dbc0a0ef8b501c2557da48af5502a5d017ffc)
docs: refactor documentation for ceph provider

With the nfs and cassandra providers moving to their own repo
we can simplify the docs a bit. Some obsolete documentation
is also removed.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 6b7062eda59b625d294c3f84b03c69280db79507)
ci: update validate_yaml method

update validate_yaml method to dry-run yaml files only

Closes: https://github.com/rook/rook/issues/8707
Signed-off-by: subhamkrai <srai@redhat.com>
docs: ceph: add peer spec migration to upgrade doc

Add a section to the upgrade doc instructing users to (and how to)
migrate `CephRBDMirror` `peers` spec to individual `CephBlockPools`.
Adjust the pending release notes to refer to the upgrade section now,
and clean up a few references in related docs to make sure users don't
miss important documentation.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 91ec1ac4db7631e7ab1b9829633322707a7206e9)
docs: update rbd mirror docs for block pool config

Remove legacy documentation for configuring RBD mirroring. While we
still support legacy mirroring configs, we want to encourage new users
to use the CephBlockPool configuration for mirroring.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 7c511328e4561f46e34b4398e7930be7fccec672)
ceph: reconcile osd pdb if allowed disruption is 0

Rook checks for down OSDs by checking the `ReadyReplicas` count
in the OSD deployement. When an OSD pod goes into CBLO due to
disk failure, there is a delay before this `ReadyReplicas` count
becomes 0. The deplay is very small but may result in rook missing
OSD down event. As a result no blocking PDBs will be created and
only default PDB with `AllowedDisruptions` count as 0 is available.
This PR tries to solve this. The OSD pdb reconciler will be
reconciled again if `AllowedDisruptions` count in the main
PDB is 0.

Signed-off-by: Santosh Pillai <sapillai@redhat.com>
(cherry picked from commit 7480f6ba621edc29fbeabe24e7b4378aa92dad89)
docs: fix cephfs-mirror documentation

The steps to configure the peers are detailed in the CephFilesystem
section. Only the CephFilesystem is holding the peer configuration, not
the CephFilesystemMirror which only controls the bootstrap of the
daemon.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit fd28497cb4c4b096f64edac7883bc91f881cc129)
ci: force a particular ceph version

Let's force v16.2.5 since the CI is broken with 16.2.6. This gives us
time to continue to merge work and work on fixing deployments with
16.2.6 in parallel.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit ae291afb2f1a2fceb53801504adabc92bc5380d2)
ceph: retry object health check if creation fails

If the CephObjectStore health checker fails to be created, return a
reconcile failure so that the reconcile will be run again and Rook will
retry creating the health checker. This also means that Rook will not
list the CephObjectStore as ready if the health checker can't be
started.

Resolved backport conflicts in the below files:
  pkg/operator/ceph/object/controller.go
    - revert monitoring routine struct change from 1.7 to master
  pkg/operator/ceph/object/controller_test.go
    - use master branch's rearchitected test harness

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 5383ba2df2c159619bcb925880c2c7ff01fb28ca)
ceph: do not use http for mgr liveness probe

When private/public network have been defined in the Ceph rook cluster it is not
possible to configure properly the ip address of the liveness probe
for the manager.
Changes in the manager in Pacific introduced this regression.

This change replaces the http probe by a command probe, avoiding thus to
determine what is going to be the ip address of the manager before launching
the pod.

fixes: https://github.com/rook/rook/issues/8510

Signed-off-by: Juan Miguel Olmo Martínez <jolmomar@redhat.com>
(cherry picked from commit 7fbd9f2225afa9e87a8e608cf54e06edfb70a3fb)
ceph: bump manifests to ceph pacific 16.2.6

New version is out so let's use it.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 0c33493f27f3685f138069fea78395864326403a)
ci: fix mirror test with v16.2.6

The new version v16.2.6 has a different behavior when it comes to the
number of cephfs-mirror socket files. Previous version had exactly 3 and
now has like way more...
So let's just check for the presence of more sockets.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit f040c37ad115d9df4860ef237cff137226cb2a80)
mds: change init sequence

The MDS core team suggested with deploy the MDS daemon first and then do
the filesystem creation and configuration. Reversing the sequence lets
us avoid spurious FS_DOWN warnings when creating the filesystem.

Closes:
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit c1a88f34d4c3971d6db3d4563d4d06c2cc31314e)
test: run all integration tests against the local build

The integration tests must always be run against the local
build of rook, and an image should never be pulled from dockerhub.
To prevent pulling a release or master tag, the local build
will use a tag specific to the build and not ever published
elsewhere.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
rgw: fix misleading log line in rgw health checker

There was a log line that informed that the object store status would
not be updated because the status was deleting erroneously. Move the
line to the correct position.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit c8b26e458ccda5268e8dd260990d4cfff814ca51)
ceph: modify CephFS provisioner permission

As like RBD, CephFS provisioner pod need not to
run as privileged. as its not doing any operation
like plugin pods which does mounting and unmounting
removing the permissions for the same.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 95775fd4455c48dfa8ad61cbd155728c68331730)
ceph: add default field to filesystem-sc helm chart

I Added the chance to default filesystem storageclass in helm chart

Signed-off-by: kubealex <al.rossi87@gmail.com>
(cherry picked from commit eead60457b5b39de859c2d3f4c2d169f77a5c956)
ceph: make provisioner replicas configurable

added new option to set the provisioner replicas.
with this new option the user/admin can choose
how many replicas he want for provisioner pod if
number of nodes is greater than 1.

fixes

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit ed5f281a7445b05fbb695ecf7a2cdb3d2324c483)
ceph: pass region to newS3agent()

If the region is specified in the storage class of OBC, use that in the
newS3agent() than using constant ""us-east-1"".

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit 280c29f330e03a08d23c1fda1f1b26574c1b9bdb)
docs: fix typo in dashboard admin password

Corrected secret name for admin password in description.

Signed-off-by: Valentin Krasontovitsch <valkra@ihelse.net>
(cherry picked from commit 0aab5cfc31672526f0d62fc7af89ca6b76dfbf14)
core: add missing error type check to exec

In ExtractExitCode, there is one error type that can be valid as a
pointer or not-as-a-pointer. Add a case to the type check for the
non-pointer condition.

Resolves

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit bc494f517461ce57b5ca3db8d82ad22673c4eb5f)
ceph: pick up latest ceph base image 16.2.6-20210918

The previous base image in use by rook v16.2.6-20210916 disappeared
from quay.io.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit fb74e7b2d5d80c1247e5bdcd843a891c3bede0a3)
ceph: lift minimum supported version of ceph csi to v3.3.0

With the release of Ceph CSI 3.4.0, Ceph CSI project came up
with a new support policy where we support only versions >= 3.3.0

The supported window of Ceph CSI versions is known as ""N.(x-1)"":
 (N (Latest major release) . (x (Latest minor release) - 1)).

For example, if Ceph CSI latest major version is 3.4.0 today,
support is provided for the versions above 3.3.0.
If users are running an unsupported Ceph CSI version, they will be
asked to upgrade when requesting support for the cluster.

This PR lift the minimum supported version of Ceph CSI to 3.3.0
in this repo.

Fix https://github.com/rook/rook/issues/8709

Ref #
https://github.com/ceph/ceph-csi/releases/tag/v3.4.0
https://github.com/ceph/ceph-csi/#known-to-work-co-platforms

Signed-off-by: Humble Chirammal <hchiramm@redhat.com>
(cherry picked from commit 731b0f5274759eeb9ba5b513533900b440f48ab5)
docs: updated correct indentation for Storage spec in Cephcluster

Cephcluster have wrong indentation for examples yaml and helm
Updated the specs indentation the way it is present in types.go

Closes: https://github.com/rook/rook/issues/8800
Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 2c670a053cbdeaf5be52b2c04ee9e133af8a7023)
build: update release version to v1.7.4

With the patch release we update the examples and docs to v1.7.4

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
build: run canary tests against the local-build tag

The canary tests were still picking up the tag from operator.yaml
and toolbox.yaml instead of the new test local-build tag.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.7.4 is a patch release limited in scope and focusing on small feature additions and bug fixes to the Ceph operator.
Add missing error type check to exec (, @BlaineEXE)
Raise minimum supported version of Ceph-CSI to v3.3.0 (, @humblec)
Set the Ceph v16.2.6 release as the default version (, @leseb)
Pass region to newS3agent() (, @thotz)
Remove unnecessary CephFS provisioner permission (, @Madhu-1)
Configurable csi provisioner replica count (, @Madhu-1)
Allow setting the default storageclass for a filesystem in the helm chart (, @kubealex)
Retry object health check if creation fails (, @BlaineEXE)
Use the admin socket for the mgr liveness probe (, @jmolmo)
Correct the CephFS mirroring documentation (, @leseb)
Reconcile OSD PDBs if allowed disruption is 0 (, @sp98)
Add peer spec migration to upgrade doc (, @BlaineEXE)
Fix lvm osd db device check (, @lyind)
Refactor documentation to simplify for the Ceph provider (, @travisn)
Emphasize unit tests in the development guide (, @BlaineEXE)"
"helm: increase memory limit of operator

The operator is very bursty and when starting up may need more memory
to reconcile all the CRs initially before it calms down.
The default of 256Mi was not sufficient for many clusters, so now
we bump up the limit to 512Mi.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 8571db0c7f0e80b321c34f52ef2b20ed48581682)
operator: increase memory limit of operator

The operator is very bursty and when starting up may need more memory
to reconcile all the CRs initially before it calms down.
The default of 256Mi was not sufficient for many clusters, so now
we bump up the limit to 512Mi.

This is a follow-up from the same change to the helm chart in
https://github.com/rook/rook/pull/10195.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 60b72b6d48a7f403316fb814c1fe8121772ccbdc)
osd: close the encrypted disk after cleanup is done

Once we are done cleaning up the content of the encrypted osd, let's
close the main LUKS device.
This avoids having dm devices on the system after the cleanup.

Closes: https://github.com/rook/rook/issues/10181
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 6ef491d9fc95f533fe5b14268b79f09c3946016b)
mon: quorumStatus.MonMap.Mons changed to quorumStatus.Quorum

The path use quorum instead of monMap to determine if there is enough mon. (bug).

Signed-off-by: FengJiankui <fengjiankui@inspur.com>
(cherry picked from commit d335dc59eb7c1f6aa60ea7337b0f5e7ac360b656)
helm: update rook-ceph-cluster dashboard values comments

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit 10f6d8449d08aff134bc08c3f37e601a085ac26e)
ci: fix indentation in .commitlintrc.json

Fixes the tab/space indentation in .commitlintrc.json to be the same on
all lines.

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit e418f91ed8198c384e6150a70e8f928ff37e3880)
test: avoid to create a corrupted GPT headers

The following steps in CI scripts create corrupted GPT headers.

```console
$ sudo sgdisk --zap-all --clear --mbrtogpt -g -- ""$DISK""
$ sudo dd if=/dev/zero of=""$DISK"" bs=1M count=10
```

It results in the failure of the succeeding `sgdisk --print ""$DISK"".

Here is an example.

```console
$ sudo parted /dev/sdb mklabel msdos
...
$ sudo sgdisk --zap-all --clear --mbrtogpt -g -- /dev/sdb
...
$ sudo dd if=/dev/zero of=/dev/sdb bs=1M count=10
...
$ sudo sgdisk --print /dev/sdb
Caution: invalid main GPT header, but valid backup; regenerating main header
from backup!

Warning: Invalid CRC on main header data; loaded backup partition table.
Warning! One or more CRCs don't match. You should repair the disk!
Main header: ERROR
Backup header: OK
Main partition table: OK
Backup partition table: OK

Invalid partition data!
$ echo $?
2
```

We can safely use the simple `sgdisk --zap-all ""$DEVICE""` here.
It's not necessary to convert ""mbr"" to ""gpt"" because we'll make new GPT
labels just after this command.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit ab38c10c2db726cf664500ca483ac6a7c5133a96)
test: add canary integration tests for osd on device

OSD on PVC is tested in many patterns but OSD on device is not.
It's preferable to add the following patterns for OSD on device.

- An OSD on a raw disk
- Two OSDs on a device

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 805163e2e2bee16da601fced6d2beacd9414ee52)
docs: add prometheus doc link to pick up rook service monitor

If prometheus is already installed in a cluster, it may not be configured
to watch for third-party service monitors such as for Rook.
To help with this configuration, a link is added to the doc for
enabling the third-party service monitors.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 91a8011a614ad3eb1fcffcdf06c413e3aa363bc8)
osd: fix disk uuid management

- disk UUID should only be got for ""disk"" type device.
- It's not necessary to fail prepare job when failing to get disk UUID
- We should consider that `sgdisk` reports UUID even if there is no GPT.

Closes: https://github.com/rook/rook/issues/9948

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 4c46dd1abd83b537dbf3ea55dd9c67721a253df5)
core: append filesystem property on disk

When detecting the device property the filesystem was not passed but
used later to validate if the device should be taken or not. Now we read
the filesystem info from ""lsblk"" and populate it in the device type.

Closes: https://github.com/rook/rook/issues/9470
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 8c1bf0f3f0460e5fcb699d5c911978330cdc8729)
core: add more debug info to the prepare pod

When running the device property commands, let's also log their results
for better debugging/visibility.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 77b2e10c140e4b4dea44b7dc28900f6fb8f15258)
core: add mountpoint detection to the prepare pod

Amount various filters let's add a mountpoint property and skip the
device if its filesystem is mounted.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 8328ec6d313b20362d33031eb8d0c4992307b1ce)
ci: add webhook to commitlint title

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 99420ad779137c837bfa04ef889fb4247644953b)
webhook: update the check-in cluster spec validation

we should iterate older clusters spec instead of
new cluster spec since in case of new storageClassdeviceset
added in spec. The total count of the new clusters and older
spec cluster is will not be the same and we'll get panic.

Closes: https://github.com/rook/rook/issues/10222
Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 0c593d5420f10bf73de9c4a1a927e32f08e77ddb)
build: add psp for missing roles

This commit adds psp RoleBindings to rook-ceph-rgw role and
rook-ceph-purge-osd role. Without this commit, I cannot perform
rook-ceph-purge-osd job on PSP-enabled cluster.

Signed-off-by: Yuichiro Ueno <ueno@preferred.jp>
(cherry picked from commit 1ccc185a7917d428cc98ce6d18378f997d5088ba)
csi: add the option to disable hostNetwork

currently, it is not possible to disable hostNetwork. This pr fix this issue.

Signed-off-by: Yuval Manor <yuvalman958@gmail.com>
(cherry picked from commit 504e78a5bac117b8650926dbde1daf7859cb1bab)
osd: allow the osd to take a long time to start

The startup probe for the OSD has been too aggressive to kill the OSD
in case the OSD is taking some time to start. The OSD may be self-optimizing,
scrubbing, or some other internal operation before it is ready to start.
Rather than disable the startup probe completely, the default is now
to retry for two hours in case the OSD is performing those operations.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 28e721d8773187c4a8fa5bb2cbc87d6c87eb274b)
docs: update tolerations name from controlplane to control-plane

Signed-off-by: ttyS0 <sean@skj.dev>
(cherry picked from commit 30667157ab15cff57c92adf911eaa3f4a5e2bad0)
operator: set 'rook-version' in mon k/v store

Ceph upstream telemetry (which Rook users could optionally enable via
Ceph CLI or Dashboard) does not easily identify if a cluster is managed
by Rook. Identifying Rook clusters is possible only if users also enable
the rook mgr module, which is optional and not often used.

To get better upstream insights into Ceph clusters managed by Rook, set
a new 'rook-version' field in Ceph's generic k/v store. This field can
be used to determine if a cluster is managed by Rook by its presence.
It additionally provides information about the Rook version used to
manage the cluster, which is another piece of potentially useful
information.

Regarding Ceph cluster identification via telemetry:
Ceph telemetry is anonymous and uses a different ID from the Ceph
cluster ID. Identifying the Rook version in telemetry does not add
directly identifying information. Therefore, there should be little
risk that adding the Rook version field will decrease anonymity of Ceph
clusters via telemetry.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 94b622c3021bb1f8b83c6188e79930e34cf9e04b)
osd: exit immediately if pvc block has not changed

We don't need to run any `cp` command since a destination path already
exists. Using `--no-clobber` is not needed and it results in a noop
anyways.
Instead, let's print the reason why we exit the container.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 4234216db8354dffe39fe89473afc7fd4c4a1183)
rgw: support FQDN for RGW endpoint

Now rgw can be pass by FQDN too,
to avoid problems where it is required
The format should be similar to
Ip(<IP>:<PORT> format), <FQDN>:<PORT> format

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 624400ff937d9dc503b2be9419f3f05506f87f75)
build: update the release version to v1.9.3

For the patch release the example manifests and documentation
is updated to v1.9.3

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.9.3 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
osd: Add additional checks so OSDs are not created on existing filesystems (, @leseb)
osd: Allow the osd to take a long time to start (, @travisn)
osd: Exit immediately if pvc block has not changed (, @leseb)
osd: Close the encrypted disk after cleanup is done (, @leseb)
operator: Increase memory limit of operator (, @travisn)
operator: Set rook-version in mon k/v store (, @BlaineEXE)
csi: Add the option to disable hostNetwork in the helm chart (, @yuvalman)
operator: Update tolerations name from controlplane to control-plane (, @ttyS0)
mon: quorumStatus.MonMap.Mons changed to quorumStatus.Quorum (, @fengjiankui121)
build: Add psp for missing roles (, @y1r)
webhook: Update the check-in cluster spec validation (, @subhamkrai)
osd: Fix disk uuid management (, @satoru-takeuchi)
test: Add canary integration tests for osd on device (, @satoru-takeuchi)
rgw: Support FQDN for RGW endpoint (, @parth-gr)"
"docs: update NFS docs including latest CSI work

Update the NFS docs with the latest available info for Ceph Quincy
including the CSI provisioner driver.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit a950feb01ea4bf429c138d5f2ad0ed35c58e9353)
docs: fix nfs permission on openshift example

Fix a small permission (RBAC) issue with the operator-on-openshift.yaml
example's SecurityContextConstraint. A ServiceAccount reference for the
Ceph CSI NFS provisioner was missing.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 1311bf870abb86a262c06f82c6909d4ab7f93f85)
docs: add info about mounting NFS exports externally

Add some information to NFS docs about how LoadBalancer Service endpoint
and PersistentVolume share field can be used when mounting NFS exports
manually.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit fa27b994c4028c4969240d73b52851c38348d81f)

# Conflicts:
#	Documentation/ceph-nfs-crd.md
csi: enable csi nfs to generate nfs rbac for csv

This commit enables csi.nfs during rbac generation
for csv, so that it can used when deployed with olm.

Signed-off-by: Rakshith R <rar@redhat.com>
(cherry picked from commit 762f75062f6be924fa9fa1e456b60c9a6bf813f4)
build: generate a separate NFS CSI RBAC manifest

Because the NFS CSI driver is optional and rarely deployed, make RBAC
for this driver an optional example that is generated by the helm chart.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit bca2f128abc6ff8ec6bf39b94b4fbbb10effdef2)
Revert ""docs: add info about mounting NFS exports externally (backport)""

Mergify automatically backported this despite merge conflicts.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
docs: add info about mounting NFS exports externally

Add some information to NFS docs about how LoadBalancer Service endpoint
and PersistentVolume share field can be used when mounting NFS exports
manually.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit fa27b994c4028c4969240d73b52851c38348d81f)
osd: enable quincy osd release version

After all OSDs are updated to each major release of Ceph, the
require-osd-release version is set to that release so all the latest
functionality for osds can be enabled by Ceph. In Quincy there is
a warning if all osds are on Quincy and this flag is not set, so
this will resolve the health warning.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 03b0546fecded2f221e0727a2c9c30688c21a79d)
helm: add ingressClassName field

Add support for .spec.ingressClassName field

Signed-off-by: log1cb0mb <nabeelnrana@gmail.com>
(cherry picked from commit be905e6d6c0079e9cce2cd0cc0d8a33f398f787b)
block: validate updating name in BlockPool CR

Currently we are allowing users to change the name
of the pool to be created in the BlockPool CR. with
this we have a bug of leaving stale resources in the
cluster. With new changes we are blocking the update
of the pool name in the BlockPool CR.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 99224ad1029becce42aa2dc5573630e8ce11867d)
build: update golang version to v1.17

update golang version to v1.17

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 81d696652deaf991dd2f0fcc706e6d3fe242ed78)
csi: make GRPC timeout configurable

setting the GRPC timeout configurable helps
in some cases where ceph cluster takes more time
to respond.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 54de442e22552b3862d56f4c5da7da34e75d9e25)
csi: add CSI encryption support

Ceph-CSI supports LUKS encryption for RBD volumes.
This commit adds support for the same by adding capability
of mounting required `rook-ceph-csi-kms-config` configmap
into csi-rbdplugin-provisioner and nodeplugin pods.
Required documentations, helm charts and examples yamls
are also updated.

Resolved:

Signed-off-by: Rakshith R <rar@redhat.com>
(cherry picked from commit 2e18d5bbaab89279f8565f3853a7bc5f219b33a5)
helm: fix missing default resources in rook components

1. Add csi-snapshotter resources for csiCephFSProvisioner
2. Add csi-omap-generator resources for csiRBDProvisioner (only is omap generator is enabled)

Closes: https://github.com/rook/rook/issues/10083
Signed-off-by: Yuval Manor <yuvalman958@gmail.com>
(cherry picked from commit 5f01456daeb96ec62a9b55b389bffa5a1d48e40c)
monitoring: disable new alerts that are not applicable to rook

The new alerts picked up for Rook v1.9 directly from the ceph repo
were not all rook-compliant. The alert for the prometheus job not
running is not needed since Rook and K8s go to great lengths to
keep the mgr pod running already.

The alert for the cluster filling up soon is also disabled
until we find how to get the formula working in rook clusters.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit e45781d0d3a5adece2dcfb40a7e04bdf99a5c77a)
monitoring: remove cephadm specific alerts

The ceph adm alerts were included in the latest prometheus
rules. With rook these alerts will never be triggered, so
we remove them.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 0a25af78dc659961e012349e6a9920f49ff11b85)
core: examples set default priority class names

By default, we should set the priority class to one of the built-in
priority class names to ensure that pods critical to the storage
will be able to remain running when resources are low. Otherwise,
critical rook pods could be evicted and affect many other pods
that rely on the storage to continue functioning. The options have
been available in the CRs, but until now we have just not set the
defaults in the examples. Critical rook components are now set to
the priority class system-node-critical if they are generally pinned
to a node, and system-cluster-critical if they are critical to the storage.
Some pods such as the operator and crash collector do not have a
default priority class set in the examples since they don't affect
the data path.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit fb86955f0115c963d57532503a967a7b50d340f3)
csi: use k8s.gcr.io for csi nfsplugin image

use k8s.gcr.io like other kubernetes sidecar
image to pull the nfsplugin image.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 52c8211e4320295669e310f8a459f5be3eafe0bc)
subvolumegroup: refractor subvolumegroup controller

improved the logging and also reorganized code to
handle external and non external cases for better
code readability.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 541d63d31eb5a706236fb22192c8d646ba4f0a0c)
build: add a placeholder rgw role for csv generation

The csv will not properly include the rook-ceph-rgw service
account unless there is a role and binding that references
the service account. No roles are needed yet for the rgw
daemon, so this will add a placeholder only for the purposes
of csv generation.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit e1550e7551019efb2dc941f0a7ed00267b221389)
core: make code changes to support latest cntrl runtime

making necessary code changes to support controller
runtime version.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit bf7daccf60d72c388db0e9f655c80f3f3980d501)
core: update controller-runtime version to v0.11.2

update controller-runtime version to v0.11.2

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 13cc6985660e23ca358b3c4ebfddacc68102cfbc)
test: improve reliability of mon failover test

The mon failover test was failing if the cluster reconcile
was being triggered in the middle of the failover and if
the ordering of the mons happened to attempt to start the
mons that were not failed over. The other mons couldn't be updated
due to the upgrade checks, so the test would timeout waiting
for the mons that would never update in time.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit f7cefbbbde0ad3602f73c7a085662b8ad222d762)
test: skip upgrade checks during integration tests

The upgrade checks are not necessary during the CI.
The flag had previously been set, but was changed
unintentionally with https://github.com/rook/rook/pull/10096.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 23c29b4e283a065e378753a856b062465800047c)
build: set the release version to v1.9.1

Update the docs and example manifests for the v1.9.1 release.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.9.1 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
monitoring: Disable new alerts that are not applicable to rook (, @travisn)
core: Examples set default priority class names (, @travisn)
nfs: use k8s.gcr.io for csi nfsplugin image (, @Madhu-1)
csi: Add CSI encryption support (, @Rakshith-R)
csi: Make GRPC timeout configurable (, @Madhu-1)
helm: Add missing default resources in rook components (, @yuvalman)
osd: Enable Quincy osd release version (, @travisn)
core: Update controller-runtime version to v0.11.2 (, @subhamkrai)
block: Validate name updates to the BlockPool CR (, @Madhu-1)
helm: Add ingressClassName field (, @log1cb0mb)
csi: Enable csi nfs to generate nfs rbac for csv (, @Rakshith-R)
docs: Update NFS docs including latest CSI work (, @BlaineEXE)
build: Generate a separate NFS CSI RBAC manifest (, @BlaineEXE)
docs: Add info about mounting NFS exports externally (, @BlaineEXE)
csi: Add nfs nodeplugin & provisioner (, @Rakshith-R)
build: update golang version to v1.17 (, @subhamkrai)
build: Add a placeholder rgw role for csv generation (, @travisn)
subvolumegroup: Refactor subvolumegroup controller (, @Madhu-1)"
"ceph: rgw service selector should not change

If the selector changes on the rgw service, during upgrade the
clients will briefly not be able to connect to the rgw pods.
After all the pods are updated with any new labels, the connections
would be restored, but we want to avoid that temporary outage.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 8913a14ce4fc22fe3d2824116b2e31bf31fc80ec)
ceph: tune fast device class for OSD on PVC in the Azure

on Azure, all SSDs are reporting as a rotational disk.
This commit will add `tuneFastDeviceClass` flag which will
tune for an SSD even if the cloud provider is reporting
rotational. We have a flag `tuneDeviceClass`
which works vice-versa.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit c2c59ec47b1cac6b1fd3465fb92c5b7362f0b9b2)
ceph: remove suffix _sdd for tuneFastDeviceClass

this commit remove _ssd  suffix from
tuneFastDeviceClass setting as with _ssd
won't affect disk.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 364df7793f1b56d3c80109f244c8d3465c441bcd)
ceph: update examples and operator to Ceph v15.2.8

The latest octopus release is now out with v15.2.8. We update the
operator base image and the examples to run with this version.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 3beb625f08f2cb79c08161ad20afb85d53ce385d)
ceph: test latest ceph on raw devices and previous ceph on partitions

The latest ceph-volume does not support creating OSDs on partitions.
The github actions only have a partition available, so we will run
the github tests on v14.2.12 and v15.2.7 that still support partitions,
while the Jenkins environment has a raw device available where we
can run the latest versions of Ceph in the tests.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 114a949cfbd39437c91cdfe1dae76df98163fc1a)
ceph: delete object store in test in a defer method

Always attempt to delete the object store in case some test
fails and aborts the remainder of the test.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit ba0d7288d837a761786e88091a502e6debbeaff3)
ceph: convert deprecated v1beta1 resources to v1

The helmv3 build requires the RBAC and CRDs to be installed
with v1 instead of v1beta1 resources.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
ceph: update to helm 3 since helm 2 is deprecated

This updates the chart to build with helm3 and removes the
dependency on helm2 which is not available anymore.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
ceph: add devices to schema at overall storage level

With the v1 schema added to the CRDs, the devices at the root
level of the storage element were missed. Now the ability to
specify devices at the root storage level to apply to all
nodes is restored. This is a minimal backport of.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
build: set release version to v1.4.9

With the patch release we update the manifest and doc version
to v1.4.9

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.4.9 is a patch release limited in scope and focusing on small feature additions and bug fixes.
This patch release updates the Rook CRDs to v1 as part of the migration to Helm 3. While we have tested this helm upgrade scenario, you may want to consider upgrading to 1.5 where there has been more comprehensive testing with this conversion rather than deploy v1.4.9 with helm.
Ceph
Update to Helm 3 and convert deprecated v1beta1 resources to v1 (, @travisn)
Add devices to schema at overall storage level (, @travisn)
Update operator base image and example manifests to Ceph v15.2.8 (, @travisn)
Tune fast device class for OSD on PVC in the Azure (, @subhamkrai)
RGW service selector should not change during upgrade (, @travisn)"
"object: update to latest obc controller to fix ob status

Update to the latest OBC controller library to fix an issue where
ObjectBucket status is not updated when an OB is created.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 13cfd238fc7807b68549e10a8417d4336ab532b3)
csi: add a parameter to modify the maxUnavailable value of rbd daemonset

The default value of maxUnavailable of daemonset is 1.
Sometimes the upgrade can be slow due to this setting.
So I add a parameter to change the value for rbd daemonset.

Signed-off-by: Shinya Hayashi <shinya-hayashi@cybozu.co.jp>
Co-authored-by: Toshikuni Fukaya <toshikuni-fukaya@cybozu.co.jp>
Co-authored-by: Yuji Ito <llamerada.jp@gmail.com>
(cherry picked from commit ac4b47d71a9ae5e605e02d31532bff20580d5a4f)

# Conflicts:
#	Documentation/Helm-Charts/operator-chart.md
core: parse peer pool ouput with --out-file flag

When mirror logs are enabled, `ceph osd pool get <poolname> all` command returns peer pool info along
with the debug logs. This causes error while parsing the logs for json
data. Using --out-file flag saves the json data in the file which can be
parsed easily while logging will still be written to stdout/stderr.

Signed-off-by: Santosh Pillai <sapillai@redhat.com>
(cherry picked from commit 4f3cd1d03089699aa8f992f50ba994fa1cf17457)
docs: fix wrong format caused by merge conflict

The doc of operator helm chart was broken by mistake. It's due to
merging the following PR even though merge conflicts exited.

https://github.com/rook/rook/pull/11348

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
osd: improve log on specifying lv and loop device as osd

We can use LVM logical volumes and loop devices as OSD iff we specify
them in the `devices` field. If we use filters like `deviceFilter`,
these devices are not picked with a log message which let users
to specify the exact device name. It's better to mention which field
users should use in this case.

Closes: https://github.com/rook/rook/issues/11353

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 36f80749388361eb4f09d54f043bd74a74e15070)
osd: re-open encrypted disk during osd-prepare-job if closed

This commit implements this corner case during osd-prepare job.
```
The encrypted block is not opened, this is an extreme corner case
The OSD deployment has been removed manually AND the node rebooted
So we need to re-open the block to re-hydrate the OSDInfo.

Handling this case would mean, writing the encryption key on a
temporary file, then call luksOpen to open the encrypted block and
then call ceph-volume to list against the opened encrypted block.
We don't implement this, yet and return an error.
```
When underlying PVC for osd are CSI provisioned, the encrypted device
is closed when PVC is unmounted due to osd pod being deleted.
Therefore, this may occur more frequently and needs to be handled.
This commit implements the fix for the same.

Signed-off-by: Rakshith R <rar@redhat.com>
(cherry picked from commit bde286ef495fa456513f73ccd2e20b48b8f9d380)
core: set env var for ceph msgr to use random nonce

Ceph will use a random nonce for the msgr daemons as long as
they are running as PID 1 or have the environment variable
CEPH_USE_RANDOM_NONCE set to indicate running in a containerized
environment. While the Ceph daemons in Rook are expected to
run in PID 1, there are some environments where the container
runtime may choose to run something else such as
/usr/bin/pod as PID 1. The side effect then is that ceph uses
the pid as the nonce and causes problems when the daemons
restart with the same PID.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 31a8fb1e6a210d884d493168427766009264bc9f)
rgw: remove rgw_rados_pool_pg_num_min for metadata pool creation

rgw_rados_pool_pg_num_min is deprecated and no longer valid in qunicy
with https://github.com/ceph/ceph/pull/46234, remove that option from
cephobject-controller as well

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit 5f1b44366247466fd01728166da67fff087ab90e)
build: update the release version to v1.10.7

For the patch release the examples and docs are updated to
v1.10.7

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.10.7 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
rgw: Set the number of RGW metadata pool PGs to 8 even for Ceph v17.2.2 or newer (, @thotz)
core: Set env var for ceph msgr to always use random nonce for OSD reliability after restart (, @travisn)
osd: Re-open encrypted disk during osd-prepare-job if closed (, @Rakshith-R)
osd: Improve log on specifying lv and loop device as osd (, @satoru-takeuchi)
core: Parse peer pool output with --out-file flag in case debug logging is enabled (, @sp98)
csi: Add a parameter maxUnavailable to the RBD daemonset. (, @peng225)
object: Update to latest OBC controller to fix the OB status (, @BlaineEXE)"
"ceph: fix drive group deployment failure

Drive Groups will fail to deploy due to a message: `failed to parse
device list (""""): failed to JSON unmarshal configured devices (""""):
unexpected end of JSON input`

This is due to trying to JSON unmarshal an empty string which does not
contain any devices to provision when Drive Groups are specified. Fix so
that an empty string represents no non-Drive Group devices.

Signed-off-by: Blaine Gardner <blaine.gardner@suse.com>
(cherry picked from commit 76f1d9944e3ad5ecfb23d348abade9ab16b85159)
ceph: merge rook-config-override to the default global config file

Some parameter like bluestore_min_alloc_size, bluestore_min_alloc_size_hdd need to be set during the bootstrap of the
ceph cluster in order to have bluestore created accordingly.
To do so rook users rely on the rook-config-override configmap.
Sadly the rook-ceph-osd-prepare job does not take in account this configmap to generate its ceph config.
Changing the behaviour to merge the config from rook-config-override configmap to the default ceph config

Signed-off-by: n.fraison <n.fraison@criteo.com>
(cherry picked from commit de7ca0193005c26b2c830df776fb1950cf76b64f)
ceph: only run version check for monitoring

We only need to read the ceph cluster version if the cluster external
has external monitoring enabled.
This avoids any issue during upgrades from 1.3 to 1.4 when monitoring is
enabled and ceph caps have not been updated.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 6f894a6de87c497fa5f1417439d23b8ce3d384ff)
ceph: if spec diff checking fails during upgrade, assume it changed

If the pod spec changed, we expect an upgrade to proceed for that daemon.
If the check for a changed pod spec fails, we were skipping the update
of that daemon. Instead of skipping the update, we now assume the pod
spec changed if we fail to detect the change so that we can ensure the upgrade
even if we check for upgrades too often.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 8664cbb8dde3bad650e9758df978dc7621d99614)
ceph: avoid duplicating env vars in the osd deployments

The OSD deployments have some env vars duplicated in the pod spec for
the daemon container, which may cause the detection for patch changes
to fail. Now we ensure the env vars are not duplicated in the OSD pod
spec.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 524362f9e45c0461218f264da50f105be218036a)
docs: common issue low aio-max-nr setting

When the system has a low ow aio-max-nr setting, the osd prepare pod can
fail to complete. This value must be increased.
Adding a documentation section for it.

Closes: https://github.com/rook/rook/issues/6279
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 005f17036afd0aabc34d901f9770c26eb5c8f517)
build: allow golang 1.15

Added Golang 1.15 to the supported versions in the Makefile check.

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit 2f5d076e20fd9850c03b526a0f341169e394c0c1)
docs: fix markdown code block formatting issue

this fixes the issue of the code block not being rendered
correctly from markdown into html.

Signed-off-by: Gregor Krmelj <gregor@krmelj.xyz>
(cherry picked from commit 256b284b358862ce2abe3396bb906777d280a146)
ceph: allow osd pvc template name set to any value

The pvc template name has either been require to be empty, or one of the
expected values such as data and metadata. Those who upgrade from 1.1
may find that if they changed it to something else, their upgrade will
fail when not one of these values. If there is only a single template,
always treat it as the data template.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 2b9e7a53353864160e9e2d910d00481b82244942)
docs: changes example yamls to use parameters.compression_mode

Makes compression_mode in example yamls consistent

Closes: https://github.com/rook/rook/issues/6318
Signed-off-by: Tim Hughes <thughes@thegoldfish.org>
(cherry picked from commit 363baeb19b51b146c35c5fc9c046aebe30bb77f5)
docs: remove compression from test yamls

Signed-off-by: Tim Hughes <thughes@thegoldfish.org>
(cherry picked from commit 406d3f44f82ad4a1498fe388d1a93ac30c4abfae)
ceph: only support one external cluster secret

We do not support providing both ROOK_EXTERNAL_USER_SECRET and
ROOK_EXTERNAL_ADMIN_SECRET. When both are provided in the mon secret,
the operator code will use the client.admin user for all its operations.
This will break some of the logic when creating OBC since if
client.admin is detected we assume the cluster is converged and thus
pass args like this:

```
--rgw-realm=external-store --rgw-zonegroup=external-store --rgw-zone=external-store
```

To the radosgw-admin command, which won't work since Rook has no idea
what the external realm/zonegroup/zone are, if any are configured.

This fix should be sufficient for now, but moving forward we should
probably enhance clusterInfo with an ""isExternal"" property to make
things easier. Also supporting external realm/zonegroup/zone would be
nice. This will probanly hit 1.5 once this code is promoted to stable.
See: https://github.com/rook/rook/issues/6342

Closes: https://github.com/rook/rook/issues/6329
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 08944c4e50553403432dff366953a09d85336a74)
ceph: remove user unlink while deleting OBC

User unlink is performed just before deleting OBC resources.
Since user is internal to OBC and next to remove to delete user,
unlinking user is not necessary.

Fixes: 6300
Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit b7bc51ea69aabd9b35bfc5485e582ea80d3203ee)
ceph: detect osd pvcs in a batch

The OSD PVCs were being detected one by one with a label selector.
This proves to be slow in large clusters. Instead, we now make this
more efficient by querying for all existing PVCs and looking up their
existing in memory with a map.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit c73022060a5d307620921db051fa2e40b443cca6)
ceph: detect osd deployments on pvcs in a batch

OSD prepare jobs only need to be run if the OSD deployments on PVCs were
not already started. For efficiency, we now query them in a batch instead
of querying them one-by-one with a label selector, which proves to be very
slow in large clusters.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit caa51e4cb8b4297795b56ebba3b6c4db40b53ca7)
ceph: disable keyring after opening encrypted block

On LUKS2 format, the resize operation requires the KEK to be passed. To
maintain a single simple init container for resize, we now open the
encrypted block with  ""--disable-keyring"" so that further operations
won't require the keyring.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit a7e78858ce99143cf27a8cba88f9645c04bab6d6)
ceph: fix obc upgrade from 1.3 to 1.4 external cluster

During the 1.3 cycle, we had implemented support for OBC external mode
through an Endpoint in the StorageClass parameter. In 1.4, this is not
the case anymore as we directly use the CephObjectStore external mode.
However, we must maintain backward compatibility with the cluster using
the Endpoint and not fail the upgrade.
Thus checking for a CephObjectStore is invalid and should not always be
assumed, now if we detect an Endpoint we return a simple context which
fixes the upgrade.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit d2d1da5970268a71ecee76215bc29b74ae77fff0)
core: rbac: allow manipulations on monitoring.coreos.com resources

Before it wasn't allowed but required to successfully deploy Ceph cluster with monitoring enabled.
Fixed by adding more rules to rook-ceph-system rbac role

Closes: https://github.com/rook/rook/issues/6255
Signed-off-by: Daniel Chaplin <black.danek@gmail.com>
(cherry picked from commit 231317c5f17889c255573f7f7643bec802430203)
ceph: update cephcsi to v3.1.1

as cephcsi v3.1.1 is released today
with many bug fixes and enhancements,
more details can be found at
https://github.com/ceph/ceph-csi/releases/tag/v3.1.1

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 2fa3e71733415b4045d7f4631be72fc0b8ac91ae)
build: update release versions to v1.4.5

With the patch release we update the docs and manifest versions to v1.4.5

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.4.5 is a patch release limited in scope and focusing on small feature additions and bug fixes.
Ceph
Update the CSI driver to v3.1.1 (, @Madhu-1)
Fix drive group deployment failure (, @BlaineEXE)
Fix OBC upgrade from 1.3 to 1.4 external cluster (, @leseb)
Remove user unlink while deleting OBC (, @thotz)
Enable RBAC in the helm chart for enabling monitoring (, @Strangerxxx)
Disable encryption keyring parameter not necessary after opening block (, @leseb)
Improve reconcile performance in clusters with many OSDs on PVCs (, @travisn)
Only one external cluster secret supported in import script (, @leseb)
Allow OSD PVC template name to be set to any value (, @travisn)
OSD prepare job was failing due to low aio-max-nr setting (, @leseb)
During upgrade assume a pod spec changed if diff checking fails (, @travisn)
Merge config from rook-config-override configmap to the default global config file (, @ashangit)"
"csi: add --extra-create-metadata arg to csi sidecars

This argument in csi-provisioner and csi-snapshotter sidecar allows us
to receive additional metadata in the CreateVolume and CreateSnapshot()
request.

For ex:
as part of CreateVolume request:
csi.storage.k8s.io/pvc/name
csi.storage.k8s.io/pvc/namespace
csi.storage.k8s.io/pv/name

and
as part of CreateSnapshot request:
csi.storage.k8s.io/volumesnapshot/name
csi.storage.k8s.io/volumesnapshot/namespace
csi.storage.k8s.io/volumesnapshotcontent/name

This is useful information which can be used depend on the use case we have
at our csi driver level. The features like adding metadata to CephFS subvolume,
RBD image or snapshot can consume this based on the need.

Signed-off-by: Prasanna Kumar Kalever <prasanna.kalever@redhat.com>
(cherry picked from commit 1666ce2d9c59aa93c923f9603cbcf914d44d883e)
helm: updated links to CRD objects documentation

Signed-off-by: Denis O <denis.o@linux.com>
(cherry picked from commit b143be1ede200c46082adc34f88e818bf9b04f80)
docs: add prepareosd to placement

Add prepareosd entry to cluster.yaml docs.
Add prepareosd as an example of placement (commented out)

Signed-off-by: Kim Minjong <make.dirty.code@gmail.com>
(cherry picked from commit 8f713e22dccb5867eccd732f98443e7b57dc87ae)
docs: update doc path according to new doc change

we need to update the referred doc path
according to our latest doc change.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 49a35a93111f2ec4ae95f4c4670b8292fac08a67)
docs: update ceph-cluster-crd.md with new version ceph v16.2.9

ceph-cluster-crd.md was missed to update with the
other changes for updation

Signed-off-by: parth-gr <paarora@redhat.com>
rgw: make fqdn rgw converted to ip everywhere

During the recent addtions of rgw validation
changes there are too many places where we use
rgwendpoint, so making fqdn to ip conversion globally

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit fed91ddb81d6373cbd4e7fe4d47607ea97a86605)
build: flannel flag to minikube is causing test failures

The minikube node is staying in NotReady state and preventing
the operator from even starting in the canary and other suites
that use the setup-cluster-resources action.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 7a938090a19f7b1e6491b31fe3b31ea3927aa801)
pool: delete ceph pool when blockpool cr is deleted

During deletion of a CephBlockPool CR, the underlying ceph
pool was not being deleted. During the deletion sequence
this is due to the spec being refreshed upon a call to
check for dependents in ReportDeletionNotBlockedDueToDependents().
The pool name was then coming up blank during the deletion
request and rook of course then wasn't finding the pool
to delete.

Now Rook properly sets the pool name in the named spec
every time it is converted internally from a CephBlockPool
type to a NamedPoolSpec.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit e3ca5bfbccc5c903910f455d55d966dab874549d)
ci: add new cni flag in minikube start

adding cni flag in minikube start command
since it is required for multus ci.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 6c3f3438a243af49dd47b1ce973e6d705d10a4a6)
osd: ignore the region label when it is the same as zone label in topology

Ceph requires all topology label being unique. And it is quite common to
have topology.kubernetes.io/region and topology.kubernetes.io/zone being set
to the same value. In this case, let's just ignore the region label.

See https://github.com/rook/rook/issues/9419#issuecomment-1144311818

Signed-off-by: Cheng XU <git@xuc.me>
(cherry picked from commit 9b03d0759be59d1356213fed7f059f225e9f7ea4)
csi: do not block the reconcile if all clusters are not ready

If some clusters don't have their monitors up and running, we don't have
a clusterInfo (internal detail struct). We don't want to block the csi
controller reconcile if all the clusters are not ready. So let's proceed
with the elements that are ready and reconcile again to see if others
have made progress.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 95b2e606797aeea4c28c2a07d5aff9c983dd68df)
osd: do not hide the error

Return the error instead of hiding it, err could be non-nil for a lot of
reasons, eg: a canceled context or a non-existing object.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 219e01756479964785ce4e1020f9bdb45ad52b05)
csi: change sidecar images repo to new link

Change sidecar images repo to registry.k8s.io
which is a redirect to k8s.gcr.io.

Ref: https://github.com/kubernetes/k8s.io/wiki/
New-Registry-url-for-Kubernetes-(registry.k8s.io)

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 15da42cf0cca88553d5c73a6ce255b803b243022)
csi: add holder pod if csi hostnetworking is disabled

If csi is configured not the use the
hostnetworking, deploy the holder
pod for executing the commands with nsenter.
The implementation is same as multus.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 276005cfd5a2d94b9ce0c716e7b4b3b8432568fa)
csi: update sidecar to latest release

updating node-driver-registrar to v2.5.1 release
, nfsplugin to 4.0.0 and csi-snapshotter to v6.0.1

Note:- with snapshotter v6.0.1 v1beta1 snapshot CRD
is not supported. If you want betav1 snapshot support
please switch to v5.x.x snapshotter.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 767cfcbf091a308640d012a4410cdf8c3214d7ff)
core: report basic cluster and version telemetry

For the ceph telemetry report the csi version, k8s version,
and metrics from the desired state in the cephcluster CR such
as mon count, stretch cluster, number of device sets, and
so on.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit fe989ad77304d49d9d3641cf9d883669f942fea3)
osd: bypass ceph-conf validation failure in osd activation

""ceph.conf"" must have the ""fsid"" global configuration to activate encrypted OSDs
after the following Ceph's PR is merged.

https://github.com/ceph/ceph/commit/25655e5a8829e001adf467511a6bde8142b0a575

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 66f745f11f0a5a77d3fe635f24ee5354b2206b59)
test: add canary test for encrypted osd in host-based clusters

It's better to test the creation of encrypted devices in host-based clusters.
This test will reduce the potential risks of regression when modifying
the osd-creation code.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 6b0f539f61083f8d2a0f0978ed3e349e45b64ee8)
Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
core: remove signature import

remove signature import as it is not required.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 60bf1f6e1cb48e663d30fa449b6c79d4a9f0d351)
core: clean the import section

import all the libraries at top.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit c8f11f3e62f975280e672091dcd5ffbc3e70aaaa)
core: format python files using tool black

`black` is python formatter tool which
automatically formats python files without
manual changing. just run `black <python-file>`
and done.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 00f21c08666d18cbb6e3210be39f4ef49e71ea67)
Signed-off-by: subhamkrai <srai@redhat.com>
csi: update cephcsi from 3.6.1 to 3.6.2

As we have new cephcsi patch release i.e v3.6.2
updating Rook dependency to the same.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 3e70d278cbb4d801d980cee127abe0e89f8d27cf)
build: update release version to v1.9.5

For the patch release update the examples and docs
to v1.9.5

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.9.5 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
csi: Update Ceph CSI from 3.6.1 to 3.6.2 (, @Madhu-1)
osd: Fix encrypted OSDs on latest Ceph releases and add test for encrypted osd (, @satoru-takeuchi)
core: Report basic cluster and version for Ceph v17.2.1 or newer if telemetry is enabled (, @travisn)
csi: Update sidecar to latest release (, @Madhu-1)
ceph: Enable holder pod if csi host networking is disabled (, @Madhu-1)
osd: Ignore the region label when it is the same as zone label in topology (, @xu-cheng)
csi: Change sidecar images repo to registry.k8s.io (, @Madhu-1)
osd: Improved errors for encrypted OSD provisioning failures (, @leseb)
csi: Do not block the reconcile if all clusters are not ready (, @leseb)
rgw: Convert FQDN RGW to an IP in external script (, @parth-gr)
pool: Delete undlerying ceph pool when blockpool CR is deleted (, @travisn)
docs: Fix broken doc links since the docs redesign (, @subhamkrai)
docs: Updated links to CRD objects in helm chart  (, @denis256)
csi: Add --extra-create-metadata arg to csi sidecars (, @pkalever)
external: Format python files using tool black (, @subhamkrai)
external-script: Remove signature import (, @subhamkrai)"
"ceph: set pod anti affinity to provisioner pod

sometimes the kube schedular will schedule the
provisioner pod on the same node. it doesn't make
sense to have both provisioner pod running on the
same node, we need to set the pod anti-affinity to
make sure that no provisioner pods runnings on the
same node.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
ceph: fix healtcheck for external cluster

For external cluster, it is not an issue to have a mon count set to 0
since Rook is not deploying/managing the monitors.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit f66473a8f8ac65f4f0dbb04ee8cc7b3570f487bf)
ceph: do not validate default.rgw.buckets.index

This pool is not present when this is no bucket yet. So we don't need to
validate its presence.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 0c8d20ffb48fdb8649207468f105d6941d23e015)
(cherry picked from commit 46b0b95d4c6d3e39a3d20762de17d86dd24081cd)
ceph: check for gone node on crash collector

If a node is gone, we try to remove crash collector deployments so they
don't stay stale or pending. We must ensure the node is gone and not
just return an error even if we successfully deployment the orphan
deployment.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit acc5ba1a6b69ec6ec3c8f691dccd79d901256a2b)
ceph: a minor refactoring of external cluster resources script

Signed-off-by: Arun Kumar Mohan <amohan@redhat.com>
(cherry picked from commit 940118af828d9ac04c7901513e10a8504e75d3ae)
ceph: making rbd / cephs provisioner and nodes optional

Some more optional items in json output.
RBD Provisioner, CSI CephFS node and provisioner are now optional and
will only be populated if they are available.

Signed-off-by: Arun Kumar Mohan <amohan@redhat.com>
(cherry picked from commit a5b4020d80960e694b59c244081be59d01c4155f)
ceph: remove preStop from daemonset template

The lifecycle preStop hook fails on container stop / exit
because /bin/sh is not present in the driver registrar container
image.

the driver-registrar will remove the socket file
before stopping. we dont need to have any preStop hook
to remove the socket as it was not working as expected

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 0aa0957bf18677f5d3fd86d5df098450ed6107d5)
ceph: run obc requests with debug

Use debug log to all the s3 calls so it's either to debug. Also, it's
not so verbose.

Signed-off-by: Sébastien Han <seb@redhat.com>
(manual cherry picked from commit bcd76bf46d05bae3bcce671cd30815fe44e71a3a)
ceph: use special dns suffix for object ep

By addding "".svc.cluster.local"" to the endpoint of the object store, the
OBC requests won't go through a proxy if any is configured.

Signed-off-by: Sébastien Han <seb@redhat.com>
(manual cherry picked from commit 3a92f9823350754c69ec94bb65ed67e192f333a5)
build: update manifest versions to v1.3.10

For the release update the manifest versions to v1.3.10

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.3.10 is a patch release limited in scope and focusing on small feature additions and bug fixes.
Ceph
Use full DNS suffix for object endpoint with OBCs (, @leseb)
Remove the CSI driver lifecycle preStop hook (, @Madhu-1)
Check for removed node in the crash collector controller (, @leseb)
External cluster optional settings for provisioners (, @aruniiird)
External cluster validation skips RGW bucket index (, @leseb)
External cluster fixed health check (, @leseb)
Require pod anti affinity for the CSI driver provisioners (, @Madhu-1)"
"csi: move setting csi param to setParams

moving setting csi parameter to setParams
function as `setParams` is mostly used to set
the csi parameters for the templates.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit c255e352256444965690c8ffbfc0dd60c8f1d526)
build: add a placeholder rule to rgw rbac

With https://github.com/rook/rook/pull/10108 a placeholder role
and role binding were added for the rgw service account so
the csv generation would generate the service account. That
workaround also requires a rule to be added to the role or else
the generation is invalid. Now a rule is added to avoid that
issue. In the future we need to remove this role and binding
when the operator sdk is updated as explained in
https://github.com/rook/rook/issues/10141

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 1dd343ed7e74e804c4d533e3b9da08ae32a64aa0)
csi: add/remove mon IP from csi config

If a mon is added or removed in a ceph
cluster all the CSI clusterID's belongs
to the ceph cluster should also gets updated.

Added a new cluster identifier to the csi configmap,
i.e ceph clusterNamespace which helps to identify
the clusterID's belongs to that ceph cluster.

Note:- to support the upgraded clusters,we
can ask users to update the mon IP's for the
problamatic clusterID as it wont be updated
by the operator.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 8ab17e3b83e4b7c47bc540631d85ca5e9c715f53)
helm: ingressClassName should be available for networking.k8s.io/v1

Allow defining ingressClassName on K8S clusters v1.20+ that uses networking.k8s.io/v1

Signed-off-by: Casper Biering <casper@biering.dk>
(cherry picked from commit 9aa16ac5870e9814951eaa10140ed21c1f82dee8)
csi: update cephcsi to v3.6.1 release

A new Ceph-CSI release is out so let's use it.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 1093b0a1665904df014b6f69714558e8b21ff7b5)
core: rgw realm pull spec is optional

The endpoint on the rgw realm pull spec is causing a failure
if not specified even when it is not expected to be
required. Now the endpoint has the json property to be
ommitted if not specified.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 7f709776b5017909f38d5fe47bc5cebb4e40530b)
ci: use stringData instead of data for secret

The ""data"" field only accepts base64 strings and our env var is not. So
let's use stringData to prevent an error from the API server:

```
""v1"" cannot be handled as a Secret: illegal base64 data at input byte 29
```

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit edfd120d6aa41eac18d69e50d166e3d4bbb3c417)
build: update min version to k8s 1.17

Support is removed for k8s for various limitations such as
priority classes not working and csi driver feature
incompleteness and missing snapshots. Documentation is updated
with the new min version of k8s 1.17 and also the tests are
updated to run on the min version of 1.17.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit d26b6cf40347b2a6961db4c383fab88ff2b2f5e1)
build: update go-ceph version and remove ceph_preview

updating go ceph version to 0.15.0 will no longer require
`ceph_preview` during build. Also if added in VsCode workspace
we can remove that now.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 6de3e3d48d12808b79618e5c8711b7d83f6a016e)
object: allocate keys for user after the creation

The access/secrets keys for the user struct need to allocate only if
ceph user creation succeeds.

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit 60da73a7863669757a6da240103e2f5b3977a3c8)
core: move clusterInfo code to the controller package

The CSI package needs to load clusterInfo, today this code is in the mon
package which makes the call of LoadClusterInfo impossible without
having a circular import.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 583791c45c7a752dacb81f0f27533cae8a586fa5)
ci: collect secrets and cms in the logs

The CI runs will now collect all the secrets and configmaps available.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 79dbb353027f4894afa28545ea50156dadfe0e54)
core: fix csi-cephfsplugin pod restart on non-hostnetworking env

Implementation of the design proposed in
https://github.com/rook/rook/pull/9903.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 73b1347675d0530b79705e07dcde9ac3458d6174)
ci: wait for cert while deploying vault

sometimes, it take few seconds to fill certificate
after certificate approval. So, let's wait for few seconds.

Closes: https://github.com/rook/rook/issues/10158
Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 86b3d466f6fdf6fb2f50f2410ea63970ff1f6897)
rgw: fix dashboard admin creation for multiple object stores

Check the radosgw-admin realm user list per object store instead of relying
on the ceph dashboard get-rgw-api- command.

Resolves

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit 5d03061d473bc15708db23d742af1e263b36dd68)
Signed-off-by: Alexander Trost <galexrt@googlemail.com>
build: fix csi nfs rbac csv generation

Added hack in generate-rook-csv for proper
generation of csi nfs rbac in csv.
Added placeholder clusterrole and binding for
nfs nodeplugin sa, since operator-sdk
does not include sa without rules.

Signed-off-by: Rakshith R <rar@redhat.com>
(cherry picked from commit d0b67af23b41f4fceba376df0ef9960fb9ccb115)
helm: add ingress annotations for ssl

Currently annotations are not set on the ingress resource

Signed-off-by: Erik Galajda <erik.galajda.sk@gmail.com>
(cherry picked from commit c422d402470d8af25bcd8b6aa905061e2af5c92c)
build: update release version to v1.9.2

For the patch release we update the example manifests and docs
to v1.9.2

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.9.2 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
core: Enable multus network configuration with the csi driver (, @leseb)
build: Update minimum supported version to k8s 1.17 (, @travisn)
csi: Update ceph-csi to v3.6.1 release (, @leseb)
rgw: Fix dashboard admin creation for multiple object stores (, @galexrt)
helm: Add ingress annotations for ssl (, @slavonicsniper)
build: Update go-ceph version to v0.15 and remove ceph_preview (, @subhamkrai)
ci: use stringData instead of data for secret (, @leseb)
core: RGW realm pull spec is optional (, @travisn)
build: Add support for go 1.18 (, @subhamkrai)
csi: Refactor csi initialization code for setting parameters (, @Madhu-1)
helm: ingressClassName was not available for networking.k8s.io/v1 (, @casperbiering)
csi: Add/remove mon IP from csi config (, @Madhu-1)
build: Add a placeholder rule to the RGW RBAC (, @travisn)
build: Add placeholder NFS RBAC for csv generation (, @Rakshith-R)"
"docs: disaster recovery guide for deleted cephcluster

If the CephCluster CR or other CRs are mistakenly deleted,
the cluster can remain intact with steps to remove the owner
references to the cluster and re-creating the CRs.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit abdaab1a753cf5212ddca3073f3be64e6fe37990)
docs: clarify not to change crdsenabled in helm chart

Changing the crds.enabled setting in a running cluster will cause the
CRs to be deleted, which could be disastrous for a cluster. Add
and clarify the warning in the docs to prevent it and link
to recovery steps if it does happen.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 5e86ef8b0c7e6f683f84bde0cf179d5686f2eadb)
ceph: removes experimental for multus in cluster.yaml

removed the word EXPERIMENTAL from multus section in cluster.yaml

Signed-off-by: rohan47 <rohgupta@redhat.com>
(cherry picked from commit 68265202c75ea594640dfff9038ebe7c8423633e)
ceph: fix detection of delete event reconciliation

Fix a bug where delete events on Rook-Ceph CRs would be detected
multiple times if deletion was blocked. Old method used pointer
comparison instead of using the (metav1.Time) Equal() method.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 386eeb7eb951d7f325a63bb679409f898edd7054)
ceph: stop using radosgw-admin CLI for s3 user management

We have been having many issues with external mode with Ceph version
mismatching. The operator would have a Ceph version different than the
external cluster. The `radosgw-admin` was used to interact with S3
users, even a small version delta would cause the command to coredump.
After checking with the rgw core team it appears Rook was misusing the
CLI and the admin ops API should be used instead.
So this patch is the first introduction of go-ceph in Rook to consume
the rgw admin ops API instead of the `radosgw-admin` CLI, **only** for
user management in this initial commit.
Later we can do more such as bucket operation, zone management etc.

Closes: https://github.com/rook/rook/issues/7924
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 90bea8a560355b829a257b5e1b0b44349c22f864)
ceph: operate over object store pools concurrently

We now create and delete pools in parallel.
Before this patch, the deletion:

```
2021-06-08 13:48:26.557328 I | cephclient: no images/snapshosts present in pool ""my-store.rgw.control""
2021-06-08 13:48:26.557383 I | cephclient: purging pool ""my-store.rgw.control"" (id=1)
2021-06-08 13:48:27.030021 I | ceph-object-controller: done disabling the dashboard api secret key
2021-06-08 13:48:28.800661 I | cephclient: purge completed for pool ""my-store.rgw.control""
2021-06-08 13:48:29.085744 I | cephclient: no images/snapshosts present in pool ""my-store.rgw.meta""
2021-06-08 13:48:29.085762 I | cephclient: purging pool ""my-store.rgw.meta"" (id=3)
2021-06-08 13:48:30.835487 I | cephclient: purge completed for pool ""my-store.rgw.meta""
2021-06-08 13:48:31.128349 I | cephclient: no images/snapshosts present in pool ""my-store.rgw.log""
2021-06-08 13:48:31.128368 I | cephclient: purging pool ""my-store.rgw.log"" (id=4)
2021-06-08 13:48:32.864376 I | cephclient: purge completed for pool ""my-store.rgw.log""
2021-06-08 13:48:33.180923 I | cephclient: no images/snapshosts present in pool ""my-store.rgw.buckets.index""
2021-06-08 13:48:33.181049 I | cephclient: purging pool ""my-store.rgw.buckets.index"" (id=5)
2021-06-08 13:48:34.892163 I | cephclient: purge completed for pool ""my-store.rgw.buckets.index""
2021-06-08 13:48:35.179952 I | cephclient: no images/snapshosts present in pool ""my-store.rgw.buckets.non-ec""
2021-06-08 13:48:35.179994 I | cephclient: purging pool ""my-store.rgw.buckets.non-ec"" (id=6)
2021-06-08 13:48:37.376067 I | cephclient: purge completed for pool ""my-store.rgw.buckets.non-ec""
2021-06-08 13:48:37.665201 I | cephclient: no images/snapshosts present in pool ""my-store.rgw.buckets.data""
2021-06-08 13:48:37.665218 I | cephclient: purging pool ""my-store.rgw.buckets.data"" (id=8)
2021-06-08 13:48:39.394717 I | cephclient: purge completed for pool ""my-store.rgw.buckets.data""
2021-06-08 13:48:39.725528 I | cephclient: no images/snapshosts present in pool "".rgw.root""
2021-06-08 13:48:39.725567 I | cephclient: purging pool "".rgw.root"" (id=7)
2021-06-08 13:48:41.424628 I | cephclient: purge completed for pool "".rgw.root""
```

It took 15sec to cleanup...
Now with this patch:

```
2021-06-08 14:15:25.621472 I | cephclient: no images/snapshosts present in pool ""my-store.rgw.buckets.index""
2021-06-08 14:15:25.621570 I | cephclient: purging pool ""my-store.rgw.buckets.index"" (id=12)
2021-06-08 14:15:25.668708 I | cephclient: no images/snapshosts present in pool ""my-store.rgw.log""
2021-06-08 14:15:25.668729 I | cephclient: purging pool ""my-store.rgw.log"" (id=11)
2021-06-08 14:15:25.693002 I | cephclient: no images/snapshosts present in pool ""my-store.rgw.meta""
2021-06-08 14:15:25.693050 I | cephclient: purging pool ""my-store.rgw.meta"" (id=10)
2021-06-08 14:15:25.698830 I | cephclient: no images/snapshosts present in pool ""my-store.rgw.control""
2021-06-08 14:15:25.698854 I | cephclient: purging pool ""my-store.rgw.control"" (id=9)
2021-06-08 14:15:25.701732 I | cephclient: no images/snapshosts present in pool ""my-store.rgw.buckets.non-ec""
2021-06-08 14:15:25.701758 I | cephclient: purging pool ""my-store.rgw.buckets.non-ec"" (id=13)
2021-06-08 14:15:25.702816 I | cephclient: no images/snapshosts present in pool "".rgw.root""
2021-06-08 14:15:25.702836 I | cephclient: purging pool "".rgw.root"" (id=14)
2021-06-08 14:15:25.717144 I | cephclient: no images/snapshosts present in pool ""my-store.rgw.buckets.data""
2021-06-08 14:15:25.717212 I | cephclient: purging pool ""my-store.rgw.buckets.data"" (id=15)
2021-06-08 14:15:26.393246 I | ceph-object-controller: done disabling the dashboard api secret key
```

It tool around 1sec.

The creation before this patch:

```

2021-06-08 16:47:10.669484 I | ceph-spec: adding finalizer ""cephobjectstore.ceph.rook.io"" on ""my-store""
2021-06-08 16:47:10.677253 E | ceph-object-controller: failed to set object store ""rook-ceph/my-store"" status to ""Progressing"". failed to update object ""my-store"" status: Operation cannot be fulfilled on cephobjectstores.ceph.rook.io ""my-store"": the object has been modified; please apply your changes to the latest version and try again
2021-06-08 16:47:10.682231 I | op-mon: parsing mon endpoints: b=10.111.63.108:6789,c=10.108.123.222:6789,a=10.100.223.211:6789
2021-06-08 16:47:10.985002 I | ceph-object-controller: reconciling object store deployments
2021-06-08 16:47:11.002364 I | ceph-object-controller: ceph object store gateway service running at 10.99.31.5
2021-06-08 16:47:11.002384 I | ceph-object-controller: reconciling object store pools
2021-06-08 16:47:14.336086 I | cephclient: setting pool property ""compression_mode"" to ""none"" on pool ""my-store.rgw.control""
2021-06-08 16:47:16.115072 E | ceph-crashcollector-controller: node reconcile failed on op ""unchanged"": Operation cannot be fulfilled on deployments.apps ""rook-ceph-crashcollector-minikube"": the object has been modified; please apply your changes to the latest version and try again
2021-06-08 16:47:16.138224 E | ceph-crashcollector-controller: node reconcile failed on op ""unchanged"": Operation cannot be fulfilled on deployments.apps ""rook-ceph-crashcollector-minikube"": the object has been modified; please apply your changes to the latest version and try again
2021-06-08 16:47:16.391914 I | cephclient: creating replicated pool my-store.rgw.control succeeded
2021-06-08 16:47:16.391943 I | cephclient: setting pool property ""pg_num_min"" to ""8"" on pool ""my-store.rgw.control""
2021-06-08 16:47:20.390562 I | cephclient: setting pool property ""compression_mode"" to ""none"" on pool ""my-store.rgw.meta""
2021-06-08 16:47:22.423269 I | cephclient: creating replicated pool my-store.rgw.meta succeeded
2021-06-08 16:47:22.423294 I | cephclient: setting pool property ""pg_num_min"" to ""8"" on pool ""my-store.rgw.meta""
2021-06-08 16:47:26.502874 I | cephclient: setting pool property ""compression_mode"" to ""none"" on pool ""my-store.rgw.log""
2021-06-08 16:47:28.555252 I | cephclient: creating replicated pool my-store.rgw.log succeeded
2021-06-08 16:47:28.555308 I | cephclient: setting pool property ""pg_num_min"" to ""8"" on pool ""my-store.rgw.log""
2021-06-08 16:47:32.619546 I | cephclient: setting pool property ""compression_mode"" to ""none"" on pool ""my-store.rgw.buckets.index""
2021-06-08 16:47:34.663020 I | cephclient: creating replicated pool my-store.rgw.buckets.index succeeded
2021-06-08 16:47:34.663050 I | cephclient: setting pool property ""pg_num_min"" to ""8"" on pool ""my-store.rgw.buckets.index""
2021-06-08 16:47:38.712886 I | cephclient: setting pool property ""compression_mode"" to ""none"" on pool ""my-store.rgw.buckets.non-ec""
2021-06-08 16:47:40.748430 I | cephclient: creating replicated pool my-store.rgw.buckets.non-ec succeeded
2021-06-08 16:47:40.748467 I | cephclient: setting pool property ""pg_num_min"" to ""8"" on pool ""my-store.rgw.buckets.non-ec""
2021-06-08 16:47:44.830659 I | cephclient: setting pool property ""compression_mode"" to ""none"" on pool "".rgw.root""
2021-06-08 16:47:46.875834 I | cephclient: creating replicated pool .rgw.root succeeded
2021-06-08 16:47:46.875863 I | cephclient: setting pool property ""pg_num_min"" to ""8"" on pool "".rgw.root""
2021-06-08 16:47:50.933717 I | cephclient: setting pool property ""compression_mode"" to ""none"" on pool ""my-store.rgw.buckets.data""
2021-06-08 16:47:52.969461 I | cephclient: creating replicated pool my-store.rgw.buckets.data succeeded
2021-06-08 16:47:52.969549 I | ceph-object-controller: setting multisite settings for object store ""my-store""
2021-06-08 16:47:53.585737 I | ceph-object-controller: Multisite for object-store: realm=my-store, zonegroup=my-store, zone=my-store
2021-06-08 16:47:53.585777 I | ceph-object-controller: multisite configuration for object-store my-store is complete
2021-06-08 16:47:53.585787 I | ceph-object-controller: creating object store ""my-store"" in namespace ""rook-ceph""
2021-06-08 16:47:53.585802 I | cephclient: getting or creating ceph auth key ""client.rgw.my.store.a""
2021-06-08 16:47:53.930416 I | ceph-object-controller: setting rgw config flags
2021-06-08 16:47:53.931363 I | op-config: setting ""client.rgw.my.store.a""=""rgw_enable_usage_log""=""true"" option to the mon configuration database
2021-06-08 16:47:54.201200 I | op-config: successfully set ""client.rgw.my.store.a""=""rgw_enable_usage_log""=""true"" option to the mon configuration database
2021-06-08 16:47:54.201225 I | op-config: setting ""client.rgw.my.store.a""=""rgw_zone""=""my-store"" option to the mon configuration database
2021-06-08 16:47:54.454589 I | op-config: successfully set ""client.rgw.my.store.a""=""rgw_zone""=""my-store"" option to the mon configuration database
2021-06-08 16:47:54.454614 I | op-config: setting ""client.rgw.my.store.a""=""rgw_zonegroup""=""my-store"" option to the mon configuration database
2021-06-08 16:47:54.710218 I | op-config: successfully set ""client.rgw.my.store.a""=""rgw_zonegroup""=""my-store"" option to the mon configuration database
2021-06-08 16:47:54.710237 I | op-config: setting ""client.rgw.my.store.a""=""rgw_log_nonexistent_bucket""=""true"" option to the mon configuration database
2021-06-08 16:47:54.969049 I | op-config: successfully set ""client.rgw.my.store.a""=""rgw_log_nonexistent_bucket""=""true"" option to the mon configuration database
2021-06-08 16:47:54.969069 I | op-config: setting ""client.rgw.my.store.a""=""rgw_log_object_name_utc""=""true"" option to the mon configuration database
2021-06-08 16:47:55.255491 I | op-config: successfully set ""client.rgw.my.store.a""=""rgw_log_object_name_utc""=""true"" option to the mon configuration database
2021-06-08 16:47:55.255631 I | ceph-object-controller: object store ""my-store"" deployment ""rook-ceph-rgw-my-store-a"" started
2021-06-08 16:47:55.279316 I | ceph-object-controller: enabling rgw dashboard
2021-06-08 16:47:55.361208 E | ceph-crashcollector-controller: node reconcile failed on op ""unchanged"": Operation cannot be fulfilled on deployments.apps ""rook-ceph-crashcollector-minikube"": the object has been modified; please apply your changes to the latest version and try again
2021-06-08 16:47:56.225904 I | ceph-object-controller: setting the dashboard api secret key
2021-06-08 16:47:56.225984 I | ceph-object-controller: created object store ""my-store"" in namespace ""rook-ceph""
2021-06-08 16:47:56.589452 I | ceph-object-controller: starting rgw healthcheck
2021-06-08 16:47:56.650045 I | ceph-object-controller: done setting the dashboard api secret key
```

It took 46sec, and I've seen it taking almost a 1min sometimes.
Now with this patch:

```
2021-06-08 16:51:35.259558 I | ceph-spec: adding finalizer ""cephobjectstore.ceph.rook.io"" on ""my-store""
2021-06-08 16:51:35.270524 E | ceph-object-controller: failed to set object store ""rook-ceph/my-store"" status to ""Progressing"". failed to update object ""my-store"" status: Operation cannot be fulfilled on cephobjectstores.ceph.rook.io ""my-store"": the object has been modified; please apply your changes to the latest version and try again
2021-06-08 16:51:35.274387 I | op-mon: parsing mon endpoints: b=10.111.63.108:6789,c=10.108.123.222:6789,a=10.100.223.211:6789
2021-06-08 16:51:35.599023 I | ceph-object-controller: reconciling object store deployments
2021-06-08 16:51:35.607256 I | ceph-object-controller: ceph object store gateway service running at 10.104.254.110
2021-06-08 16:51:35.607315 I | ceph-object-controller: reconciling object store pools
2021-06-08 16:51:39.337735 I | cephclient: setting pool property ""compression_mode"" to ""none"" on pool ""my-store.rgw.buckets.non-ec""
2021-06-08 16:51:40.343290 I | cephclient: setting pool property ""compression_mode"" to ""none"" on pool "".rgw.root""
2021-06-08 16:51:40.346335 I | cephclient: setting pool property ""compression_mode"" to ""none"" on pool ""my-store.rgw.buckets.index""
2021-06-08 16:51:40.362670 I | cephclient: setting pool property ""compression_mode"" to ""none"" on pool ""my-store.rgw.meta""
2021-06-08 16:51:40.363445 I | cephclient: setting pool property ""compression_mode"" to ""none"" on pool ""my-store.rgw.log""
2021-06-08 16:51:40.364321 I | cephclient: setting pool property ""compression_mode"" to ""none"" on pool ""my-store.rgw.control""
2021-06-08 16:51:41.412870 I | cephclient: creating replicated pool my-store.rgw.buckets.non-ec succeeded
2021-06-08 16:51:41.412904 I | cephclient: setting pool property ""pg_num_min"" to ""8"" on pool ""my-store.rgw.buckets.non-ec""
2021-06-08 16:51:42.460439 I | cephclient: creating replicated pool my-store.rgw.control succeeded
2021-06-08 16:51:42.460503 I | cephclient: setting pool property ""pg_num_min"" to ""8"" on pool ""my-store.rgw.control""
2021-06-08 16:51:42.470666 I | cephclient: creating replicated pool my-store.rgw.meta succeeded
2021-06-08 16:51:42.470727 I | cephclient: setting pool property ""pg_num_min"" to ""8"" on pool ""my-store.rgw.meta""
2021-06-08 16:51:42.473029 I | cephclient: creating replicated pool .rgw.root succeeded
2021-06-08 16:51:42.473064 I | cephclient: setting pool property ""pg_num_min"" to ""8"" on pool "".rgw.root""
2021-06-08 16:51:42.473895 I | cephclient: creating replicated pool my-store.rgw.buckets.index succeeded
2021-06-08 16:51:42.473923 I | cephclient: setting pool property ""pg_num_min"" to ""8"" on pool ""my-store.rgw.buckets.index""
2021-06-08 16:51:42.478625 I | cephclient: creating replicated pool my-store.rgw.log succeeded
2021-06-08 16:51:42.478671 I | cephclient: setting pool property ""pg_num_min"" to ""8"" on pool ""my-store.rgw.log""
2021-06-08 16:51:46.606905 I | cephclient: setting pool property ""compression_mode"" to ""none"" on pool ""my-store.rgw.buckets.data""
2021-06-08 16:51:48.627320 I | cephclient: creating replicated pool my-store.rgw.buckets.data succeeded
2021-06-08 16:51:48.627368 I | ceph-object-controller: setting multisite settings for object store ""my-store""
2021-06-08 16:51:49.325086 I | ceph-object-controller: Multisite for object-store: realm=my-store, zonegroup=my-store, zone=my-store
2021-06-08 16:51:49.325108 I | ceph-object-controller: multisite configuration for object-store my-store is complete
2021-06-08 16:51:49.325121 I | ceph-object-controller: creating object store ""my-store"" in namespace ""rook-ceph""
2021-06-08 16:51:49.325134 I | cephclient: getting or creating ceph auth key ""client.rgw.my.store.a""
2021-06-08 16:51:49.657898 I | ceph-object-controller: setting rgw config flags
2021-06-08 16:51:49.657920 I | op-config: setting ""client.rgw.my.store.a""=""rgw_log_object_name_utc""=""true"" option to the mon configuration database
2021-06-08 16:51:49.917898 I | op-config: successfully set ""client.rgw.my.store.a""=""rgw_log_object_name_utc""=""true"" option to the mon configuration database
2021-06-08 16:51:49.917917 I | op-config: setting ""client.rgw.my.store.a""=""rgw_enable_usage_log""=""true"" option to the mon configuration database
2021-06-08 16:51:50.184939 I | op-config: successfully set ""client.rgw.my.store.a""=""rgw_enable_usage_log""=""true"" option to the mon configuration database
2021-06-08 16:51:50.184970 I | op-config: setting ""client.rgw.my.store.a""=""rgw_zone""=""my-store"" option to the mon configuration database
2021-06-08 16:51:50.463799 I | op-config: successfully set ""client.rgw.my.store.a""=""rgw_zone""=""my-store"" option to the mon configuration database
2021-06-08 16:51:50.463821 I | op-config: setting ""client.rgw.my.store.a""=""rgw_zonegroup""=""my-store"" option to the mon configuration database
2021-06-08 16:51:50.720953 I | op-config: successfully set ""client.rgw.my.store.a""=""rgw_zonegroup""=""my-store"" option to the mon configuration database
2021-06-08 16:51:50.720999 I | op-config: setting ""client.rgw.my.store.a""=""rgw_log_nonexistent_bucket""=""true"" option to the mon configuration database
2021-06-08 16:51:50.974875 I | op-config: successfully set ""client.rgw.my.store.a""=""rgw_log_nonexistent_bucket""=""true"" option to the mon configuration database
2021-06-08 16:51:50.975024 I | ceph-object-controller: object store ""my-store"" deployment ""rook-ceph-rgw-my-store-a"" started
2021-06-08 16:51:51.019820 I | ceph-object-controller: enabling rgw dashboard
2021-06-08 16:51:51.980117 I | ceph-object-controller: created object store ""my-store"" in namespace ""rook-ceph""
2021-06-08 16:51:51.980199 I | ceph-object-controller: setting the dashboard api secret key
2021-06-08 16:51:52.399997 I | ceph-object-controller: done setting the dashboard api secret key
2021-06-08 16:51:52.435936 I | ceph-object-controller: starting rgw healthcheck
```

It took 17sec.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 677c93f3aac8a1d927d66295a13b1c06f4a7c291)
ceph: mons should enable v1 address type when enabling v2

Signed-off-by: Arun Kumar Mohan <amohan@redhat.com>
(cherry picked from commit 7445afb8748349445ac774e453f9b9cd31a10de1)
ceph: compare ceph commit hash for upgrade check

Currently we only check the Major, Minor, Extra and Build number in the ceph version to determine if all daemons should be upgraded or not. This PR also checks the commit hash for upgrading all the daemons.
This will be useful in cases where build number has not changed due to hotfix. For example:
existing ceph version - ceph version 14.2.11-139.el8cp (b8e1f91c99491fb2e5ede748a1c0738ed158d0f5) nautilus (stable)
new ceph version with hotfix - ceph version 14.2.11-139.0.hotfix.bz1959254.el8cp (5c0dc966af809fd1d429ec7bac48962a746af243) nautilus (stable)

Signed-off-by: Santosh Pillai <sapillai@redhat.com>
(cherry picked from commit 49dc03e8ebbd114ca33e23c4f17e5dee93bbe390)
ceph: set CSI_ENABLE_HOST_NETWORK default value to true

This commit changes CSI_ENABLE_HOST_NETWORK default value to true
since it was observed that cephfsvolume gets blocked when csi cephfs
nodeplugin is restarted and nodeunpublish call also hangs when
cephfs nodeplugin is using pod networking.

Updates:

Signed-off-by: Rakshith R <rar@redhat.com>
(cherry picked from commit f489aba8f28eabc6892d73c6d8f939d13e98e270)
ci: only run ceph-csi volume replication on k8s >= 1.16

Prior to 1.16 we do not injec the volumereplication CRDs so the
csi-rbdplugin-provisioner will fail to fetch the CRD.

Closes: https://github.com/rook/rook/issues/8039
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit fccbadd837b78adc7304797c2cfbf9c2c4f3ae94)
ceph: disable insecure global id if no insecure clients

In the latest Ceph releases starting with v16.2.1, all clients are recommended
to be updated so they will have a security fix to connect with a secure
global ID. A health warning will be raised if any insecure clients are connected
and another health warning is raised if insecure clients are still allowed.
Rook will now disable allowing the insecure clients if the health warning
is not being raised to indicate that there are insecure clients still connected.
This means that upgraded clusters will not have this disabled until all the
daemons are updated.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit b1f4411fb4ff36f9b0d3bf36610616a81844f05a)
ceph: update the toolbox in the upgrade test

The upgrade test needs to also update the toolbox to ensure that it will not
be denied access to the cluster when the insecure connections are disabled
by the operator.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 44d31f148e93427f11a646ba9587ed92b3c59ccb)
ceph: do not fail prepareOSD job if devices are not passed

If devices are not specified for node return empty desired devices
list and do not fail prepareOSD job.

Closes:
Signed-off-by: Denis Egorenko <degorenko@mirantis.com>
(cherry picked from commit fa2c276cc1ecf2e1de8e2df536a18527fa925442)
build: update the release version to v1.6.5

The version is updated for the latest patch release v1.6.5.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.6.5 is a patch release limited in scope and focusing on small feature additions and bug fixes.
We are happy to announce the availability of a Helm chart to configure the CephCluster CR.
Please try it out and share feedback! We would like to declare it stable in v1.7.
Ceph
Experimental Helm chart for CephClusters (, @henryzhangsta)
Disable insecure global id if no insecure clients are detected. If insecure clients are still required, see these instructions. (, @travisn)
Enable host networking by default in the CSI driver due to issues with client IO hangs when the driver restarts (, @Rakshith-R)
Add a disaster recovery guide for an accidentally deleted CephCluster CR (, @travisn)
Do not fail prepareOSD job if devices are not passed (, @degorenko)
Ensure MDS and RGW are upgraded anytime the ceph image changes (, @sp98)
External cluster config enables v1 address type when enabling v2 (, @aruniiird)
Create object pools in parallel for faster object store reconcile (, @leseb)
Fix detection of delete event reconciliation (, @BlaineEXE)
Use RGW admin API for s3 user management (, @leseb)"
"mon: refactor helper to assimilate mon store settings

More settings can use the assimilate command if refactored
to a different go package.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 0514547d56abfed4374e9f68fdfe9c6cf8351e08)
mon: use the assimilate mode for setall commands

The monstore has a SetAll method for applying multiple settings
that was applying them individually. Now we use the assimilate
config option to make this more efficient.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 12918855015edb3d47af88f2ad2af654fad62c33)
helm: bugs following docs for NixOS deployment

85b079105b62752c10edaf3ccdaf637f9ca39d02 introduced some bugs that here I'm fixing.

1. Docs missing `csi.` prefix.
2. Chart was using `cis.csiRBDPluginVolumes` instead of `csi.csiCephFSPluginVolume`.
3. Values had to be a scalar value, not a raw string. Otherwise, the operator can't parse it.
4. Link to `/run/booted-system` instead of `/run/current-system`. In the former, the kernel modules will always match the current kernel; in the latter, it could happen that after a new `nixos-rebuild switch`, plugin containers can't find the kernel modules for the booted kernel version.
5. Values included in the `values.yaml` template were plural. These are not supported, they must all be singular.

About that 3rd point, this was the error being logged:

```
2022-11-04 09:54:47.489851 I | op-k8sutil: CSI_RBD_PLUGIN_VOLUME=""|\n - name: lib-modules\n hostPath:\n path: /run/current-system/kernel-modules/lib/modules/\n - name: host-nix\n hostPath:\n path: /nix"" (configmap)
2022-11-04 09:54:47.489907 W | ceph-csi: failed to parse ""|\n - name: lib-modules\n hostPath:\n path: /run/current-system/kernel-modules/lib/modules/\n - name: host-nix\n hostPath:\n path: /nix"" for ""CSI_RBD_PLUGIN_VOLUME"". json: cannot unmarshal string into Go value of type []v1.Volume
2022-11-04 09:54:47.489916 I | op-k8sutil: CSI_RBD_PLUGIN_VOLUME_MOUNT=""|\n - name: host-nix\n mountPath: /nix\n readOnly: true"" (configmap)
2022-11-04 09:54:47.489937 W | ceph-csi: failed to parse ""|\n - name: host-nix\n mountPath: /nix\n readOnly: true"" for ""CSI_RBD_PLUGIN_VOLUME_MOUNT"". json: cannot unmarshal string into Go value of type []v1.VolumeMount
```

@moduon MT-1503

Signed-off-by: Jairo Llopis <yajo.sk8@gmail.com>
(cherry picked from commit e0ad2f978959624c1c2174e457596d6593bca0b1)
object: do not create service for external object stores

External CephObjectStores already have endpoints defined by
spec.gateway.externalRgwEndpoints, and if the external store is
configured with TLS (HTTPS), the store's certificates will likely not
accept connections intended for the Service endpoint Rook creates. Some
users might not be able to easily add the service endpoint to their
certificates. Therefore, don't even bother creating a Service for
external clusters.

This does introduce a few issues. The Service seems to have been
initially created to allow multiple external RGW endpoints to be
addressable via a single address in Rook. For all connections to an
external CephObjectStore with multiple endpoints, simply choose an
endpoint at random. Random selection will prevent Rook from failing to
create buckets or users on an external store if one of the external
store's endpoints fails.

The latest OBC library (lib-bucket-provisioner) allows updating the
endpoints on ObjectBuckets after they are created. This allows Rook
users to change endpoints on external CephObjectStores without breaking
all existing OBCs. It requires implementation of the new GetUserID()
library call, requires updating Provision() and Grant() calls to be
idempotent, and it requires removing the Update() call.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit a777b1d7d1cde596b3d29287e89df0884d51bb91)

# Conflicts:
#	pkg/apis/ceph.rook.io/v1/types.go
object: allow new status endpoints to be null

For the upgrade case, allow the status endpoints to have null slices.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
core: include userID/userKey to secret generated from CephClient

Adding two new entries(userID/userKey) in the cephClient secret, so that the csi driver can easily consume

Signed-off-by: Avan Thakkar <athakkar@redhat.com>
(cherry picked from commit 47df5c37cd44af46674f9f93a88fb235d1b2093f)
mon: remove out of quorum mons from ceph.conf

The mons that are out of quorum may cause ceph commands to timeout
or fail unnecessarily trying to connect to a mon that is no longer
online. Now the mon health check will update the mon endpoints configmap
when a mon is detected out of quorum. This also means that if the
operator is restarted during a mon failover, the failed mon will no
longer remain in the ceph.conf, thus allowing the quorum to be more
likely to respond to the mons that are still in quorum.

The update for mons out of quorum only applies if other mons are in
quorum. If quorum is down, the configmap will not keep track of the offline
mons since too many are offline.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit b6e8ea2b506da1435d2dcc2402ad6ee79d2050c9)
core: add ability to add resources on discovery daemon set

Closes: https://github.com/rook/rook/issues/11265

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 9f432b4ecb97c7571330d21d16de058066232338)
docs: set crd page titles to crd name

The name of the CRD is more clear for finding the CRD specs
instead of a modified form of the name that was intended
to be more human readable. When someone is looking for the
CRD settings, they more naturally expect the CRD name
in the title

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 05590dfc9b19677555cd2f4c9df07f99c10542bd)
docs: add additional RBD image features to docs and YAML files

Signed-off-by: Anthony D'Atri <anthonyeleven@users.noreply.github.com>
(cherry picked from commit 10b398cc02b8091f53edad334b299c7ae865171e)
osd: support loop devices for test clusters

A new variable is added to rook-ceph-operator-config
ConfigMap to allow using loop devices for osd.

This feature is intended to be used for testing purposes only.

Signed-off-by: Shinya Hayashi <shinya-hayashi@cybozu.co.jp>
(cherry picked from commit 05875a3f4fb78b286297fb6c4ff90361dd5c62f0)
object: mark endpoint as a optional field

Signed-off-by: Nitin Goyal <nigoyal@redhat.com>
helm: set DISCOVER_DAEMON_UDEV_BLACKLIST

While added support for the udev blacklist and also added it to
the values file, it omitted actually passing the value as environment
variable.

Signed-off-by: Jens Erat <email@jenserat.de>
(cherry picked from commit 0f7e1d03434227c94eaf581d366d618b46fd8b9d)
docs: clarify in docs and readme that rook focuses on ceph

Rook has for quite some time only been focused on the Ceph
operator. Maintainers have only been focused on Ceph, and
the community has likewise been focused on Ceph. Now the docs
are updated to clarify that Ceph storage is the focus and
there are no plans for the project to support other storage
providers.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit b79d9022a402d939d5c67effba06afef78f7e6e0)
docs: clarify csi already exists error in docs

The already exists error message is perhaps the most common
issue with the csi driver. The csi troubleshooting guide
is now clarified to make that error message easier
to find.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 6b6252e47409e345e078a442fa60f5b30e25251b)
docs: update rbd-mirror doc

the pool mentioned in docs didn't have hypen
doc ref: https://rook.io/docs/rook/v1.9/Storage-Configuration/Block-Storage-RBD/rbd-mirroring/#create-rbd-pools

[root@centos-4gb-hel1-1 rook]# kubectl get cephblockpool.ceph.rook.io/mirroredpool
Error from server (NotFound): cephblockpools.ceph.rook.io ""mirroredpool"" not found

Signed-off-by: Deepika Upadhyay <deepika@koor.tech>
(cherry picked from commit 2e048406ab66e3bed42b92fa031aeee9cbe6bc61)
operator: fix a bug where crash collectors in wrong namespaces were deleted

Fixes

Signed-off-by: Sebastian Hasler <sebastian.hasler@stuvus.uni-stuttgart.de>
(cherry picked from commit 120c7dddcb13a15d1719b024a43ea693d882ecaf)
build: set the release version to v1.10.6

For the patch release the docs and examples are updated to
v1.10.6

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.10.6 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
crash: Crash collectors in wrong namespaces were deleted (, @haslersn)
helm: Allow setting DISCOVER_DAEMON_UDEV_BLACKLIST (, @JensErat)
docs: Add additional RBD image features to docs and YAML files (, @anthonyeleven)
core: Include userID/userKey to secret generated from CephClient (, @avanthakkar)
mon: Remove out of quorum mons from ceph.conf for improved connectivity during failover or partial quorum (, @travisn)
object: Mark endpoint as a optional field (, @iamniting)
osd: Support loop devices for test clusters (, @peng225)
core: Allow setting resources on the discovery daemon (, @parth-gr)
object: Do not create service for external object stores (, @BlaineEXE)
mon: Apply mon store settings more efficiently with the assimilate conf (, @travisn)
docs: Clarify in docs and readme that Rook focuses on Ceph (, @travisn)
docs: Set CRD page titles to the CRD name (, @travisn)
docs:  Clarification for NixOS deployment properties (, @yajo)"
"security: add dry run mode for external cluster script

Adding dry run mode for external cluster script.
This will add cli argument `--dry-run`. By default
`dry-run` option will be `False`
which means it will only print something like below.

```
Execute: 'ceph fs ls'
Execute: 'ceph fsid'
Execute: 'ceph quorum_status'
Execute: 'ceph auth get-or-create client.healthchecker mon allow r, allow command quorum_status,
	allow command version mgr allow command config osd allow rwx pool=default.rgw.meta, allow r pool=
	.rgw.root, allow rw pool=default.rgw.control, allow rx pool=default.rgw.log, allow x
	pool=default.rgw.buckets.index'
Execute: 'ceph mgr services'
Execute: 'ceph auth get-or-create client.csi-rbd-node mon profile rbd osd profile rbd'
Execute: 'ceph auth get-or-create client.csi-rbd-provisioner mon profile rbd mgr allow rw osd
	profile rbd'
Execute: 'ceph status'

```

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit c891ddb57d39178a30a81d9c5b5ed701494a0252)
docs: add jumbo frames note to common issues

Resolves

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 6c90d6687559adfda2e1e408cbc4fc3c1e7aa301)
rgw: fix blockOwnerDeletion error

This restores the missing permissions to allow the object controller to
update the finalizers section in the spec. See https://sdk.operatorframework.io/docs/faqs/

Signed-off-by: Daniel Ruiz Capilla <crd1985@gmail.com>
(cherry picked from commit 66cc46220fba97ab86dbc3c74c2426fe2a6ec89d)
docs: recommend primary affinity over hybrid pools

Hybrid pools suffer from lower availability when a node goes down,
so we recommend primary affinity instead of hybrid pools.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 277252a46df71246b5de5de8448da6c95089bd17)
docs: fixed typo on rbd mirroring documentation

Signed-off-by: Vivek Shinde <vshinde@parallelwireless.com>
(cherry picked from commit 6a0690383a61f176ac1275d616feab6e5b78c2cc)
operator: always report events

The original PR which added event reporting unnecessarily ""optimized"" to
prevent spamming the API controller[1].

It is sometimes important to get events as they happen and not hide new
events behind preexisting older events. For example, in integration
tests, we may often want to wait for a controller to finish processing
an update, and the best way to do that is to wait for the
""ReconcileSucceeded"" event. In order for this to be useful, the events
must be reported each time.

If we begin having problems with events being reported too often, then
we should fix the underlying issue of reconciles happening too often
instead of relying on a time-based ""optimization"" that hides recent
event reports that may be useful.

[1]: https://github.com/rook/rook/pull/7222

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit da61ac1ae83b207ab2c1c0529e54c9529eab38a8)
core: do not log create event as info

Let's use debug not to clutter logs.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 52ededd151cc5db2e4531c22b7359cd39424b041)
core: disallow multiple clusters in the same namespace

Rook does not support running multiple clusters in the same namespace,
so the operator should not reconcile if a new cluster is added.
The scenario where a cluster is added while the operator is down is also
handled. CR updates are also handled.
When the operator detects more than one cluster it will refuse to
reconcile the CephCluster, and child CRDs will block too until the
operator is ready.
The user must remove one of the clusters before can continue to perform
any reconcile.

Closes: https://github.com/rook/rook/issues/9452
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit da76a772f8f52005bc611f3a294d52f25e3644a1)
osd: handle removal of encrypted osd deployment

This is handling a tricky scenario where the OSD deployment is manually
removed and the OSD never reconvers. This is unlikely to happen, but
still OSD should be able to run after that action. Essentially after a
manual deletion, we need to run the prepare job again to re-hydrate the
OSD information so that the OSD deployment can be deployed.
On encryption, it is a little bit tricky since ceph-volume list again
the main block won't return anything, so we need to target the encrypted
block to list.
There is another case this PR does not handle, which is the removal of
the OSD deployment and then the node is restarted. This means that the
encrypted container is not opened anymore. However, opening it requires
more work like writing the key on the filesystem (if not coming from the
Kubernete secret, eg,. KMS vault) and then run luksOpen. This is an
extreme corner case probably not worth worrying about for now.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 05775b068d95b5917ed73cd4682d4ca061a259e2)
object: fix handling for notifications for OBC

Current approach is to delete all the existing notifcations from bucket
and re-add the notification from the labels.

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit 9d9acc2db10b08683cc4468f01779514386b902d)
subvolumegroup: add new crd

This introduces a new CRD to add the ability to create subvolumegroup
for a given ceph filesystem volume. Typically the name of the volume is
the name of the filesystem created by rook.

Closes: https://github.com/rook/rook/issues/7036
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 6e9eb33782dd67cd01371a1032514252c377fc14)
build: add missing helm

If helm is not install, `make` fails with the following log.

```console
./build/rbac/get-helm-rbac.sh: line 25: helm: command not found
```

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit a7b5f06622ab3f175b3785844669ec4ea7e84966)
build: use the same csv name for all platforms

Recently with the directory renaming to ""deploy/olm"" the CSV name
changed from ""ceph"" to ""olm"". Now we are using the same ""rook-ceph"" name
regardless of the platform.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 7cf928550165798b0f242f2b571a71aa54df1cb9)
core: run discover daemonset as root uid

So that the tool inside the container has the permission to run
correctly, e.g: sgdisk.

Clsoes: https://github.com/rook/rook/issues/9493
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit dd67b866dcadd909a8b2d3cf355301f50b0c3eb4)
core: rgw: allow specifying daemon startup probes

Allow specifying daemon startup probes where we also allow configuring
liveness probes. Startup probes allow Rook to tolerate when Ceph daemons
occasionally take a long time to start up while not also making
Kubernetes liveness probes slower to detect runtime failures of daemons.

Startup probes are beta in Kubernetes 1.18, so we should not enable
probes by default for earlier Kubernetes versions.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit c07d89d9ea3b8c2fe2b92431b1cbac1bb52176a1)
rgw: add events to CephBucketNotification CR

the events are used to mark the start/success/failure of the reconciliation
and also to log the bucket names on which the CephbucketNotification is
created

Signed-off-by: Yuval Lifshitz <ylifshit@redhat.com>
(cherry picked from commit 11727b16739ba1e5368b8b038716b6d268ca6053)
docs: add section for `disruptionManagement`

Adding section `disruptionManagement` which was
removed unintentionally in PR 8381.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 0b0c8da5584ede6423de6263ab212cca59f070d2)
object: update to latest lib-bucket-provisioner

The latest lib-bucket-provisioner has a corner case fix for a bucket
with `generateName` equal to exactly 27 chars, which will result in an
ObjectBucket with 64 chars. 63 chars is the max allowed by Kubernetes.

See:
https://github.com/kube-object-storage/lib-bucket-provisioner/pull/220

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit ae306e434ae0c6af28c3afae65b6dca89fb46dff)
rgw: fix startup probe

It's better to set the same handler to startupProbe as livenessProbe.
Otherwise, we might hit the following problem.

https://github.com/rook/rook/issues/6304

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit af88b50fc75f2cd4cda93a5361137bb1d515aa65)
build: update release version to v1.8.2

With the patch release the examples and docs are updated to v1.8.2

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.8.2 is a patch release limited in scope and focusing on small feature additions and bug fixes to the Ceph operator.
subvolumegroup: Add CephFilesystemSubVolumeGroup CRD (, @leseb)
core: Run the discover daemonset as root uid (, @leseb)
core: Allow specifying daemon startup probes (, @BlaineEXE)
rgw: Startup probe uses same as the readiness probe instead of liveness probe (, @satoru-takeuchi)
rgw: Add events to the CephBucketNotification CR (, @yuvalif)
object: Update to the latest lib-bucket-provisioner (, @BlaineEXE)
build: Use the same csv name for all platforms (, @leseb)
object: Fix handling for notifications for OBC (, @thotz)
osd: Handle removal of encrypted osd deployment (, @leseb)
core: Re-enable check to disallow for multiple clusters in the same namespace (, @leseb)
operator: Report events more consistently for cluster status (, @BlaineEXE)
rgw: Add permissions to update finalizers on OBCs (, @crd1985)
docs: Recommend primary affinity over hybrid pools (, @travisn)
docs: Add jumbo frames note to common issues (, @BlaineEXE)
security: Add dry run mode for external cluster script (, @subhamkrai)"
"osd: add unit test for chown-container-data-dir init container

Signed-off-by: Yuma Ogami <yuma-ogami@cybozu.co.jp>
(cherry picked from commit c6c264df84681f5dcb5cd7ca30422d84dbc1a0ae)
osd: add expand-bluefs init container for host-based cluster

OSD is not resized in host-based clusters even though expanding
the backing block device. It's due to the lack of bluefs-bdev-expand
init container.

Closes: https://github.com/rook/rook/issues/10930
Signed-off-by: Yuma Ogami <yuma-ogami@cybozu.co.jp>
(cherry picked from commit 7599f1bc6b3f52479a815328409593e9430b00d9)
external: dont call telemetry if the cluster is external

closes: https://github.com/rook/rook/issues/11470
Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit a52e2f17940661ebe7739155fba86c3ca0115971)
helm: fix toolbox command, default to cluster image

Signed-off-by: Loïc Antoine-Gombeaud <lantoinegombeaud@gestform.com>
Co-authored-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 59f6cd00ff06fc05a180dfe45cb388d4f3f08a83)
docs: fix grafana dashboard links

Fixes the Grafana dashboard links dur to changes on the Grafana website.

Signed-off-by: Tim Jones <timniverse@gmail.com>
(cherry picked from commit afdd6e92ce6b5f7aa9afdedb0b4be16b3230e6cb)
docs: add limitRange comment to deploy/charts/rook-ceph-cluster/values.yaml

Signed-off-by: Anthony D'Atri <anthony.datri@gmail.com>
(cherry picked from commit a84aeebb4d7d889368b1161bb2e556a3cb695b11)
csi: update sidecars to latest release

update all the kubernetes sidecars to the latest
release.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit f11e65f40c893847c757852695b77214d537da75)
helm: storageclass parameters secrets namespace

make the parameters secrets namespace the same as the chart release namespace

Closes: https://github.com/rook/rook/issues/11516
Signed-off-by: Cyril Jouve <jv.cyril@gmail.com>
(cherry picked from commit 668bd172e3a5a489a5c71c5777551e21a5b389b2)
core: set rbd_default_map_options for encryption

Set rbd_default_map_options to secure when encryption
is enabled or else set it to prefer-crc.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit bc41df4dd8f3cd49f924b95d2615e80387477e3c)
csi: use krbd for encryption

use krbd for mapping the rbd image when
ceph cluster encryption is enabled.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 41e40827308041d9f8ef462287a1b6544501f2b2)
webhook: disable webhook by default

sadly, we need to disable webhook by default until
we find solution to https://github.com/rook/rook/issues/10719

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit e9e23131269978ae69628883f6f81182b0753796)
build: update the release version to v1.10.9

For the patch release update the examples and docs to
v1.10.9

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.10.9 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
This release is not recommended due to, which is fixed in v1.10.10.
webhook: Disable the admission controller by default and move its setting to the operator configmap (, @subhamkrai)
ceph: Set rbd_default_map_options for encryption (, @Madhu-1)
helm: Process the namespace in the storage classes to be the same as the release namespace (, @jouve)
csi: Update sidecar images to the latest release versions (, @Madhu-1)
helm: Use the Ceph image instead of the Rook image for the toolbox spec (, @LoicGombeaud)
external: Skip reporting telemetry if the cluster is external (, @parth-gr)
osd: Enable device expansion for OSDs in a host-based cluster (, @cupnes)
docs: Recommended memory limits for the osd prepare job when limits are required (, @anthonyeleven)
docs: Fix grafana dashboard links (, @TimJones)"
"mon: update node labels as per new key value

From kube v1.24 onwards, Kubeadm applies a ""node-role"" label to its
control plane Nodes.Currently this label key is node-role.kubernetes.io/master
and it will be renamed to node-role.kubernetes.io/control-plane. Kubeadm
also uses the same ""node-role"" as key for a taint it applies on control
plane Nodes. This taint key should also be renamed to
""node-role.kubernetes.io/control-plane"".

Signed-off-by: Humble Chirammal <hchiramm@redhat.com>
(cherry picked from commit 750faa5747a414f50f4eba6fdd1aae9773c464f2)
csi: update restricted auth flag

remove the restriction of per rados namespace as
there can be multiple namespaces and the csi-users
can only have 1 type in a storage class

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit dcba6891298eacddabc9e149f4a04b82c8329066)
csi: make storage class updated with csi-users in external cluster

For using restricted auth users we need to update the
restricted users in the Storage class, so updating
it in the json output for external cluster

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit b7c165b41103b3d98731f6c31f5ad4dde1b9054d)
Signed-off-by: parth-gr <paarora@redhat.com>
docs: remove obsolete limitation from multus docs

With the new holder pod that was implemented for the csi
driver to maintain a consistent network endpoint across
csi plugin restarts, there is no longer a limitation
that needs to be documented.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit b5f57f71241eeab2fa4f3d0929de85b3649da704)
docs: update ceph external cluster flags

Some optional Flags are already added
for external script but not documented,
So to expose the functionality to users
adding them to the doc list

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 65a0d81d00c3bd7d4cd93fa40448e301ca7688a9)
osd: do not return if deactivate fail

Let it fail further once we run c-v activate. The error reported by LVM
could potentially ignored. If there is a failure, the c-v command will
fail anyways.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit bfe4f7c11106f073d8e2fcf78165d998ff9c051c)
osd: add lvm flag for lvm osd activate

Ancient OSDs based on LVM and activated by the Rook binary are still in
production. They fail on the deactivation of the VolumeGroup due to
incorrect filter. Setting the OSD as LVM adjusts the filter and make the
deactivate call working.

Repro without and with the correct filter:

```
[root@ca862389706c /]# vgchange -an -vv ceph-a8ae9f01-a440-4a0e-8e4d-592d3bce3a9d
  global/use_lvmpolld not found in config: defaulting to 1
  devices/sysfs_scan not found in config: defaulting to 1
  devices/scan_lvs not found in config: defaulting to 0
  devices/multipath_component_detection not found in config: defaulting to 1
  devices/md_component_detection not found in config: defaulting to 1
  devices/fw_raid_component_detection not found in config: defaulting to 0
  devices/ignore_suspended_devices not found in config: defaulting to 0
  devices/ignore_lvm_mirrors not found in config: defaulting to 1
  devices/scan_lvs not found in config: defaulting to 0
  devices/allow_mixed_block_sizes not found in config: defaulting to 0
  devices/hints not found in config: defaulting to ""all""
  activation/activation_mode not found in config: defaulting to ""degraded""
  metadata/record_lvs_history not found in config: defaulting to 0
  devices/search_for_devnames not found in config: defaulting to ""auto""
  activation/monitoring not found in config: defaulting to 1
  global/locking_type not found in config: defaulting to 1
  global/wait_for_locks not found in config: defaulting to 1
  global/prioritise_write_locks not found in config: defaulting to 1
  global/locking_dir not found in config: defaulting to ""/run/lock/lvm""
  devices/md_component_detection not found in config: defaulting to 1
  devices/md_component_checks not found in config: defaulting to ""auto""
  devices/multipath_wwids_file not found in config: defaulting to ""/etc/multipath/wwids""
  global/use_lvmlockd not found in config: defaulting to 0
  report/output_format not found in config: defaulting to ""basic""
  log/report_command_log not found in config: defaulting to 0
  devices/use_devicesfile not found in config: defaulting to 0
  /dev/log: stat failed: No such file or directory
  devices/global_filter not found in config: defaulting to global_filter = [ ""a|.*|"" ]
  Setting devices/filter to filter = [ ""a|^/mnt/.*|"", ""r|.*|"" ]
  devices/global_filter not found in config: defaulting to global_filter = [ ""a|.*|"" ]
  Setting devices/filter to filter = [ ""a|^/mnt/.*|"", ""r|.*|"" ]
  devices/devicesfile not found in config: defaulting to ""system.devices""
  Obtaining the complete list of VGs to process
  VG name on command line not found in list of VGs: ceph-a8ae9f01-a440-4a0e-8e4d-592d3bce3a9d
  Processing VG ceph-a8ae9f01-a440-4a0e-8e4d-592d3bce3a9d
  Locking /run/lock/lvm/V_ceph-a8ae9f01-a440-4a0e-8e4d-592d3bce3a9d WB
  Unlocking /run/lock/lvm/V_ceph-a8ae9f01-a440-4a0e-8e4d-592d3bce3a9d
  Volume group ""ceph-a8ae9f01-a440-4a0e-8e4d-592d3bce3a9d"" not found
  Cannot process volume group ceph-a8ae9f01-a440-4a0e-8e4d-592d3bce3a9d
  global/notify_dbus not found in config: defaulting to 1
[root@ca862389706c /]# echo $?
5
[root@ca862389706c /]# vi /etc/lvm/lvm.conf
[root@ca862389706c /]# vgchange -an -vv ceph-a8ae9f01-a440-4a0e-8e4d-592d3bce3a9d
  global/use_lvmpolld not found in config: defaulting to 1
  devices/sysfs_scan not found in config: defaulting to 1
  devices/scan_lvs not found in config: defaulting to 0
  devices/multipath_component_detection not found in config: defaulting to 1
  devices/md_component_detection not found in config: defaulting to 1
  devices/fw_raid_component_detection not found in config: defaulting to 0
  devices/ignore_suspended_devices not found in config: defaulting to 0
  devices/ignore_lvm_mirrors not found in config: defaulting to 1
  devices/scan_lvs not found in config: defaulting to 0
  devices/allow_mixed_block_sizes not found in config: defaulting to 0
  devices/hints not found in config: defaulting to ""all""
  activation/activation_mode not found in config: defaulting to ""degraded""
  metadata/record_lvs_history not found in config: defaulting to 0
  devices/search_for_devnames not found in config: defaulting to ""auto""
  activation/monitoring not found in config: defaulting to 1
  global/locking_type not found in config: defaulting to 1
  global/wait_for_locks not found in config: defaulting to 1
  global/prioritise_write_locks not found in config: defaulting to 1
  global/locking_dir not found in config: defaulting to ""/run/lock/lvm""
  devices/md_component_detection not found in config: defaulting to 1
  devices/md_component_checks not found in config: defaulting to ""auto""
  devices/multipath_wwids_file not found in config: defaulting to ""/etc/multipath/wwids""
  global/use_lvmlockd not found in config: defaulting to 0
  report/output_format not found in config: defaulting to ""basic""
  log/report_command_log not found in config: defaulting to 0
  devices/use_devicesfile not found in config: defaulting to 0
  /dev/log: stat failed: No such file or directory
  /dev/block/7:0: size is 2097152 sectors
  /dev/nbd0: size is 0 sectors
  /dev/nbd8: size is 0 sectors
  /dev/vda: size is 83886080 sectors
  /dev/block/7:1: size is 0 sectors
  /dev/vda1: size is 83883999 sectors
  /dev/block/7:2: size is 0 sectors
  /dev/block/7:3: size is 0 sectors
  /dev/block/7:4: size is 0 sectors
  /dev/block/7:5: size is 0 sectors
  /dev/block/7:6: size is 0 sectors
  /dev/block/7:7: size is 0 sectors
  /dev/vdb: size is 83886080 sectors
  /dev/nbd1: size is 0 sectors
  /dev/nbd9: size is 0 sectors
  /dev/vdc: size is 83886080 sectors
  /dev/vdd: size is 83886080 sectors
  /dev/nbd2: size is 0 sectors
  /dev/nbd10: size is 0 sectors
  /dev/nbd3: size is 0 sectors
  /dev/nbd11: size is 0 sectors
  /dev/nbd4: size is 0 sectors
  /dev/nbd12: size is 0 sectors
  /dev/nbd5: size is 0 sectors
  /dev/nbd13: size is 0 sectors
  /dev/nbd6: size is 0 sectors
  /dev/nbd14: size is 0 sectors
  /dev/nbd7: size is 0 sectors
  /dev/nbd15: size is 0 sectors
  devices/global_filter not found in config: defaulting to global_filter = [ ""a|.*|"" ]
  Setting devices/filter to filter = [ ""a|^/mnt/.*|"", ""r|^/dev/loop.*|"", ""a|^/dev/.*|"", ""r|.*|"" ]
  /dev/block/7:0: using cached size 2097152 sectors
  /dev/block/7:0: using cached size 2097152 sectors
  /dev/block/7:0: No lvm label detected
  /dev/vda: using cached size 83886080 sectors
  /dev/vda1: using cached size 83883999 sectors
  /dev/vda1: using cached size 83883999 sectors
  /dev/vda1: No lvm label detected
  /dev/vdb: using cached size 83886080 sectors
  /dev/vdb: using cached size 83886080 sectors
  /dev/vdc: using cached size 83886080 sectors
  /dev/vdc: using cached size 83886080 sectors
  /dev/vdd: using cached size 83886080 sectors
  /dev/vdd: using cached size 83886080 sectors
  devices/global_filter not found in config: defaulting to global_filter = [ ""a|.*|"" ]
  Setting devices/filter to filter = [ ""a|^/mnt/.*|"", ""r|^/dev/loop.*|"", ""a|^/dev/.*|"", ""r|.*|"" ]
  devices/devicesfile not found in config: defaulting to ""system.devices""
  /dev/block/7:0: using cached size 2097152 sectors
  /dev/nbd0: using cached size 0 sectors
  /dev/nbd8: using cached size 0 sectors
  /dev/vda: using cached size 83886080 sectors
  /dev/block/7:1: using cached size 0 sectors
  /dev/vda1: using cached size 83883999 sectors
  /dev/block/7:2: using cached size 0 sectors
  /dev/block/7:3: using cached size 0 sectors
  /dev/block/7:4: using cached size 0 sectors
  /dev/block/7:5: using cached size 0 sectors
  /dev/block/7:6: using cached size 0 sectors
  /dev/block/7:7: using cached size 0 sectors
  /dev/vdb: using cached size 83886080 sectors
  /dev/nbd1: using cached size 0 sectors
  /dev/nbd9: using cached size 0 sectors
  /dev/vdc: using cached size 83886080 sectors
  /dev/vdd: using cached size 83886080 sectors
  /dev/nbd2: using cached size 0 sectors
  /dev/nbd10: using cached size 0 sectors
  /dev/nbd3: using cached size 0 sectors
  /dev/nbd11: using cached size 0 sectors
  /dev/nbd4: using cached size 0 sectors
  /dev/nbd12: using cached size 0 sectors
  /dev/nbd5: using cached size 0 sectors
  /dev/nbd13: using cached size 0 sectors
  /dev/nbd6: using cached size 0 sectors
  /dev/nbd14: using cached size 0 sectors
  /dev/nbd7: using cached size 0 sectors
  /dev/nbd15: using cached size 0 sectors
  Obtaining the complete list of VGs to process
  Processing VG ceph-a8ae9f01-a440-4a0e-8e4d-592d3bce3a9d VxbTWs-fMrC-KErD-Pc2l-NBs6-xffp-7n1qab
  Locking /run/lock/lvm/V_ceph-a8ae9f01-a440-4a0e-8e4d-592d3bce3a9d WB
  metadata/lvs_history_retention_time not found in config: defaulting to 0
  /dev/vdd: using cached size 83886080 sectors
  Running command for VG ceph-a8ae9f01-a440-4a0e-8e4d-592d3bce3a9d VxbTWs-fMrC-KErD-Pc2l-NBs6-xffp-7n1qab
  Deactivating logical volume ceph-a8ae9f01-a440-4a0e-8e4d-592d3bce3a9d/osd-block-058f4926-6ee7-4165-9a55-db5a1fd22d2f.
  activation/verify_udev_operations not found in config: defaulting to 0
  Getting driver version
  Removing ceph--a8ae9f01--a440--4a0e--8e4d--592d3bce3a9d-osd--block--058f4926--6ee7--4165--9a55--db5a1fd22d2f (252:2)
  Deactivated 1 logical volumes in volume group ceph-a8ae9f01-a440-4a0e-8e4d-592d3bce3a9d.
  0 logical volume(s) in volume group ""ceph-a8ae9f01-a440-4a0e-8e4d-592d3bce3a9d"" now active
  Unlocking /run/lock/lvm/V_ceph-a8ae9f01-a440-4a0e-8e4d-592d3bce3a9d
  global/notify_dbus not found in config: defaulting to 1
[root@ca862389706c /]# echo $?
0
```

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 1bcb884571bba0814f49cf49ae6606fd8d449483)
csi: update CSI-Addons side-car to latest (v0.4.0) release

A new version of the CSI-Addons side-car has been released, fixing
several bugs and adding small enhancements.

See-also: https://github.com/csi-addons/kubernetes-csi-addons/releases/tag/v0.4.0
Signed-off-by: Niels de Vos <ndevos@redhat.com>
(cherry picked from commit 5dbb9a919d9e574f4ba35e0bed22910904c3e90e)
core: increase liveness probe timeout to 2s

we have noticed multiple failures because of the probe
failing, most of the time it's due to fewer resources.
But increasing timeout fixes that, so increasing the
probe timeout to 2s from default 1s so that it will
give more time to probe before failing.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 62f0fb2b1d6d130d3019472036c4e164ce50a0a2)
csi: add token create rbac for rbd csi clusterrole

This rbac is required to fetch serviceaccount
token for vault tenant sa encryption type on k8s 1.24+.
refer: https://github.com/ceph/ceph-csi/pull/3174

Signed-off-by: Rakshith R <rar@redhat.com>
(cherry picked from commit 623c5159d50c54d5fa1b52fe7c84a9198d3a3a1a)
docs: update k8s-csi-addons controller links to v0.4.0

This commit updates doc to point the k8s-csi-addons
controller links to release v0.4.0.
Refer: https://github.com/csi-addons/kubernetes-csi-addons/releases/tag/v0.4.0

Signed-off-by: Rakshith R <rar@redhat.com>
(cherry picked from commit 2cd32336cbe6f46673f5a29d69b2cea105a036bf)
file: block deletion on more dependents

Block deletion of CephFilesystems when there are any raw Ceph
subvolumegroups present that have subvolumes in them. Empty
subvolumegroups will not block deletion.

One important subvolume group is ""csi"" which is the default location
where CSI subvolumes are kept. If this group is empty, it means that
there are no PVCs created based on the CephFilesystem in question. This
also holds true if there are external consumers of the filesystem in
external cluster mode.

Similarly, if there are any subvolumegroups (for example ""_nogroup"",
which includes subvolumes in the filesystem root) that contain
manually-created subvolumes, Rook will also see this and block deletion.
This comes into play currently with manually-created NFS exports.

A work-in progress aims to create a Ceph-CSI NFS export provisioner
which will likely create subvolumes in the ""csi"" group as well. This
implementation will catch this case also.

Rook still checks for CephFilesystemSubVolumeGroups explicitly in
addition to the check added here. This is to ensure that even empty
groups will block deletion if they are created via this CR type.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit a63844f8bf679979d5e26a4821ab091ab734f7ec)

# Conflicts:
#	tests/framework/utils/k8s_helper.go
#	tests/integration/ceph_base_file_test.go
ci: add tests for nfs csi pvc

This commit adds nfs csi pvc test into
ceph smoke suite.

Signed-off-by: Rakshith R <rar@redhat.com>
(cherry picked from commit 5b017cfd67e5fde4179c1d25e9f4bbc18fa9c484)
osd: increase memory of osd prepare pods

In helm charts default value of osd prepare pods
limit was less so increased it to 400Mi

closes: https://github.com/rook/rook/issues/10477

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit bf1342b2b303ca204906f01ed5f43bacd338ad27)
core: delete v1beta1 cronjob only when v1 not found

earlier we're deleting v1beta1 always before creating
v1 job. Now, we delete only when k8s version is
latest(which supports v1  job) and v1 job is not created
which means this is the first time and this is the only time we'll
delete v1beta1.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 196f5da6354eb9ef1626b6d85a0173fd5f1a8a7a)
build: update release version to v1.9.6

The patch release is updated in the docs and examples to v1.9.6

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.9.6 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
core: Delete v1beta1 cronjob only when v1 cronjob not found (, @subhamkrai)
helm: Increase memory of osd prepare pods (, @parth-gr)
file: Finalizer blocks deletion on existence of subvolume groups (, @BlaineEXE)
core: Increase liveness probe timeout to 2s (, @subhamkrai)
csi: Add RBAC to create token for RBD CSI ClusterRole (, @Rakshith-R)
doc: Update ceph external cluster flags (, @parth-gr)
osd: Add lvm flag for activation of legacy lvm OSDs (, @leseb)
ceph: update CSI-Addons side-car to latest (v0.4.0) release (, @nixpanic)
csi: Update storage class for csi-users in external cluster (, @parth-gr)
mon: Update node labels as per new key value (, @humblec)
test: Add tests for NFS CSI pvc (, @Rakshith-R)"
"nfs: add csi-attacher to NFS provisioner

Add attacher sidecar to NFS provisioner pod
to avoid mounting RWO volumes on two nodes

details: https://github.com/rook/rook/issues/10692

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 4bdab21db0c56bada9671f683363b51fb2ef43fd)
csi: remove default-fstype for cephfs

we dont need to have fstype for cephfs
pvc, removing the unwanted argument
for cephfs.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 3017d563f29fd794cec8601bcd548ac14c8d1b73)
csi: make AttachRequired as configurable

adding a option to make AttachRequired field
as configurable and added a comment to explain
the consequences of changing the default value

resolves:

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 4c710de791db74c5e0a577d2b4c13d3c9d97ae1a)
mon: remove condition to use 6790 mon port

PR added check to retain 6790 port for mons. Now
we can remove this check in Rook 1.11.

Signed-off-by: sp98 <sapillai@redhat.com>
(cherry picked from commit 755135582f3741a6c9e6648b46a6d94a5adc1e71)
ci: improved reliability for mirroring snapshots

The snapshots were not being given enough time to complete
before the test was checking whether they had been completed.
Now we check the snapshot mirror count after everything
else is confirmed to be running. Also increase several
timeouts in the tests.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit dca6810facc209ab5fd066e212bc684dba299593)
osd: handle global or node-local device class configuration correctly

Rook uses global or node-local device class configuration if device-level
configurations doesn't exist. However, after introducing device-class
level resource configuration, rook set the default value of device class.
So global or node-level device class configuration has never been used
after that.

Closes: https://github.com/rook/rook/issues/11871
Closes: https://github.com/rook/rook/issues/11826

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 3e34ebeff84c9aa2a5dec9e89076f20784e2230c)
csi: ipv6 compatibility for requiring msgr2

The msgr2 conversion assumed the endpoints were formatted
with a single :, which is not compatible with ipv6.
Now if the endpoint ends with the v1 port, it will
simply update the prefix to v2.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit bbfba5425fb332529c6050a11ba4b3b20c391ad0)
core: fix config format for msgr2 ipv6 monitors

Signed-off-by: Miles Simpson <miles@milessimpson.com>
(cherry picked from commit f99a8dea3f7475d9054ec8ca46110ea4b819cb2f)
build: update vault pkg to 1.13.1

Signed-off-by: subhamkrai <srai@redhat.com>
docs: design doc for ceph cluster crds with monitoring

Signed-off-by: xiaobaowen <xiaobaowen@deeproute.ai>
(cherry picked from commit 963f6d330326e2e55843e5319c6c294a94e6a9f9)
mgr: disable the prometheus module by crds

Signed-off-by: xiaobaowen <xiaobaowen@deeproute.ai>
(cherry picked from commit e7254c2a1b7af0d0500d86c633433631adb27afc)
external: make rgw call separate from cephfs and rbd

if the rge endint is not reachable don't block the creation
of rbd and cephfs sc, just print the error instead of raising exception

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit e44df846871fe048eab6599a5895912ba69f9856)
object: check obc provisioner for bucket notification

obc-label-controller needs to check only obc provisioned by Rook operator.

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit 01a3dd0baf43404b5ddf8ad5cc095fa394010de3)
ci: canary test should enable the prometheus module

The canary test is waiting for the prometheus module,
which is now disabled by default. For the canary test,
we need to enable the prometheus module for the external
cluster test.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 558732d0ae78dfc9a08c3630ea2f756db1934840)
nfs: add support for nfs-ganesha metrics monitoring

NFS-Ganesha (as of V5-dev.2 [1]) supports Prometheus monitoring from
within the NFS server itself. It provides metrics for both connected
clients and active exports, via TCP port 9587. Expose those metrics via
existing nfs k8s-service.

[1] https://github.com/nfs-ganesha/nfs-ganesha/commit/b6c59df5a0b8a3ae5b2a87446f8906cb321ee026

Signed-off-by: Shachar Sharon <ssharon@redhat.com>
(cherry picked from commit 7b28f1de05b2c00731bee4f09a3a69c5acfc7607)
docs: debug and test ceph manager modules

testing changes and debugging issues in Ceph manager modules

Signed-off-by: Juan Miguel Olmo Martínez <jolmomar@redhat.com>
(cherry picked from commit b21f71f17711c36663cc4c9137daf1f6d9b70083)
external: name correction of validate_rgw_metadata_ec_pool_name function

The function is used for rbd so it should be name to validate_rbd_metadata_ec_pool_name

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 626d1c44ffa22d7c6644b456133e8cf26241d4d4)
build: update release version to v1.11.3

For the patch release update the examples and docs to
v1.11.3.

Signed-off-by: travisn <tnielsen@redhat.com>","Improvements
Rook v1.11.3 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
csi: Make AttachRequired as configurable for RWX volumes (, @Madhu-1)
nfs: Add support for nfs-ganesha metrics monitoring (, @synarete)
mgr: Add option to disable the prometheus mgr module (, @thenamehasbeentake)
object: Check OBC provisioner for bucket notification (, @thotz)
external: Make rgw call separate from cephfs and rbd in export script (, @parth-gr)
core: Update vault pkg to 1.13.1 (, @subhamkrai)
core: Fix config format for msgr2 ipv6 monitors (, @heliochronix)
osd: Handle global or node-local device class configuration correctly (, @satoru-takeuchi)
csi: IPv6 compatibility for requiring msgr2 (, @travisn)
mon: Remove condition to use 6790 mon port (, @sp98)"
"ceph: retry mirror status update in tests

The TestCephBlockPoolController test is failing intermittently due
to a failure to update the rbd mirroring status on the pool CR.
Improve the test reliability by trying again several times if needed.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit c95ecaff0e144d8559a397e66f4bc0eaa8161a16)
ceph: remove obsolete NodeUsage type

The node usage was used for the obsolete mon selection algorithm, which
was replaced long ago with placement via canary pods.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 6a00b4d296cd5f30fbeee099f628ecb9ef22c5d9)
ceph: allow arbiter to have separate placement from other mons

The arbiter may have unique requirements for placement settings. Thus, if the arbiter
placement is specified in the cluster CR, that placement will be applied to the arbiter
mon and the other mons will retain their placement from the other mon or all
sections of the placement.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit eebb367e4257000f5b24563aa7b01ef78c8370b7)
ceph: updated thresholds of OSD capacity alerts and the device_class

This commit updates the OSD capacity thresholds to match the cluster capacity alert thresholds.
Also updated device_class info to provide info about which type of storage needs to be added.

Signed-off-by: Anmol Sachan <anmol13694@gmail.com>
(cherry picked from commit fdb88edb6a58beefbadee70081c4f57d7c514e59)
ceph: add mgr caps for csi-rbd-node client

If the kernel doesnt support mapping of
rbd image with deep-flatten feature,cephcsi
need to flatten the rbd image first and than
map the image on the node.

cephcsi first tries to add a task to flatten
the rbd image if its receives any permission
error it will try to call rbd CLI command which
is a blocking call.
This commit adds mgr caps to the csi-rbd-node user
so that cephcsi will add flatten task and return
immediate error to the kubelet, let kubelet retry
again,If we go with blocking rbd CLI call we may
end up having stale maps on the node in corner cases.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit ece9efd97872f522e9b755efb52def31da1fd117)
ceph: reset maxMonId if mons were not started after canaries

The operator schedules all the mons at the same time, then
serially starts each of the mons. If the operator was restarted
or otherwise failed before all the mons were started, the next
reconcile will schedule new mons again and ignore the scheduling
that was already computed. Since the last mon running is always
expected to be in quorum, we can reset the maxMonId to be
the highest mon currently created.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit bfbae0e4fe1841870793020e1da85604831727de)
ceph: remove obsolete mon pod and retry variables

The mon timeouts and pod retries were removed back in v1.1,
this just removes some obsolete variables from the legacy
mon scheduling.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 6fff48fbf55f483ce71ce9ebb7fe8399d7baab3f)
ceph: check stretch cluster is ready to configure arbiter

The arbiter can only be configured with the stretch cluster if the
CRUSH map is balanced and there are two zones in the CRUSH map.
After the OSDs are configured, we wait for all the OSD pods to be
running and that the CRUSH map is balanced. If it takes more than
two minutes, we fail the reconcile and try again. This is only done
the first time the stretch cluster is configured. In future reconciles
we first check if the stretch cluster is already enabled before
enabling it again.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit d0ba8993412014db15ae3a263266b20d381db0fd)
ceph: add namespace meta-comments to manifests

Add meta-comments to manifests to allow basic templating via `sed`.

Add the following types of meta-comments:
- # namespace:X
  - A basic namespace
  - replace the field with a namespace for X
- # serviceaccount:namespace:X
  - A service account namespace for SCC
  - e.g., ""system:serviceaccount:<ns>:rook-ceph-system""
  - Replace the namespace ""<ns>"" with with a namespace for X
- # provisioner:namespace:X
  - A provisioner identifier with namespace prefix
  - e.g., ""<ns>.cephfs.csi.ceph.com""
  - e.g., ""<ns>.ceph.rook.io/bucket""
  - Replace the namespace ""<ns>"" with a namespace for X

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 26c9512962d80e539244040ea9baa357aa6702db)
ceph: update csi to v3.2.0

updating cephcsi to latest release version

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 5392bc0d07adc71458fbda6ecc1662fb2d7ac3e8)
ceph: update upgrade docs to allow diff namespaces

Update the upgrade docs to allow users with different cluster/operator
namespaces to use a `sed` command and the new manifest meta-comments for
updates.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 2e62b5fb3b6734b93966664c285559d6cb4262c9)
ceph: allow OSDs on both pvcs and devices

The OSD configuration on local devices was being skipped if a
storageClassDeviceSet was specified. Both types of OSDs should
be allowed in the same cluster, which allows a cluster in the cloud
to also take advantage of local devices with different perf
properties.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 3ca3d7783bd232f83c322f2bd6c0f80da6daaf7c)
ceph: apply deviceClass properly to new osds

The deviceClass property was being ignored when creating the
non-pvc OSDs. Now the deviceClass will be specified as a property
for individual devices, all devices on a node, or all OSDs in the
cluster, depending on the level where the config is applied in the
cluster CR.

Co-authored-by: shenjiatong <yshxxsjt715@gmail.com>
Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit a0a27bc42635bdc26f808c1d7962e72e3ca59798)
ceph: use the correct snapshot controller version in the tests

The snapshot controller is specifying to use the canary image instead
of the expected version. Update the tests to set the correct version.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit c15499ed7e6beda7050cbe5df2ec77d4d067a237)
ceph: revert new node is not provisioned when useallnodes is true

This reverts commit a6ee5657aeeee505964fe263b21b974426921891.
The operator reconcile of the cephcluster was staying in an endless
loop in clusters that did not have OSDs configured on all nodes.
Now we revert this change for the patch release and will follow
up with a more complete fix in https://github.com/rook/rook/pull/6813.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 64fc740d8a2cbe8e6b40d049ec3296f011e4c84e)
ceph: remove deplicated env value

Currently, mgr deployment has two overlapping environment variables, ROOK_POD_IP.
This causes kube-apiserver to create error logs

Signed-off-by: binoue <banji-inoue@cybozu.co.jp>
(cherry picked from commit 2ecde7c9c6552fc0b486915d4dec75c714e3d30b)
ceph: update examples and operator to Ceph v15.2.8

The latest octopus release is now out with v15.2.8. We update the
operator base image and the examples to run with this version.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 3beb625f08f2cb79c08161ad20afb85d53ce385d)
ceph: test latest ceph on raw devices and previous ceph on partitions

The latest ceph-volume does not support creating OSDs on partitions.
The github actions only have a partition available, so we will run
the github tests on v14.2.12 and v15.2.7 that still support partitions,
while the Jenkins environment has a raw device available where we
can run the latest versions of Ceph in the tests.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 114a949cfbd39437c91cdfe1dae76df98163fc1a)
ceph: delete object store in test in a defer method

Always attempt to delete the object store in case some test
fails and aborts the remainder of the test.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit ba0d7288d837a761786e88091a502e6debbeaff3)
ceph: update lib bucket provisioner

Update to the latest lib bucket provisioner code.
Fixes issue 6650

Modifies CRD for objectbucketclaims to fix an additional bug where an
ObjectBucket's 'ClaimRef' is lost due to the CRD validation being
specified incorrectly.

Changes OBC deletion/cleanup to delete the bucket before the user. A
user cannot be deleted without an unsafe purge option if the user has
buckets associated to it.

Does not reintroduce bug 6767 from previous fix for 6650

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit b8dc2a3214b8ebb84b1f7ee17058fceeeb6410c5)
build: update release manifest version to v1.5.4

With the patch release we update the version to v1.5.4

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.5.4 is a patch release limited in scope and focusing on small feature additions and bug fixes.
Ceph
If you are installing OSDs on partitions, please see for details on the latest Ceph patch releases that do not support partitions.
Endless reconcile in clusters where all nodes do not configure OSDs (, @travisn)
Update Ceph-CSI install default to v3.2.0 (, @Madhu-1)
OBC is not properly created, resource name may not be empty (, @BlaineEXE)
Update examples and operator to Ceph v15.2.8 (, @travisn)
Remove duplicate env values in the Ceph mgr pod (, @binoue)
Apply deviceClass properly to non-PVC OSDs (, @travisn)
Allow OSDs on both PVCs and raw devices in the same cluster (, @travisn)
Namespace meta-comments in manifests to more easily enable multiple Rook clusters (, @BlaineEXE)
Updated thresholds of OSD capacity alerts (, @anmolsachan)
Stretch cluster waits for OSDs to stabilize before enabling arbiter (, @travisn)
Add mgr caps for the csi-rbd-node client (, @Madhu-1)
Allow stretch cluster arbiter to have separate placement from other mons (, @travisn)
Merge placement node affinity for stretch clusters (, @travisn)"
"ceph: allow heap dump generation when logCollector is not running

We don't need to set log_file to empty string since ""log_to_file"" is set
to False. This is probably an old leftover/hack we were doing in the
past when ""log_to_file"" and other related options were not there.

Because of this line
https://github.com/ceph/ceph/blob/master/src/perfglue/heap_profiler.cc#L99,
Ceph looks for the log_file conf option. In our case it was empty, so
the logging would default to the current directory which points to the
container runtime root when not set and we don't have permission to
write there.

We now force it to Ceph's default so that existing cluster will get the
fix after upgrading.

Just removing the option allows us to get dump in /var/log/ceph.
Phew, what a bug!

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 19de2b28e9b5fad8b9fb86d101c96eb54ab97bd6)
ceph: persist expected mon endpoints immediately during mon failover

After mon failover is initiated, there was a time window where if the operator
was restarted, the new mon is started and has joined quorum, but the operator
does not believe the mon should be in quorum after the operator restart.
The operator was mistakenly removing the extra mon prematurely, sometimes
causing quorum to be lost if another mon was also down at the same time.
If the mon does not come back online, steps to recover quroum would need
to be followed from the disaster guide. Now the expected list of mons
will be updated immediately during mon failover if the operator successfully
created the new mon deployment, thus removing the window where restarting
the operator can cause quorum loss.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit bb4191a8a7ed1fcb8fd7fa61dfec53775733be5d)
ceph: retry once before mon failover if mon pod is unscheduled

Events like node drain can take more than 10-15 minutes. If the node is not update the default monTimeOut of 10 minutes, then rook will attempt to fail over the mon. This failover won't work as the node is still down.
This PR retries once before the mon failover if the mon pod is not scheduled

Signed-off-by: Santosh Pillai <sapillai@redhat.com>
(cherry picked from commit f38829b57d0c14e28a203a8b7dd4325036d03eaf)
ceph: fix hostpath of osd to avoid data corruption

A directory is created under dataDirHostPath for each OSD. In host-based cluster,
its name is constructed from kernel device name like _dev_sdb though user specifies
udev persistent device name. We should use unique name among all OSDs.

Closes: https://github.com/rook/rook/issues/7878

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 6af014b7985a0bc71b89454c4bf7bb71968e46bb)
build: set release version to v1.5.12

With the patch release the examples are updated to v1.5.12

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.5.12 is a patch release limited in scope and focusing on small feature additions and bug fixes.
Ceph
Fix OSD hostpath to prevent risk of data corruption on restart (, @satoru-takeuchi)
Double the mon failover timeout (to 20 minutes) during node drain (, @sp98)
Improve reliability of mon failover when the operator is restarted during failover (, @travisn)
Allow heap dump generation when logCollector sidecar is not running (, @leseb)"
"ceph: updated mon health check goroutine for reconfiguring patch values

When changing the settings for the Rook mon health check
(.spec.healthCheck.mon) in the CephCluster resource,
the mon health check isn't reconfigured with the new values

Updated checkHealth goroutine so it can
updates the new patched values

Closes: https://github.com/rook/rook/issues/8363
Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 6ebd1090885d89b7a882d1878303c4a91a1cd03f)
docs: update ancillary resources (monitoring)

Add sections to docs to mention updating ancillary resources, of which
monitoring is the only one currently.

Fixes

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 1ac184894c6ab066544572832f7f462adeeb67f8)

# Conflicts:
#	Documentation/ceph-monitoring.md
ceph: add an option to enable/disable merge all placement

earlier, we had the issue for osd placement regarding
whether we should merge the placements or not.

Now, we have option `skipApplyAllPlacement` to
enable/disable osd placement. By default it is false
which means it will merge both placement.All() and
storageClassDeviceSets.Placement, when true
it will only apply storageClassDeviceSets.Placement.

Also, adding unit test.

Closes: https://github.com/rook/rook/issues/8135
Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 98383133989b41dfd4b998dfaa5ce64fcde81b8c)
Signed-off-by: subhamkrai <srai@redhat.com>
ceph: refuse to failover the arbiter mon on stretch clusters

Stretch clusters in Ceph do not yet support failing over the arbiter
mon, so we now disable the arbiter mon from failing over. Soon
Ceph will support the arbiter mon failover and we will reenable
this failover feature.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit f9f322683a4a9b5bd52a088102a2c43b6146eb31)
build: print go version when building

Print the Go version when running any Go build target. This can be
helpful in making sure that we are building with the Go version we want
and expect.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit a83745cbcdd9edbef6c4774f0c5540a23821bdd5)
build: use latest golang v1.16.7 (Go CVE-2021-34558)

Rook CephObjectStore S3 connections may be affected by CVE-2021-34558.
This is fixed in Go v1.16.6, so we update to the latest Go version
available to ensure this is fixed in future builds.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 1592c9b9dadf1735794def6f7df15bfd20e6c331)
ceph: make storage device config nullable

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 36c53fe6f321c5ecafc5e9f9aec60c25d175f2f7)

# Conflicts:
#	pkg/apis/ceph.rook.io/v1/types.go
ci: fix github action backport errors

when backport gh action to release-1.6 branch
there was mistake and few things left to change
in PR 8525.

this commit resolve all the errors and change
the permission to run the script.

Signed-off-by: subhamkrai <srai@redhat.com>
build: update release version to v1.6.9

With the patch release the example manifests and build actions are
updated.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.6.9 s a patch release limited in scope and focusing on small feature additions and bug fixes.
Ceph
Make storage device config nullable (, @BlaineEXE)
Build with latest golang v1.16.7 (, @BlaineEXE)
Refuse to failover the arbiter mon on stretch clusters (, @travisn)
Add an option to enable/disable merge all placement (, @subhamkrai)
Update ancillary monitoring resources (, @BlaineEXE)
Updated mon health check goroutine for reconfiguring patch values (, @parth-gr)
Releases for v1.6 are now based on Github actions instead of Jenkins (, @subhamkrai)"
"ci: run unit tests in gh actions

We now run Rook's unit test in gh workflows

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 48dad45f9849793937e8b0e73d5775b1b2db64c3)
ci: only run unit tests on official build

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 575b00f4c3fc949188e5411b1621076c099b2751)
ceph: add uninstall mode

This adds an uninstall mode to the ceph cluster. If
allowUninstallWithVolumes in the CleanupPolicySpec is set to true then
the cluster deletion does not wait for the PVs to be deleted.

Co-authored-by: Nitin Goyal <nigoyal@redhat.com>
Signed-off-by: Raghavendra Talur <raghavendra.talur@gmail.com>
(cherry picked from commit a6f59f3b644613107f1e4511c1237d67bec8c77c)
ceph: skip check for existing PVs in forced uninstall

If AllowUninstallWithVolumes is set in the cleanup policy then we don't
check and wait for the deletion of existing volumes from the
cephCluster.

Co-authored-by: Nitin Goyal <nigoyal@redhat.com>
Signed-off-by: Raghavendra Talur <raghavendra.talur@gmail.com>
(cherry picked from commit 42a30ff5f8b2986a565172776335f28a58023b5c)
ceph: doc additions for the uninstall mode

Add documentation for the setting AllowUninstallWithVolumes to the
following files:
Documentation/ceph-cluster-crd.md
cluster/examples/kubernetes/ceph/cluster.yaml

Co-authored-by: Nitin Goyal <nigoyal@redhat.com>
Signed-off-by: Raghavendra Talur <raghavendra.talur@gmail.com>
(cherry picked from commit f8a721dbb033b24d0ab8529e0829f01e356a12d1)
ci: print dev info

Try to understand the issue:

invalid scratch device name: /dev/xvdc

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 04467dd915ef0a6ea21e1aacda5b9ddb2dfae768)
ceph: fix the service monitor port name

When the cluster is external the service monitor port name should match
with the name of the external metrics one.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit b68f9a7a4102b800cc3d967527eeaca92212a83f)
ceph: reconcile if cm is config override

Earlier, we were returning only when the object was not the config
override configmap, we want the opposite.
Also, this was blocking all subsequent conditions and add the correct
check to avoid cm to reconcile.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit e7043edbd8fc359da02771ba7ea1cf3a5350370b)
ceph: add more error handling and debug logging

The predicate was lacking from very useful errors as well as logging
messages.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit bd90f9afe9a9819a59fd91bfc8acbaf2799ff3b0)
ceph: do not use label selector on external svc

When the cluster is external there are no running pods so setting a
Selector on the Service Spec does not make sense, even worse, it makes
Kubernetes reconciling and overriding the configured endpoint.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit af72502fe450366d048a725208c83df39322b01b)
ceph: silence aws s3 sdk logs on healthcheck

We don't need to activate the debug logs on the objectstore
healthchecks.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 96b4a56a57dd8c797a8e0925544b08fd1e5e1f61)
ci: change local disk path

With the recent aws instance type the disk naming changed too, so
replace xvdc with nvme0n1.

Closes: https://github.com/rook/rook/issues/6189
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 9a06d059f0c36ff8433031e64af9ba1ade6bd3a7)
ceph: purge a down osd with a job

If an OSD is down and needs to be removed from the cluster,
a job can be run that will remove the OSD deployment
and purge the OSD from ceph. If the OSD is still up,
the purge will be rejected.

To purge multiple OSDs at the same time, the OSD IDs can be
specified as a comma-separated list.

Signed-off-by: Servesha Dudhgaonkar <sdudhgao@redhat.com>
(cherry picked from commit 0c323439a68adac03f8c86944ff6e009b50ada65)
ceph: remove NParts and Cache_Size from MDCACHE block

As setting them to small value affects the performance and they are not related
to metadata caching. https://review.gerrithub.io/c/ffilz/nfs-ganesha/+/495185

Signed-off-by: Varsha Rao <varao@redhat.com>
(cherry picked from commit a0dab8faab5489cedfe5d4f9f05bc343bb770c25)
ceph: update cephobjectstore monitoring logic

currently, cephobjectstore monitoring is never
stopped for the following flow:
 1. objectstore is deleted
 2. go routine is stopped
 3. objectstore is created
 4. objectstore is deleted
so, removing clusterResourceDeleted flag and
working with the map only.

Signed-off-by: subhamkrai <subhamkumarrai03@gmail.com>
(cherry picked from commit 34d27d55d5862fe5fa5f1308862cad35aaeb651f)
ceph: update the note of OSD on LV-backed PVC

The problem of OSD on LV-backed PVC can be mitigated with disabling
`lvmetad`.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 6ae37de6fb293760c3e37483f59c96d292682ede)
ceph: only enable init container if dash is enabled

If the dashboard module is not enabled we don't need to run the
""dashboard-server-addr"" init container.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 152ebf618d59521113a342562b88cd398cd67b9f)
ceph: update remove.go

Call logger.Infof() instead of Debugf() in remove.go file.

Signed-off-by: Servesha Dudhgaonkar <sdudhgao@redhat.com>
(cherry picked from commit 2cf05185450066f353fc2066a5e59ae60fbefabb)
ci: only build amd64 for PRs

The PRs only test against amd64 and have no need for the arm64
builds. This will save several minutes of build time.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
Co-authored-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 40cfc9c70e75a886db631553fa1f383b38e7cc0b)
ceph: set the pvc name label on mon deployments

When the mons are based on pvcs, the pvc_name label was not being set
as expected. Now the label will always be set on both the canary and
the daemon pods.

The mon pvcs were also never being deleted during canary cleanup. This
code is now removed since we must be very careful when the pvcs are
removed.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 2e36913dad26b02b05d410760a63175eac952467)
ceph: remove orphaned mon pvc after failed failover

If the mon failover fails, if the mon is on a pvc, the pvc could remain
orphaned. This is likely to happen if there is not a node available
for scheduling the mon. Therefore, the operator will ensure after a failover
that any orphaned mon pvc is cleaned up.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 7a6620f2c0e5e9abab9eea7a75670e44157da62a)
ceph: fixed DNS suffix breaks in custom DNS suffix clusters

By addding "".svc"" to the endpoint of the object store,
will fix the custom DNS suffix cluster.

Signed-off-by: subhamkrai <subhamkumarrai03@gmail.com>
(cherry picked from commit 209dc6251d44d3cd3f76d64b62bbbd46005d3443)
ceph: dont set ownerRef when creating csidriver object

currently, we are setting the rook operator as the
owner on the csidriver objects, as csidriver is cluster
the scoped object we should not set a namespaced object
as owner on cluster scoped object.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit b88373f9f3905ca044cb3d8621e31347cb737b61)
ceph: add storageClassDeviceSet label to osd pods

this commit will add a new flag to the osd pods
which will be named according to the name of the
storageClassDeviceSet. This will help in differentiate
pods immediately.

Signed-off-by: subhamkrai <subhamkumarrai03@gmail.com>
(cherry picked from commit 6d08d94948060160284959f13d178062b89e90e3)
build: update manifests and docs to v1.4.3

With the patch release we update the manifests and documentation
to v1.4.3

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.4.3 is a patch release limited in scope and focusing on small feature additions and bug fixes.
Ceph
The Ceph-CSI driver was being unexpectedly removed by the garbage collector in some clusters. For more details to apply a fix during the upgrade to this patch release, see these steps. (, @Madhu-1)
Add storageClassDeviceSet label to osd pods (, @subhamkrai)
DNS suffix issue for OBCs in custom DNS suffix clusters (, @subhamkrai))
Cleanup mon canary pvc if the failover failed (, @travisn)
Only enable mgr init container if the dashboard is enabled (, @leseb)
cephobjectstore monitoring goroutine must be stopped during uninstall (, @subhamkrai)
Remove NParts and Cache_Size from MDCACHE block in the NFS configuration (, @varshar16)
Purge a down osd with a job created by the admin (, @xenolinux)
Do not use label selector on external mgr service (, @leseb)
Allow uninstall even if volumes still exist with a new CephCluster setting (, @raghavendra-talur)"
"ceph: remove specific rgw configuration on mon configuration database

Remove specific rgw config added to the mon configuration database when deleting a CephObjectstore
or when scaling down number of rgw

Signed-off-by: n.fraison <n.fraison@criteo.com>
(cherry picked from commit 6b9a70cb9ae0f84410f7ce7200535d982019c6bf)
ceph: factorize deletion of rgw CephX key and configuration in centralized mon database

Use same method for the deletion of rgw CephX key and configuration in centralized mon database
when removing a CephObjectStore or scaling down number of rgw

Signed-off-by: n.fraison <n.fraison@criteo.com>
(cherry picked from commit 848d99265b855e31b96f9b065390e7c5f6eac67f)
ceph: remove specific mds configuration on mon configuration database

Remove specific mds config added to the mon configuration database when deleting a CephObjectstore
or when scaling down number of mds
Also remove mds CephX key

Signed-off-by: n.fraison <n.fraison@criteo.com>
(cherry picked from commit 9c6ef9c27881833e0e39fcf95df56b9759e90d1c)
ceph: append 00 to rook-privileged PSP name

Adding seccomp annotations to the PSP has made Kubernetes start choosing
the recommended Kubernetes ""default"" PSP over the Rook privileged PSP,
causing operator start errors. Append 00 (double zero) to the beginning
of the PSP name to make sure it is one of the first PSPs checked by
Kubernetes and will be matched before the ""default"" one.

Signed-off-by: Blaine Gardner <blaine.gardner@suse.com>
(cherry picked from commit 2bf340ff0b1b824c8ba93d4044a36816a9746275)
ceph: document unique crush name requirement

CRUSH hierarchy requires unique names at each location.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 0bddd562e03812b5c40e5e888106044fcbd2ce41)
ceph: enable pg_autoscaler module in default examples

The pg_autoscaler is enabled by default in octopus. In nautilus
it was a new feature and was not enabled by default for that reason.
Now that the pg_autoscaler is more stable and is essentially
the same as the autoscaler in octopus, we can enable it by default.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit d9ee447549022cf465f7e1624514fbf8e6baba42)
docs: update rook mailing lists to new lists.cncf.io addresses

This commit updates the readme and docs with the new Rook mailing lists hosted
by the CNCF:

* cncf-rook-info@lists.cncf.io
* cncf-rook-security@lists.cncf.io
* cncf-rook-distributors-announce@lists.cncf.io

Signed-off-by: Jared Watts <jbw976@gmail.com>
(cherry picked from commit 6e3921adfa65bde304a69d0d417cc0d17e6ef3a8)
k8sUtil: Add YamlToContainerResource to resource

YamlToContainerResource can be used to convert the raw
string data to the array of ContainerResource.
the ContainerResource can be applied to the
pod container resources request and limits.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 1bb5e1bab2a6cad9b4f0ffade52c08c06581875d)
CSI: code changes to apply resource to container

Update CSI spec code to fetch the resources from the
configmap or ENV and apply the specific resources
to the cephfs,rbd and kubernetes sidecar containers.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 050fb2c6162360747a6335726b2e49ae4cbf9d20)
CSI: rename attacher sidecar name to follow other sidecar names

Renamed the csi attacher sidecar container name
to follow the nameing convention of other
sidecar containers of the CSI

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit a0270c57eaae6068d908332242b089d7e1878210)
CSI: Update operator template for CSI resource

Updated operator and operator-openshift yaml files
for the CSI resouce requirements.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 8bb7df8374289b541c9d7898f3f1236fc7ecdf45)
CSI: Add helm template changes for CSI resource

Added template changes in helm chart for the
CSI resource. All resources limits will not
be applied default.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit a3823c946723606472503a786f559d66ba972ea0)
CSI: Add helm documentation for CSI resource

Updated helm documentation for CSI resources
which will be applied for CSI sidecar and plugin
containers.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 4495d1fffd6688a32501298f5027659cdb42eb5e)
CSI: use warning if the formatting is not required

If the formatting is not required use warning
instead of warningf

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 4065217913930a88516857a22fe0399dd0e7d335)
edgefs: provide a way to configure ADS

Signed-off-by: Dmitry Yusupov <dmitry.yusupov@nexenta.com>
(cherry picked from commit 2746b2edeeba686998c8b7abafd5a8b15e21a33d)
edgefs: raw disk empty check regression fix

Signed-off-by: Dmitry Yusupov <dmitry.yusupov@nexenta.com>
(cherry picked from commit e88704120bfcd4655bc75f4705169bdbe09a2533)
ceph: restart portable osd pod if stuck

If the OSD pod is portable and is on a failed node, the node
will be stuck indefinitely in the terminating state. The pod
can be force deleted in this scenario in order to allow the
underlying volume to be detached and then mounted on another
node.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit c713fd30f961953b9c954629f09cc4711c8686ab)
ceph: do not fail on deactivate

If we fail to release an LVM device, we should not fail the deployment.
We just print the error and let the backend handle the rest. Some
CSI backend will force detach the device anyway.
This prevents the deployment to get stuck in terminating.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 65aae84bdd1c1975b5fde1c16328be185712fe66)
CSI: Update CSI version to v2.1.1

cephcsi v2.1.1 is released with fix for xfs formatting
issue. This PR updates the cephcsi image version to
v2.1.1

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 73c74d8a425edef86056e8fe4b55fe105fdfb644)
ceph: add support for OBC on external cluster

We can now consume an external s3 endpoint which is not managed by Rook.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit b86bb9c5286d7bc953848907be0dee7bccb3c27c)
CSI: Set PriorityClassName for CSI plugin pods

provide an option to set Priorityclassname on the
CSI plugin pods to avoid pod eviction, as the CSI plugin pods are
critical in system for storage. the default value
for the CSI plugin pods is set to system-node-critical.
more info can be found at
https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit cc6ec5889119a874681b8528ca73f7681cd164ce)
CSI: Set PriorityClassName for CSI provisioner pods

provide an option to set PriorityclassName on the
CSI provisioner pods to avoid pod eviction, as the CSI provisioner
pods a critical in system for storage. the default value
for the CSI provisioner pods is set to system-cluster-critical.

provisioner pods are less priority than plugin pods.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit ec3ab55d94d8af78b3150d68410f5b828039cd01)
ceph: log the operator settings and their source

The operator settings can come either from the configmap, an
env var, or a default value. Knowing where the setting is loaded
from is an important detail to see in the log.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit cd806c83eea762dc4718b986292c7d21fd4f955b)
ceph: allow csi driver version to be undetected

If ROOK_CSI_ALLOW_UNSUPPORTED_VERSION=false and the csi canary image
is set to quay.io/cephcsi/cephcsi:canary, the csi driver fails
to load as expected since it is not supported. But if the
flag is set to true, it is expected to allow the canary image
which isn't versioned. The supported version check was requiring
that the version be detected in the image.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit b375e81c37ae2f1a87333e846a824492600c02ce)
ceph: set v14.2.9 as base image for the operator

The v14.2.9 release and updated base image have security fixes
that the operator needs to pick up.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit b5c9d4a02f172cf2b5a3f655f69550ae680d4ae5)
ceph: delete terminating osd pods even if not out

When an OSD pod is stuck in terminating state, there is no need
to check if the OSD is marked as out before force deleting.
As long as the osd is down we will force delete the pod.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 3c6bae56b70df9ef440936dde253f379f9ae2ea5)
objectstore: Add ceph group as FsGroup

ceph gid (167) provided as supplymentary group, so that all the mounts can
be accessed by the same. This is required for ssl certificate consumed by
the rgw server from ceph octopus onwards.

Closes: https://github.com/rook/rook/issues/5265
Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit 68fc50686a8280503a43bce573cca87b58882957)
ceph: judge whether an OSD is on PVC or not by function

There are many duplicated code to judge whether an OSD is on PVC
or not. Instead, let's introduce a function for this purpose.
It can also be applied to the logic of judging whether an OSD
on PVC has metadata device or not.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 417ea131bccb19aa54345d5f55bdae54e95a0ed4)
ceph: add support for multipath devices

Add mpath to the list of supported device types,
although it will only work for OSDs on PVCs.
OSDs on a raw device without PVCs have not
yet been tested.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 32730123ea542710ccae48c90d91016e6afc0b55)
ceph: skip ceph-volume inventory for PVs

For multipath devices, ceph-volume inventory is failing
to detect that the device is available, complaining about
insufficient space. Instead of relying on c-v inventory
to determine if the device is available, just call
c-v raw list to determine if there is already an osd
configured on the pv. Otherwise, just attempt to configure
the OSD.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 5f57b6fd3abbab60b2992171e042598b3fdbf333)
ceph: osd on pvc node assignment is node selector

An OSD on a PVC when portable=false is assigned to a node
with a node selector. The same node assignment is expected
for the lifetime of the cluster. On subsequent reconciles,
the operator was looking up the node assignment from the
nodeName on the pod spec, which is not set if the pod is down.
The operator needs to retrieve the assignment from the
deployment spec node selector.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 65377cbe633c0ea2ff670bcd977ab04d79c1618e)
build: set manifest version to v1.3.3

With the patch release the new version is v1.3.3

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.3.3 is a patch release limited in scope and focusing on small feature additions and bug fixes.
Ceph
Multipath support for OSDs on PVCs (, @travisn)
OSD on PVC with portable=false remained in pending state after node upgrade (, @travisn)
RGW with SSL certificate failing after upgrade (, @thotz)
Set ceph/ceph:v14.2.9 as the base image for the operator (, @travisn)
Allow the CSI driver version to be undetected if unsupported flag is set (, @travisn)
Allow setting PriorityClassName for CSI pods (, @Madhu-1)
Log the operator settings and their source (, @travisn)
Add support for OBCs on external cluster (, @leseb)
OSDs on PVs failing during deactivate if underlying device is unavailable (, @leseb)
Update CSI version to v2.1.1 (, @Madhu-1)
Force delete portable OSD pods if stuck (, @travisn)
Add resource request and limit for CSI pods (, @Madhu-1)
Enable pg_autoscaler module in default examples (, @travisn)
Deploying fails with runAsNonRoot when PSP enabled (, @BlaineEXE)
Remove specific rgw configuration on mon configuration database when scaling down (, @ashangit)
EdgeFS
Provide a way to configure ADS (, @dyusupov)
Check for empty raw disks during discovery (, @dyusupov)"
"nfs: update documentation and example

Signed-off-by: Ahmad Nurus S <prksu.sh@gmail.com>
(cherry picked from commit c22189ba74616e2829a0678516395c3bdb212caa)
build: fixes ""requires"" for kube-controller-manager

using v0.0.0 is causing issues with unknown version even
though the replace block uses correct version. So updating
requires block to match replaces block version.

Signed-off-by: Umanga Chapagain <chapagainumanga@gmail.com>
(cherry picked from commit 6bb76189adf9caccb40c3e645441cdeea458b419)
docs: ceph disaster recovery

updated by removing the paranthesis around the arguments  to pass the value
Eg: ROOK_CEPH_MON_INITIAL_MEMBERS

Signed-off-by: MG <gmadhavi@gmail.com>
(cherry picked from commit 1063c387f9dcc5858d13d7225db1a46835d31be9)
ceph: fix mon pdb reconcile

updated mon pdb reconcile to delete mon pdb and create a new one when mon count changes in the cluster spec

(cherry picked from commit 28cd611eb4c417bb3e3e71b56190630d430dc588)
Signed-off-by: Santosh Pillai <sapillai@redhat.com>
docs: update ceph monitoring examples

This updates the Ceph docs regarding the Grafana dashboards new version
requirement.

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit 30fc31fb3122d7bae7bbcd5526e64922e2a4057d)
ceph: check for orphaned mon resources with every reconcile

The mon resources may be orphaned if there is a mon failover
that was cancelled, for example a mon pvc may remain if the
original mon comes up and the operator was restarted before
the mon failover completed. The cleaning up of mon resources
was only happening was each successful mon failover, now we
perform the check with every reconcile since the resources
were not being cleaned up predictably enough.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit efb1cc9f7249130aaa8ab92d13d66e56a23c8199)
docs: disaster recovery guide for PVCs

Signed-off-by: Tareq Sharafy <tareq.sha@gmail.com>
(cherry picked from commit d2a6518a5cc6057e6b3a1804a9fe0c6e7ed7d750)
ceph: assert error type before using it

We don't always get an error of the type ""*exec.ExitError"" so we must
validate the type before printing it otherwise the interface conversion
will fail.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 1168dbc6cae4fcad7e64ee91ede34d82eb6231ea)
ceph: ignore MDS_ALL_DOWN during reconciliation

This allows the catch-22 situation where the filesystem cannot be
reconciled because there is no MDS but there is no MDS because the
operator has not reconciled the filesystem and brought up the MDS pods.

Closes

Signed-off-by: Lalit Maganti <lalitm@google.com>
(cherry picked from commit 88f16e4980778c3c60ea7dc78d987641ef0dbe04)
test: improve TestLabelsApply

To clarify the spec of ApplyToObjectMeta This also fixes the misleading
comments on the method.

Signed-off-by: Yusei Nishiyama <yusei.nishiyama@soundcloud.com>
(cherry picked from commit 2967bceca822878debed4a29a1b165cdd0591395)
ceph: propagte labels to mon pods

To align it with how the other components are implemented in

Signed-off-by: Yusei Nishiyama <yusei.nishiyama@soundcloud.com>
(cherry picked from commit beaddb9c2226f036ddad4753fb854bae36e676a3)
ceph: added additional checks on accepting monitoring endpoint

Changes related to Monitoring endpoint
a. for any monitoring endpoint and port (either user given through arguments
or internally found), added code to make sure we convert the endpoint
host_name to a proper IP address.
b. checks added to make sure we have a valid and reachable endpoint

Signed-off-by: Arun Kumar Mohan <amohan@redhat.com>
(cherry picked from commit c1a4ef64555a61efb9107867ad32a060edc0f755)
ceph: fixed existing test cases

Modified / Fixed all the existing tests according to the latest changes.

Signed-off-by: Arun Kumar Mohan <amohan@redhat.com>
(cherry picked from commit 7b8da65c81e16b06107b133e71a39667066e4318)

# Conflicts:
#	cluster/examples/kubernetes/ceph/create-external-cluster-resources.py
ceph: new tests for monitoring endpoints and upgrade user changes added

Signed-off-by: Arun Kumar Mohan <amohan@redhat.com>
(cherry picked from commit 72a8a6071bf232311257fd473ced914d5d3f5643)
ceph: need to shift 'DummyRados' class to top

As 'DummyRados' object is being used in other parts of the code, had to
shift this to top.

Signed-off-by: Arun Kumar Mohan <amohan@redhat.com>
(cherry picked from commit bb753caf527d7aae5d066df5d613a27fa5df4e6c)
ceph: fixed monitoring port issue

Fixed an issue where monitoring port, even when set by user, being
overridden by the default value.

Signed-off-by: Arun Kumar Mohan <amohan@redhat.com>
(cherry picked from commit b0b8c8222bd3271c9f0b5d0f207af13957614a42)
ceph: changes to run unittests for external script

Signed-off-by: Arun Kumar Mohan <amohan@redhat.com>
(cherry picked from commit 20e7c4fbb9d6a185ab568ce21171a75d6d47a560)
ceph: tests use v14.2.12 due to broken osds in v14.2.13

The ceph v14.2.13 release has breaking changes for the ceph-volume batch
scenario that is preventing non-pvc OSDs from being created. In the short
term we will pin the tests to v14.2.12 and separately we will need to
address the changes needed and/or wait for a fix from ceph.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit d674dcd88ca29e08a37446df6ffe9250dbddf7f4)
ceph: remove the osd pvc when purging the osd

The osd purge job was not removing the osd prepare job or the
osd pvc due to an invalid label query for the pvc. Now the
prepare job and pvc will be removed as expected from the job.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 37a56f39a680fab5752c87abeecfe9022b0f8539)
ceph: fail if mgr prometheus is not default

Currently, Rook does not support a prometheus exporter port different
than 9283 so let's fail and force the user to set it to the default.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 1ed307cb0991dfd716bce471c8f88e6a11b7def0)
ceph: add unit test for osd batch mode

We now have much better coverage on the c-v on non-pvc scenario.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 6b211eacbadf98a87ca64686e686680a08a4b74b)
ceph: fix crush-class osd on non-PVC

We need to use storeConfig instead device config as the later never
seems to be populated.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit bc5c8d32f12a7aca6d01b2fb3de7e3e037367d60)
ceph: correctly populate variable

The wrong variable was referenced in the print.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 8631eef1f77d46417dd9f40f6c14c065fcabae27)
ceph: introduced unsupported releases

These are a collection of unstable ceph release that are not recommended
for production. It is recommended to rollback to the previous or
  upgrading to the next one if possible.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 64fe9f7685a8f55dd8a199f168c5dfc2cac2d5e9)
build: update manifest version to v1.4.7

Update the manifest versions to v1.4.7 for the patch release

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.4.7 is a patch release limited in scope and focusing on small feature additions and bug fixes.
Ceph
Log warning about v14.2.13 being an unsupported Ceph version due to errors creating new OSDs (, @leseb)
Disaster recovery guide for PVCs (, @tareqhs)
Set the deviceClass for OSDs in non-PVC clusters (, @leseb)
External cluster script to fail if prometheus port is not default (, @leseb)
Remove the osd pvc from the osd purge job (, @travisn)
External cluster script added additional checks for monitoring endpoint (, @aruniiird)
Ignore Ceph health error MDS_ALL_DOWN during reconciliation (, @LalitMaganti)
Add optional labels to mon pods (, @yuseinishiyama)
Assert type for logging errors before using it (, @leseb)
Check for orphaned mon resources with every reconcile (, @travisn)
Update the mon PDBs if the maxUnavailable changed (, @sp98)
NFS
Update documentation and examples (, @prksu)"
"cassandra: suppress integration test errors temporarily

The Cassandra tests are failing in the CI, although they pass when
run locally on a developer cluster. Until the issue can be tracked
down we need to disable these checks to get to a green CI again.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 5489dd7b58540296464c3050e8bd5b498829aef8)
ceph: set the filesystem status when mirroring not enabled

When mirroring is enabled on the filesystem, the status was not
being set on the filesystem. Now the reconcile will ensure the
status is updated on the CR whether or not mirroring is enabled.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 7cfae42a62a31ce42c9eb902bd6d2b9e538a3dc6)
ceph: fix vault kv secret engine auto-detection

Passing struct by value essentially gives you a copy, so when modified
within a function, the scope is then reduced to that function. Using
pointers solves that you mutate the struct as many times as you want from
anywhere.
As a result, the auto-detection of the Vault KV backend was not working
correctly.
Also, added a ton of unit tests for Vault.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit d675969567b9b2d233dbe57bfb5db30f6fcf5341)
ceph: add ClusterID and PoolID mappings between local and peer cluster

During disaster recovery/migration of a cluster, as part of the failover, the
kubernetes artifacts like deployment, PVC, PV, etc will be restored to a new
cluster by the admin. Even if the kubernetes objects are restored the
corresponding RBD/CephFS subvolume cannot be retrieved during CSI operations as
the clusterID and poolID are not the same in both clusters

This PR creates a mapping between Cluster ID and RBD Pool ID between
local cluster and peer cluster.

Signed-off-by: Santosh Pillai <sapillai@redhat.com>
(cherry picked from commit 3f8abec403684ee12775b2ee38e52051ad743c51)
ceph: making script backward compatible with python2

Variable name `exec`, was raising an error with python2.
Renamed it to `execErr`.

Signed-off-by: Arun Kumar Mohan <amohan@redhat.com>
(cherry picked from commit 888d4ea7064763cf564813ba925a411296332a89)
ceph: avoid duplicate ownerReferences

If we call OwnerInfo.SetOwnerReference for an object multiple times,
it results in OwnerReference duplication.

Signed-off-by: Yuzuki Mimura <yuzuki725.m@gmail.com>
Co-authored-by: Hiroya Onoe <onoehiroya@gmail.com>
(cherry picked from commit c38e1f1ddd21782e7f9a92bc318e888439763333)
ceph: auto grow OSDs size on PVCs

When an OSD reaches OSD_NEARFULL state,
we have to manually increase the PVC volume claim
or manually increase the count of OSDs in the device set

Added a script auto-grow-storage.sh which will
i)automatically increase claim volume
ii)automatically add number of OSDs

Closes: https://github.com/rook/rook/issues/6101
Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 827ee1d8794db0bf2a47dd9587bfecac73155dcc)
ceph: avoid double reconcile with default value

When setting a default values with kubebuilder flags it seems that the
kube operator intercepts the API call, mutate the CR and inject it.
This results in two events, one for creation and one for edition and we
end up with 2 reconciles. Let's avoid this.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit ab166742c5329dcc51502905bc0b67fa4950b7d9)
ceph: do not reconcile if the op is not ready

When the op is initializing, the ceph config is not ready and thus we
should reconcile. This avoids a double reconcile.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 072c8f43df42934208c104c6165895e0ac6cd812)
ceph: fix error message in UpdateNodeStatus

The error message in UpdateNodeStatus regards the second argument
as node name. However, it is a PVC name in OSD on PVC.

Signed-off-by: Hiroya Onoe <onoehiroya@gmail.com>
(cherry picked from commit 2ff5413b75a9de387af56d92e0428e615ec8ea3f)
ceph: add pdb for mgr

Currently PDB for MGR is not been created,
Creating the PDB for MGR if its count is 2

Closes: https://github.com/rook/rook/issues/8275
Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit e50d83771e5f988a05fe5bc63adc51b0f76e24c4)
ceph: allow an even number of mons

While an even number of mons can cause lower availability of
mon quorum, it also can provide higher durability for the cluster.
Mon quorum can be restored from a single mon according to the
disaster recovery guide, so there may be scenarios where
an even number of mons may be preferable.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 1cb97574ea85a25f42a32ae7152832d629e31a54)
ceph: only allow up to 9 mons to be specified

Typical clusters only require 3 or maybe 5 mons. If someone really wants
to go crazy they can add more mons, but over 9 mons really should not be
used.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 849f434a79265d216e3cf93d8950468b3b58dc1a)
ci: fix object store test

We just need to wait longer when the status is not ready. We needed
another sleep otherwise the status was never nil and the loop went too
fast. See:

```
2021-09-02 16:29:11.372249 I | integrationTest:
2021-09-02 16:29:11.374427 I | integrationTest:
2021-09-02 16:29:11.377764 I | integrationTest:
2021-09-02 16:29:11.379950 I | integrationTest:
2021-09-02 16:29:11.382084 I | integrationTest:
2021-09-02 16:29:11.385383 I | integrationTest:
2021-09-02 16:29:11.388499 I | integrationTest:
2021-09-02 16:29:11.391301 I | integrationTest:
2021-09-02 16:29:11.393545 I | integrationTest:
2021-09-02 16:29:11.396249 I | integrationTest:
```

Signed-off-by: Sébastien Han <seb@redhat.com>

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 8f42bee563d6bbb40a3806317b063a9c2717b1b4)
ceph: fix CephMonQuorumAtRisk Alert Query

The updated query will work for single mon deployment and will work better for
deployments with five or more mons.

Signed-off-by: Anmol Sachan <anmol13694@gmail.com>
(cherry picked from commit a1efcd76179c1a6a568b0e8b23dfeb201d11f540)
ceph: fix pool deletion when running on multus

The ceph-block-pool controller was missing the network spec from the
cephcluster that contains all the details about networking.
So when the pool was deleting on multus the controller was not proxying
the rbd command to the mgr pod but executed the command in the operator
pod which does not have the network annotation and then connect to the
ceph cluster.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 4cb9b534875980be7c2e9c7cef0671174258e107)
ceph: use node externalIP if no internalIP defined

In some cases node internalIP is not defined. Then use externalIP if it
exists.

Signed-off-by: JrCs <90z7oey02@sneakemail.com>
(cherry picked from commit c606f4c488e958ba2387eedd67df7a6f6de0037c)
ceph: add options for cephobjectstore user

Adding options for quota, bucket limit, caps for the
`cephobjectstoreuser`.

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit ca43800119f93ee995df64e234f5eab41a089333)
ceph: remove NFS and Cassandra make targets

Remove all make-related references to NFS and Cassandra. This is limited
purely to make targets. Leave CRD and codegen script references to be
removed in a different commit.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 9531c252a5522494f1924ee89a36aefbb3de71d3)
ceph: remove NFS and Cassandra example manifests

Additionally remove NFS and Cassandra from CRD generator script.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 1b1736a3c5b27c6c9c6a076704f1a7eeae210f01)
test: remove NFS and Cassandra github actions

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 61f6429ea459678389a76de9a77fd491b4c2c0ec)
bot: remove NFS and Cassandra mergify/commitlint cfg

Remove NFS and Cassandra references from mergify and commitlint configs.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit e684fa09e7773be492f9a511032be3d264e3b259)
docs: remove NFS and Cassandra refs from docs

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 0508fe3d065b66e3aee59c4d9a8b64d62e64df53)
docs: remove NFS and Cassandra design docs

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 34fdcd7175da1e4177af5c6936321556f189826f)
ceph: remove NFS and Cassandra from codegen

Remove NFS and Cassandra from codegen scripts, BUT leave generated code
to be removed later.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 7a14eb58a0f3af5a7fd90feb702e90d3983a3a86)
ceph: remove NFS and Cassandra operator code

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit a1814af1d92102c3456725dc9c704da0c289e482)
ceph: print the output on errors

Sometimes the error does not tell much, so as `exit status 1` and
printing the output along returning the error is useful.

For instance, I saw a job failing with no osd and the prepare job had
those lines:

```
exec: Running command: lsblk /dev/sdb1 --bytes --nodeps --pairs ....
inventory: skipping device ""sdb1"". exit status 1
```

We need to understand more about the lsblk issue.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit b7f55362b274621e1525405c7d8328c06eeecff9)
ceph: modify the log info when ok to continue fails

correct typo in logging, it was showing `ok-to-stop`
instead of `ok-to-continue` when 'continueUpgradeAfterChecksEvenIfNotHealthy' is true

Co-Authored-by: Zeaone <zeaone@ZeaonedeMacBook-Pro.local>
Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 065780449115901cb44ce63ee9d06896d5081826)
ceph: fix CephOSDCriticallyFulla and CephOSDNearFull Alert Query

Add hostname to CephOSDCriticallyFull and CephOSDNearFull rules's expr

Signed-off-by: chengli <chengli@alauda.io>
(cherry picked from commit f2c9793fcac1b65b7e0972fa2c7309e211b8f446)
ceph: add networking.k8s.io/v1 Ingress chart compatability

Kubernetes cluster versions 1.22+ must use the v1 Ingress version.

Signed-off-by: Bryton Hall <email@bryton.io>
(cherry picked from commit 5e4ed30bc9ff1507da4e82fd380cb9ee8c501252)
ceph: addressing nits from

Addressing remaining nits from the PR

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit 50ecff8f132dc2f66a17099e60cbd86c667f04d4)
docs: correct indentation for topologyKey

fixed the incorrect indentation for topologyKey
in ceph-cluster-crd doc and storage-class-device-set doc

Co-authored-by: Fabio Nitto
Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit fdae56dd3bea999b847d785d85cceed53c838a19)
ci: image list for offline installation

create file tests/scripts/rook-ceph-image.txt which
will have list of images required for offline installation.

Closes: https://github.com/rook/rook/issues/6406
Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 7bc9a138f2aa2d536054dbce366b272729bcf9f2)
build: update the release version to v1.7.3

With the Ceph patch release we set the example manifests
versions to v1.7.3

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook Ceph v1.7.3 is a patch release limited in scope and focusing on small feature additions and bug fixes.
Cassandra and NFS have moved to their own repos. All improvements in this repo starting from this release will only be for the Ceph storage provider. (, @BlaineEXE)
Image list for offline installation can be found in images.txt (, @subhamkrai)
Add networking.k8s.io/v1 Ingress chart compatibility (, @hall)
Modify the log info when ok to continue fails (, @subhamkrai)
Print the output on errors from ceph-volume (, @leseb)
Add quota and capabilities configuration for CephObjectStore users (, @thotz)
Fix pool deletion when uninstalling a multus cluster configuration (, @leseb)
Use node externalIP if no internalIP defined (, @JrCs)
Fix CephOSDCriticallyFull and CephOSDNearFull monitoring alert queries (, @Muyan0828)
Fix CephMonQuorumAtRisk monitoring alert query (, @anmolsachan)
Allow an even number of mons (, @travisn)
Create a pod disruption budget for the Ceph mgr deployment when two mgrs are requested (, @parth-gr)
Fix error message in UpdateNodeStatus (, @hiroyaonoe)
Avoid multiple reconciles of ceph cluster due to the ipv4 default setting (, @leseb)
Avoid duplicate ownerReferences (, @YZ775)
Auto grow OSDs size on PVCs based on prometheus metrics (, @parth-gr)
External cluster configuration script fixed for backward compatibility with python2 (, @aruniiird)
Fix vault kv secret engine auto-detection (, @leseb)
Add ClusterID and PoolID mappings between local and peer cluster (, @sp98)
Set the filesystem status when mirroring is not enabled (, @travisn)"
"ci: fix ci test encryption-pvc-kms-vault-token-auth

we need to wait for the rgw pod to be delete and not
only the cephobjectsore, sometime the pod could be in
terminating state. Also, in some place it require proper
command to wait for pod to be ready/delete and get the
pod name only.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 70f29be748cda0d6acec3411efc70dc882e8c5a2)
external: fix import-external-cluster.sh and documentation

fix import-external-cluster.sh in order to work with set -e bash directive, see issue https://github.com/rook/rook/issues/12412
fix documentation mispell in namespace word

Closes: https://github.com/rook/rook/issues/12412

Signed-off-by: mysiki <hoaxboy@wanadoo.fr>
(cherry picked from commit b5d0d80444f6fcb20958f23e3cad4c4474d73d39)
core: remove vault server module dependencies

The vault server dependencies were pulling a lot of indirect modules
that are not necessary for Rook. The modules were only used
for testing. The vault github explicitly indicates that:

""Some other projects have made a practice of doing so in order to
take advantage of testing tooling that was developed for testing Vault itself.
This is not, and has never been, a supported way to use the Vault project.""

When attempting to update to vault v1.13.3, we are hitting
such an unsupported configuration with go modules
that are impossible to satisfy. By removing the tests
that were using the vault server project, we can remove
this large set of dependencies, enable updating to v1.13.3,
and also reduce the modules pulled in by vault.

Signed-off-by: travisn <tnielsen@redhat.com>
external: add support for IPV6 ceph daemons

updated some function which were strictly used for IPV4

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit de61187eb40bced52f216c72b6e31cacb3ac3b62)
csi: update csi holder daemonset template

Currently the holder daemonset is never updated
which will leaves the images the daemonset also
not updated. we should update the daemonset
template but not restart the csi holder pods
which causes the CSI volume access problem,
set the updateStrategy to OnDelete (already set in
yaml files) which allow us to update the holder
daemonset but not restart/update the pods, when a
pod is deleted or node is rebooted
the new changes will take effect.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 1ba3aa4d1972c6ecbc9ab3c9ae7ce1a5fbe0e8dc)
external: pin the default csi subvolume

set the csi subvolume to pin type distributed and pin setting 1
So to statically balance the PVs across all MDS ranks

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 53413e5a240fa1c732ae3cbdcb78c56d033ab490)
external: support custom ceph keyring file

When the ceph.conf is not in a well-known location, it is typical
for a custom ceph.keyring to be required as well. Currently, the
create-external-cluster-resources.py only tries to load the keyring
from well-known paths, and fails.

This commit adds a new optional argument `--keyring` to help in this
situation. When specified, create-external-cluster-resources.py will
attempt to use this as the keyring to authenticate with Ceph.

Signed-off-by: Angelos Kolaitis <neoaggelos@gmail.com>
(cherry picked from commit c021256e96bcd5bfc607d67f2b65651ccf84263e)
object: align spelling of user admin capabilities with ceph

users & buckets admin capabilities aren't spelled the same
way between rook crd (singular) and ceph (plural). It's a bit
misleading when comparing ceph admin cap and rook users.

Signed-off-by: Peter Goron <peter.goron@gmail.com>
(cherry picked from commit 40eed236cfcd557fa950a22cadd974ebb41bea87)
build: update release version to v1.11.10

For the patch release update the docs and example manifests
to v1.11.10

Signed-off-by: travisn <tnielsen@redhat.com>","Improvements
Rook v1.11.10 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
object: Align spelling of user admin capabilities with ceph (, @pgoron)
csi: Update csi holder daemonset template for updating at next restart (, @Madhu-1)
core: Remove vault server module dependencies (, @travisn)
external: Support custom ceph keyring file (, @neoaggelos)
external: Pin the default csi subvolume (, @parth-gr)
external: Add support for IPV6 ceph daemons (, @parth-gr)
external: Make the import script idempotent (, @mysiki)
ci: Fix ci test encryption-pvc-kms-vault-token-auth (, @subhamkrai)"
"docs: repair list numbering in Restoring CRDs after Deletion

This commit adjusts spacing in the Docs -> Troubleshooting -> Disaster
Recovery -> Restoring CRDs after Deletion sources to repair
list-numbering-mangling. The section is altered to use spacing
suggestions from:
  https://squidfunk.github.io/mkdocs-material/reference/lists/

Signed-off-by: Alexander Bauer <sasha@linux.com>
(cherry picked from commit d7731bdf7cfb86ace9c81a1e1574610722d54339)
docs: add warning about CR naming in CRD restoration page

Signed-off-by: Alexander Bauer <sasha@linux.com>
(cherry picked from commit dc13595670a907a41c0c030fd287d2a9e97e8501)
docs: add scripts, details, and new steps to CRD restoration guide

Signed-off-by: Alexander Bauer <sasha@linux.com>
(cherry picked from commit 825e956849a71306685fe03a563fb8920794a48d)
docs: fix typo in numbering

Signed-off-by: Tarun Gupta Akirala <takirala@users.noreply.github.com>
(cherry picked from commit a2b0871d08017b52d22e3e408bf40ac55a154517)
core: upgrade ceph to latest release v17.2.5

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 270b565f1806436cb19fbf9979ee07f10f19320c)
core: remove finalizer from cluster cr last

Removing the finalizers from cluster resources can intermittently fail
in the CI if other updates are made at similar times. The controller
runtime will retry after the failure, but if something external
removes the finalizer on the cephcluster CR, the deletion will not
continue with the removal of finalizers from the other configmap
and secret critical resources.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 0ede2946a8cd093f2e8a5866c6f8c9694730a318)
mon: the mon daemons maintain host network settings

If the host network setting is changed in the cluster CR,
the existing mons must continue using the same network
settings or else the operator would update their pod
specs with the incorrect settings and cause mon quorum
to go down. Now the network setting is preserved so
the admin could switch between host and non-host network
configuration without reinstalling.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 61840324be24f8fe27f349561f152aeb38067d06)
security: update ""s5cmd"" to ""v2.0.0""

update ""s5cmd"" to ""v2.0.0"" as ""1.4.0"" was built using go v1.16 and has many vulnerabilities

Resolves

Signed-off-by: Pratik Raj <rajpratik71@gmail.com>
(cherry picked from commit db9bd9f918aca84a726909ed6a1167eae0ae1fdd)
security: run the crash collector as ceph user

The crash collector does not have the command line arguments
to run as ceph user id 167, so we set the security context
to run as the ceph user in the main crash collector
container.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit df6d7af355440eab3fae7eea970f9196b5de125f)
docs: added steps to collect coredump and perf troubleshooting info

Signed-off-by: gauravsitlani <gauravsitlani@riseup.net>
(cherry picked from commit 3ead8218d99523d857a7a29974558396f9fa3306)
docs: update disaster recovery guide for webhook

Since we moved to cert-manager for the webhook long time back, we
just need to disable webhook instead of backing the whole webhook.
And, after crs are restored we need to enable the webhook and all the
resources will be created itself by the operator.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 0dbfc66498f44b2629f03652b5fe0443cb994383)
osd: add deviceType label to an OSD

Closes: https://github.com/rook/rook/issues/11059

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 3bcc29e1ff6750a38441cbca51a6cc33cbf35750)
core: validate crd name size from admission controller

Closes: https://github.com/rook/rook/issues/11212

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 7bd863d5abbc20e541a69c25101ddd125687df67)
build: update the release version to v1.10.5

For the patch release the examples and docs are updated
to v1.10.5

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.10.5 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
security: Run the crash collector as ceph user (, @travisn)
security: Update s5cmd to v2.0.0 (, @Rajpratik71)
core: Validate object store CR name length in admission controller  (, @parth-gr)
osd: Add deviceClass label to an OSD (, @parth-gr)
docs: Update disaster recovery guide to disable the webhook (, @subhamkrai)
docs: Added steps to collect coredump and perf troubleshooting info (, @gauravsitlani)
pool: Add timeout to rbd init cmd (, @zhucan)
mon: The mon daemons maintain host network settings to allow change in config (, @travisn)
core: Retry when removing finalizers from cluster resources during cluster deletion (, @travisn)
core: Upgrade ceph to latest release v17.2.5 (, @subhamkrai)
docs: Improve troubleshooting docs on restoring CRDs after deletion (, @alexander-bauer)"
"ceph: fix typo in resource name in the snapshot instructions

updated few resource names in CSI snapshot documentation.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit b10849304249206ceb47a956bd31e04f95e0c766)
docs: fix quickstart and cluster cr broken links

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 40c4923410e383a51cf57b898a0968d2e7bc4999)
ceph: set correct v15.2.8 image name in upgrade guide

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 1bb4228792985871b8cb2f1f5a7d22a8efc04798)
ceph: requeue clusterDisruption controller more proactively

Currently the reconcile of the clusterDisruption controller was triggered mainly due to the
ceph status update in the cephCluster CR. This PR adds reconciles the cluster when:
1. Reconcile when the cluster is created. (This will trigger the first reconcile)
2. Reconcile only when the clusterSpec is updated. (This will avoid triggers when cluster status is updated)
3. Reconcile for events on cephblockpool, cephfilesystem and cephObjectStore.
4. Reconcile for events on Main PDB and when `DisruptionsAllowed` is 0. (that is, when one of the OSD goes down).
5. Reconcile after 30 seconds when there is an active drain going on, that is, pdbStateMap has `draining-failure-domain` as not empty.

Signed-off-by: Santosh Pillai <sapillai@redhat.com>
(cherry picked from commit 049b44f99039d214b204c208e3eba162d479bf64)
ceph: update to latest Kubernetes version 1.20.0

updating to latest Kubernetes version 1.20.0 fix
security issues. In the current version, it allows
for the token leak in logs when logLevel >= 9.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 0146eb3805580beb9988f68742cef946d1cc028b)
docs: added kube-system namespace to the registry sample's pvc in cephfs

The CephFS documentation page's kube-registry.yaml PVC definition was missing the namespace property.
The YAML shown in the docs now reflects the file in cluster/examples/kubernetes/ceph/csi/cephfs/kube-registry.yaml

Signed-off-by: Léo Schoukroun <leopaul36@yahoo.fr>
(cherry picked from commit 56957e2d16146f4eb9a3639837c9460f558e21e6)
docs: fix RGW AWS credential export commands

Fix ceph rgw export commands to access values in object yaml definitions through jsonpath instead of grep. This solves issues that arise, should there be more than one lines with the grep value in the yaml file which would concatenate arbitrary values.

Closes: https://github.com/rook/rook/issues/6087
Signed-off-by: Daniel Schneider <daniel.schneider@eramux.com>
(cherry picked from commit d4d53b610e04a7f8097a4fcc53e25ffb8a9ba32e)
docs: add namespace note in storageclass documentation

docs: add namespace note in object storage storageclass documentation

Signed-off-by: zufardhiyaulhaq <zufardhiyaulhaq@gmail.com>
(cherry picked from commit 35514b7b569521f4f6ae0d5baea34d3d106b1197)
docs: fix colon

Co-authored-by: Sébastien Han <seb@redhat.com>
Signed-off-by: zufardhiyaulhaq <zufardhiyaulhaq@gmail.com>
(cherry picked from commit 449a0223e20701e9e26eff63c645d5d678f70ef6)
docs: describe how to remove healthy Ceph OSDs

Current document of OSD removal only describe the case of broken OSDs.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 1def3d023937770c85f0ea037e98ec9fe685086c)
ceph: init rgw dashboard access key in goroutine

The command to set or disable the rgw dashboard started
hanging in some scenarios in v15.2.8. For now we start
the rgw dashboard config in a goroutine until this issue
is tracked down. After the issue is fixed in ceph, the
goroutines will no longer be necessary.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 464e332dc1849c9d3bc5d1e70eba0cfb2eab0313)
ceph: suppress reconcile error after operator restart

After the operator restarts, the controllers will not all be able
to reconcile until the ceph config has been generated by the reconcile
of the CephCluster controller. The message printed to the operator log
is frequently seen as an error condition even though it is a normal
condition where we requeue the reconcile until the config is available.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit afeb38417d9b651921da69921496b9a95d823f39)
ceph: change external rgw detection, not relying on cluster

After, internal rgw spawning on external cluster was still broken,
operator claiming:
```
ceph-object-controller: failed to reconcile failed to create object
store deployments: failed to reconcile external endpoint:
failed to create or update object store ""arch-cloud"" endpoint:
failed to create endpoint ""rook-ceph-rgw-arch-cloud"". Endpoints
""rook-ceph-rgw-arch-cloud"" is invalid: subsets[0]:
Required value: must specify `addresses` or `notReadyAddresses`
```

To spawn internal rgw for external cluster, changes detection of
what mean 'internal' for rgw and only use the externalRgwEndpoints
list for that independently of the status of the cluster
Now there is multiple posibilities:

 * internal cluster and internal rgw pods: ""normal case""
 * external cluster and internal rgw pods: <= now working with the PR
 * external cluster and external rgw pods: the external case
 * internal cluster and external rgw pods: <= new case that could exist

Signed-off-by: Julien Girardin <jugirardin@free.fr>
(cherry picked from commit d63d9b7d4d3cae0cf899ea1207c768d33ab1aaa5)
ceph: apply OSD resources and placement for device sets

`.spec.resources.osd` resources and `placement: all:` placements
parameters for the OSD pod did not reflect the value like
it has for other pods mon,mgr.

this commit will allow to set those parameters for the OSD pod also.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 9109cc6b8c8cf6557b36445fa1e63261d6e57cfb)
ceph: update smoke test to verify obc is bound

When verifying OBC creation, validating that secret and configmap exist
is good, but the definitive validation is to check that the OBC's phase
is ""Bound"".

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 40fd80cf14e03a0393c29f1fb0035bc4f739aeb0)
ceph: add obc to upgrade test

Add object bucket claim to Ceph upgrade test.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 9b0ba6ae8bac6bb0b9ce0f8caf4981df56640e0b)
ceph: allow disable liveness check for mds daemonset

Allow to disable liveness probes for mds pod

Signed-off-by: shenjiatong <yshxxsjt715@gmail.com>
(cherry picked from commit d3416fcf2c1e08c6e53bb784f20113ba4c8fcb6a)
ceph: add devices to schema at overall storage level

With the 1.5 schema added to the CRDs, the devices at the root
level of the storage element were missed. Now the ability to
specify devices at the root storage level to apply to all
nodes is restored.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 1705c64ced3a498b99e1068d14e05942ffb4768a)
ceph: fix malformations in common-external.yaml

Fix accidental malformations in common-external.yaml manifest.
Find-replace operations seemingly replaced `namespace` with `name` in
some instances. Fix this.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 1cf47f64084ef35ad59fa41e797cd42b5c109a90)
ceph: only restart ceph dashboard module if settings changed

If ssl was not enabled, the dashboard was being restarted with every
reconcile. Instead, the dashboard should only be restarted when
the settings have changed in order to reduce the frequency that
the dashboard is restarted.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 4ad432ffcf5bae60bf5642f0eea96bdbfd0e1e44)
ceph: enhance delete cephObjectStoreUser logging

DeleteUser was returning error ""failed to delete user ... with buckets""
without corresponding buckets information. Now it will check buckets, If
buckets are present then return error with buckets info on failure.

Signed-off-by: Nitin Goyal <nigoyal@redhat.com>
(cherry picked from commit 76a370a57ab51adfe38cc4a1d57341309ba2f8d3)
docs: update path in quick start doc

this commit update the paths in
quick start doc.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit ed21b20113549c005a69e7b1649cf241cc4ace5f)
ceph: remove unexpected array type in crd schema for tests

Clean up an unexpected array type in the test schema for pre-k8s-1.16
clusters

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 08c227dbddff40f4df00e97f765569f538b1db97)
build: set release version to v1.5.5

With the patch release we update the manifest and doc version
to v1.5.5

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.5.5 is a patch release limited in scope and focusing on small feature additions and bug fixes.
Ceph
Only restart ceph dashboard module if settings changed (, @travisn)
Enhance delete cephObjectStoreUser logging (, @iamniting)
Fix malformations in common-external.yaml (, @BlaineEXE)
Allow disabling the liveness check for the MDS daemonset (, @jshen28)
Add devices to the CRD schema at overall storage level (, @travisn)
Apply fallback resources and placement for OSDs in device sets (, @subhamkrai)
Change external rgw detection, not relying on cluster (, @Zempashi)
Suppress reconcile error after operator restart (, @travisn)
Update internal K8s client to version 1.20.0 (, @subhamkrai)
Requeue clusterDisruption controller more proactively (, @sp98)
Allow using lvm batch for ceph 14.2.15 (, @jshen28)"
"ceph: example manifests deploy with v15.2.11

The latest octopus release is v15.2.11 so we should use
it in the default examples to pick up the latest fixes.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 43594adbbbc38c4247a02fd61dc9eab468f5a738)
ceph: update OSDs reconcile

OSDs not automatically started when adding nodes to existing cluster.
Call the helper NormalizeCrushName(name) to make sure the node name can match the name in the crush map before querying for the node in the crush map, and reconcile when new nodes get added.

Closes: https://github.com/rook/rook/issues/7462
Signed-off-by: parth-gr <partharora1010@gmail.com>
(cherry picked from commit f6bd25ae01c2f295d602fc16c9d1eba11b9edfc0)
ceph: operator loops forever over existing nodes

When the node get added to the cluster the operator always watches for node events and starts a reconcile when a node is ready.
Checking the Node if they already have OSDs present and stopping them from reconcile.

Closes: https://github.com/rook/rook/issues/7534
Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 80a9b26bfdf7fb3ea9a503eedddcfc37169b37d8)
ceph: detect the osd topology affinity during upgrade

The nodeAffinity for portable OSDs is needed to ensure the OSDs are
tied to the same zone or other failure domain where the OSD was
prepared and where it is expected to run. During upgrade the topology
affinity was not being detected since the osd prepare job is skipped
in that case. Now the topology will be detected from the running
OSD daemon pod's node.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 08f896e8652910fc8ac2b8c81fb603d047610177)
ceph: fix healthcheck incase ssl enabled for rgw

In case ssl enabled for RGW, bucket healthcheck won't work since access is denied from the server.
In that case configure S3 agent using ""InsecureSkipVerify: true"" option.

Fixes: 7288
Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit bcbe707bcba2d663ac2a1727779864af5c7fd02c)
ceph: removing serviceIP from bucketChecker struct

serviceIP is not used by the health bucket checker, hence removing it.

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit 70f94a2d3cceda4ec157d36fb204287576269308)
ceph: update cephcsi to v3.2.2

updating cephcsi to latest v3.2 release
which includes the CVE bugfix.

Release details at
https://github.com/ceph/ceph-csi/releases/tag/v3.2.2

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
ceph: ensure object store endpoint is initialized for user

when store.Status was not initialized it caused
crashes when assigning store.Status.Info[""endpoint""]
to objContext.Endpoint.

This commits makes sure store.Status is not Nil
before setting objContext.Endpoint and
objContext.SecureEndpoint in the ObjectStoreUser
controller.

Closes: https://github.com/rook/rook/issues/6916
Signed-off-by: Ali Maredia <amaredia@redhat.com>
(cherry picked from commit c9fee1f883c225b9f443e7426802e3fc2fe8fe7a)
build: set release version to v1.5.11

The patch release version is now set to v1.5.11 for example
manifests and documentation

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.5.11 is a patch release limited in scope and focusing on small feature additions and bug fixes.
Ceph
Set operator base image and default Ceph version to v15.2.11 (, @travisn)
Deploy Ceph-CSI v3.2.2 with latest base image including CVE fixes (, @Madhu-1)
Improve node watcher for deploying new OSDs (, @parth-gr)
Fix bucket health check where SSL is enabled for RGW (, @thotz)
Detect the topology affinity for portable OSDs during upgrade (, @travisn)
Ensure object store endpoint is initialized for user (, @alimaredia)"
"rgw: update lib-bucket-provisioner version

Update version of lib-bucket-provisioner to fix issue with updating objectbuckets config.

related-issue: https://github.com/rook/rook/issues/10679
Signed-off-by: Denis Egorenko <degorenko@mirantis.com>
(cherry picked from commit a553d2f52df315a3677b16b4108480e3f45df006)

# Conflicts:
#	go.mod
core: no need to delete v1beta cronJob during v1 deletion

we are already deleting v1beta1 cronJob while creating v1 cronJob,
so no need to delete v1beta while v1 cronJob deltion.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit e1a585e55f1d67ad441d2eeceec7cb8c9826cc22)
ci: update codespell config

Codespell had its first release in a year yesterday and added some
dictionary rules that are now being flagged in our code. Only one
issue required changes to our code, so modify the codespell config to
allow the words we want to allow.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 5b0a22ca467ddff6390821126b4eabceb428f853)

# Conflicts:
#	pkg/operator/ceph/object/objectstore_test.go
ci: fix multus depment cr link

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 4a05115aef97d5610dd04505104536290ec1aee3)
object: generated code

Signed-off-by: zhucan <zhucan.k8s@gmail.com>
(cherry picked from commit 1da927e40e82b4887307941b2ce0a7844ec53434)
object: hostNetwork setting should be under spec.gateway instead of spec in the ObjectStore CRD

Signed-off-by: zhucan <zhucan.k8s@gmail.com>
(cherry picked from commit 2011d9104dfbec63e06aa5dab1abbc8e82d43a4f)
core: fix logrotate bash check and periodicity logic

we need use `!=` for string comparision in bash instead of
`-ne`. Also, need to correct periodicity if condition to
make it work as expected.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 9d4d5bc7025a026a7f11c52f48f1db0c00c4d5c9)
mon: improve mon failover reliability

Mon failover reliability is improved in two scenarios with these changes.
First, if the failover is aborted because of failing to start the new mon
and wait for it to join quorum, the new mon will be fully removed and
the failover rolled back. Previously, the operator would leave the new
mon pod running even if it never joined quorum. Now the timeout for the failover
is increased to wait longer for the new mon, but if it times out, there
are no leftovers from the cancelled failover.

Second, if the operator is failed in the middle of a failover
before the old mon is removed, the operator needs to remove an extra
mon. The operator was only selecting a random mon for removal instead
of honoring the stretch cluster topology or looking for mons
on the same node that could be removed to restore the correct
desired number of mons.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 72a4245fbfb3761c83b2318285e54396ce95ffcc)
docs: move PSPs from common.yaml to psp.yaml

Also update docs. Use `make gen-rbac` to generate psp.yaml.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 1e9bbae583e8a8d6010130413c6317415358be96)
build: remove psp from common.yaml generation

Due to an oversight, PSP resources were left in generation of
common.yaml from. Resolve that by setting
pspEnable=false when generating common.yaml.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 6c8f2e414fde3d8c8f9ef55fa5fae000a7cd00e8)
core: only log errors with v1beta1 cron job

v1beta1 cron jobs have not been created by rook since k8s 1.21
and now are fully removed in 1.25. As long as we still support
older than 1.21 we still need to attempt to delete the v1beta1
cron jobs in case they had been created before an upgrade.
If the deletion fails, now we just log a debug statement since
it is a normal condition, and continue with the v1 cron job
creation.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 538025111a98a7299ff2677e42e01c33351efa8c)
build: update release version to 1.9.10

Update the docs and manifests to release version v1.9.10

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.9.10 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator. Support for K8s 1.25 is added.
build: Remove psp from common.yaml generation (, @BlaineEXE)
docs: Move PSPs from common.yaml to psp.yaml (, @BlaineEXE)
mon: Improve mon failover reliability to better handle failure and topology (, @travisn)
core: Improve logrotate bash check and periodicity logic (, @subhamkrai)
object: hostNetwork setting moved under spec.gateway from the main spec in the ObjectStore CRD (, @zhucan)
external: Fix cluster id naming in import-external-cluster script (, @parth-gr)
core: No need to delete v1beta cronJob during v1 deletion (, @subhamkrai)
core: Only log errors with v1beta1 cron job deletion (, @travisn)
rgw: Update lib-bucket-provisioner version (, @degorenko)"
"ceph: do not fail on keys deletion

Prior, we were returning a nil map and thus the assignment for forced
deletion was not working since we were trying to assign on a nil map.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 2e73baf4f590cad7626fb9763b46dfe8a541c6b2)
ceph: do not build all the args to remote exec cmd

When proxying commands to the cmd-proxy container we don't need to build
the command line with the same flags as the operator. The cmd-proxy
container does not use any ceph config file and just relies on the
CEPH_ARGS environment variable in the container. So passing the same
args as the operator causes to fail since we don't have a ceph config
file in `/var/lib/rook/openshift-storage/openshift-storage.config` thus
the remote exec fails with:

```
global_init: unable to open config file from search list ...
```

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 17999bcb3d89b12740c8342c55fbd628b7b3c841)
test: run all integration tests against the local build

The integration tests must always be run against the local
build of rook, and an image should never be pulled from dockerhub.
To prevent pulling a release or master tag, the local build
will use a tag specific to the build and not ever published
elsewhere.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit a8a40428b05a20a57c171547f1a1c46a5b75f741)
build: run canary tests against the local-build tag

The canary tests were still picking up the tag from operator.yaml
and toolbox.yaml instead of the new test local-build tag.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 6f48dce3f548aa8b8b256097a948103d09aafc0f)
rgw: raise errors when rgw daemon fails to be created

The generation of the rgw deployment spec was swallowing errors
if any issues are raised such as the tls cert not being found
as expected in some configurations. We need to fail the reconcile
so the error will be logged and the admin can identify the issue.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 9ecd0cbc7563705ca7de34c65370cca9dcd91a9e)
docs: add OMAP quick fix warning to upgrade guide

Ceph has recently reported that it may be unsafe to upgrade clusters
from Nautilus/Octopus to Pacific v16.2.0 through v16.2.6. We are
tracking this in Rook issue https://github.com/rook/rook/issues/9185.
Add a warning to the upgrade doc about this.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 1f8719650a54b4f6e0fcaeba47c0932a070fd781)
build: set the release version to 1.6.11

With the patch release we update the example manifest version
to v1.6.11

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.6.11 is a patch release limited in scope and focusing on small feature additions and bug fixes to the Ceph operator.
rgw: Allow reconcile to complete even during a downgrade (, @travisn)
docs: Add OMAP quick fix warning to the upgrade guide (, @BlaineEXE)
multus: Do not build all the args to remote exec cmd (, @leseb)
multus: do not fail on keys deletion (, @leseb)"
"operator: add ceph image version label to PVC

This PR makes Rook operator to add a label on PVC that contains an image version of Ceph when creating an OSD.

Signed-off-by: YZ775 <yuzuki-mimura@cybozu.co.jp>
(cherry picked from commit ed9da20d68bbf3bc1a93484fa148bb736a09401f)
object: add ssl ref in cephobjectstore user secret

There is no reference for ssl in cephobjectstore Secret, so users won't
have much idea why tls secret need to used. Hence give reference
object stores tls secret ref in the Secret.

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit 6ea24cb11bdbb9c723839066cc69cac6f89abaf0)
operator: remove confusing successful message when reconciling CephObjectStoreUser

When creating a CephObjectStoreUser with a value spec.store that refers to an
unexisting CephObjectStore, after the reconciliation loop the
CephObjectStoreUser is in the ReconcileFailed state. However, a
ReconcileSucceeded event is created with this message:

""successfully configured CephObjectStoreUser""

The success message results of the return value for the error which is currently
`nil`. Let's replace it with the error message.

Signed-off-by: Lucas Henry <polyedre@disroot.org>
(cherry picked from commit 87bc3dfcdcf279668050374f9b8a5d67483369b7)
docs: update storage architecture diagram

This includes the source code of the diagram, created using draw.io, so
anyone can easily update it.

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit 75dbc7d7fb075f84aa230f8c1b642a7f93ae6b51)
multus: add config file for validation tool

Allow the validation tool to read test config from a yaml file. To help
users, also allow outputting a config file with default values and
comments instructing how to use the config file.

This work is in anticipation of adding more advanced configuration
options that would be too cumbersome to set using cli flags.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit f8d9076a388e9fa4d66b4136f28be9455065cddd)
exporter: ignore failed deletion of service monitor

If the ceph version does not suppport the exporter, the operator
will attempt to delete the service monitor related to the exporter
to ensure it does not exist for a node. If the expected rbac does
not exist, this will cause unnecessary errors since there would anyway
be no service monitor to delete. So we ignore the error of deleting
the service monitor for the exporter.

The context is also passed to the exporter so a new kubeconfig does
not need to be initiated and cause unnecessary logging about
invalid options for the config.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 417f05311fa911e43c116b08ecc6c7c3fb07ef6b)
ci: add exporter to commit prefixes

Add the exporter to the list of commit prefixes

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 96ff80f8b02880dfc3b00120e024ea65f8a0855a)
external: make import script idempotent

import script may be need a re-run if other
resources need to be configured
for ex: if rbd is configured and later on point
someone want to also configure rgw, it will have
a choice

Closes: https://github.com/rook/rook/issues/12412

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 483c432b260de6b5d0486ae335a4c99e0c889536)
docs: replace deprecated ingress.class annotation

Documentation and examples used a deprecated annotation to set the Ingress class name. This commit replaces it with the correct version using spec.ingressClassName .

Signed-off-by: Marcel Lautenbach <mlautenb@gmail.com>
(cherry picked from commit 9d335ad8140d65c51be91019d53260e96526f11f)
multus: add deletecollection capability for validation tool

    Without deletecollection capability the image pullers won't be deleted, causing multus validation to fail.
    Added deletecollection verbs to the daemonsets resource in role rook-ceph-system
    This is fix for Issue: https://github.com/rook/rook/issues/12435

    Signed-off-by: Sudharsan Omprakash <sudharsan.omprakash@yahoo.com>

(cherry picked from commit 2547372527dfd3d41772d65221d3a5252fe4bdee)
build: update release version to v1.11.9

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>","Improvements
Rook v1.11.9 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
multus: Fix ""deletecollection"" permission not present (, @sudharsanomprakash)
dashboard: Remove deprecated kubernetes.io/ingress.class annotation (, @Jeansen)
external: Make import script idempotent (, @parth-gr)
exporter: Ignore failed deletion of service monitor (, @travisn)
multus: Add config file for validation tool (, @BlaineEXE)
object: Clarify success message when reconciling CephObjectStoreUser (, @polyedre)
docs: Update storage architecture diagram (, @galexrt)
operator: Add ceph image version label to PVC (, @YZ775)
object : Add SSL ref in cephobjectstore user secret (, @thotz)"
"ceph: set default vault backend path when not specified

If the path was not specified, the OSD init container would crash loop,
failing to reach the vault path.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit dd275a2906e1e4b8076333c6b0f5abd639a1d30c)
ceph: remove temp encryption key

Once we are done opening the block device, we should remove the key even
though it is mounted on a tmpfs.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit a3946402863698a4b197dc6fb7e7a6cc32a62cc5)
ceph: fix init container ""expand-encrypted-bluefs"" multipath

When running encrypted OSDs on multipath the expand container was
failing to find the underlying device of the encrypted block. This was
because the underlying block was located in /dev/mapper and this path
wasn't mounted in the init container ""expand-encrypted-bluefs"".

This will manifest like so:

```
Underlying device for crypt device ocs-deviceset-block-dev-from-san-1-data-0-5qkmm-block-dmcrypt disappeared.
```

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 5762ca43b28bc9ff6d693452907a6f8535891dfb)
ceph: set secret type on external cluster script

The secret type was missing earlier and must be set
to ""kubernetes.io/rook"" so that the operator does not complain.

Closes: https://github.com/rook/rook/issues/5732
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 03613feeb2dc8493cf2358fb969e998765f825c9)
ceph: fix external bash script env var

s/CSI_RBD_NODE_SECRET_SECRET/CSI_RBD_NODE_SECRET

No need for the double SECRET

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 23343927caa4dd5bd263edd1b8bac8bc075de1b9)
ceph: remove extra slash in curl

When no VAULT_BACKEND_PATH is specified we default to the API one which
is set to ""secret/"", we could use a different variable but we don't want
to break the library support. Bonus point this will also fix issue with
users passing a slash at the end of the path.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit d9646d09ce3f59084e713014d1567a6fc2c70ec0)
ceph: avoid restarting all encrypted osd on cluster growth

When the cluster is growing, the operator always processes all OSDs and
re-generate their Deployment spec. The generated environment variables
for encryption are coming from a map, which by design is unordered. So
once generated the deployment will see their spec change since the
environment variable position will change.

See from the following diff:

```
        env:							        env:
        - name: KMS_SERVICE_NAME			      <
          value: vault					      <
        - name: VAULT_NAMESPACE				      <
          value: ocsns					      <
        - name: VAULT_TLS_SERVER_NAME			      <
        - name: VAULT_BACKEND_PATH			      <
          value: n_ocs					      <
        - name: VAULT_ADDR					        - name: VAULT_ADDR
          value: https://vault.qe.rh-ocs.com:8200		          value: https://vault.qe.rh-ocs.com:8200
							      >	        - name: VAULT_BACKEND_PATH
							      >	          value: n_ocs
							      >	        - name: VAULT_TLS_SERVER_NAME
        - name: KMS_PROVIDER					        - name: KMS_PROVIDER
          value: vault						          value: vault
							      >	        - name: KMS_SERVICE_NAME
							      >	          value: vault
							      >	        - name: VAULT_NAMESPACE
							      >	          value: ocsns
        - name: VAULT_TOKEN					        - name: VAULT_TOKEN
          valueFrom:						          valueFrom:
            secretKeyRef:					            secretKeyRef:
              key: token					              key: token
              name: ocs-kms-token				              name: ocs-kms-token
```

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 29c55575b739bb2f1b2394e0ef9f10eacd8ad435)
ceph: upgrade ceph-csi to v3.2.1

Signed-off-by: Stefan Haas <shaas@suse.com>
(cherry picked from commit 67024c1e0f310b3b827c505b9baa85a77c337092)
ceph: update mon PDBs

- Update mon PDB to use maxUnavailable=1 instead of minAvailable. The maxUnavailable will always be 1 irrespective of the number of mons in the cluster
- Move mon PDB reconcile logic from Disruption Controller to Cluster Controller

Signed-off-by: Santosh Pillai <sapillai@redhat.com>
(cherry picked from commit 42121e909e296c317befa79baf71281349833a93)
Signed-off-by: Santosh Pillai <sapillai@redhat.com>
ceph: prevent voluntary mon drain while another mon is failing over

With simultaneous node drains, a mon can go down while another mon is failing over. This results in two mons down and ceph become inaccessible. The commit makes maxUnavailable=0 while a mon is failing over and updates it back to maxUnavailable=1 after the failover. This update action is best effort. Any errors while updating the maxUnavailable mon pdb is only logged

Signed-off-by: Santosh Pillai <sapillai@redhat.com>
(cherry picked from commit 4af14f268c28337f83ee3c4effdc5daf87cc263e)
ceph: change the condition logic

The logic was backward, let's check for IsReplicated instead of ! IsErasureCoded.

Signed-off-by: Sébastien Han <leseb@Sebastiens-MacBook-Pro.home>
(cherry picked from commit 264110948b043181a037ed305ab96344dc4a14dd)
ceph: clarify mime configmap name

Honestly, I'm still wondering if this is needed,
but let's not break things that are not broken.
Just clarifying the name of the configmap in the logs.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 2d09db55f7fd0210ed84e2dd6077df10f4b80d81)
ceph: force pg_autoscaler mode for rgw pools

Let's make sure that Nautilus clients are using the pg_autoscaler when
setting up the cluster. We have seen cases where this was not enforced
after a re-installation.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 3ad85ad4f63901838378702dbda59029205c5c58)
ceph: added rgw app label to appLabels for deleting stuck rook pods

Added the missing rgw app label to appLabels for deleting stuck rook pods

Signed-off-by: rohan47 <rohgupta@redhat.com>
(cherry picked from commit 06aa82620bef6d3cdad575b78ffdc9bb739bd9f9)
ceph: remove auth in osd-purge job

`ceph osd purge` should remove the OSD auth, but many users have issues
where they are unable to create new OSDs after removing old ones due to
the old OSD auth still being present. Therefore, run `ceph auth del` for
the OSD after purging to fix this.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 80d2cde5c749715298eeec5f148b30ea397f8de4)
Revert ""ceph: remove auth in osd-purge job""

This reverts commit 80d2cde5c749715298eeec5f148b30ea397f8de4.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 36e98aa44d5359b527e0d867815d3e44200c8793)
ceph: update osd-purge docs to stop operator

Upate osd purge docs to inform users they need to stop the operator
before purging OSDs when using node-based OSDs.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit ac91fa77cc825e38cf5e734ed04502a679ee664a)
build: update the build to use go 1.16

With the release of go 1.16, we update the tools. The -i flag is
now deprecated, no longer necessary for building in a private directory.
The go modules are cleaned up at the same time.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 31c4ef622e4daa5aa9b845f800df680ae5b26873)
ceph: continue to get available devices if failed to get a device info

getAvailableDevices() should continue if something wrong happens in a device than returning
immediately with error.

Closes: https://github.com/rook/rook/issues/7543

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit a4fb08059042ccc12091080e072a9a1bbc88a05f)
ceph: update Kubernetes registry link in CephFS document

Update Kubernetes link to version 1.9.X which includes registry addon.

Ref:
https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.10.md
https://github.com/kubernetes/kubernetes/pull/58564

Signed-off-by: chienfuchen32 <chienfuchen32@gmail.com>
(cherry picked from commit c7f185727c7cbb0d2593026c0d689d09f00baf9b)
ceph: update ceph dashboard credential command

in the latest ceph releases, there are
few changes in ceph commands to access
ceph dashboard. This commit update
ceph dashboard credentials command.

Older command
```
ceph dashboard set-login-credentials <username> <password>
```
New command
```
ceph dashboard ac-user-create <username> -i <file-containing-password> administrator
```

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 30cc7c7eb6591ee7630710a4fbfee38a6c2e6762)
ceph: remove unnecessary use of formating

remove unnecessary use of formating.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 4eb08bb5080ae7024bc1cda7b509e647d82e8c06)
ceph: update rgw ceph dashboard command

in the latest ceph releases, there are few
changes in accessing the rgw ceph dashboard
command. This commit updates the commands.

old commands
```
$ ceph dashboard set-rgw-api-access-key <access_key>
$ ceph dashboard set-rgw-api-secret-key <secret_key>
```
new commands
```
$ ceph dashboard set-rgw-api-access-key -i <file-containing-access-key>
$ ceph dashboard set-rgw-api-secret-key -i <file-containing-secret-key>
```

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit bc48dad19aa3c915caff9dddaa71de0abd2f9e9d)
ceph: redact secret info from reconcile diffs

To avoid logging sensitive information, do not output diffs from secrets
when reconciling resources.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 9d657f464ca0d76b79255149df945609f59cf127)
cassandra: add missing sidecar permissions to testing manifests

Signed-off-by: Yannis Zarkadas <yanniszark@arrikto.com>
(cherry picked from commit c40a11611025d231015888fffc1fe62389e66d96)
test: add GitHub Action for Cassandra integration test

Signed-off-by: Yannis Zarkadas <yanniszark@arrikto.com>
(cherry picked from commit e3c747db47a2050a1b9a4221724a21998a2b16d6)
test: skip cassandra integration test in jenkins

Signed-off-by: Yannis Zarkadas <yanniszark@arrikto.com>
(cherry picked from commit 760e81edba4d556654937f1ca9b874f9a03816b7)
cassandra: fix integration test waiting logic

The integration test for Cassandra waited for Pods to become Running
before trying to connect to the Cassandra cluster. However, the check
should be that the cluster is Ready, not that the container state is Running.

If we only check for the Running state, we bump into a scenario where:
- The Cassandra container has started (thus is in Running state)
- The Cassandra server has not stated yet

and then tests will fail.

Signed-off-by: Yannis Zarkadas <yanniszark@arrikto.com>
(cherry picked from commit a004942f0bb5e2dc4f0de64f184e08c82cabf502)
build: update release version to v1.5.10

With the patch release the example manifests and documentation
is updated to v1.5.10

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
build: latest package updates for go.sum

The build is failing due to missing imports for go.sum.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.5.10 is a patch release limited in scope and focusing on small feature additions and bug fixes.
Ceph
Update Ceph-CSI to v3.2.1 (, @shaas)
Use latest Ceph API for setting dashboard and rgw credentials (, @subhamkrai)
Redact secret info from reconcile diffs in debug logs (, @BlaineEXE)
Continue to get available devices if failed to get a device info (, @satoru-takeuchi)
Include RGW pods in list for rescheduling from failed node (, @rohan47)
Enforce pg_auto_scaler on rgw pools (, @leseb)
Prevent voluntary mon drain while another mon is failing over (, @sp98)
Avoid restarting all encrypted OSDs on cluster growth (, @leseb)
Set secret type on external cluster script (, @leseb)
Fix init container ""expand-encrypted-bluefs"" for encrypted OSDs (, @leseb)
Fail pool creation if the sub failure domain is the same as the failure domain (, @leseb)
Set default backend for vault and remove temp key for encrypted OSDs (, @leseb)"
"pool: allow more data chunks in an ec pool

The schema has a limit of 9 data and 9 coding chunks in an EC pool.
While not typically recommended, more data chunks may be desired.
Ceph does not have a limit, so we match the behavior and also
allow any number of desired chunks to be specified.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 53b6c7128e659e366700865a1c54c37a68a373ce)
osd: increase wait timeout for osd prepare cleanup

When a reconcile is started for OSDs, the prepare jobs are first
deleted from a previous reconcile. The timeout for the osd prepare
job deletion was only 40s. After that timeout, the reconcile attempts
to continue waiting for the pod, but of course will never complete
since the OSD prepare was not running in the first place, causing the
reconcile to wait indefinitely. In the reported issue, the osd prepare
jobs were actually deleted successfully, the timeout just wasn't long
enough. Pods need at least a minute to be forcefully deleted,
so we increase the timeout to 90s to give it some extra buffer.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 427996a7c0cf3948580f9132e476e2c387fb15a8)
core: fail if config dir creation fails

If the operator fails to create the operator's configuration directory
then we should fail the Operator.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 10a114a45a1220ea30de7b18e923fb4243201632)
helm: enable cephfs volume expansion by default

The cluster helm chart missed adding the default setting
for the volume expansion, so now we enable it by default.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 35e3ebd1d25a9bb4c5eaa6d7fc0cc7e7a5dfe43d)
rgw: raise errors when rgw daemon fails to be created

The generation of the rgw deployment spec was swallowing errors
if any issues are raised such as the tls cert not being found
as expected in some configurations. We need to fail the reconcile
so the error will be logged and the admin can identify the issue.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 9ecd0cbc7563705ca7de34c65370cca9dcd91a9e)
docs: fix ephemeral link for rbd pod

fixed the ephemeral link for the rbd pod.
Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 953cabf999661e9fec49ff0c293a69a6058994a0)
osd: set blkdevmapper capabilities

The OSD blkdevmapper init container relies on the MKNOD capability,
which it does not actually request.
As a result, deployments fail on Kubernetes clusters that do not
happen to assign this capability to all containers by default.
Solve this by updating the container spec securityContext to
explicitly request the capability it relies on.

Closes: https://github.com/rook/rook/issues/9156
Signed-off-by: Omar Pakker <Omar007@users.noreply.github.com>
(cherry picked from commit 4726d39688e116a64b6f0178b5800f6b6416ff43)
helm: set correct ingress endpoint protocol

In the helm chart, the ingress for the dashbard was always referring
to the http-dashboard port on the dashboard service. If ssl is enabled
the https-dashboard port must be specified, or else the dashboard
will not be available through the ingress.

The default is also changed from http to https when the dashboard
is installed through the cluster helm chart.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit ae89658b2f5c25bf64d5ced382a1f7f1124a41f4)
osd: add privileged support (back) to blkdevmapper securityContext (work-around)

The blockdevmapper securityContext was changed to request a minimal set of
required capabilities for its operation and drop running as privileged.
While the base change works and is valid in terms of the container's copy operation,
it turns out that OpenShift may require some additional configuration not
currently covered by the limited securityContext and the capabilities granted.

To not break those OpenShift deployments, make the blkdevmapper securityContext
listen to the ROOK_HOSTPATH_REQUIRES_PRIVILEGED flag again to set privileged mode.
This flag is true on OpenShift deployments and running as privileged
works around the (missing) configuration problem for now.
To properly drop privileged completely some additional investigation needs
to be done on OpenShift deployments without relying on privileged execution.

Signed-off-by: Omar Pakker <Omar007@users.noreply.github.com>
(cherry picked from commit 8f9055809fd973e50772666ee369c40b14d66a5e)
docs: remove old commitlint component `ceph` from doc

Removing `ceph` component from doc as component
`ceph` was removed from commitlint bot earlier.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 951940805df35160d6f07950fff1e88c4e0ae88d)
mon: set cluster name to mon cluster

the mon cluster clusterInfo is intiated seprately,
and misses out to set the cluster name and use default name as testing
from AdminClusterInfo.

Part-of: https://github.com/rook/rook/issues/9159
Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit aea28565661e54cc98305ed85af53af05195b96e)
docs: add OMAP quick fix warning to upgrade guide

Ceph has recently reported that it may be unsafe to upgrade clusters
from Nautilus/Octopus to Pacific v16.2.0 through v16.2.6. We are
tracking this in Rook issue https://github.com/rook/rook/issues/9185.
Add a warning to the upgrade doc about this.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 1f8719650a54b4f6e0fcaeba47c0932a070fd781)
build: set the release version to v1.7.8

With the patch release the examples are updated to the version
v1.7.8

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.7.8 is a patch release limited in scope and focusing on small feature additions and bug fixes to the Ceph operator.
docs: add OMAP quick fix warning to the upgrade guide (, @BlaineEXE)
mon: Set cluster name to mon cluster (, @parth-gr)
osd: Add privileged support for OpenShift to blkdevmapper securityContext (, @Omar007)
osd: Set reduced blkdevmapper capabilities (, @Omar007)
helm: Set correct ingress endpoint protocol for https and http (, @travisn)
rgw: Allow downgrade of rgw daemon (, @travisn)
helm: Enable cephfs volume expansion by default (, @travisn)
core: Fail if config dir creation fails (, @leseb)
osd: Increase wait timeout for osd prepare cleanup (, @travisn)
pool: Allow more data chunks in an EC pool (, @travisn)"
"docs: added rbd mirror crd documentation

This adds some basic RBDMirror CRD documentation and fixes the types.go
comments accordingly.

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit e99084120655c08f623a5d1794001ed34c5efb6f)
ceph: a minor refactoring of external cluster resources script

Signed-off-by: Arun Kumar Mohan <amohan@redhat.com>
(cherry picked from commit 940118af828d9ac04c7901513e10a8504e75d3ae)
ceph: making rbd / cephs provisioner and nodes optional

Some more optional items in json output.
RBD Provisioner, CSI CephFS node and provisioner are now optional and
will only be populated if they are available.

Signed-off-by: Arun Kumar Mohan <amohan@redhat.com>
(cherry picked from commit a5b4020d80960e694b59c244081be59d01c4155f)
ceph: fix object store healthcheck yaml

Reverting some of
https://github.com/rook/rook/commit/23f0ac7f9c7157383bc860b259c1964df46454c1
to re-use `bucket` for the healthcheck configuration.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 7859bf5c4b956d18d24cff189bc8a9d9feef6628)
ceph: fix object store yaml example

The healthcheck for the bucket is called `bucket`.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit a5982b749fad5efbe1a68b58fb0f5b607d21d6e7)
core: added labels to rook v1

This adds Labels and LabelsSpec to the rook.io/v1 apis pkg.

Related to

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit 5225a592786d7d38d356590339df5e6bd975b846)
ceph: add support for wal encrypted device on pvc

Similar to https://github.com/rook/rook/pull/5977 but for wal devices.
So if a cluster is deployed on PVC and wal devices, those will be
encrypted as well.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 4f9435d2262fd8d103206e7ad8b24d04eff77de9)
docs: fix helm command usage

This fixes the helm commands to be compatible with Helm v3.x and adds an
example / notes for Helm v2.x users.

Resolves

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit 2288ec90ed6db09c5fdeec8721311c7e354c0ee5)
ceph: fix v1.3 to v1.4 upgrade apply file syntax

There is a missing YAML document / object separator in the apply file.
This PR adds it so it can be applied without errors.

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit d16a778cc57e315b4f8cc4cc4f9c72680d5d1b36)
ceph: improve callCephVolume() for list and prepare

callCephVolume() was using our exec interface with CombinedOutput which
means return both stdout and stderr. This is fine when preparing OSDs
since we read back the stdout and also want any errors if any (stderr).
However when listing OSD we only want the output since ceph-volume tends
to mix stdout and stderr in the output and does not always silence the
warning types/harmless errors. If the listing has a problem we report it
by printing the ceph-volume log file.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit dbac1c11d07a6639c28810803376902ba3cc483a)
ceph: fix error log

""Giving up waiting for Rook Toolbox to be ready"" error always
logged even if Rook Toolbox is ready.
This commit fix the problem.

Signed-off-by: binoue <banji-inoue@cybozu.co.jp>
(cherry picked from commit 5c897e4a2159ae4b3c116a63b4ff6e5e3198ee0c)
ceph: pass csi resources as string in helm

Currently the CSI resources are getting passed as
the map instead of string, due to this the yaml
unmarshal is getting failed. This commit adds
the missing '|' to pass the resources as the
string instead of map

fixes:

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 244b94dbc6355ea734c5e0c93e7dec66a068e461)
ceph: check rootfs for lvm too

On rancher OS, the lvm binary is in a different location and cannot be
accessed via the root namespace. So we now also check directly from
/rootfs. When using nsenter, itbreaks out of container's mount
namespace and executes an lvm command.

Closes: https://github.com/rook/rook/issues/6078
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 713d3ecace2455c1ab93c91bfc9cf9585cfc9dfe)
ceph: separate placement for osd prepare jobs from osd daemons

The osd prepare jobs and osd daemons may have different placement
requirements. In particular, the topology spread constraints
or pod anti-affinity should only work on either the prepare job or
osd daemon, but does not work effectively on both types at the same
time. Therefore, we split out the osd prepare placement to be separate
from the osd daemon placement. If the osd prepare placement is not set
the operator will fall back to the osd daemon placement for
backward compatibility.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 0ffa0348b5b1c785361435495439f7a376f2b2a3)
ceph: remove redundant check for encrypted osds

This is simply a code simplification to remove an extra check for
whether the OSDs are encrypted. There is no change in functionality.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 26f59c03820c9a7a0676623d57e709fbdfc9d3b8)
ceph: set the osd prepare resources

The osd prepare resources were only being set on the main container
while the init containers either did not have resources set, or were
inheriting the resource settings from the device set resources for osds.
Now the osd prepare resources will be consistently set based on the
prepareosd resources in the main section of the cluster CR.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 18d39d909e6bf3faa81d8437f8dd86572a5038f7)
ceph: add a note of OSD on PVC-backed PVC's known problem

There is a critical flaw in OSD on LV-backed PVC. So it's necessary
to let users to know what they should do.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 1a3c175e63d86cce12316b0dceb561e3bfd374c0)
ceph: reflect review

Signed-off-by: Yuji Ito <llamerada.jp@gmail.com>
(cherry picked from commit ce1951469df403a595fa333ab58a6050850a8266)
ceph: do not use realPath for osd on pvc

It is fine to use /mnt/set1-data-0-k47mc, it looks like I thought there
was an issue with udev but there is none...

Closes: https://github.com/rook/rook/issues/5996
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 944d8cb209f5f74d95d8d163205ae7470bbe14c5)
ceph: applying latest changes to object-prefixed manifests

the commit apply latest changes or sync the
object-prefixed manifests with object.yaml
and keeping object-test.yaml simple and
without lastest change.

Signed-off-by: subhamkrai <subhamkumarrai03@gmail.com>
(cherry picked from commit 99cc3692fe922e4b96084fa2a87f594f0bf60075)
ceph: continue with memory limits below min settings

The operator will now allow the resource limits to be applied below the
recommended minimums. In small clusters, even the recommended minimums
may not be necessary. A warning is still printed to the operator log,
but we allow the configuration to continue.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit ce9224972542cdcb4814a9506801a6c4b2afee38)
ceph: support osd deployment update on encrypted pvc

If the deployment spec was updated or restarted, the ""encryption-open""
init container would fail to open the device since it was already
opened on the node.
Because they are no reliable post stop hook on Kubernetes, the trick is
to use a small bash init container.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 3f42db5ce09ac6610a92132df9a6b33c8706976b)
ceph: add pvc expansion support for encrypted osds

We now support the expansion of encrypted osds. We added a new init
container to run ""cryptsetup resize"".

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit cb81ee7d1dc9d4dbb8a9fe05eb48156faab7493c)
ceph: add encrypted block status container

This init container displays the status of the encrypted pvc. This can
be really useful for debugging purpose.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 803462cecae1e0e77a3f6fac8a7efccb1fc53ce6)
ceph: add more pvc dep unit tests

Added more unit tests scenario for osd on pvc such as:

* block/db/wal
* block encryption
* block/db encryption
* block/db/wal encryption

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 321e8e0b5a3d1199258ebea08a96781ae7f52233)
ci: clean up after SmokeTest

Currently, SmokeTest is not cleaned up after the test.
As this can affect other following tests, set rookCephCleanup as true.

Signed-off-by: binoue <banji-inoue@cybozu.co.jp>
Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit aa2af5a24b41d72f21fedb336c55cc5955edcd62)
ceph: added support for multus for csi

CSI pods now utilize multus networking and connect to public
network specified in the CephCluster CR.

Closes: https://github.com/rook/rook/issues/5356
Signed-off-by: rohan47 <rohgupta@redhat.com>
(cherry picked from commit 8c4ede1edccee5b4e87445354e94b87ac0c7ba14)
ceph: remove preStop from daemonset template

The lifecycle preStop hook fails on container stop / exit
because /bin/sh is not present in the driver registrar container
image.

the driver-registrar will remove the socket file
before stopping. we dont need to have any preStop hook
to remove the socket as it was not working as expected

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 0aa0957bf18677f5d3fd86d5df098450ed6107d5)
ceph: vulnerability in package golang.org/x/text

package golang.org/x/text v0.3.3 fixes the Vulnerability
in golang.org/x/text which could lead to infinite loop when
providing single byte to utf16 decoder.

Signed-off-by: subhamkrai <subhamkumarrai03@gmail.com>
(cherry picked from commit 9247b65f44989d330c3c7f8bcf300cca7bb64f5b)
docs: fix link to ceph upgrade guide

There was a broken link in the cluster CR documentation that was pointing
to /Documentation instead of the .md in the same dir.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit d786b7f547a93c3e2f4bfa1825d8775fa1e8419e)
ceph: allow user to add labels to pods

This allows users to specify additional labels to be added to the components
created by the Rook Ceph operator.
Additionally the rbd mirrors are now getting their annotations and
labels set.

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit a87c00ddee6f5251ad75430ccf0490b51709084b)
ceph: operator should only ""watch"" OSD placement nodes

This change is the first part to improve the watch OSD nodes logic in
the Rook Ceph operator.
This commit changes the ""is node valid check"" to use the OSD placement
instead of the all placement. The OSD placement is ""merged"" with the
all placement already.

Second step will be to skip the first ""iteration"" of the ""nodes added""
events and then start the actual watch logic.

Partially resolves.

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit 94d5196439b0b43fc91b805efb9546a0051b6bd4)
ceph: improve common issues document

node-hangs-after-reboot problem can't be fixed with ceph-csi:2.0.1
if Rook is v1.2.x. It's because this version doesn't have a bind
mount that is needed to fix this problem.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 65528d67ed7551c4195c84efd0eece0591d25a08)
ceph: run obc requests with debug

Use debug log to all the s3 calls so it's either to debug. Also, it's
not so verbose.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit bcd76bf46d05bae3bcce671cd30815fe44e71a3a)
ceph: use special dns suffix for object ep

By addding "".svc.cluster.local"" to the endpoint of the object store, the
OBC requests won't go through a proxy if any is configured.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 3a92f9823350754c69ec94bb65ed67e192f333a5)
ceph: correctly return if multus was applied

We must only return if multus got configured successfully.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 8668e1f69c96cff3bfccee4e01d6478d2cf07705)
ceph: do not exec on rootfs just lookup

Trying to execute a binary from the host within the container can result
in mismatched libraries. The host version is compiled with paths of
libraries on the host where the libs inside the container can differ.
Because the path is known and we only need to make sure whether the bin
exists or not then simply doing a lookup when we fallback on /rootfs is
sufficient.

Closes: https://github.com/rook/rook/issues/6078
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit f2313d6db0d9decac91a7ff79032f8e2a5e75884)
build: update manifest versions to v1.4.2

For the release update the manifest versions to v1.4.2

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.4.2 is a patch release limited in scope and focusing on small feature additions and bug fixes.
Ceph
Improve check for LVM on the host to allow installing of OSDs (, @leseb)
Set the OSD prepare resource limits (, @travisn)
Allow memory limits below recommended settings (, @travisn)
Use full DNS suffix for object endpoint with OBCs (, @leseb)
Remove the CSI driver lifecycle preStop hook (, @Madhu-1)
External cluster optional settings for provisioners (, @aruniiird)
Operator watches nodes that match OSD placement rules (, @galexrt)
Allow user to add labels to the cluster daemon pods (, @galexrt)
Fix vulnerability in package golang.org/x/text (, @subhamkrai)
Add expansion support for encrypted osd on pvc (, @leseb)
Do not use realPath for OSDs on PVCs (, @leseb)
Example object store manifests updated for consistency (, @subhamkrai)
Separate topology spread constrinats for osd prepare jobs and osd daemons (, @travisn)
Pass CSI resources as strings in the helm chart (, @Madhu-1)
Improve callCephVolume() for list and prepare (, @leseb)
Improved multus support for the CSI driver configuration (, @rohan47)
Object store healthcheck yaml examples (, @leseb)
Add support for wal encrypted device on pvc (, @leseb)
Updated helm usage in documentation (, @galexrt)
More details for RBD Mirroring documentation (, @galexrt)"
"external: automatically init the rbd pool

Sometimes the pool is not enabled and the ceph cluster
shows health warning, so automatically initalize the pool
from the script

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 40008bf18ddf0bfe7426e3cb130ce466257deed5)
Revert ""core: use crash profile in crash daemon keyring""

This reverts commit fab23d34072dac479a719ce362a448d02e856542.
The mgr requires rw access for the cron job that collects
the crashes.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit a421143dddd31f8786d232a21ddda3de81f5b186)
docs: adding specific instructions to create operator namespace

When a user attempts to adhere to the current documentation to use alternative
namespaces for both the operator and the cluster, they fail because
our common YAML file only has a single namespace for the cluster. This
change adds specific instructions to create operator namespace.

Closes: https://github.com/rook/rook/issues/13079

Signed-off-by: Redouane Kachach <rkachach@redhat.com>
(cherry picked from commit 745d6dc86fb637cfb49aeb55fa948d61184568b0)
namespace: adding namespace to all rook-ceph namespaces references

To make it easier for the user to switch to a namespace other than the
default 'rook-ceph', the tag '# namespace:cluster' must be inserted in
all the places where this namespace is used. This way, a simple 'sed'
command can update all the Yaml files to the new namespace.

Signed-off-by: Redouane Kachach <rkachach@redhat.com>
(cherry picked from commit ff081cc4aed7a562a56d9be1cfb230ee964d568f)
security: update snyk ignores for MPL-2.0

Update the snyk ignores related to Vault MPL-2.0 licenses.

Signed-off-by: Blaine Gardner <blaine.gardner@ibm.com>
(cherry picked from commit bb492e1329caa1dd4403f029306a785a085f4ed3)
docs: fix install command

Signed-off-by: jxlwqq <jxlwqq@gmail.com>
(cherry picked from commit 67759f0fea63c11aaa17d16d51d91ac8bf8ff9c4)
external: fix monitoring endpoint check

if the monitoring endpoint is not present
we were not returning any error, but the
field is the mandatory output, so return error if not found

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 3363a195a80666674145d7f3d99465b80fe4c3d4)
docs: unifying namespaces handling for the second cluster creation

Let's use the same technique based on 'sed' while employing two
different namespaces for the cluster and the operator when creating
the second cluster.

Signed-off-by: Redouane Kachach <rkachach@redhat.com>
(cherry picked from commit 13654d3c3dce5c9153a887a6406725e5e72f1fcc)
doc: update lvm prerequisites

lvm packages should be required if `osdPerDevice` is set
to greater than 1.

Signed-off-by: sp98 <sapillai@redhat.com>
(cherry picked from commit 8854497d00ad31f4e98022295d466282b935515c)
ci: skip csv generation for mac

mac build ci is failing during csv gen
when trying to move files to some folder.
Skipping csv gen for mac since it is not required.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit c4cf300358081f1014d12e4f0b0737e856b7bbdb)
doc: add the table to know supported osd configuration

It's convenient to visualize the supported OSD configurations.
In addition, remove the reference to the common issue section
about OSD on LV-backed PVC because this issue doesn't happen anymore
for new OSDs.

Closes: https://github.com/rook/rook/issues/10859

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit bab6e01d3729139cdb399100e3e783e882ec27d6)
manifest: fix rook-ceph-mgr-system role and namespace

Signed-off-by: Redouane Kachach <rkachach@redhat.com>
(cherry picked from commit d6aae628791043b1525d927d2b7c23556b877345)
build: update release version to v1.12.7

For the patch release update the examples and docs
to v1.12.7

Signed-off-by: travisn <tnielsen@redhat.com>","Improvements
Rook v1.12.7 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
core: Crash collector keyring requires rw access for the mgr profile (, @travisn)
external: Automatically init the rbd pool (, @parth-gr)
doc: Add a table for supported OSD configuration (, @satoru-takeuchi)
external: Fix monitoring endpoint check (, @parth-gr)
docs: Unify namespaces handling for the second cluster creation (, @rkachach)
doc: Clarify LVM prerequisites (, @sp98)
namespace: Adding namespace to all rook-ceph namespaces references (, @rkachach)
namespace: Adding a dedicated entry for operator namespace in common (, @rkachach)"
"rbdmirror: rotate logs for rbd mirroring

The rbd mirror daemon logs to two files, one for the
lodal mirror daemon and one log from the other cluster
where the mirroring is taking place. The log rotation
was only rotating one of the logs. Now we make the
log rotation more general to catch all of the rbd mirror
logs from different clusters.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 055c22f4c45f20b406272be92b9c6cab03b6f6a4)
osd: fix osd detection logic for old lsblk

Old lsblk can't detect bluestore signature.
So read the head of device and verify signature
as a workaround.

closes: https://github.com/rook/rook/issues/10665

Signed-off-by: taki-d <mail@orangepla.net>
(cherry picked from commit ca73efa1e5c8101ff5c0570d59c08eccb6b7158b)
object: gateway.port partially ignored when hostNetwork disabled

Signed-off-by: zhucan <zhucan.k8s@gmail.com>
(cherry picked from commit b94f0805485e5523126c5367313547668b195fc9)
ci: ignore body-max-line-length

We don't care the line length of commit message.

ref.
https://github.com/rook/rook/pull/10445

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 2f66e7d15be4e0ca6ac86862eed64c8fcd2c7962)
osd: disallow to create osd on lv with metadata device

OSD on logical volume is raw mode. This mode can'set metadata device.
We should not mark a logical volume as available in this case.

Closes: https://github.com/rook/rook/issues/10747

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 8b513a4a7469fd50e767e9d87c1521e0900d0ad5)
csi: set daemonset set name as template name

Currently daemonset template.metadata.name is
empty and the way we are setting is not correct
use the daemonset name as the template.metadata.name

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 2dae7f67784cfdf69de96887a33485faaca60bf0)
csi: add missing serviceAccoutName to holder

Add missing serviceAccountName for the holder
daemonset to create the pods with required
access.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 32943b64e353a00be1b4b004e9a9df4b2376fd5c)
test: wait for resource deletion during helm uninstall

The helm integration test was immediately removing both the cluster
and the operator charts, without waiting for any resource deletion
between the deletions. This causes intermittent failures in the
test since the cluster CR and mon secret and configmap to never
be deleted because the operator will be stopped before their
finalizers can be removed. Now we wait for their finalizers
to be removed before removing the operator chart.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 5c478e5e04e80c4e4b71919be905234d992e6ceb)
osd: refactor code

Simplify osd management code.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 00b3d0f323d54a9d6a534d8536a0eebe02c5190a)
helm: set OBC storageclass name to right namespace

OBC storageclasses should have their names based on the cluster
namespace and not the operator namespace. Fix the chart to reflect this.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 5f00d291c9a3cd7048452060b45ecf7c3556cb25)
csi: remove findCSIChange from predicate

findCSIChange will work only for single
line values/configration in the configmap,
If the value is multiline the regex will not
be able to indentify the change because of this
one no configurations will be applied to the
csi driver. Removing this check so that if there
is any update on the configmap we will
reconcile the csi driver.

Note:- This might looks heavy but updating of config
map is not a frequent event.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 5b843a17a1704f771ed3ab3a4e19328a555c7029)
operator: improve ProbeHandler error message

This commit implements more diagnostic error for unsccessful
Liveness- and Readiness-Probe of Pods.

Added codes are expected to catch failures of
`ceph status` and `ceph mon_status`, and report it.

Closes: https://github.com/rook/rook/issues/9846
Closes: https://github.com/rook/rook/issues/9852

Signed-off-by: motorailgun <motoi_public@mail.aria-on-the-planet.es>
Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit ff0951738fcd2479c53d6b1ac472b5176530f028)
ci: improve the log on intermittent build failure

The build process sometimes fails with intermittent problems. Some of them
are known problems and then we retry build process. However, there still
are unknown problems. In this case, it's hard to find the reason because
the build process exits immediately.

ref.
https://github.com/rook/rook/runs/8225144002?check_suite_focus=true#step:3:926

```
+ case ""$o"" in
+ exit 1
Error: Process completed with exit code 1.
```

To make debugging easier, let's print the output of `make`. This log won't be
too long since `make` prints most messages to stderr.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 47f7aefa20a5bdf056c0ad3c3ba55ac6be2b8182)
docs: update the latest-release docs to 1.10

With the v1.10.0 release out, the latest-release docs need
to point to the 1.10 release. With each release we will
update to the next release branch when we have shipped.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit c4304e4b926bca9f7914776e8e9cececf208c8d9)
external: do not add info=read cap if ceph version doesn't support it

The rgw ip validation feature was needing to update the rgw user
cap to add info=read permission, but this permission is only backported
till ceph pacific, so we added a check that only add this cap
when ceph version support it,
But this cap was also adding with the other caps, so removed it from there
Now it will only add this cap if ceph version support it

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 54425803b6cb6fa1e0896cc1e81850631b02e15b)
monitoring: fix pool growth warning grouping

Predict linear will continue to predict on exporter data from old pods.
We can take the max value for every hour in the 2 day window before we
linearly predict to get the most conservative estimate. This will only
affect the hour in which a new mgr pod is started.

Fixes

Signed-off-by: Jamison Lofthouse <jamison.lofthouse@gmail.com>
(cherry picked from commit f553034351b81f6e2e83d7b61f24ff21c12a5d4e)
ci: disallow to create encrypted osd on lv

Rook doesn't support encrypted OSD on LV. Without disallowing
this configuration, ceph-volume results in failure.

Closes: https://github.com/rook/rook/issues/10782

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 7969450589c37ad5e23cc4ae848b6e8ae6fa8afb)
ci: disallow to create osd on lv with metadata by accident

OSD on LV with metadata device is not supported. So we once we made
a fix to disallow this configuration. However, it's insuffucient
because we forgot to reset `matched` flag.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 39cc6059f19c36761b8c0465a2b167d69a4c8b6e)
osd: disallow to create encrypted osd on partition

Rook doesn't support encrypted osd on partition. So we should
skip partitions as candidates of the new encrypted osds.

Closes: https://github.com/rook/rook/issues/10911

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 591fc5f68b8c597a17f7e765f298554bc2cc173f)
docs: clarify storage prereqs in quickstart guide

The quickstart guide prerequisites have diverged from the storage
requirements on the prereqs doc page, now they are in sync again.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit d5f100def1b2576785dbae6d1a6d1b59245838d5)
docs: add logical volume to storage options

Rook supports osd on logical volume in host-based clusters. Let's add it
to the list of valid device types.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit b52e6a0da8b7deeca0af346d348b8a68b30c6c79)
Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
ci: add mon_data_avail_warn to canary ci test

ceph cluster on ci mostly have health error
mon disk low on size,
so overriding the min aval capacity to 0 from 30% default so this
error can be removed

Closes: rook

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit df8493d77b0f6510faa1a58fce2af9f611a888b0)
build: fix intermittent gen-rbac failure

The crds generation for the helm crds is intermittently hitting a build
error due to multiple builds generating the crds at the same time.
We avoid this race condition by first writing the crds to a temp file
then move the file to the helm crd resources file.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 7863d3161c80e96f0370f0908f2ca657394078b9)
operator: silence 'cm is handled by another watcher' DEBUG messages

I guesstimate that around 50% of the operator log volume when set to log
level `DEBUG` are messages about cm's which aren't relevant to rook.

E.g.:

```
2022-09-16 23:03:05.430839 D | ceph-cluster-controller: hot-plug cm watcher: only reconcile on hot plug cm changes, this ""ingress-controller-leader"" cm is handled by another watcher
2022-09-16 23:03:05.643255 D | ceph-cluster-controller: hot-plug cm watcher: only reconcile on hot plug cm changes, this ""fleet-agent-lock"" cm is handled by another watcher
2022-09-16 23:03:05.799526 D | ceph-cluster-controller: hot-plug cm watcher: only reconcile on hot plug cm changes, this ""cattle-controllers"" cm is handled by another watcher
```

Yes, it is `DEBUG` and noise is expected. However, there is no message
about checking the status of the cm's rook actually needs to watch and
these messages don't seem very useful. I have been resorting to piping
the operators logs through `| grep -v 'hot-plug cm watcher'` to cut down
the noise.

Signed-off-by: Joshua Hoblitt <josh@hoblitt.com>
(cherry picked from commit 0763f91f93c6bff7f515517b0b9acf486eec0a1e)
osd: allow raw partitions to be picked up by discover daemon

Signed-off-by: dkeven <dkvvven@gmail.com>
(cherry picked from commit dc95af5c33f30f7541617c603f46745e57a1c988)
build: update the release version to 1.9.11

For the patch release update the example manifests and docs
to v1.9.11

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.9.11 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
osd: Allow raw partitions to be picked up by discover daemon (, @dkeven)
operator: Silence verbose watcher debug messages (, @jhoblitt)
docs: Add logical volume to storage options (, @satoru-takeuchi)
docs: Clarify storage prereqs in quickstart guide (, @travisn)
osd: Disallow to create encrypted osd on partitions (, @satoru-takeuchi)
osd: Disallow to create osd on lv with metadata device (, @satoru-takeuchi)
ci: Disallow to create encrypted osd on lv and osd on lv with metadata device (, @satoru-takeuchi)
monitoring: Fix pool growth warning grouping (, @jdloft)
external: Do not add info=read cap if ceph version doesn't support it (, @parth-gr)
ci: ubuntu 18.04 is deprecated upgrade to ubuntu 20.04 (, @subhamkrai)
operator: Improve ProbeHandler error message (, @motorailgun)
helm: Set OBC storageclass name to correct namespace (, @BlaineEXE)
csi: Trigger CSI driver reconcile every time configmap settings are updated (, @Madhu-1)
osd: Simple code refactor (, @satoru-takeuchi)
csi: Fix holder pod creation in openshift multus cluster (, @Madhu-1)
object: gateway.port partially ignored when hostNetwork disabled (, @zhucan)
osd: Fix osd detection logic for old lsblk (, @taki-d)
rbdmirror: Rotate all rbd mirroring logs (, @travisn)"
"ceph: fixing ClientID of log-collector for RGW instance

The Client_ID generated by operator was
different from the log rotate file created
The Clinet_ID= rgwceph.client.rook.ceph.rgw.my.store.a
and log file name= ceph-client.rgw.my.store.a.log
So changed the CLient_ID to ceph-client.rgw.my.store.a for
correct working and this follow the patterns how other modules
Client_ID is generated

Closes: https://github.com/rook/rook/issues/8692
Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit fc7905a7bd37529c7e3e1be5e96bc3b2a507b543)
mon: run ceph commands to mon with timeout

If the mons are not in quorum yet the commands interacting with mon
config store will stale for a very long time.

Closes: https://github.com/rook/rook/issues/8928
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 8da68bfb78d4198b655d16221d1a41eb63df82be)
ci: clarify the wait for csi to be ready

The wait is now more comprehensive.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 4f9c31fa8bf878dfa2260325db3a78642549482d)
ci: fix osd disk permission on provisioning

When the OSD is prepared, systemd-udev kicks in since the device has
been exclusively opened and thus reverts the permissions to root:disk.
We need a udev rule to force re-applying the correct ceph permission so
we can consume the disk.

Closes: https://github.com/rook/rook/issues/8942
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit abc5c635a67b0d1d18b39b1efd9e4039cc5882d3)
build: fix offline image build race condition

When generating the offline image list, the threaded crossbuild can
try to generate the image list from muliple jobs at once, resulting in
undefined behavior (usually an empty file) for the output file. To fix
this, we can generate this file in the `build.common` step which is not
run in parallel.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 221281cab30ca2ac6487381d22f919f4f023847d)
rgw: replace period update --commit with function

Replace calls to 'radosgw-admin period update --commit' with an
idempotent function.

Resolves

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit eadcd757b3da1d503f0764163f99a030f7dd3989)
helm: remove chart content not in common.yaml

Assume common.yaml is the right source of truth, and remove major
content from helm charts that does not exist in common.yaml.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 507dfe11f63af64826e0467e4d533b3183a8c1a6)

# Conflicts:
#	build/rbac/rbac.yaml
ceph: handle empty ceph_version in ceph_mon_metadata

Signed-off-by: Gowtham Shanmugasundaram <gshanmug@redhat.com>
(cherry picked from commit 4b76eb89936051273b9705067844fda16ab29318)
ceph: update CephNFS to use "".nfs"" pool in newer ceph versions

This commit updates the CephNFS CR to make the RADOS settings optional
for Ceph versions above 16.2.7 due to the NFS module changes in Ceph.
The changes in Ceph make it so the RADOS pool is always "".nfs"" and the
RADOS namespace is always the name of the NFS cluster.

This commit also handles the changes in Ceph Pacific versions before 16.2.7
where the default pool name is ""nfs-ganesha"" instead of "".nfs"".

Closes: https://github.com/rook/rook/issues/8450
Signed-off-by: Joseph Sawaya <jsawaya@redhat.com>
(cherry picked from commit ee791b09fd5ed4878886eefe3a747fd59e1cec21)
ceph: remove default value for pool compression

Using a default value for CompressionMode to none effectively overrides
any values for Parameters. It is deprecated but still takes precedence.
Which means that in its previous form, Parameters was always ignored
since CompressionMode was always set to none when empty.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 28cc6f5514c83f907699614c20c2cd60acf619e1)
ceph: print the c-v output when inventory command fails

Hopefully, this will give us more hints when a failure occurs.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 1e9d24ac77a811f899af28c731e5219c04102898)
ceph: apply csi provisioner node-affinity to csi version check job

This commit makes sure csi provisioner node-affinity is applied
to the csi version check job as well, similar to the how
the existing csi provisioner toleration is applied to the job.

Fixes:

Signed-off-by: Rakshith R <rar@redhat.com>
(cherry picked from commit c1ef189b9199d57649cf47bcb5fc7d747ef13f9e)
ceph: fix kms auto-detection when full TLS

When TLS is used and includes a caert, client key/cert, we need to copy
the content of the secret to a file in the operator's container
filesystem so that we can build the TLS config and thus the HTTP Client,
which reads those files.
Also, removing the files after each API call so they don't persist on
the filesystem forever.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 61afadd97e62166f8ef9c18f7cbd66c17ceb96e8)
test: fix prepare pod log collection in CI

In the CI tests that use `validate_cluster.sh display_status` to gather
logs, the prepare pod log collection failed. Fix this.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit f287df70eefa34b79668ac3a19a1d37963cb8c18)
ceph: fixing the queries for alerts 'CephMgrIsAbsent' and 'CephMgrIsMissingReplicas'

CephMgrIsAbsent
----------------
This alert initially had the following query

absent(up{job=""rook-ceph-mgr""})

which will fire when the 'up' query is not present, but had two flows
  a. it will not be fired if 'up' provides a result with ZERO value
  b. it will not give any fields in the metric, so 'namespace' was missing

when the above query was replaced with the following,

up{job=""rook-ceph-mgr""} == 0

query had the following shortage
  a. whenever mgr pod is completely down (like 'replicas' set to ZERO
and 'mgr' is not coming up), 'up' query will not give any result.

Thus we had to combine both the queries to get results in both the scenarios.

CephMgrIsMissingReplicas
------------------------
This query previously was,

sum(up{job=""rook-ceph-mgr""}) < 1

had the same structure as the above (Absent) query, but it's
intention was to check the no: of 'replicas' count for ceph mgr.
Now it is changed to a kube query which handles the replicas count.

Signed-off-by: Arun Kumar Mohan <amohan@redhat.com>
(cherry picked from commit cfa2c2dd38f52b7f3f4087b4d5d85cffb0b214a3)
test: do not use head because of pipe errors

The `head` command exits once it has output which can result in a
SIGPIPE error if the command piping its output to head hasn't yet
finished. Use `awk 'FNR <= 1'` instead, which waits on the input pipe to
close before it exits.

See here for more info:
https://unix.stackexchange.com/a/256047

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit ba7745d4af47dfde76519c140f1a25f02a2ec90c)

# Conflicts:
#	tests/scripts/github-action-helper.sh
csi: fix comment for the provisioner and clusterID

fixed provisioner and clusterID comment to match
the correct namespace.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 83cd8cb300c1e54219b39bddac2bbf642c337122)
ceph: enable mon failover for the arbiter in stretch mode

Prior to ceph v16.2.7 the failover of the arbiter mon was
not supported. Now the new tiebreaker mon can be set during
the failover event and provide more dynamic stability to
the mon quorum if another node is available in the arbiter
zone.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 12689bd119f6d308fb4e312307322976233674da)
ceph: update CephNFS to use "".nfs"" pool in newer ceph versions

This commit updates the CephNFS CR to make the RADOS settings optional
for Ceph versions above 16.2.7 due to the NFS module changes in Ceph.
The changes in Ceph make it so the RADOS pool is always "".nfs"" and the
RADOS namespace is always the name of the NFS cluster.

This commit also handles the changes in Ceph Pacific versions before 16.2.7
where the default pool name is ""nfs-ganesha"" instead of "".nfs"".

Closes: https://github.com/rook/rook/issues/8450
Signed-off-by: Joseph Sawaya <jsawaya@redhat.com>
(cherry picked from commit ee791b09fd5ed4878886eefe3a747fd59e1cec21)
test: get more partition info setting up ci disk

Add some commands to get more partition info when setting up the GH
action runner's disk for use in integration tests. This will both aid in
debugging and may ""jog"" the system such that it will no longer need to
reload the partition info when running the OSD prepare job.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 65619c2677cbc86392f629829464e0beb3db2d01)
ceph: only merge stderr on error

Previously we were merging the stderr even if it was empty, leading to
unmarshall errors.
The error simulation was done here
https://play.golang.org/p/Sk2yw9GUWNu.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 0e41e36ade91575d97012d4c75fd258d48b9ee3b)
build: update the patch version to v1.7.6

The example manifests and documentation is updated to v1.7.6

Signed-off-by: Sébastien Han <seb@redhat.com>","Improvements
Rook v1.7.6 is a patch release limited in scope and focusing on small feature additions and bug fixes to the Ceph operator.
core: only merge stderr on error (, @leseb)
nfs: remove RADOS options from CephNFS and use .nfs pool (, @josephsawaya)
csi: fix comment for the provisioner and clusterID (, @Madhu-1)
mon: Enable mon failover for the arbiter in stretch mode (, @travisn)
monitoring: fixing the queries for alerts 'CephMgrIsAbsent' and 'CephMgrIsMissingReplicas' (, @aruniiird)
osd: fix kms auto-detection when full TLS (, @leseb)
csi: add affinity to csi version check job (, @Rakshith-R)
pool: remove default value for pool compression (, @leseb)
monitoring: handle empty ceph_version in ceph_mon_metadata to avoid raising misleading alert (, @GowthamShanmugam)
nfs: remove RADOS options from CephNFS and use .nfs pool (, @josephsawaya)
osd: print the c-v output when inventory command fails (, @leseb)
helm: remove chart content not in common.yaml  (, @BlaineEXE)
rgw: replace period update --commit with function (, @BlaineEXE)
rgw: fixing ClientID of log-collector for RGW instance (, @parth-gr)
mon: run ceph commands to mon with timeout (, @leseb)
osd: do not hide errors (, @leseb)
rgw: use trace logs for RGW admin HTTP info (, @BlaineEXE)
Full Changelog: v1.7.5...v1.7.6"
"ceph: update ceph quick start doc to use new crds.yaml file

crds were factored out from the common.yaml file and helm chart. This PR updates the quick start guide to use crds.yaml file.

Signed-off-by: Santosh Pillai <sapillai@redhat.com>
(cherry picked from commit fcd07f099a80c71938d19a4442b52fede20a7448)
ceph: add external script to the container image

We now ship the Rook container image with our external cluster scripts.

Closes: https://github.com/rook/rook/issues/6644
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 43484cb96b4b4ed8e48a9289de183f05ba0918b3)
ceph: support ceph cluster and CSI on multus in diffrent namespace

Support ceph cluster and CSI on multus deployed in diffrent namespace.
Previously csi was looking for multus config from the cluster deployed
in the namespace in which rook-ceph-operator/csi was deployed.
Now it will look for multus configuration from ceph clusters from all
the namespaces.

Signed-off-by: rohan47 <rohgupta@redhat.com>
(cherry picked from commit cb9f947c3b5f8d45a150035b40573879147a77c7)
ceph: support NAD from diffrent namespaces

Added the support of NAD from diffrent namespaces.
they can be referrenced as <namespace>/<name-of-nad> e.g.,
default/public-nw.
Updated the multus doc to explain the same.

Signed-off-by: rohan47 <rohgupta@redhat.com>
(cherry picked from commit 5b5059ec2f0a795cd5f4d5ea25f4b9ae1b36f23f)
docs: clarify helm warning that could delete cluster

In the helm chart the CRDs are installed if crds.enabled is set to
true. If false, the helm chart will not install them. If changed
to false during an upgrade, the CRDs will be removed and the cluster
is destroyed. There is no way to prevent this while still being flexible
about CRD management, so we make the warnings as clear as possible.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit ba534ce28587d3c3572c9c88622204dcd30819c0)
ceph: update cleanupPolicy design doc

Cleanup Policy design doc is not up to date to with respect to latest implementation. This PR updates the design doc.

Signed-off-by: Santosh Pillai <sapillai@redhat.com>
(cherry picked from commit cd936b64db749f5d3f760279ef4f7e4f2b04e7f0)
ceph: restore mon clusterIP if missing

In a disaster recovery scenario, the mon service may have been
accidentally deleted, while the expected mon endpoint is still
found in the mon endpoints configmap. In this case, we create
the mon service with the same endpoint as previously.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 66de535a8aff07040b31b4b458dad5ac6e1c8a14)
ceph: add snapshot scheduling for mirrored pools

Now, we can schedule snapshots on pools from the CephBlockPool CR when
the pool is mirrored.
It can be enabled like this:

```
mirroring:
  enabled: true
  mode: pool
  snapshotSchedules:
    - interval: 24h # daily snapshots
      startTime: 14:00:00-05:00
```

Multiple schedules are supported since snapshotSchedules is a list.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit afc7ecff31878889b9e3939ef61df146a38aa900)
ci: use sudo test if the device is a block

Permissions on the disk might changed due to the partitions being
created. So the CI user is not able to read the device correctly.

Closes: https://github.com/rook/rook/issues/6580
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit dcd84e63acbc7da7f5f5297cf056848cb8cdb37c)
ci: probe the device and wait for udev

When we are done creating the partitions it's good to give the kernel
some time to reprobe the device and for udev to finish syncing up.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 38e475601b887d7d2117a6344113a171535698f1)
ceph: osd pdb reconciler changes

-creates a single PDB (max-unavailable=1) for all OSDs.  This PDB allows one OSD to go down at a given time.
-When a drain is detected, blocking PDBs (max-unavailable=0) will be created for each failure domain that is not being drained and the main PDB (max-unavilable=1) will be deleted. This will allow all the OSDs in the currently drained failure domain to be removed while blocking the deletion  of OSDs in other failure domains.
-Once the PGs are healthy again, the blocking PDBs will be deleted and the main PDB will be restored.
-Add PG healthcheck timeout
-Delete any legacy node drain pods and blocking OSD PDBs

Signed-off-by: Santosh Pillai <sapillai@redhat.com>
(cherry picked from commit 8602b9c1167f3ba6a03f9f3734bb1904f8245370)
ceph: update cephcsi to latest release

updating cephcsi to v3.1.2 which is a latest
bugfix release.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit ca3e23853e3173c65079231ade0f467425ac62ac)
build: update release version to v1.5.1

For the patch release we update the version to v1.5.1

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.5.1 is a patch release limited in scope and focusing on small feature additions and bug fixes.
Ceph
Ceph-CSI updated to the latest v3.1.2 by default (, @Madhu-1)
PDBs for OSDs redesigned to allow multiple nodes in a zone to drain (, @sp98)
Snapshot scheduling for mirrored pools (, @leseb)
Restore mon clusterIP if the service is missing (, @travisn)
Multus support for CSI in a non-default namespace (, @rohan47)
Add external cluster script to the toolbox (, @leseb)"
"ceph: fix cluster.yaml example

Uncomment the `cleanupPolicy:` so that the file can be injected.

Closes: https://github.com/rook/rook/issues/6762
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit f2bfb094f9e4f6c20546b6d4cea11a2471450958)
docs: replace the broken addresses of the doc

Replace the old links which were broken.

Signed-off-by: aisuko <urakiny@gmail.com>
(cherry picked from commit 5ccde7691cc43c1f9bc74dadfa003d8964ab0f2c)
ceph: ability to set external services ports

When the cluster is external we want to expose manager service port
along with the endpoints.
This allows us to connect but Rook will keep on using 9283 as a facing
port for Prometheus and more.

```
monitoring:
  enabled: true
  ...
  ...
  externalMgrPrometheusPort: 9283
```

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 8aaff235bbdf2264949145fad6804dea3865d873)
ceph: fix New node is not provisioned when useAllNodes: true

Signed-off-by: Stefan Haas <shaas@suse.com>
(cherry picked from commit a6ee5657aeeee505964fe263b21b974426921891)
Revert ""ceph: update object bucket provisioner library""

This reverts commit 3b4ee6c8e3af5fe5f2a5f27fca1e045da7e319e8.

Revert the fix that introduces the following bug on upgrade:
https://github.com/rook/rook/issues/6767

This fix as well as a fix for the upgrade case will follow in days to
come.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 22cd1bf0f285505b805ed82f9c6020bf74c8f0be)
ceph: add objectBucketName to OBC CRD manifests

If this property is present, this should fix some of the
first-time-creation issues with OBCs reported in bug.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit e6ba1b469d3d7f0109f174e02b0238a54836a4f8)
ceph: add a missed cleanup item in obc provisioner

Add a cleanup item to remove user if it fails on S3 agent creation.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 3fe61c115eafbce959577a6df1a19677c06c5d8c)
build: update manifest versions to v1.5.3 for the release

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
build: add missing junit line to go.sum

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit e7ac118dd41781d2164be78237024b72ee0dd0f9)","Improvements
Rook v1.5.3 is a patch release limited in scope and focusing on small feature additions and bug fixes.
Ceph
Buckets from OBCs were being deleted when upgrading from v1.5.1 to v1.5.2. The related change was reverted, with bucket handling delayed until the next release. (, @BlaineEXE)
Adding a new node to the cluster was not automatically triggering adding of new OSDs (, @shaas)
Ability to set the prometheus port for external clusters (, @leseb)
Fix cleanupPolicy schema error in the cluster.yaml example (, @leseb)"
"osd: prepare job needs significant more memory for provisioning

The OSD creation may need to burst during OSD provisioning depending
on the size of the OSD or similar factors. If the OSD prepare job is
OOM killed it will cause OSD provisioning to fail and have various
side effects that are difficult to troubleshoot to get the OSD
to succeed. So we increase the recommendation significantly to avoid
the OOM kill.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 92c52c4a2eb9b380f536c868b556bb3d3482db88)
mgr: set the public dashboard port differently from the target port

If the port is greater than 1024, for backward compatibility the port and
targetPort should be the same value. If the port is less than 1024,
the internal port must use a higher port number. In that case, the internal
port will be the default port numbers and only the public port will be
the desired port in the cluster CR.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit f79ff42e0cbc5c7aee1163dc13a9961b9b30d300)
osd: recommend removing memory limits from osd prepare job

The osd prepare job is not recommended to have memory limits since
it's a one-time operation depending on the size of the disk that must
be allowed to complete successfully.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 4a86012eadbc2b7da932fcdf3f02b06269c35d2e)
build: update the release version to v1.9.12

For the patch release we update the docs and examples to
v1.9.12

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.9.12 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
helm: Remove memory limits from osd prepare job to prevent provisioning failure of large disks (, @travisn)
mgr: Set the public dashboard port differently from the target port (, @travisn)"
"osd: add NixOS specific PATHs

This commits makes Rook usable on NixOS.

NixOS system holds ""installed"" binaries in `/run/current-system/sw/{bin,sbin}`.
The only binaries residing outside those paths are `/usr/bin/env` and `/bin/sh`.

I got a suggestion on Slack to simply add those NixOS specific paths

Signed-off-by: Krzysztof Nazarewski <3494992+nazarewk@users.noreply.github.com>
(cherry picked from commit 352df4e62fb5f69a133254bb8b914e9463b0b08e)
ci: update golangci linter version

update golangci linter version

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 0cdb32a40333cff940b5fc84b5afd2c3a62c11b4)
core: fix golangci linter

fix golangci linter

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 24802c559eb891ea0bd4e4cec3dc54eec932e25a)
docs: update the s3 client example for accesing RGW

Couple of modification to existing example for s3 client regarding how
to access the ceph object store. Added details to fetch the
`BUCKET_NAME`, updated the `AWS_ENDPOINT` and `AWS_HOST` details.

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit 7f8dcb4c5d85333b5beac3cbd989380da2d16cc6)
docs: fix design doc link

In the development section some
links where not working so fixed them

Closes: https://github.com/rook/rook/issues/10007

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit d0c47589f4dc6bd1e9d93ded55685266a8c926cb)
docs: add missing references to branch name script

The script to get the branch name was not being imported
on several doc pages, causing any links using
{{ branchName }} to be broken on those pages.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 82125ddf4003a4c5f37afa09c17b19e627f71138)
monitoring: only set prometheus rules ownerref in same namespace

The ownerref of the prometheus rules should not be set if in
a different namespace than the cluster CR.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
osd: only set kek to env var on encryption scenario

There is a corner case where an env variable populated with the prepare
job could influence and trigger some encryption code. We have an env
variable to discover whether the prepare job will encrypt a drive or not
so let's use that instead of running code as a noop and sometimes
trigger a corner case. In this scenario, the prepare job had an ""IBM_""
env variable present in the OS image (IBM OS) so the setKEKinEnv()
  function would get called for no reason.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 6bc7827150da5249a56bf7c10bc32c20ef23ee45)
helm: add ingressClassName field

Add support for .spec.ingressClassName field

Signed-off-by: log1cb0mb <nabeelnrana@gmail.com>
(cherry picked from commit be905e6d6c0079e9cce2cd0cc0d8a33f398f787b)
build: update release version to v1.8.9

Update the docs and example manifests for the v1.8.9 release.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.8.9 is a patch release limited in scope and focusing on small feature additions and bug fixes to the Ceph operator.
helm: Add ingressClassName field (, @log1cb0mb)
monitoring: Only set prometheus rules ownerref in same namespace (, @travisn)
osd: only set kek to env var on encryption scenario (, @leseb)
docs: Update the s3 client example for accessing RGW (, @thotz)
osd: Add NixOS specific PATHs to check for lvm2 (, @nazarewk)"
"ceph: override default values in liveness probes

this commit set default values or allow overriding of liveness probe
fields if that individual field is 0 or nil.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 4ef4be019bb40494b45da21221bd8230bdfb9553)
ceph: fill up endpoint for cephobjectstore user

Currently endpoint is filled from `Status.Info[""endpoint""]` string map for cephobjectstore user's secret and
have two issues:
1.) endpoint is nil and only secureendpoint is available
2.) Chance of small race window in which endpoint is not filled before this ceph object user is handling.

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit b836aab13e990eeeee377db078535ddb028aff8c)
ceph: minor bugfix with multiple filesystems

The multiple filesystems parameter needed to be quoted for kubernetes to accept the parameter, without quotes the environment variable is rejected.

Signed-off-by: Tom Hellier <me@tomhellier.com>
(cherry picked from commit 2e505d7439a374fbbe457f0db97dbf7400f71913)
ceph: embed error in return

We were missing the error.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 4e0820f490f5d9054f5b3ffb71934c600425a877)
docs: use -o jsonpath in ceph-object.md

Avoids use of grep and awk.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 2e992db10c86fd14bc370ca39f497279b52c3b43)
docs: fix crd finalizer instructions

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit c988db081c02345fff0d6b17e3b73497333ee67a)
ceph: create new osds on pvc before update existing

Add a new OSD provisioner status (reported by provisioner configmap)
that denotes that an OSD is preexisting and that OSD prepare does not
need to be run for the OSD. This only applies to OSDs on PVC currently
where existence of a deployment for the OSD indicates no further
provisioning needs to occur. New status is ""preexisting"".

Allow creating new OSDs on PVCs before updating existing ones by
allowing deferring OSDs during processing of OSD provisioning status
ConfigMaps. Deferral is identified by new ""preexisting"" status.

Add a unit test to ensure OSD on PVC provisioning occurs as expected
including deferring already-created OSDs to be updated after new PVCs
are created.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit a95734160e808d5536d55d7f0b3f2c0db967e07f)
ceph: do not override existing keys

If the cluster was expanded we would iterate over the entire list of
OSDs again, create a new key and override in Vault... The Secret store
is not impacted since we have a handler for ""already exist"".

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 9a604640ac95e4a08e53682faecdc8b65424fae4)
ceph: helm update variable enableCephFSSnapshotter

this commit removes the casing error in helm.
`enableCephFSSnapshotter` in `values.yaml` does not
match the casing `enableCephfsSnapshotter` in `deployment.yaml`.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 93309bc492a6242f9545da1df909b1436f78b724)
ceph: add tolerations for all daemons to the cleanup job

The cleanup job will need to run wherever the ceph daemons
were running. The scheduling is done by rook on the specific
nodes where the daemons were running, so there is no need for
other placement such as node or pod affinity.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 8ce98c4b726e0c49aa6365c507407a8920dc15b4)
ceph: revert fail if mgr prometheus is not default

This reverts commit 1ed307cb0991dfd716bce471c8f88e6a11b7def0. In
8aaff235bbdf2264949145fad6804dea3865d873 we have introduced the ability
to set a specific monitoring port so the block that fails if the port is
not the default 9283 is not needed anymore.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit e99c1220383e8d8494b4966dc169a4e36bf39b2b)
ceph: fix typos in ob doc

`phase` field name is not capitalized and its values are capitalized.
Here is an example.

```
apiVersion: objectbucket.io/v1alpha1
kind: ObjectBucketClaim
...
status:
  phase: Pending
```

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 70a5d15560af74f08221fb231c9239ae3474cd68)
ceph: rados pool namespace is optional for nfs deployments

There is no need to validate rados pool namespace, it is optional[1]. And if in
case rados namespace is not specified, it is appropriately handled.

[1] https://github.com/nfs-ganesha/nfs-ganesha/blob/next/src/doc/man/ganesha-core-config.rst

Signed-off-by: Varsha Rao <varao@redhat.com>
(cherry picked from commit 7a4ebbef0ed886e9c4352e0d999f936a0a34c788)
docs: include doc script for referencing github branches

The links from the documentation to github need to use the
branch name in order to point to the correct path. The docs
should reference a common script that will parse the branch
name instead of copying the script contents to all the docs.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 99ffc4f5bfd0033add3a808c1b4579f976ca0839)
ceph: add ceph archive cmd in osd removal

Add ceph archive cmd in osd removal for
Silencing the warning when osd is removed.

Signed-off-by: crombus <pkundra@redhat.com>
(cherry picked from commit 76ed166e86de3da532b137a9cd051d69f9ec92b3)
docs: delete 'rootPath' in cephfs storageclass yaml

The pre-provisioned volume or static-PV support in cephfs-csi has changed.
Delete 'rootPath' field which is no longer used

Signed-off-by: Jinhong Kim <hookak25@gmail.com>
(cherry picked from commit f519323524e676e39a24cb025811984863924890)
ceph: do not merge nodeAffinity

we don't want to merge the node affinity if specified in both
storageClassDeviceSet and placement. Now, we are passing new
boolean argument in `ApplyToPodSpec` which will be false in
case of osd and prepare pods because we don't want to overlap
placement of osd on PVC's and non-PVC's.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 6158b6608c16862b2bc790c5e6a940c75bb94e6a)
ceph: update placement in case of osd on pvc

this commit update placement for osd on pvc.
Earlier it was applying storage deviceset
prepare osd Placement(if applied or else
spec.placement.prepareosd).
Now it will apply storage deviceset osd placement
(if applied or else spec.placement.osd).

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit b20a7f13ee65512c06ce7958d99ccd43768a1b43)
ceph: enforce portable osds in same topology as osd prepare job

The osd prepare job detects the failure domain for the OSD by querying
the node topology labels. This topology is then assigned to the OSD
daemon in the CRUSH map. Previously, the affinity was required to be
set in the cluster CR, but it was very difficult to get right. Now the
operator will enforce the correct topology label on the OSD daemon
nodeAffinity by setting the label of the lowest topology in the hierarcy.

For example, if there are region, zone, and rack labels, the rack label
would be used to set the node affinity for the OSD daemon. If an
OSD prepare job is run in rack1, the corresponding OSD daemon will
have node affinity to rack1 to ensure the same topology. Previously,
the OSD could have ended up in rack2 unless the storageClassDeviceSet
placement was very carefully crafted.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 291bf9e06158b7a9517fe6c6840c337001b4330c)
ceph: fix SIGSEGV when failing to get object store user

We shouldn't use `user.userID` if `GetUser()` failed.

Closes: https://github.com/rook/rook/issues/7278

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit c628a996c8b83f34d3ca0a454557d0ae24bd9508)
ceph: add ability to set pool quotas

This will allow setting ceph pool quotas in bytes and/or objects.

Ceph documentation: https://docs.ceph.com/en/latest/rados/operations/pools/#set-pool-quotas

Signed-off-by: Frank Ritchie <12985912+fritchie@users.noreply.github.com>
(cherry picked from commit a0488dac73f0572a373549c810cb56d2ee7c54ee)
nfs: fix the number of containers displayed in documentation

Signed-off-by: Christophe Sauthier <christophe.sauthier@gmail.com>
(cherry picked from commit 53ccb1e1e4f01000c9ad4303250caaf6cfc269aa)
ceph: show error even in silent curl

The --silent option will remove the progress bar of the curl but also
silence any errors of stderr, so adding --show-error will display the
error even if --silent is used.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 069ff22d53af8e102a05062fef1920f6877e86ed)
ceph: do not use curl ca-cert for signed certificates

cURL's ca-cert and Golang TLS config for ca-certs have a different
meaning, it seems that the Golang implementation will always lookup the
local certs first and then proceeds with the specificed cert, if the
system's certs works it will never go to the specificied certificate.
cURL however, does the opposite by strictly checking the specified cert.
If the certificate is signed we don't need to force a specific
certificate, thus by using capath instead we let cURL determine what's
best to validate against.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 4b8ec15b69f236652a208450a532b366dbd69cb8)
docs: more network troubleshooting details for mons

Forming mon quorum is one of the most common issues to
troubleshoot when starting a new cluster, whether it is the
network configuration or the previous install was not
cleaned properly.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 64a3558d0845aa9f3a193471dddc33a64daf2872)
ceph: removed code for force delete mon and osd pods when stuck

removed the code for force delete pods when stuck in terminating state
for mons and osds as there is common code to delete pods for stuck components

Signed-off-by: rohan47 <rohgupta@redhat.com>
(cherry picked from commit 79ff3218bf3788925384b590bf8a3c132ca83ed7)
ceph: added additional labels for pod filtering

Added some additional labels for pod filtering.
added missing field selector for node.

Signed-off-by: rohan47 <rohgupta@redhat.com>
(cherry picked from commit 3e6d37cca1c4bc3eab179f451261c428a72b54c7)
ceph: fix flaky OSD on PVC unit test

This was a race condition where the test would sometimes finish before a
deferred watcher.Stop() command was called and sometimes would not.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 98466d47063f11d5374f71d3593d213a408980e6)
ceph: update build and examples to use v15.2.9

There are still references to v15.2.7 in integration tests to allow
testing OSDs on partitions.

The newest dated Ceph image is ceph/ceph:v15.2.9-20210224

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 818342cbfb04c90d5082e1f8f78e03b2ef3c0565)
build: update release version to v1.5.8

The patch release version is now v1.5.8

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.5.8 is a patch release limited in scope and focusing on small feature additions and bug fixes.
Ceph
Update operator and example manifests to use ceph/ceph:v15.2.9 (, @BlaineEXE)
Consistently force delete Rook pods on unresponsive nodes (, @rohan47)
OSD encryption improvements with Vault (, @leseb)
Ability to set pool quotas in bytes or objects (, @fritchie)
Fix SIGSEGV when failing to get object store user (, @satoru-takeuchi)
Enforce portable OSDs in same topology as osd prepare job (, @travisn)
Do not merge nodeAffinity for OSDs between device sets and non-device sets (, @subhamkrai)
During OSD removal archive crash dumps (, @crombus)
Add tolerations for all daemons to the cleanup job (, @travisn)
Helm fix for casing on enableCephFSSnapshotter (, @subhamkrai)
Do not override existing Vault keys for encrypted OSDs (, @leseb)
Create new OSDs before updating existing OSDs (, @BlaineEXE)
Helm fix to allow multiple filesystems (, @TomHellier)
Add the secure endpoint to the object store user CR status (, @thotz)
Set default values to allow partial override of liveness probes (, @subhamkrai)"
"core: add KeyRotationSpec to cephcluster CR

This commit adds KeyRotationSpec to cephcluster CR
to support encryption key rotation feature.
If enabled Rook will create a cronjob for each
encrypted PVC based OSD with given schedule set
to rotate their respective key encryption key.

Signed-off-by: Rakshith R <rar@redhat.com>
(cherry picked from commit 46dd2eb5ffe2464787ed9cba0b4acdde62e1d147)
osd: add util functions to support encryption key rotation

This commit adds util functions to support encryption key rotation
such as RemoveEncryptionKeySlot, AddEncryptionKey and
ensureEncryptionKey.

Signed-off-by: Rakshith R <rar@redhat.com>
(cherry picked from commit 973723cbdd95d84005197457f541604fdfbac672)
osd: add support for updating secret for default KMS

This commit adds support for updating secret for default KMS.
This is required for encryption key rotation.

Signed-off-by: Rakshith R <rar@redhat.com>
(cherry picked from commit b41fdfbb62265d3850b170993d24be9dcdb67c44)
osd: add rotate-key functionality to rook's key-management cmd

This commit adds functionality to be able to rotate
key encryption key of encrypted PVC backed OSDs.
Necessary changes such as adding update functionality
to kms and rbac changes are made as well.

Signed-off-by: Rakshith R <rar@redhat.com>
(cherry picked from commit 71e011f731a6127dda4cefbe9be3b979f5e67f93)
osd: add util function to create key rotation cron job

This commit adds util function to create key rotation cron job
such as getKeyRotationContainer, getKeyRotationCronPodTemplateSpec
and makeKeyRotationCronJob.

Signed-off-by: Rakshith R <rar@redhat.com>
(cherry picked from commit ef38aea2a4fcd8037eb7c59d8bd8b3280c58e2f8)
osd: add capability to reconcile key rotation cron jobs

This commits adds code to reconcile key rotation cron jobs.

Signed-off-by: Rakshith R <rar@redhat.com>
(cherry picked from commit f39a32fcdbd8a83693127686b0c6451aa2cb8671)
docs: add documentation for encryption key rotation

Signed-off-by: Rakshith R <rar@redhat.com>
(cherry picked from commit 340dbe05b4ab47ac168928cd079ad70f445ccc42)
ci: add test for key rotation

This commit adds test for key rotation.

Signed-off-by: Rakshith R <rar@redhat.com>
(cherry picked from commit b9fc9a643e3dd9af9097bfeba8628e6397e6c18b)
docs: clarify device class use on all pools

If the device class property is specified on any pool,
it must be specified on all pools so the pg autoscaler
will remain healthy.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 38981f26495ae5dc74a664ac1f7288235402ace0)
core: add missing labels in exporter deployment

Adding missing `ceph_daemon_id` & `rook_cluster` labels to the exporter deployment.
Signed-off-by: avanthakkar <avanjohn@gmail.com>
(cherry picked from commit e235e01fa146e98410128ffa281c399bf2b291ca)
ci: increase wait time for external cluster to be ready

Signed-off-by: Rakshith R <rar@redhat.com>
(cherry picked from commit cc72697f2a8f0f9373dc3cdc40944fb213735be2)
core: add fsid to the additionalPrinterColumns on cephcluster custom resource

Signed-off-by: xiaobaowen <xiaobaowen@deeproute.ai>
(cherry picked from commit df95c1add01311184aafd2e52c81d8d14093f59a)
csi: update port to 3300 if msgr2 is required

When msgr2 is required, ensure the mon endpoints passed to
the csi configmap are on port 3300. The mons will be
listening on both 6789 and 3300. Existing volumes can
continue using port 6789 while new volumes will use
port 3300.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 0484a3973fb1ef38b5cde39ef866993d5ed37d44)
manifest: add missing quote

Signed-off-by: Vincent Kling <v.kling@vinniict.nl>
(cherry picked from commit bd857cc5c5225eb1c9e9350d1a9503921cfff015)
nfs: add hostNetwork option for the ganesha daemon

Add a hostNetwork option for a Ganesha server.
This allows you to use host networking for the cluster but still
use regular pod networking for NFS Ganesha servers

Signed-off-by: Richard Bateman <taxilian@gmail.com>
(cherry picked from commit 0ca9da23e8630e1f659f6f7cf6a45c199aaaa8b6)
ci: temporarily skipping another platform to fix the build

temporarily skipping other platforms to fix the build since we are working on bigger changes to remove csv generation.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 1112e31511ef229fac0ca233cd13a8f13b00c43c)
osd: validate and remove duplicate topology

remove the duplicate topology added to the node,
and the priority to keep duplicate would be give to
the one who is lowest in the hierarchy

Closes: https://github.com/rook/rook/issues/11800

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit c22f5f36cb4c7b85fdb910288f121bb9f3913d19)
osd: remove deprecated k8s topology label

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 89764f03715d8fa9f383ea25c7407663759b13df)
rgw: don't validate objectstore lenght when cluster is external

validate the object store name only if it is not an external cluster
as external cluster won't create the rgw daemon and it's other resource
and there is some legacy external cluster which has more lenght of objectstore
so to run them successfully we are not validating the objectstore name

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 839f8d60ddb6a31e19294a367bec135e92bc6fd2)
ci: update golangci-lint version as it fails for some k8s version in 1.10

Closes: https://github.com/rook/rook/issues/11896

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 8e317ee074bd0cf6555b7c42e6403f713325cfb7)
external: pool and metadata ec pools were reversed in scripts

Pool and Metadata Pool Appear to be reversed.

dataPool needs to contain the EC Data pool
pool needs to contain the Metadata Pool
Closes: https://github.com/rook/rook/issues/11918

Signed-off-by: Matt P <dragon@fbdragon.co.uk>
(cherry picked from commit 8bdabf85a85693605e1124ca2c5dec4bc8eab5db)
rgw: allow the rgw dashboard to be disabled

The rgw dashboard can be disabled by the setting in the
CephObjectStore `gateway.dashboardEnabled` if set to false.

Signed-off-by: xiaobaowen <xiaobaowen@deeproute.ai>
(cherry picked from commit 253d4123f68353cabb4cdb9d4341733867e03218)
operator: use msgr2 if compression is enabled

Closes:
Signed-off-by: Thomas Way <thomas@6f.io>
(cherry picked from commit 891fdb3f77678ac094a9d94f2292ddadc97e8732)
operator: log ceph error in monstore

Closes:
Signed-off-by: Thomas Way <thomas@6f.io>
(cherry picked from commit ef60650f09ac01cc46f7e5737bdb121dd7038d8f)
external: use f-strings for formatting

Replace the old formatting method with the f-string
and fix few pylint errors

Signed-off-by: Sheetal Pamecha <spamecha@redhat.com>
(cherry picked from commit (6dbbc9d)
Signed-off-by: Sheetal Pamecha <spamecha@redhat.com>
core: set key rotation default in code instead of crds

The defaults in CRDs cause an update and trigger a new
reconcile if the value is not set. For the key rotation
setting, the default was only being updated when the kms
feature was enabled. This update was causing the reconcile
to fail in the kms tests. With the default now in code,
the default can remain empty and no cr update will trigger
a new reconcile unexpectedly.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit cd94ed7ddccd17c59b721189e8039b919b621fb7)
core: remove ceph-conf-dir volume mount from exporter

Remove the `ceph-conf-dir` volume and volume mount from exporter
as it's no more required to spin up exporter daemon

Signed-off-by: avanthakkar <avanjohn@gmail.com>
(cherry picked from commit 1a000673a432e77d08b690b2eeea851495e6e61f)
build: update release version to v1.11.2

For the patch release update the docs and examples
to v1.11.2

Signed-off-by: travisn <tnielsen@redhat.com>","Improvements
Rook v1.11.2 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
osd: Implemented encryption key rotation (, @Rakshith-R)
core: Remove unnecessary ceph-conf-dir volume mount from exporter (, @avanthakkar)
core: Set key rotation default in code instead of in CRDs (, @travisn)
external: Use f-strings for formatting (, @Sheetalpamecha)
core: Use msgr2 if compression is enabled (, @uhthomas)
ci: Skip building csv on arm64 (, @subhamkrai)
osd: Validate and remove duplicate topology labels (, @parth-gr)
rgw: RGW dashboard can be disabled in the object CR (, @thenamehasbeentake)
external: Pool and metadata EC pools were reversed in scripts (, @dragon2611)
rgw: Skip objectstore name length validation when cluster is external (, @parth-gr)
nfs: Network mode can be set separately for cephcluster and nfs (, @taxilian)
csi: Update port to 3300 if msgr2 is required (, @travisn)
core: Add FSID to the additionalPrinterColumns on cephcluster CRD (, @thenamehasbeentake)
core: Add missing labels in exporter deployment (, @avanthakkar)"
"osd: cleanup cluster using the root UID

We need to use the root UID to run the cleanup job since ceph-volume
does not support running as non-root in all the versions. We have this
ceph tracker to allow this https://tracker.ceph.com/issues/53511 but
it's not in all ceph's versions. Implementing a version check is tricky
since at this stage the cluster is being deleted and it's hard to catch
it.

Closes: https://github.com/rook/rook/issues/9375
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 1f7536ffab61308f45c7e50fbdc35a332135717e)
core: add context to k8sutil replicaset and secret

This commit adds context parameter to k8sutil replicaset and secret
functions. By this, we can handle cancellation during API call of
replicaset and secret resource.

Signed-off-by: Yuichiro Ueno <y1r.ueno@gmail.com>
(cherry picked from commit b6ce262e7ff608c97aecb1efbc000195f0b42f10)
core: add context parameter to k8sutil service

This commit adds context parameter to k8sutil service functions. By
this, we can handle cancellation during API call of service resource.

Signed-off-by: Yuichiro Ueno <y1r.ueno@gmail.com>
(cherry picked from commit 03e976b52c9e005a9908665165215d3c6801d090)
core: add context parameter to k8sutil endpoint

This commit adds context parameter to k8sutil endpoint functions. By
this, we can handle cancellation during API call of endpoint resource.

Signed-off-by: Yuichiro Ueno <y1r.ueno@gmail.com>
(cherry picked from commit d1d252c5c29e962ff7dbb711ea88fd79f2093d57)
core: add context parameter to k8sutil configMap

This commit adds context parameter to k8sutil configMap functions. By
this, we can handle cancellation during API call of configMap resource.

Signed-off-by: Yuichiro Ueno <y1r.ueno@gmail.com>
(cherry picked from commit 25f784194d6540b3c3f74dab6f485bfedbe06947)
core: add context parameter to k8sutil prometheus

This commit adds context parameter to k8sutil prometheus functions. By
this, we can handle cancellation during API call of prometheus resource.

Signed-off-by: Yuichiro Ueno <y1r.ueno@gmail.com>
(cherry picked from commit c6c8dca0a711743e12ff1521c9bdd0f63ede6afd)
core: add context parameter to k8sutil pvc

This commit adds context parameter to k8sutil pvc functions. By this, we
can handle cancellation during API call of pvc resource.

Signed-off-by: Yuichiro Ueno <y1r.ueno@gmail.com>
(cherry picked from commit 5352cf58a7c501078d52ae756d7d5d48b607f6f7)
core: add context parameter to k8sutil kvstore

This commit adds context parameter to k8sutil kvstore functions. By
this, we can handle cancellation during API call of kvstore resource.

Signed-off-by: Yuichiro Ueno <y1r.ueno@gmail.com>
(cherry picked from commit 0d8c581aa9fe8ae9d4d4b8f31ae5c97e44e8b1fa)
security: use correct osd tags for restricted caps

The create-external-cluster-resources.py with
--create-external-cluster-resources set to true
sets a wrong osd application tag. It should use
the fs name and not the fs pools.

Closes: https://github.com/rook/rook/issues/9227
Signed-off-by: Lennart Hagemann <lennart.hagemann@continum.net>
(cherry picked from commit 7507790375cd2ae261dcc9adf6ea4af7ad893fbd)
pool: file: object: clean up health checkers for force deletion

When CephBlockPool, CephFilesystem, or CephObjectStore resources are
deleted after removing their finalizer, the code path to stop monitoring
was not stopping monitoring since a non-present resource does not have a
name and namespace attached. When the object is deleted, ensure the
internal representation used to stop monitoring has a name and namespace
to fix the issue.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 0c76be8c38766d97140d4b2746f673eb8ee8362d)
pool: add rbd ec pool support in external cluster

Adding cli agrument `--rbd-metadata-ec-pool-name` to read
rbd ec pool name to support ec pool in external cluster
and also updating the json blob.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 22865815cf98e8af4357591e4c609e2c87c35d9e)
pool: update the failure domain of pool-ec file to host

Updating the failure domain of pool-ec file from
osd to host.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit fc88e4ff8edc6b91a8591803d0aacb55807c742a)
build: updating tini init command in direct mount toolbox

the tini have been removed but was still present at direct mount
used the bin/bash shell in place of tini

Closes: https://github.com/rook/rook/issues/9382
Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit bd3e558c2495cb2451a1e01ea20d80c19e862fce)

# Conflicts:
#	deploy/examples/direct-mount.yaml
build: update the securityContext of direct mount container

update securityContext to runAsUser: 0
so container can run as a root user

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit bc355c695e35efab4442daaa50fac806e2f17c35)
file: allow to create CephFS data pools with predefined names

Add an ability to create data pools for CephFS with predefined
names.

Related-Issue: rook
Signed-off-by: Denis Egorenko <degorenko@mirantis.com>
(cherry picked from commit 3ff681e81d04e492a7c7b90185e30496ea04bc0d)
helm: add optional monitoring RBAC to operator chart

An older version of the Helm chart always installed RBAC permissions for
enabling monitoring. In an effort to reduce the privileges Rook uses by
default, they were removed. We need to still include the monitoring RBAC
optionally since the change could break some users.

Co-authored-by: Mathieu Parent <mathieu.parent@insee.fr>
Co-authored-by: Blaine Gardner <blaine.gardner@redhat.com>

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit e3be7a30ba0836db9f96dbf05f2fd5b727e731ee)
mgr: run active-watch as root and privileged

For now, we must run the container with UID 0 and privileged for
multiple reasons:

* the rook binary writes ceph config to /var/lib/rook which is owned by
  root
* it's difficult to use /etc/ceph since it will conflict with the
  rook-ceph-override configmap AND is also owned by root since it's a
  mounted configmap.
* using /etc/ceph might be possible but has other issues with rook's
  exec package since the ceph config is built from /var/lib/rook

Closes: https://github.com/rook/rook/issues/9385
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 5c1e459a6a266f0660f05a0f2f2d5e6d8ac2ebc2)
mgr: add missing context to the active-watch sidecar

The context was not initialized and thus the configmap fetch will fail
with a nil pointer.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 892c9a211c79400bb3df3d91759d340c25d69c97)
pool: allow configuration of built-in pools with non-k8s names

The built-in pools device_health_metrics and .nfs created by ceph
need to be configured for replicas, failure domain, etc.
To support this, we allow the pool to be created as a CR.
Since K8s does not support underscores in the resource names
the operator must translate this special pool name into
the name expected by ceph.

This also sets the basis for allowing filesystem data
pools to specify the desired pool name instead of requiring
a generated name.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 7ee9cc9d5636670c9555c78199f73d461004f6c7)
test: only create replicated pools in ci

Creating an EC pool is causing the CI to hang when the EC
pool is initialized since there aren't enough OSDs to
satisfy the EC parameters.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 60cc67fed46b8087eb21c1a99006863a894bedfc)
mds: skip sanity check during upgrades to 16.2.7

The mons need to be configured to skip the mds sanity check
during upgrade to 16.2.7 or the mons may crash during that
upgrade.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 0c19f62df275dd0b0668635ec4a318bb3fb1ea71)
osd: add CAP_MKNOD to PSP

This commit adds CAP_MKNOD to PodSecurityPolicy to allow OSD-prepare job
creating pods under PSP-enabled Kubernetes cluster.

Signed-off-by: Yuichiro Ueno <ueno@preferred.jp>
(cherry picked from commit bae6351a39b287968a6dbae6a1b2aab70b1388dc)
build: update examples and manifests for v1.8.1

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>","Improvements
Rook v1.8.1 is a patch release limited in scope and focusing on small feature additions and bug fixes to the Ceph operator.
file: Allow CephFS data pools to be named. NOTE For existing filesystems, do not change the names of existing pools or new pools will also be added to the filesystem (, @degorenko)
pool: Allow configuration of the built-in pools: device_health_metrics and .nfs (, @travisn)
osd: Add CAP_MKNOD privilege to the PSP for OSDs daemons (, @y1r)
mds: Skip sanity check during upgrades to 16.2.7 to avoid mon crash (, @travisn)
mgr: Start the watch-active container with correct privs when multiple mgr daemons are running (, @leseb)
helm: Add optional monitoring RBAC to operator chart (, @BlaineEXE)
pool: Add rbd ec pool support in external cluster (, @subhamkrai)
build: Remove tini command from the direct mount toolbox (, @parth-gr)
pool: Clean up health checkers for filesystem and object store forced deletion (, @BlaineEXE)
security: Use correct osd tags for restricted caps with external cluster script (, @CO-lhagman)
core: Add context parameter to various k8sutil helpers (, @y1r)
osd: Run the cleanup job using the root UID (, @leseb)
Full Changelog: v1.8.0...v1.8.1"
"ceph: allow progressing status during integration test cleanup

The integration tests check after every test suite that the cluster is
either ready or connected. Sometimes the operator is in progressing state
because the reconcile may be triggered by some event that is unpredictable
at the end of the test. For test stability we allow the progressing status.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 1e111897a9c32af9d3e5c058c976ff51d7e3b34b)
ceph: during object store deletion return success if not found

If the object store is not found during deletion of the object store CR,
proceed with the deletion instead of blocking and re-queueing the
deletion reconcile in an endless loop. This was causing instability
in the integration tests.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit ea29665a8ac4e68d754bd93fdebd1ed7a5bbd57a)
docs: describe osd purge job in the document of OSD management

Describe `rook-ceph-purge-osd` job in the document of OSD management
to ease day2 operations.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 2d35703661089068a63c6e25d783d3fc4eade856)
ceph: add mon design to the official docs

The mon design and handling of failover is a topic that frequently
needs to be understood by rook users, thus moving this design doc
to the documentation and making some updates based on the latest
behavior.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit b71c3ac2939ad9f2432dc7bfaaff130355b74316)
ceph: exposing which node/osd is processing

it would be more firendly to cloud operators to
know which node is being processed during
upgrade

Signed-off-by: shenjiatong <yshxxsjt715@gmail.com>
(cherry picked from commit 0d80cc396d9f6a7fd42751a53f7022bf00c6e563)
ceph: delete discovery daemon if it is disabled

discovery-daemon still exists even if it's disabled.

Closes: https://github.com/rook/rook/issues/6936

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 1be47ea0b81cf203c2ef1c278da7f113a06ceb2e)
docs: updating nfs quickstart docs

The nfs quickstart docs have references to nfs-provisioner which no longer exist and the storage class example uses the wrong provisioner value.

Signed-off-by: Kieran Bristow (ZA) <kieran.bristow@absa.africa>
(cherry picked from commit 30214a4278c722c82b766da33943840e8768d53c)
ceph: fix osd corruption

Multiple OSD pods for the same OSD might run simultaneously becasue OSD pod
is managed by Deployment resource. However, OSD locking mechanism
doens't work because the lock file (fsid file) exist for each OSD pod.
It resutls in OSD corruption.

Closes: https://github.com/rook/rook/issues/6530

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit ae8dcf7cc3b51cf8ca7da22f48b7a58887536c4f)
build: switch to new aws buckets

Signed-off-by: Artur <artur@upbound.io>
(cherry picked from commit 0754695655d2785af319ff849b2d32a4fddea2b2)
ceph: add support to disable snapshotter sidecar

In some cases the user dont want to run snapshotter
container either for CephFS or RBD. In that case the
user wont install the required snapshot CRD's due
to that the snapshotter sidecar container produces
lot of noisy logs.
Snapshotter will be enabled by default for both
CephFS and RBD, but with this PR we are providing
an option to disable snapshotter sidecar deployment
either for CephFS or RBD.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 05c75b708424e95091cbd9a4180fb62406fd8a5c)
ceph: fix incorrect camelcase

Golang use camel cases, so localcephNFS should be localCephNFS.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit dff0a46a3518366ff6e03725ac933294ca6454dc)
ceph: update rbd-mirror when cluster is upgraded

The rbd-mirror was left being when the CephCluster was upgraded.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 47a02145e736b9928bf6b5fa7842b9209625f36d)
ceph: allowMultipleFilesystems in helm-operator

This change allows the setting of the ROOK_ALLOW_MULTIPLE_FILESYSTEMS in the helm operator

Signed-off-by: Tom Hellier <me@tomhellier.com>
(cherry picked from commit 5d6f4ef4d48766b2c60dc1d8a6a20958fbadb381)
ceph: remove the append flag when overriding

It looks like combining --append with --overwrite will cause duplicate
entries of our CRDs in the CSV definition. Removing the flag fixes the
duplicates.

Diff before and after the fix:

```
1118c1118
<     createdAt: 2021-01-22T11-07-27Z
---
>     createdAt: 2021-01-22T11-06-24Z
1126a1127,1159
>       - kind: CephBlockPool
>         name: cephblockpools.ceph.rook.io
>         version: v1
>       - kind: CephClient
>         name: cephclients.ceph.rook.io
>         version: v1
>       - kind: CephCluster
>         name: cephclusters.ceph.rook.io
>         version: v1
>       - kind: CephFilesystem
>         name: cephfilesystems.ceph.rook.io
>         version: v1
>       - kind: CephNFS
>         name: cephnfses.ceph.rook.io
>         version: v1
>       - kind: CephObjectRealm
>         name: cephobjectrealms.ceph.rook.io
>         version: v1
>       - kind: CephObjectStore
>         name: cephobjectstores.ceph.rook.io
>         version: v1
>       - kind: CephObjectStoreUser
>         name: cephobjectstoreusers.ceph.rook.io
>         version: v1
>       - kind: CephObjectZoneGroup
>         name: cephobjectzonegroups.ceph.rook.io
>         version: v1
>       - kind: CephObjectZone
>         name: cephobjectzones.ceph.rook.io
>         version: v1
>       - kind: CephRBDMirror
>         name: cephrbdmirrors.ceph.rook.io
>         version: v1
```

Co-authored-by: Umanga Chapagain chapagainumanga@gmail.com
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 330d0e90a59b6f32ebf11f1032e31f53f066c91a)
docs: expectations for storage provider development

The expectations for storage provider development are now
set forth for joining Rook and maintaining existing
storage providers. This will help ensure the longevity of
storage providers in the project and for the health of
the community.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 81c05524c1923c11372f4efd5d2b3c9008aac68f)
ceph: update rgw and mds deployment for logCollector

If the CephCluster CR spec is updated to activate the logCollector, we
must reflect that change onto child CRDs, like the mds and rgw since
their configurationn would be impacted too.
Now we watch for the CephCluster object changes from the object/file
controllers and react upon the appropriate event.

Closes: https://github.com/rook/rook/issues/7022
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit ebbf332d8dbf1cbf82c9e591fc0fb59d430fa7c5)
ceph: set ProgressingCompleted CephCluster status condition type

Set ProgressingCompleted CephCluster status condition to include type cephv1.ConditionProgressing

Closes: https://github.com/rook/rook/issues/7055
Signed-off-by: ron1 <ron18219@gmail.com>
(cherry picked from commit 1e64b82b64473cdcc5cfd3dd6a6f5d2fcdd3ae3b)
ceph: allow removal of arbitrary osds on pvcs and simplify pvc names

OSDs on PVCs previously were always replaced with PVCs of a given name.
For on-prem scenarios where the OSDs might need to be removed instead
of replaced, the operator now allows holes to exist in the PVC index
names as long as there are a sufficient number of PVCs to meet the
criteria for the deviceSet.count.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 4b43e7afa5ab511b8a509cd174431818388bdad3)
ceph: add option to set FSGroupPolicy for CSI PVC

in kubernetes 1.19 it added a support to set FSGroupPolicy
in the csidriver object, same supported is added to both
CephFS and RBD. where user will have an option to set
the FSGroupPolicy for CephFS and RBD separately.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit e305810bf0b3d586702f9b29f0260efc8c56a1e0)
ceph: consistently order the osd args to avoid restarts

The settings for tuneDeviceClass and tuneFastDeviceClass were
stored as a map[string]string. When iterating over the map to
append the args, the args were being appended in an unpredictable
order. The order could change every reconcile, resulting in an
unnecessary OSD restart potentially every reconcile. Now we iterate
over a slice that will be ordered predictably and ensure OSDs
will not be restarted when not needed.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 570cba9b4edfeb629aa212b5a04b257fa30a00d5)
ceph: prevent operator crash with host networking and mon not found

When the node is not found for mon assignment with host networking
enabled, the operator may crash. This change ensures the node is
not nil and returns an error instead of crashing.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 5cf3338bcd1cbcf9f7e61fd8ca7db4aea5696144)
ceph: fix mds liveness probe

Previous patchset does not work before, because
`ConfigureLivenessProbe` does not directly modifies
input variable.

Signed-off-by: ushen <yshxxsjt715@gmail.com>
(cherry picked from commit 9bd2150d5e67c5d4dddfa56173b9680657da9d09)
ceph: configure health check timeout for OSDs when upgrading

added waitTimeoutForHealthyOSD in the cluster crd that defines the time (in minutes) the operator would wait before an OSD can be stopped for
upgrade. This PR also removes the ok-to-continue logic for osds as its already handled by ok-to-stop. The default value is 10 minutes.

Signed-off-by: Santosh Pillai <sapillai@redhat.com>
(cherry picked from commit 4237aa7ecc953056eff61f1eb249a3ca999e46fb)
docs: remove obsolete doc for handling rebooting nodes

The approach to handle node restarts has been much improved since the
creation of this doc, with the new approach to drain nodes and
for the application to control the restarts with the pod disruption
budgets. We now remove this obsolete documentation and recommend
the PDBs to be configured.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit ac6bbe5902505d42be35309c36d581684f75a009)
ceph: only commit the maxmonid after starting a mon daemon

The maxMonId should only track the mons that have been committed to starting.
Currently the maxMonId was tracking all mon scheduling. If the reconcile
was aborted or failed, or the operator restarted in a reconcile, the
maxMonId was being reset by analyzing the mon deployments that existed.
This does not work for scenarios where mon quroum is lost and being
reset to a single mon. Now the maxMonId will only be incremented
when a mon daemon is started, and will never be decremented after
that to ensure that new mons will be incremented to the next id.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 4fa3c04e443c54b5bd5c9a4d4c0f9c17406a36ca)
ceph: add --public-addr args to ceph mds command

add --public-addr=<podIP> args to ceph mds command when host network is not enabled.

Signed-off-by: Santosh Pillai <sapillai@redhat.com>
(cherry picked from commit 5831c0f0d050b63e4b491b9aff3ddde3beb7fd17)
build: update manifest versions to v1.5.6 for the release

With the release the versions are now updated to v1.5.6.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.5.6 is a patch release limited in scope and focusing on small feature additions and bug fixes.
Ceph
Add option to set FSGroupPolicy for CSI PVCs (, @Madhu-1)
Add --public-addr argument to the MDS daemon (, @sp98)
Only commit the maxMonID after starting a mon daemon for mon disaster recovery (, @travisn)
Allow specifying timeout for waiting for an OSD to upgrade (, @sp98)
Prevent operator crash with host networking and when the node is not found (, @travisn)
Avoid unnecessary OSD restarts by consistently ordering the pod spec args (, @travisn)
Allow removal of unhealthy OSDs on PVCs (, @travisn)
Fix ProgressingCompleted CephCluster status condition type (, @ron1)
Enable the log collector for RGW and MDS if desired (, @leseb)
Update the RBD mirror daemon(s) when the cluster is upgraded (, @leseb)
Ability to configure multiple filesystems in the helm chart (, @TomHellier)
Allow disabling the snapshotter sidecar container (, @Madhu-1)
Avoid potential OSD corruption with a file lock on the host (, @satoru-takeuchi)
Delete discovery daemon if it is disabled (, @satoru-takeuchi)
Expose in the CephCluster conditions which OSD is being processed (, @jshen28)
During object store deletion return success if not found (, @travisn)"
"docs: add provisioner prefix namespace comment in ceph csi examples

Signed-off-by: Unai Arrien <unaittxu@gmail.com>
(cherry picked from commit f6087b280aba651f1c29bac705126359845aee52)
ceph: removed the storage provisioners usage rules

In the interest of having the metrics avaliable generically for all the storage provisioners and just not ceph, the superseding metrics will be added to Openshift directly. Thus these metrics wont be required in rook.

Signed-off-by: Anmol Sachan <anmol13694@gmail.com>
(cherry picked from commit c35f31bcf2f01624c9c6de35df2c98f8bc9d717a)
ceph: fix healtcheck for external cluster

For external cluster, it is not an issue to have a mon count set to 0
since Rook is not deploying/managing the monitors.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit f66473a8f8ac65f4f0dbb04ee8cc7b3570f487bf)
ceph: adding ability to specify crushroot in the CRD

Previously we did not supported defining crushRoot in some of the CRDs. With this fix, we plan to fix this behaviour.

Signed-off-by: mridulv <mridulv09@gmail.com>
(cherry picked from commit 30cd78630336c388732df2f721fb56c54c3d64a6)
ceph: fix psp clusterrole name for helm chart

With the removal of aggregate roles from the ClusterRole specs, the
psp:rook clusterrole was mistakenly removed. Now we rename the clusterrole
properly so the operator will be granted privileges as expected for psp.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit d5672595ae3fbd0682806b3ca33bbe12f0cce766)
docs: fix clean policy confirmation of ceph-cluster-crd

Make the document of cleanup policy clearer.

Signed-off-by: Takashi IIGUNI <iiguni.tks@gmail.com>
(cherry picked from commit 0e86a5a0c42d16948f2ae77e639b5fb49b7bdc0d)
docs: clarify running privileged with selinux

The operator setting ROOK_HOSTPATH_REQUIRES_PRIVILEGED is expected to be true
when selinux is enabled, not just with openshift.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit f710b79d400fc05cff845c5ef893ad1b0ea0e9d2)
ceph: test cluster settings for mon failover interval

For test scenarios, add the settings to the example for mon health checks
so it is simpler to test the failover.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 67b8491d2cfedda286fae56365fedbb2cd722af7)
ceph: handles an user creation error if the store is missing

Currently if object store is missing user creation fails without throwing
any error. Here the access and secret key values will be checked post the
creation command

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
ceph: add support to create system user for createuser api

Currently this is no way to create user with system permission in objectstore.
Add support for the same

Signed-off-by: Jiffin Tony Thottan <jthottan@redhat.com>
ceph: enable/disable dashboard for rgw

Provide permission for dashboard to collect the object store metrics.

Signed-off-by: Jiffin Tony Thottan <jthottan@redhat.com>
ceph: add support for wal device for OSD on PVC

Based on the feature of metadata PVC for OSD:, add the wal device.

For this, you need to create a new volumeClaimTemplates, its name must be ""wal"", if ""wal"" is
set, ""metadata"" device will refers specially for block.db device, and ""wal"" refers for block.wal
device in BlueStore.

A template will look like this:

```
volumeClaimTemplates:
- metadata:
    name: data
  spec:
    resources:
      requests:
        storage: 10Gi
    # IMPORTANT: Change the storage class depending on your environment (e.g. local-storage, gp2)
    storageClassName: gp2
    volumeMode: Block
    accessModes:
      - ReadWriteOnce
- metadata:
    name: metadata
  spec:
    resources:
      requests:
        storage: 6Gi
    # IMPORTANT: Change the storage class depending on your environment (e.g. local-storage, io1)
    storageClassName: io1
    volumeMode: Block
    accessModes:
      - ReadWriteOnce
- metadata:
    name: wal
  spec:
    resources:
      requests:
        storage: 6Gi
    # IMPORTANT: Change the storage class depending on your environment (e.g. local-storage, io1)
    storageClassName: io1
    volumeMode: Block
    accessModes:
      - ReadWriteOnce
```

We now map block, block.db and block.wal directly inside the container instead of
running ceph-volume activate.

Signed-off-by: Chen, Tingjie <tingjie.chen@intel.com>
(cherry picked from commit 0e87348093f36e6c70eb985455dfc189d8467ec2)
ceph: add missing crds in csv

The newly object store CRDs were missing from the CSV.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit ec58092778b20db21fcd6e2ab0413628cd0a57a7)
ceph: fix lint on python script

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 5c85640037febf93f909b10db3b55d74477724d0)
ceph: do not validate default.rgw.buckets.index

This pool is not present when this is no bucket yet. So we don't need to
validate its presence.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 0c8d20ffb48fdb8649207468f105d6941d23e015)
ceph: replace service account names properly in the CSV

The CSV generation needs to be patched with the correct service account names
for the correct RBAC to be generated.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 65fb4819bc8932ea93989b89ef404fedd2972101)
ceph: mon failover should scale down failed mon first

When a mon is failed over, the new mon is started before the old mon
is removed from quorum and purged from the cluster. If the mon has
anti-affinity, in small clusters or specific toplogies where sufficient
nodes are not available, the new mon may be prevented from starting simply
because the dead mon pod still exists. To ensure a clean failover, the
dead mon pod must first be stopped before the new mon is started.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit d7a83107b60ab6d11c024ea5fbba7fb14eb87e21)
ceph: add octopus validation for pvc encryption

The c-v encryption is part of 15.2.5 on Octopus.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 7d6974b9b7e1de9ee56c36474521d40f537b39a8)
ceph: add support for encrypted metadata pvc

Now the metadata pvc will also be encrypted if the storageClassDeviceSet
has the ""encrypted"" flag turned on.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit a91c96cb472ab4ac8f695d3545f1d1e973d238ac)
ceph: use callCephVolume() to list osds

Small refactor to use the common function helper callCephVolume() to
build ceph-volume arguments.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 9738c2ba21f07a1135ba5b726a6caf45a8740201)
ceph: do not list on empty device

If the device is empty let's not use an empty space as an argument for
the c-v call.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit f75a6e9d930eb4c8c8fccfee1113c253a585e3cb)
ceph: return cv debug logs

So that the operator can print it.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit dd2166b105e54a80cf724bbf1f14f5738c906e98)
ceph: check channel is open before closing

to avoid operator panic we should check the channel
is open before closing as a safety measure.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 52c2ac3620260e3790e55857085a3049adfcb12b)
core: initialize merged annotations when empty

Applying annotations was crashing when there were no annotations in the
original map. Now the map is initialized when no annotations are set
in the original map.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit b3355454dc0d64588d5ff909687083ac54c3b73b)
core: move annotations helper into test code

The helper to convert annotations to a string map is not needed in the
production code, so it is moved to the unit tests.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 820852268d39f1266a191ef2002605e70fd1c9ce)
ceph: use different command for lvm2 presence

Older versions of lvm do not implement ""--help"" but ""help"" only where
new versions support both so let's use ""help"" so the check works for all
the versions.

Closes: https://github.com/rook/rook/issues/6057
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit db71d38a5e8f54014ad2dae400f80784d63a18d8)
ceph: check for gone node on crash collector

If a node is gone, we try to remove crash collector deployments so they
don't stay stale or pending. We must ensure the node is gone and not
just return an error even if we successfully deployment the orphan
deployment.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit acc5ba1a6b69ec6ec3c8f691dccd79d901256a2b)
ceph: add cephfs snapshotter rbac for the cephfs provisioner role

Signed-off-by: Humble Chirammal <hchiramm@redhat.com>
(cherry picked from commit f2af549371182eb938be1f6219663f74a295e6a1)
ceph: add csi-snapshotter sidecar to cephfs deployment

Signed-off-by: Humble Chirammal <hchiramm@redhat.com>
(cherry picked from commit dacc013cc9e8acc6a94c4a65a8b29302719563b6)
ceph: add cephfs examples yamls for restore,clone and snapshotclass

Signed-off-by: Humble Chirammal <hchiramm@redhat.com>
(cherry picked from commit a795ff01e0bd608d178e4ab4697eea6f642c3653)
ceph: add cephfs snapshotter rbac to cephfs provisioner role

Signed-off-by: Humble Chirammal <hchiramm@redhat.com>
(cherry picked from commit 801b2a58528d390c29fbcf9b41f6ac43d73699d2)
ceph: update e2e manifest for cephfs snapshotter sidecar

Signed-off-by: Humble Chirammal <hchiramm@redhat.com>
(cherry picked from commit 6613b3a9e957e653c88487e1aad4f289a778e92e)
ceph: add rbac for cephfs provisioner in 1.3-upgrade template

Signed-off-by: Humble Chirammal <hchiramm@redhat.com>
(cherry picked from commit cbc41a8ebab4851890db80536d6a5e93a87e3ec7)
ceph: update csi image version to 3.1.0 in spec.go

Signed-off-by: Humble Chirammal <hchiramm@redhat.com>
(cherry picked from commit 903fcdb778716c2aa964cfe6f072cd366b30048c)
ceph: add snapshot create/delete and restore doc for cephfs

Signed-off-by: Humble Chirammal <hchiramm@redhat.com>
(cherry picked from commit 97a328309936692d619c70eec08f452b1fb216eb)
build: set the manifest version to v1.4.1

With the patch release we update the vesrions to v1.4.1

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.4.1 is a patch release limited in scope and focusing on small feature additions and bug fixes.
Ceph
Integrated Ceph-CSI 3.1 with CephFS snapshotting and cloning. To enable this feature, if you had already updated to v1.4.0, re-apply upgrade-from-v1.3-apply.yaml in the upgrade guide. (, @humblec)
Enabled encryption of metadata OSDs on PVCs (, @leseb)
Fix psp clusterrole name for helm chart (, @travisn)
Mon failover should first scale down the failed mon before starting the new mon (, @travisn)
Use version of lvm command compatible with older versions of lvm (, @leseb)
Enable the object store in the Ceph dashboard (, @thotz)
Remove crash collector daemon on removed nodes (, @leseb)
Add support for wal device for OSDs on PVCs (, @silverhandy)
Check channel is open before closing during shutdown (, @Madhu-1)
Skip object validation for external clusters (, @leseb)
Add crushRoot to the pool CRD schema (, @mridulv)
Removed the storage provisioners usage from prometheus rules (, @anmolsachan)
Fix the health check for external clusters (, @leseb)
Cassandra
Fix a crash when applying annotations (, @travisn)"
"rgw: inject tls certs for bucket notification and topic operations

The certs for accessing TLS enabled RGW is saved as secrets and inject
them if controllers for notification and topics if request is sent to
TLS enabled RGW endpoint.

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
Signed-off-by: Jiffin Tony Thottan <jthottan@redhat.com>
(cherry picked from commit a97747cece6c7f2e5acd1a66a81067356a407002)
helm: fix linter issue with end tag

Recent versions of helm are failing the linter on the end tag
if the tag is ""{{- end -}}"". Instead, the correct end tag
is ""{{- end }}"".

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit b1a0918d0eae08db6bd0d5256f6fa514eaf55223)
helm: update to the latest helm version v3.8

The CI was building with helm 3.6.2, now updating to
the latest v3.8.0

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 50afb9f026b7d79e8500c12d04f550612c22cf11)
pool: check for application already being set

If the pool application is already set, skip setting it again
to avoid a warning message being logged that it is already
set.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit e0cfb4fce6e4c0420ae50de03398a8b62fa8c2a7)
core: print the stdout on errors

If we fail fetching the ceph version let's also print the stdout since
ceph tends to put the error here too.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit e31e4b49b013b2c1e2e32b985d66eb5853595981)
core: add a break line before printing the ceph config

It's easier to read the config if there is a new line before instead
having a truncated version like:

```
2022-01-26 06:39:41.421373 D | cephclient: config file @ /etc/ceph/ceph.conf: [global]
fsid                = 0650a1d5-d688-4575-97fc-7b3052a8a3dd
mon initial members = a
mon host            = [v2:10.104.192.209:3300,v1:10.104.192.209:6789]

[client.admin]
keyring = /var/lib/rook/rook-ceph/client.admin.keyring
```

Now we have:

```
2022-01-26 06:39:41.421373 D | cephclient: config file @ /etc/ceph/ceph.conf:
[global]
fsid                = 0650a1d5-d688-4575-97fc-7b3052a8a3dd
mon initial members = a
mon host            = [v2:10.104.192.209:3300,v1:10.104.192.209:6789]

[client.admin]
keyring = /var/lib/rook/rook-ceph/client.admin.keyring
```

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 58c175de4769d73209109df8598d66091cc6a4c0)
osd: allow for injecting extra env. variables via ConfigMap

This patch brings a mechanism to define arbitrary environment
variables in OSD containers (both prepare and main ones).
It bases on idea proposed by Sebastien Han to use an optional
`ConfigMap` instance named `aook-ceph-daemon-env-override`
as the source of these settings.

The need for the patch comes from the fact that, although
crimson finally exposes the same CLI interface as the classical
OSD, the broadly used development builds have ASan built in.
As ASan, by default, complains if it isn't the very first loaded
DSO, we need a way to set the `ASAN_OPTIONS` environment variable
to `verify_asan_link_order=0` to mitigate the early aborts.

Signed-off-by: Radoslaw Zarzynski <rzarzyns@redhat.com>
(cherry picked from commit 17ca41f557867714d747df4c70834798cded590d)
osd: merge all osd resources including custom

The merging of OSD resource limits and requests assumed
that only the cpu and memory resources needed to be merged.
It is also possible to set custom resource properties such
as intel.com/sriov_net_in: '1' for use with multus, so
the merging needs to be more general.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit f9ac96604806e0796de40b49e343a086dc0fc976)
csi: bump csi resizer and volume replication images

Upgraded images:

- k8s.gcr.io/sig-storage/csi-resizer: v1.3.0 -> v1.4.0
- quay.io/csiaddons/volumereplication-operator: v0.1.0 -> v0.3.0

Detailed changelogs:

- https://github.com/kubernetes-csi/external-resizer/blob/release-1.4/CHANGELOG/CHANGELOG-1.4.md
- https://github.com/csi-addons/volume-replication-operator/tree/v0.2.0
- https://github.com/csi-addons/volume-replication-operator/tree/v0.3.0

Signed-off-by: Mathieu Parent <mathieu.parent@insee.fr>
(cherry picked from commit 88a449d09c459962f4102f2a0fda3753924fc806)
csi: bump csi snapshotter image to v5

updating the csi-snapshotter and dependencies
to v5.0.1 released version.

Co-authored-by: Mathieu Parent <mathieu.parent@insee.fr>
Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit cf46615688a76dd9b82b27dfabe8bf0ab4107761)
helm: add annotations and labels for VSC

add support to specify annotations and
labels for the volumesnapshotclass.

closes:

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 08dadaa486cea3dca4b254f68fbc0d057f89bce0)
csi: check deployment for snapshot controller

The external-snapshotter was deployed as statefulset
in 4.x and now its deployed as a deployment. updated
the check in CI to make sure deployment is created.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 53e12d687fd3284487addd3c21f39f3f23697813)
csi: add patch permission to volumesnapshotcontents

The update to the snaphots 5.0 controller requires
rbac for patching the volumesnapshotcontents.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 3e4edc0f1d91d44d8e5c57072e66ce97febfe80c)
core: dereference pointer before trying to compare with deepequal

Prior to this, we were comparing a pointer (the memory address) with a
struct. This was obviously always failing and returned false. We must
dereference the pointer to access the data contained at that memory
location.

Closes: https://github.com/rook/rook/issues/9544
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 5404ec13a29c09073a222986c4540d5f705a047c)
csi: skip validation when installing snapshotter

in kubernetes 1.18 we are seeing CRD validation
errors when installing with kubectl, adding
validate=false to skip the validation and
to make tests works with kubernetes 1.18

closes:

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit c40ff244103dbde03c19883399de0f9f78a99e80)
rgw: gateway deployment strategy rolling on Pacific

When the strategy type of deployment is Recreate, from the moment the end is
started until the new pod is normally running, there is no pod in the
kubernetes service endpoints, so it goes to the service unavailable state.

Therefore, it is necessary to change it to `type: RollingUpdate` instead of
`type: Recreate` so that rolling updates can be made without downtime.

Before Pacific, creating a deployment as much as the instance was okay,
but after Pacific, the replicas was increased in one deployment, so rolling
updates were set up one by one as in the previous version.

Signed-off-by: micalgenus <micalgenus@gmail.com>
(cherry picked from commit a68151e2f2f1d83eebd176409f4e5d800f6bba0b)
csi: cover error cases in snapshot ready check

Currently, we sleep only if the snapshot is not ready
and try again, this covers only the happy path.
the checks might fail to get the snapshot object
or the `.status.readyToUse` might not be set yet.
First sleep and then try to check snapshot is
ready or not, if we do this we cover all the cases
when checking the snapshot ready status.
Changed sleep internal to do incremental sleep to
give more time for tests.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 97e5b78c111a71baa71e0f359a810a490563855c)
csi: fix snapshot CRD and controller cleanup oder

cleanup the CRD and controller in defer
to make sure the CRD and controller are
removed as filesystem/block test also
install CRD and controller separately.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 44353167d744f31ad5ac0fca4e5c1554f791243e)
subvolumegroup: handle external mode

If the cluster is external, users might still want to take advantage of
the ceph-csi configmap configuration for ceph filesystem subvolume
group. This configuration is handled by the controller whenever a
cephFilesystemSubVolumeGroup CR is created or deleted.
If the present cluster CephCluster is external, the controller
(cephFilesystemSubVolumeGroup) won't handle creation nor deletion of sub volume groups.
It just assumes that the given name is correct and the controller goes ahead with the
ceph-csi configuration.

Closes:
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 49f75c8ec3252dc9af4ed07461bd0006e8d151c6)
build: set release version to v1.8.4

With the patch release we update the example manifests to v1.8.4.
At the same time the upgrade tests are updated to use the latest
v1.7.11.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.8.4 is a patch release limited in scope and focusing on small feature additions and bug fixes to the Ceph operator.
csi: Skip validation when installing snapshotter (, @Madhu-1)
subvolumegroup: Handle external mode (, @leseb)
rgw: Gateway deployment strategy RollingUpdate on Pacific (, @micalgenus)
core: Dereference pointer before trying to compare with deepequal (, @leseb)
osd: Merge all osd resources including custom (, @travisn)
csi: bump csi snapshotter image to v5 (, @Madhu-1)
helm: add annotations and labels for VolumeSnapshotClasses (, @Madhu-1)
csi: Bump csi resizer and volume replication images (, @sathieu)
osd: Allow injecting extra OSD environment variables via ConfigMap (, @rzarzynski)
pool: Check for pool application already being set (, @travisn)
helm: Update CI to the latest helm and fix the linter (, @travisn)
rgw: Inject tls certs for bucket notification and topic operations (, @thotz)
rgw: Handle the non-existence of the bucket correctly when removing bucket (, @cupnes)"
"ceph: unmanage labels of monitoring resources

Do not reconcile ServiceMonitor/PrometheusRule on label updates.
This allows users to add custom labels which can be used by
custom Prometheus instances for monitoring.

Signed-off-by: Umanga Chapagain <chapagainumanga@gmail.com>
(cherry picked from commit 9d42eb16427964e99791860966e1b4051cf8a385)
ceph: stick with ubuntu-18.04 on the CI

Github just switched to use Ubuntu 20.04 for the ubuntu-latest and it is
breaking some of our scenarios so far. Especially scenario creating
partitions.

Closes: https://github.com/rook/rook/issues/7327
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 0adf7624d95c5aab4a1dcb9fc9a732c31880f8a6)
ceph: change osd on pvc unit test to use t.Log()

Change the TestOSDsOnPVC unit test to use t.Log()/t.Logf() to avoid
having a special infof() function that was unnecessary since our unit
tests run with `go test -v` where the `-v` flag interleaves t.Log()
output.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit d5983e8d4b7ff12be1e3bed0c44f13ffe483af5b)
ceph: lint toolbox.sh

Apply linter suggestions and remove used variables.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 3c6f3f79411b76a3584628e10c762642843e62d7)
ceph: ability to set cluster wide log level

From inside the toolbox, the ceph debug level can now be changed for all
ceph logging subsystems, for instance, level 1 will be:

```
kubectl -n rook-ceph exec deploy/rook-ceph-tools -- set-ceph-debug-level 1
```

To reset to default values just run:

```
kubectl -n rook-ceph exec deploy/rook-ceph-tools -- set-ceph-debug-level default
```

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit c54acf449edc23018404cac49055443df2496af7)
ceph: expose vault warnings better

If there is a warning coming from the Vault server we must catch it and
exit immediately to reflect it if no key was retrieved.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 0534b5a1800e2debcd9dd24b88992c951780920b)
ceph: handle ssl cases for RGW's livenessprobe

The livenessprobe for swift/health always check with RGW internal port if host network disabled,
but won't work if only secure port is configured

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit 785aa5a322dd555e13ee4fc848d71454a8592774)
ceph: only raise conditions that represent current state

The conditions on the cephcluster CR were being set to false
when not in progress, which is misleading to the purpose of
conditions. The conditions will now always represent current
state of the cluster. Transient conditions that show progress of
a reconcile will be removed from the status.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 15d0537cec54b503aea21beb0084d0e6dd3464eb)

# Conflicts:
#	pkg/operator/ceph/config/conditions.go
ceph: document the CephCluster CR status

The CephCluster CR status has a number of fields that are
now finally documented, including the Ceph status, conditions,
and other general status.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit ccfd1191da9dcb7ac13f3e88bb94574dde344363)
docs: fix link to the sample osd purge job

The osd purge job link requires an absolute url depending
on the branch name since links to the examples do not work
as relative paths.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 6d821d6a5115f0f1366529f9ed146ecd3394670e)
ceph: fixed prometheus query to avoid many-to-many match error

Ceph_daemon label includes references to a replaced OSD that cause a prometheus
ruleset to fail due many-to-many match error. The changes to this PR filters the
extra matching ceph_daemon time-series.

Signed-off-by: Anmol Sachan <anmol13694@gmail.com>
(cherry picked from commit 136231a71f7f89b5a883ca6a2c6a7bb181ba9db8)
ceph: add osd flapping alert

This PR adds an alert that notifies the users if an OSD restarts
for 5 times under 5 minutes. Each restart corresponds to 2 changes
in the value of ceph_osd_up metric.

Signed-off-by: Anmol Sachan <anmol13694@gmail.com>
(cherry picked from commit 1532070a3e6167de2f7860203ae13a75134fceed)
ceph: disable CSI GRPC metrics by default

The GRPC metrics exposed by both the provisioner pod
and the node plugin pod on some port. Provisioner pod
is running on the pod network and the daemonset pods
run on the host network. sometimes starting the GRPC
metrics by default can lead to node plugin pods
crashloopback state this is due to the port conflict.
Moreover, the GRPC metrics are not for the user it's
for the one which will help to debug the time taken
by cephcsi to serve each GRPC call. Enabling it by
default won't be a good idea. So the plan is to
disable it by default, If someone faces any issue it
can be enabled later at some point in time.

closes

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 0a81ce2251699faf0f174e7f58a4cbb9ac149bc8)
ceph: fix improper json parsing in radosgw-admin

Sometimes `radosgw-admin` succeeds after showing logs to stderr. We should
skip non-json strings if parsing output as json.

Here is an example.

```
2021-02-26 04:10:44.190418 I | op-bucket-prov: creating Ceph user ""ceph-user-aSzNqgE7""
E0226 04:11:37.901310       8 controller.go:199] error syncing 'logging/loki-bucket': error provisioning bucket: Provision: can't create ceph user: error creating ceph user ""ceph-user-aSzNqgE7"": failed to unmarshal json. 2021-02-26T04:11:21.425+0000 7f6714be4980  1 robust_notify: If at first you don't succeed: (110) Connection timed out
2021-02-26T04:11:21.426+0000 7f6714be4980  0 ERROR: failed to distribute cache for ceph-hdd-object-store.rgw.meta:users.uid:ceph-user-aSzNqgE7
2021-02-26T04:11:32.168+0000 7f6714be4980  1 robust_notify: If at first you don't succeed: (110) Connection timed out
2021-02-26T04:11:32.168+0000 7f6714be4980  0 ERROR: failed to distribute cache for ceph-hdd-object-store.rgw.meta:users.keys:23Z8GUEXR0TJDO86PSJR
{
    ""user_id"": ""ceph-user-aSzNqgE7"",
    ""display_name"": ""ceph-user-aSzNqgE7"",
...
    ""mfa_ids"": []
}: invalid character '-' after top-level value: failed to unmarshal json.
```

In this case, some logs like ""robust_notify:..."" was shown in stderr.
Unmarsharing was failed due to tried to parse these logs as json.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit a89d35e5b6c8a7ca12ae12d497f3ce81d006760b)
ceph: enable pg auto repair

As a recommendation from the core team we should turn on PG auto repair
when running on Bluestore OSDs. The Quincy release will enable this by
default but in the meantime let's enable it here.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit a6ef1ff4901f03822479e612a75859b34b48b300)
ceph: add quincy version

Quincy just started https://github.com/ceph/ceph/pull/38996 so let's add
it to our version code.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 9f8404e3300a1918b535c93a06284939f1ea8b45)
ceph: set pool quota with k8s quantity format

This is a follow up to:

https://github.com/rook/rook/pull/7264

which added pool quotas. It was stated that it would be nice to
be able to set pool max_bytes quotas using standard k8s quantity
formats rather than an integer representing the number of bytes.

I was too busy at the time to make the changes. This PR adds the
functionality.

Signed-off-by: Frank Ritchie <12985912+fritchie@users.noreply.github.com>
(cherry picked from commit 9ae699d6328d768a8df0cc483e10121425422e31)
ceph: skip cleanup if cluster is not configured correctly

deletion of cluster is stuck when cluster is not configured. The PR skips the cleanup and removes the finalizers if the cluster was not configured, that is, if clusterInfo could not be loaded.

Signed-off-by: Santosh Pillai <sapillai@redhat.com>
(cherry picked from commit 7bd05d0d7ca26caf3fcfefd4b4a514664559db33)
ceph: add osd slow ops alert

This commit adds an alert that notifies the users about OSD
requests taking too long to process.

Signed-off-by: Anmol Sachan <anmol13694@gmail.com>
(cherry picked from commit f84cbb47fe40089dad29b7455e16a03453a854fb)
ceph: updated rbac for multus in helm charts

The rbac required for multus was present in role which makes
only the network-attachment-definitions in the rook cluster namespace
accessible to the operator. Moved it to clusterrole for cluster wide
access to NAD.

Signed-off-by: rohan47 <rohgupta@redhat.com>
(cherry picked from commit f3a75216a86186bc7f0b219818307413aef04310)
Signed-off-by: rohan47 <rohgupta@redhat.com>
ceph:  placement in case of both PVC and non-PVC's

In the case of PVC,
We are giving lower priority to all placement.
We want deviceSet placement to applied and
override in case of overlapping settings and
we are merging nodeAffinity if applied in both
all placement and deviceSet.

In case of non-PVC,
we apply spec.placement

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 319e4a41a411ba0a890f3aaee49f4ed8b05ffb69)
ceph: update CRDs for healthcheck in crds.yaml

Even though CRs for bucket health check was added, CRDs were missing from
crds.yaml file. So the health check always enabled for RGW.

Signed-off-by: Santosh Pillai <sapillai@redhat.com>
Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit 11594553454868ae5caf1f06074b7ed133ec2b67)
build: updated release version to v1.5.9

Update the example manifests and docs to v1.5.9 for the
patch release

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.5.9 is a patch release limited in scope and focusing on small feature additions and bug fixes.
Ceph
Properly add CephCluster schema to support bucket health checks (, @thotz)
Avoid overlapping OSD placement for PVC and non-PVCs (, @subhamkrai)
Correct RBAC for multus in the helm chart (, @rohan47)
During uninstall skip cleanup if cluster is not configured correctly (, @sp98)
Enable the PG auto repair module (, @leseb)
Set pool quota with K8s quantity format (, @fritchie)
Proper JSON parsing for object store configuration (, @satoru-takeuchi)
Disable CSI GRPC metrics by default (, @Madhu-1)
Add OSD flapping alert (, @anmolsachan)
Add OSD slow ops alert (, @anmolsachan)
Prometheus query to avoid many-to-many match error (, @anmolsachan)
Only raise CephCluster conditions that represent current state (, @travisn)
Handle SSL cases for RGW's liveness probe (, @thotz)
Improved vault warnings for encrypted OSDs (, @leseb)
Stop managing labels of monitoring resources (, @umangachapagain)
Detect standby mgr for external clusters (, @aruniiird)"
"build: remove 1.11 from flex suite test action

K8s 1.11 cannot run on the github action because it is so
old and unsupported. K8s 1.11 has been validated with
Jenkins for the v1.7 release and does not have a need
to run it regularly in every release as it is deprecated.
The flex suite still runs on 1.15 and newer so the risk
of regression is very small.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
ceph: use mktemp file in ImportRBDMirrorBootstrapPeer

Do not point to a made-up file in /tmp
Use ioutil.TempFile() for creating a token file

Closes: https://github.com/rook/rook/issues/8446
Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 48918c7cf0f8afe5e404630f252e0111bc1244f5)
build: update go fmt version

till now we were using older go fmt version(1.11).
From now, go fmt version will be same as golang version

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 7161afbb709c91fb4fd08ee861eb4038a0679e11)
ceph: fix example of cluster on local pvc

`cluster-on-local-pvc.yaml` doesn't work due to missing topologyKey.
In addition, it's better to add the example of `topologySpreadConstraints`
for K8s >= 1.18 users.

Closes: https://github.com/rook/rook/issues/8478

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit cf106c8e569786886f61458a51d787849b939b17)
ci: break if no errors on build

No wonder why the build has been taking longer... We were building 3
times.
We just got at least 2 minutes back of build time thanks to this fix.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 6582fdce970268ddd28f1ccbfb90e04fae54acd9)
docs: clarify that helm charts are optional

With the v1.7 release and the Cluster helm chart, this
clarifies that the helm charts are still completely
optional, but are intended only to simplify deployment
for those who choose to use them.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 2d4d4d53c4aabc7a56e8a5ba92473b6ae2bf0632)
ceph: remove cli unused flags

I don't know why these flags are there but it's not like we run the
operator with them and with a different value.
So removing for clarity.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 07d14a93a2675c8c1e141b555030fb5050426f39)
ci: fix for CephObjectStores flakiness

Integration test CephSmokeSuite fails frequently
A quick fix for it by reordering storeName,
running tlsteststore before teststore

Closes: https://github.com/rook/rook/issues/8309
Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit b28455245d7aaea8c349cce23232b7b488577f47)
ceph: add ability to specify ca bundle for rgw

Specify ca Bundle for RGW spec and mount inside pods.

Related-Issue: https://github.com/rook/rook/issues/8490
Signed-off-by: Denis Egorenko <degorenko@mirantis.com>
(cherry picked from commit fb04908315d490eb9c5f173d80007b48ba5e06d8)
ceph: refuse to failover the arbiter mon on stretch clusters

Stretch clusters in Ceph do not yet support failing over the arbiter
mon, so we now disable the arbiter mon from failing over. Soon
Ceph will support the arbiter mon failover and we will reenable
this failover feature.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit f9f322683a4a9b5bd52a088102a2c43b6146eb31)
build: update release version to v1.7.1

The release version and example manifests are updated to v1.7.1
for the patch release.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.7.1 s a patch release limited in scope and focusing on small feature additions and bug fixes.
Ceph
Update Ceph CSI version to v3.4.0 (, @Madhu-1)
Add ability to specify the CA bundle for RGW (, @degorenko)
Remove unused mon timeout cli flags (, @leseb)
Add an option to enable/disable merge all placement (, @subhamkrai)
Refuse to failover the arbiter mon on stretch clusters (, @travisn)
Improve topology example of cluster on local pvc (, @satoru-takeuchi)"
"operator: make imagePullPolicy customizable for csi driver and ceph pods

Introduce a new env variable ROOK_CSI_IMAGE_PULL_POLICY in rook operator configmap which should be used to
customize the imagePullPolicy for the csi driver and imagePullPolicy property in cephVersionSpec for ceph pods.

Signed-off-by: Avan Thakkar <athakkar@redhat.com>
(cherry picked from commit 934aa910566c0176945ebf819d1ce24b5295bb4f)
docs: the CephBlockPool CR does not have spec.annotations

With Kubernetes 1.25 it seems that applying the yaml files that have a
CephBlockPool with spec.annotations fail with errors like this:

    CephBlockPool in version ""v1"" cannot be handled as a CephBlockPool:
    strict decoding error: unknown field ""spec.annotations""

Updates: ceph/ceph-csi
Signed-off-by: Niels de Vos <ndevos@redhat.com>
(cherry picked from commit 69dc8897bb18d5dcfba33278504bc9a5e0068bb1)
osd: clarify lv is not picked by filters

LVM logical volumes are not picked by `deviceFilter`, `devicePathFilter`,
and `useAllDevices`. It's to prevent old version's users from creating
lv-backed osd during upgrading rook by accident.

It's better to clarify lvs are not picked by filters"" in docs and
suggest users to use exact device name instead.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit b6a6f66ff03d3b5902abbcd35a9a27ba201106c2)
docs: symlink cleanup page to the getting started doc folder

The cleanup guide is difficult to find under the storage configuration section
with so many other topics. We will show the cleanup guide also from the getting
started section to make it more discoverable.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 3484eb7520c09dd2d3b70feff8e9140f57457174)
csi: use ceph csi v3.7.1 for rook csi driver deployment

Signed-off-by: Humble Chirammal <hchiramm@redhat.com>
(cherry picked from commit 4d435b224f11f605c589405251e0a7ff306f6849)
osd: use 256 as cryptographicLength for keys using kmip kms

This commit changes cryptographic length for keys created
for kmip kms to 256 from 128, since it is more secure.

Signed-off-by: Rakshith R <rar@redhat.com>
(cherry picked from commit 9d0d93472ff601a0150371b8b62aeb8747348a55)
docs: update troubleshoot docs and add krew uses

updated troubleshoot doc using common issues to reference
krew plugin and added krew section for osd pugre.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 37542c8f49570f1e358e8ae1454375c7b66c648f)
csi: update sidecars to latest in CSI deployment

Signed-off-by: Humble Chirammal <hchiramm@redhat.com>
(cherry picked from commit c847e6b98d6d1718dc9b969c8dadd32d887cb604)

# Conflicts:
#	deploy/examples/images.txt
csi: explicitly set default fstype for attacher sidecar

With the attacher sidecar update to v4.0.0 this has to be set
explictly.

Signed-off-by: Humble Chirammal <hchiramm@redhat.com>
(cherry picked from commit b9fb023edf4d9cdf22c8bed2770ad092610eae96)
rgw: handle insecure flag skip for obc in the tls config

OBC provisioner ignores insecure skip flag even if it is declared for
TLS auth, hence bucket creation was failing

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit d605ba4cf805f7acc9b9556ab19e24299e9e8e49)
docs: explain specific nixos configurations

Explain the fix for https://github.com/rook/rook/issues/10932 to let NixOS users set up Rook more easily.

Signed-off-by: Jairo Llopis <jairo@moduon.team>
(cherry picked from commit 7fecca3d6f14b49853a643d768d40aa70774cd52)
docs: fix notes in contributing docs

Signed-off-by: Tarun Gupta Akirala <takirala@users.noreply.github.com>
(cherry picked from commit 6c2335b37ac54e625ded97aab58d2b6496bb8617)
osd: prepare job needs significant more memory for provisioning

The OSD creation may need to burst during OSD provisioning depending
on the size of the OSD or similar factors. If the OSD prepare job is
OOM killed it will cause OSD provisioning to fail and have various
side effects that are difficult to troubleshoot to get the OSD
to succeed. So we increase the recommendation significantly to avoid
the OOM kill.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 92c52c4a2eb9b380f536c868b556bb3d3482db88)
mgr: set the public dashboard port differently from the target port

If the port is greater than 1024, for backward compatibility the port and
targetPort should be the same value. If the port is less than 1024,
the internal port must use a higher port number. In that case, the internal
port will be the default port numbers and only the public port will be
the desired port in the cluster CR.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit f79ff42e0cbc5c7aee1163dc13a9961b9b30d300)
osd: recommend removing memory limits from osd prepare job

The osd prepare job is not recommended to have memory limits since
it's a one-time operation depending on the size of the disk that must
be allowed to complete successfully.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 4a86012eadbc2b7da932fcdf3f02b06269c35d2e)
nfs: fix nfs grace period when multus is enabled

Run the ganesha-rados-grace command in a remote pod when multus
networking is enabled.

Signed-off-by: parth-gr <paarora@redhat.com>
Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 51fac0a993330d57ff1776aab20f843b92aab88d)
build: update the release version to v1.10.3

For the patch release we update the docs and example manifests
to v1.10.3

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.10.3 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
helm: Remove memory limits from osd prepare job to prevent provisioning failure of large disks (, @travisn)
nfs: Fix nfs grace period when multus is enabled (, @BlaineEXE)
mgr: Set the public dashboard port differently from the target port (, @travisn)
csi: Default to ceph-csi v3.7.1 for csi driver deployment (, @humblec)
docs: Update troubleshoot docs and add krew uses (, @subhamkrai)
docs: Explain specific nixos configurations (, @yajo)
rgw: Handle insecure flag skip for obc in the tls config (, @thotz)
osd: Use 256 as cryptographicLength for keys using kmip kms (, @Rakshith-R)
csi: Update sidecars to latest in CSI deployment (, @humblec)
operator: Customizable imagePullPolicy for csi driver and ceph pods (, @avanthakkar)
examples: CephBlockPool should not have spec.annotations (, @nixpanic)
osd: Clarify lv is not picked by filters (, @satoru-takeuchi)"
"ceph: update lib bucket provisioner

Update to latest lib-bucket-provisioner to fix issue
https://github.com/kube-object-storage/lib-bucket-provisioner/issues/206

The change avoids overwriting or erasing OBC labels or finalizer fields
which are added by other controllers.

Signed-off-by: Toshikuni Fukaya <toshikuni-fukaya@cybozu.co.jp>
(cherry picked from commit 79eaad43c535d5897085ba30a7717dd81242a7a7)
ceph: create a route for ceph-rgw

this commit ceph: create a route as
a part of example in `object-openshift.yaml`.
Route is a feature of OpenShift so, changes
are only for object-openshift.yaml.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit beff403c897ff3fbf9f69feceee07f7356d3ac4e)
ceph: timeout `radosgw-admin` cli commands

When creating object store, `radosgw-admin realm get ..` command is stuck forever when required number of OSDs are not available. Because of this the uninstall of object store is also stuck. User has to manually remove the finalizer to delete the object store.This PR uses `ExecuteCommandWithTimeout` for running `radosgw-admin` command. Timeout during installation will be reconciled. Cleanup will be treated as best effort. Any errors during uninstalling of single site object store will only be logged.

Signed-off-by: Santosh Pillai <sapillai@redhat.com>
(cherry picked from commit 113376f1abaaf8cc5ee071527a11290b59e0fd42)
ceph: do not enable ShareProcessNamespace if HostIPC

If HostIPC is enabled, this means the Ceph version is older than Octopus
and we are still running OSD with HostIPC due to an internal
inter-process check.
If the log collector is enabled we need to enable ShareProcessNamespace
**only** if HostIPC is disabled.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 260274cdb327e695b7ae88168791cde4edc40fc5)
ceph: do not enable ShareProcessNamespace if HostPID

If HostPID is enabled, this means the Ceph version is older than Octopus
and we are still running OSD with HostPID due to an internal
inter-process check.
If the log collector is enabled we need to enable ShareProcessNamespace
**only** if HostIPC is disabled.

Both HostPID and ShareProcessNamespace cannot be enabled.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 8b65eb6126e1d9c8a8ff2438dbeaca4dbd2b472b)
ceph: clean pods stuck in terminating state

when a node fails some pods remains in terminating while other manage to
be rescheduled on another node successfully.
this commit adds code to clean up all the Rook and CSI pods that are stuck in terminating
state on a failed node.

Signed-off-by: rohan47 <rohgupta@redhat.com>
(cherry picked from commit 0876a20e7c893a30006e6c9533d9f3e74727f11c)
build: try sha256sum if shasum is not present

shasum is not always available and sha256sum seems to exist more often
since it's part of coreutils where sha256sum comes with perl.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 1bdee1e512ebbe368e0154e735d3599022491cea)
ceph: skip csi detection if CSI is disabled

Before this patch, csi detection will run whether or
not rbd and cephfs are all disabled. Run detection only
if it is necessary.

Signed-off-by: shenjiatong <yshxxsjt715@gmail.com>
(cherry picked from commit 2b63fff08725c1123956cbca1cfbf005bbe544e1)
ceph: update nfs ganesha pool recommendation

Add following don'ts note for storing ganesha recovery object:
* Don't use fs pool, it can cause this dashboard issue https://tracker.ceph.com/issues/46176
* Don't use erasure coded pool, it will not work due to ganesha's omap requirements

Signed-off-by: Varsha Rao <varao@redhat.com>
(cherry picked from commit 59084fbe061fddbaeffbcc264d563b09724938cd)
ceph: add deviceClass to the object store schema

The deviceClass was missing from the object store CRD schema,
disallowing the device class from being specified on
the object store pools.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 81b398f6b6242396349959c522a44a13fe8e3dc4)
ceph: simplify the log-collector container name

The log-collector container name was exceeding the 63-char limit
if the parent CR name was too long. The container name just needs
to be unique to the pod spec, so we simplify it to remove the parent
name and avoid hitting the limit in the pod spec.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 5371c943ca98c0629748e8d89b860d8012be0f2a)
ceph: do not force go path in unit tests

Do not force unit tests to be run while the rook repo is in the GOPATH.
Now that Rook uses go modules, this is no longer necessary. Allow this
by creating a helper function that unit tests can use that return the
on-host path to the `rook` project root.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 15a487cd5aa5d4dc59bc15ef610cb182257d9287)
ceph: do not force go path in unit tests

Do not force unit tests to be run while the rook repo is in the GOPATH.
Now that Rook uses go modules, this is no longer necessary. Allow this
by creating a helper function that unit tests can use that return the
on-host path to the `rook` project root.

Followup of https://github.com/rook/rook/pull/7119/commits/15a487cd5aa5d4dc59bc15ef610cb182257d9287

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit dea3273eaf692d951d579263a928caf6c6324808)
ceph: pass extra-create-metadata to csi-provisioner

when extra-create-metadata is passed to csi-provisioner
it passes few information like namespace name,pvc
name to the cephcsi driver which is required for
rbd encryption.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 3cf9f7147e5d31b86fb8b73bdc7cc81dc0695876)
ceph: add configmap get RBAC for rbd provisioner

rbd provisioner need to access the configmap
in different namespaces.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 81248f1dce0c248962f7a158a513802d1ead5ec5)
ceph: silence harmless errors

If the ceph cli outputs an error with ""error calling conf_read_file""
this means that the operator has not written its ceph configuration
file. Thus ceph cli commands will fail, so we can just ignore that since
the operator will soon write this file in its initialization sequence.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 8d033efb5a2fa17ab6ff4906db1a52d364c9b350)

# Conflicts:
#	pkg/operator/ceph/client/controller.go
ceph: use errors pkg instead of fmt

This one was a leftover.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit b189e91bfe01c4ecb5050911284e5b742edcd229)
ceph: embed the buffer in the error

Somehow the combined output does not contain the stderr in the errorn
only in the buffer.
For example:

err = ""error exit 1""
buf = ""Error EBUSY: not enough monitors would be available () after stopping mons [a]""

So we now embed the buf in the error so that the caller does not need to
print the buffer as well as the error.
Also, the caller can more easily decide to ignore the error by
instropecting the string.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 2d75135579ac62a376a49b51ac7599a466e6968f)
ceph: skip pdb reconcile on create and delete events

This PR makes create and delete events on pdb a no-op. Update event only triggers reconcile if its the main OSD pdb and allowed disruptions is 0.
This prevents controller to reconcile on pdb events namespaces outside rook ceph.

Signed-off-by: Santosh Pillai <sapillai@redhat.com>
(cherry picked from commit b780e5b5c052bac61d8b6498c4e68c1d103d202e)
ceph: check for orchestration cancellation while OSDs are pending

completeOSDsForAllNodes() method waits for 20 minutes for all the OSDs to start on all the nodes. This PR checks if
cluster deletion request was sent while waiting for OSDs to start. If yes, then completeOSDsForAllNodes() method will returnwithout waiting for 20 minutes.

Signed-off-by: Santosh Pillai <sapillai@redhat.com>
(cherry picked from commit f5808185e0b6f198ecffe89a39b871ea6234d46d)
ceph: bind mgr modules to all interfaces instead of pod ip

Binding the dashboard and prometheus to all interfaces instead of the pod ip
will ensure that they are listening properly. Binding to the pod ip was only
a short term solution that was intended to be removed with Nautilus, which
is already Rook's min supported version.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit b3129fd5cf3044ea83254ca0d9a4e5f889995eab)
ceph: update dashboard doc url to latest

ceph dashboard doc url in the doc is of older version. This patch updates it
with the latest doc url.

Signed-off-by: Varsha Rao <varao@redhat.com>
(cherry picked from commit 380f87b0b47481503d1c3dc2e77e3be466e66b8b)
ceph: set helm resource policy keep annotation on CRDs in Helm chart

When uninstalling the helm chart do not remove the CRDs, instead
document the way to remove the CRDs after the user uninstalls
the chart.

Closes: https://github.com/rook/rook/issues/6617
Signed-off-by: Devin Buhl <devin.kray@gmail.com>
(cherry picked from commit 64a0fbc91c4947d3878e88d1d5a72ec98b2a6a8e)
ceph: set helm resource policy keep annotation on CRDs in Helm chart

When uninstalling the helm chart do not remove the CRDs, instead
document the way to remove the CRDs after the user uninstalls
the chart.

Closes: https://github.com/rook/rook/issues/6617
Signed-off-by: Devin Buhl <devin.kray@gmail.com>
ceph: filesystem is not required for nfs server deployment

nfs server requires valid pool for storing nfs-ganesha recovery objects. Only
when filesystem exports are created, filesystem should be configured first.

Signed-off-by: Varsha Rao <varao@redhat.com>
(cherry picked from commit baa79cf4c32a2ca89958321143e03d0b3add783f)
ceph: remove crash collector if ceph pod moved

If Ceph pods were evicted onto other nodes, there is no reason for the
crash collector to remain on those nodes. So let's remove it.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit b9e91b600dcc3f518da6be93faf7aba45ea1d999)
ceph: always override existing block for blkdevmapper

When the blkdevmapper init container initializes we must override any
existing special block. This will prevent re-using a different disk on
the OSD on PVC scenario.

Adding ""--remove-destination"" to the cp line will remove each existing
destination file before attempting to open it.
We **MUST** do this otherwise in environment where PVCs are dynamic, restarting the deployment will cause conflicts
When restarting the OSD, the PVC block might end up with a different Kernel disk allocation
For instance, prior to restart the block was mapped to 8:32 and when re-attached it was on 8:16
The previous ""block"" is still 8:32 so if we don't override it we will try to initialize on a disk that is not an OSD or worse another OSD
This is mainly because in https://github.com/rook/rook/commit/ae8dcf7cc3b51cf8ca7da22f48b7a58887536c4f we switched to use HostPath to store the OSD data
Since HostPath is not ephemeral, the block file must be re-hydrated each time the deployment starts

The test uses ""=="" instead of numbers since the stat command will print
an hex number and thus we won't always get integer, e,g: major/minor
value 202:13312 will be return ca:3400.

Example run of the new init container:

+ PVC_SOURCE=/set1-data-168h7m
+ PVC_DEST=/var/lib/ceph/osd/ceph-0/block
+ CP_ARGS=(--archive --dereference --verbose)
+ '[' -b /var/lib/ceph/osd/ceph-0/block ']'
++ stat -c %t%T /set1-data-168h7m
+ PVC_SOURCE_MAJ_MIN=ca6100
++ stat -c %t%T /var/lib/ceph/osd/ceph-0/block
PVC's source major/minor numbers changed
removed '/var/lib/ceph/osd/ceph-0/block'
'/set1-data-168h7m' -> '/var/lib/ceph/osd/ceph-0/block'
+ PVC_DEST_MAJ_MIN=ca4000
+ [[ ca6100 == \c\a\4\0\0\0 ]]
+ echo 'PVC'\''s source major/minor numbers changed'
+ CP_ARGS+=(--remove-destination)
+ cp --archive --dereference --verbose --remove-destination /set1-data-168h7m /var/lib/ceph/osd/ceph-0/block

Test procedure:

$ oc -n rook-ceph scale deployment rook-ceph-osd-0 --replicas=2
deployment.apps/rook-ceph-osd-0 scaled

Now we have 2 OSDs and one is crashlooping, which is expected:

rook-ceph-osd-0-66964f6d-2cwqq                              0/1     Init:CrashLoopBackOff   4          2m12s
rook-ceph-osd-0-66964f6d-pmhlq                              1/1     Running                 0          6m7s

The logs from the failing container is pretty clear:

+ PVC_SOURCE=/set1-data-168h7m
+ PVC_DEST=/var/lib/ceph/osd/ceph-0/block
+ CP_ARGS=(--archive --dereference --verbose)
+ '[' -b /var/lib/ceph/osd/ceph-0/block ']'
++ stat -c %t%T /set1-data-168h7m
+ PVC_SOURCE_MAJ_MIN=ca6100
++ stat -c %t%T /var/lib/ceph/osd/ceph-0/block
+ PVC_DEST_MAJ_MIN=ca6100
+ [[ ca6100 == \c\a\6\1\0\0 ]]
+ CP_ARGS+=(--no-clobber)
+ cp --archive --dereference --verbose --no-clobber /set1-data-168h7m /var/lib/ceph/osd/ceph-0/block
inferring bluefs devices from bluestore path
/home/jenkins-build/build/workspace/ceph-build/ARCH/x86_64/AVAILABLE_ARCH/x86_64/AVAILABLE_DIST/centos8/DIST/centos8/MACHINE_SIZE/gigantic/release/15.2.8/rpm/el8/BUILD/ceph-15.2.8/src/os/bluestore/BlueStore.cc: In function 'int BlueStore::expand_devices(std::ostream&)' thread 7f2a52d18240 time 2021-02-09T13:27:46.011397+0000
/home/jenkins-build/build/workspace/ceph-build/ARCH/x86_64/AVAILABLE_ARCH/x86_64/AVAILABLE_DIST/centos8/DIST/centos8/MACHINE_SIZE/gigantic/release/15.2.8/rpm/el8/BUILD/ceph-15.2.8/src/os/bluestore/BlueStore.cc: 7090: FAILED ceph_assert(r == 0)
2021-02-09T13:27:46.010+0000 7f2a52d18240 -1 bluestore(/var/lib/ceph/osd/ceph-0) _lock_fsid failed to lock /var/lib/ceph/osd/ceph-0/fsid (is another ceph-osd still running?)(11) Resource temporarily unavailable
 ceph version 15.2.8 (bdf3eebcd22d7d0b3dd4d5501bee5bac354d5b55) octopus (stable)
 1: (ceph::__ceph_assert_fail(char const*, char const*, int, char const*)+0x158) [0x7f2a48e236e4]

 Acquiring the lock fails, so the OSD won't run.
 Now we scale back down:

$ oc -n rook-ceph scale deployment rook-ceph-osd-0 --replicas=1
deployment.apps/rook-ceph-osd-0 scaled

And we can see the last created OSD (the one crash looping) disappears:

rook-ceph-osd-0-66964f6d-2cwqq                              0/1     Terminating   5          3m6s
rook-ceph-osd-0-66964f6d-pmhlq                              1/1     Running       0          7m1s

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 6dc15eb64903946550ca2bcb30614b3866324029)
ceph: return an error if PVC is not clean

With 5f57b6fd3abbab60b2992171e042598b3fdbf333, we introduced a
regression in the validation code.
If the OSD PV comes from another cluster, GetCephVolumeRawOSDs must
return an error.
The prepare job will crash loop but at least with a useful and
comprehensive message.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 7c928f4196518399302b59cdba974dfd48d8f953)
ceph: silence the curl call

We don't need to output the progress.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 88cf490f00541d2c4f3837598abfad7c04859e5f)
ceph: expose vault curl errors

If the Vault server returns an error, we must report it in the init
container. With this we can properly debug a failing init container.

Resulting container log:

```
oc logs rook-ceph-osd-0-dc6d4d4d-445dg -c encryption-kms-get-kek                                                                                                                                                                                                         ⏎
['error performing token check: Vault is sealed']%
```

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 1adebcd4d1fabc5c0d980dd71b018c55e9dbf4f5)
ceph: fix wrong payload path

Wrong file was used...

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 1f4649f32744fcf8e410bb1a0cc28735de76d8de)
ceph: correct formatting of ceph version detected

The ceph version during an upgrade was incorrectly being
formatted in the log message

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit ff1f74f7715bb50e6e71cc026d732b1629219a78)
ceph: do not print pointer memory address

When printing pointers of struct (regardless if it is also a slice or
not) we must implement a stringer interface so they can be displayed
properly, this is especially useful when looking at the prepare job
logs.

Before this patch:

```
2021-02-10 06:39:06.783508 D | inventory: discovered disks are [0xc00029c240 0xc00024a000 0xc00086c480 0xc00024a480]
```

After this patch:

```
2021-02-11 13:05:15.730500 D | inventory: discovered disks are:
2021-02-11 13:05:15.730636 D | inventory: &{Name:dm-0 Parent: HasChildren:false DevLinks:/dev/disk/by-id/dm-uuid-LVM-aIFRq5P3hwE2YhukbOmsEZoLY61HxvX62A1xxb6ajTymVE0N8S4Ga0KWlHSgpvNw /dev/disk/by-id/dm-name-ceph--e29bf82e--86f1--4c8e--8412--c468def5a844-osd--block--2044a1ea--6e5e--4423--88cf--8947bf6957d1 Size:32208060416 UUID:91a852c2-8727-4277-9d92-879ee1996503 Serial: Type:lvm Rotational:true Readonly:false Partitions:[] Filesystem:ceph_bluestore Vendor: Model: WWN: WWNVendorExtension: Empty:false CephVolumeData: RealPath:/dev/mapper/ceph--e29bf82e--86f1--4c8e--8412--c468def5a844-osd--block--2044a1ea--6e5e--4423--88cf--8947bf6957d1 KernelName:dm-0 Encrypted:false}
2021-02-11 13:05:15.730657 D | inventory: &{Name:dm-1 Parent: HasChildren:false DevLinks:/dev/disk/by-id/dm-uuid-LVM-GyLVW5UxDRcws8PwsbQuY2CjrQwdn1VxgPQjsKZ2pGVaS1r2Ct0OGZ4P80yEMtqW /dev/disk/by-id/dm-name-ceph--334c640f--7a7f--4fdb--9db4--2f9459e19f9a-osd--block--66ce11c8--20f0--4600--ae50--e8849c9a0af6 Size:32208060416 UUID:cdbcb218-1b03-4d8c-b7d2-25cb88e33b6a Serial: Type:lvm Rotational:true Readonly:false Partitions:[] Filesystem:ceph_bluestore Vendor: Model: WWN: WWNVendorExtension: Empty:false CephVolumeData: RealPath:/dev/mapper/ceph--334c640f--7a7f--4fdb--9db4--2f9459e19f9a-osd--block--66ce11c8--20f0--4600--ae50--e8849c9a0af6 KernelName:dm-1 Encrypted:false}
2021-02-11 13:05:15.730686 D | inventory: &{Name:dm-2 Parent: HasChildren:false DevLinks:/dev/disk/by-id/dm-name-ceph--a011b5c2--cc3f--497a--b19a--6d284461cbc4-osd--block--4de5491c--ecf8--455d--9858--547001fd0321 /dev/disk/by-id/dm-uuid-LVM-QGzgO4E228fvT3NsighNABGdvAKxQEhFOh9rKiDLnSOTk7jLZWu2r1RIMXe5GNqW Size:32208060416 UUID:2238ce24-79e4-41a0-b8ce-e381ac41d5b0 Serial: Type:lvm Rotational:true Readonly:false Partitions:[] Filesystem:ceph_bluestore Vendor: Model: WWN: WWNVendorExtension: Empty:false CephVolumeData: RealPath:/dev/mapper/ceph--a011b5c2--cc3f--497a--b19a--6d284461cbc4-osd--block--4de5491c--ecf8--455d--9858--547001fd0321 KernelName:dm-2 Encrypted:false}
2021-02-11 13:05:15.730713 D | inventory: &{Name:vda1 Parent:vda HasChildren:false DevLinks:/dev/disk/by-path/pci-0000:00:05.0-part1 /dev/disk/by-path/virtio-pci-0000:00:05.0-part1 /dev/disk/by-uuid/0fdf5e49-6b3c-42f2-a1c5-bf77e490dfa4 /dev/disk/by-partuuid/f9dd32c9-a4a5-654f-aee4-651276fdc754 /dev/disk/by-label/boot2docker-data Size:19998934528 UUID: Serial: Type:part Rotational:true Readonly:false Partitions:[] Filesystem:ext4 Vendor: Model: WWN: WWNVendorExtension: Empty:false CephVolumeData: RealPath:/dev/vda1 KernelName:vda1 Encrypted:false}
```

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit e6e9c8c9018953b7fdaaa4d0de2e044543e69a30)
docs: help topic for CSI troubleshooting

this commit add docs for CSI Troubleshooting when
hit with the issue in Provisioning the CephFS/RBD PVC
or Mounting the CephFS/RBD PVC to application pods.

Signed-off-by: subhamkrai srai@redhat.com
co-authored-by: Madhu-1 madhupr007@gmail.com
Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit dd9d1da2c815def62156a3a0e933b329896b10e9)
build: update release version to v1.5.7

The release version is now v1.5.7

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.5.7 is a patch release limited in scope and focusing on small feature additions and bug fixes.
Ceph
CSI Troubleshooting Guide (, @subhamkrai)
Print device information in OSD prepare logs (, @leseb)
Expose vault curl error in the OSD init container for KCS configurations (, @leseb)
Prevent re-using a device to configure an OSD on PVC from a previous cluster (, @leseb)
Remove crash collector if all Ceph pods moved off a node (, @leseb)
Add helm annotation to keep CRDs in the helm chart during uninstall (, @onedr0p)
Bind mgr modules to all interfaces instead of pod ip (, @travisn)
Check for orchestration cancellation while waiting for all OSDs to start (, @sp98)
Skip pdb reconcile on create and delete events (, @sp98)
Silence harmless errors in log when the operator is still initializing (, @leseb)
Add --extra-create-metadata flag to the CSI driver (, @Madhu-1)
Add deviceClass to the object store schema (, @travisn)
Simplify the log-collector container name (, @travisn)
Skip csi detection if CSI is disabled (, @jshen28)
Remove Rook pods stuck in terminating state on a failed node (, @rohan47)
Timeout for rgw configuration to prevent stuck object store when no healthy OSDs (, @sp98)
Update lib bucket provisioner for OBCs (, @satoru-takeuchi)"
"rgw: validate rgw endpoint ip

The ceph-external-cluster-details-exporter.py
generates the json output even with
rgw-endpoint IP from different cluster
Added a check validate_rgw_endpoint which will validate
the above rgw_endpoint Ip by matching the cluster fsid

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 09d52511ad613cdee0190f9143ba9e997235fc4b)
rgw: donot validate prefix rgw pools when prefix is default

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit cf29043f4d9744750860fe26a0f92bf70dfc55bf)
csi: update the upgrade flag description

Currently it was mention we are updating the csi-user
But more precisely we go and update the keyrings
which auto update users so replacing it

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit b97bc74f456dcf794d30ea930be3c382a9019975)
helm: only copy relevant monitoring settings

The cephcluster CR monitoring schema should be honored. The helm
chart was creating extra values that didn't match the schema by
copying the values such as createPrometheusRules that are only
used for template evaluation. Now only the monitoring values
from the schema will be added to the template.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 36f59bd527a24e649c6dbfed379ff6374e9b2ef9)
helm: only add monitoring to cluster if specified

If the monitoring settings are not specified in the values.yaml,
avoid a helm chart install error by skipping the monitoring
section of the cephcluster CR altogether.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit a3d65b3f93400d8c585565dcee040615c4f752a6)
operator: rename telemetry rook-version to rook/version

The Rook and Ceph teams settled on using slashes to separate Rook
telemetry items into a hierarchy in https://github.com/rook/rook/pull/10254.
Rename the config-key used to `rook/version`, and create a `telemetry`
package to define the telemetry key constants.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 6888d545d298ea450dd49f6267dafd7d8750df11)
osd: remove broken argument

During the tini's binary removal you overlooked that scenario and
introduced a bug in the OSD startup line.
We were passing the binary path as an argument, which is obviously wrong
and makes the OSD crash at boot.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit f79de7d69aaef42ba4be95ab73ae8f31c1da2065)
docs: add ceph telemetry design doc

Add a design doc for adding Rook telemetry to Ceph telemetry capture.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 8c45ebbd46042dd6d95857c539ea6091b56334d0)
docs: use mkdocs and restructure docs

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit 74431443e31eec775a8a89a4228edb78d6cff51e)
docs: factor out the csi custom image from upgrade doc

Deploying a custom CSI image is more of a standalone topic
under the CSI configuration docs. There is no need for the
upgrade guide to have the details about CSI images.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit b6c2b990677722f6dc6c3357e63b22c4ac16f092)
docs: factor out ceph upgrade from rook upgrade

The ceph upgrade guide is factored out into a separate document
to help simplify the flow and make the different types of
upgrades more easily discoverable.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 3e0f26ae0ec872ca345d433a28cd85c4fd90ee51)
build: move the help doc requirements to release folder

The requirements_docs.txt is expected by the build.docs
build target in build/release. Since the txt file was at
the root of the repo, the build was failing to be pubished
when it didn't find the file in build/release.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 557feb2f49bf5fb0f36bad9c53f4add1ad7774ac)
docs: fix latest release banner url

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit a17575f9d748e1a1720864e09d570038dbabad99)
docs: fix docs publish repo target

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit 0d815c0ffc61c42d758a52ef57cf26bc616b4c43)
ci: fix the doc build generation script

The doc build generation script is failing to install
the needed dependencies for mkddocs.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 03a091e74134a074e05562891a396eeaf5523ddc)
ci: mkdocs.yml must be in the release build folder

The docs failed to publish with the mkdocs.yml in the root
folder instead of where the docs are being built.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit c375bbd6f45fb8d0f54233d8723a27bafaf05d1d)
docs: added cpu requirements

Signed-off-by: Gaurav Sitlani <gaurav@koor.tech>
(cherry picked from commit 84c53d1444181898b9ce059f704d3f4eeecd468d)
build: correct architecture for the release build

The push image build CI action is mistakenly running on
arm64 instead of amd64, which is failing the build since
it only expects amd64.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 5793582a785b601a0bdefff4acaf0a4052d2592a)
build: add setup tools package for docs publish

The setup tools package and libgit2 are required on
ubuntu 18.04 in order to install the mkdocs framework
and publish the docs. After we move to ubuntu 20.04
this should no longer be necessary.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 2404fe12743fea25e9c6525f82370e823df52d4a)
docs: fix docs_dir build issue

Resolves

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit a156dc3ae759cce0888f8f98f1c98358d902361b)
docs: don't cd during docs publish

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit 2f75104238b7a36954f6d688ac4bf7e0b1be84fb)
docs: build docs from repo root

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit 46fa71c720c11df75e0ff4edf38719d408d6f065)
docs: use apt-get to install docs deps and configure git user

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit 548f723f1bc7d6a1610074af06263fd2f5144076)
build: install python3 version of pygit2 package for docs publish

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit c149d871c868dd71991477d4530a5b8d3da1b451)
build: remove extraheader from git config

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit de5777cde013434609f5dbde75fd3d470ead90ad)
docs: add missing spec in ceph-fs-mirror example

`spec` is a required field for the CephFilesystemMirror CRD

Signed-off-by: Benjamin Gentil <benjamin.gentil@infomaniak.com>
(cherry picked from commit 37d610185e3f1abccb7b5a5b1c66ac59cff9c5bf)
csi: update cephfs osd caps

Currently cephfs caps are data=filesystemname,
which only have write access, but not the read access
changing it to *=filesystemname so we can read data also

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit cbda9f2f7df9aa89513de33904ed66eb051ddc44)
build: update examples and base image to use ceph v16.2.9

In release 1.9, the operator base image has been changed to
ceph v16.2.9

Signed-off-by: parth-gr <paarora@redhat.com>
test: add canary integration test for osd with metadata device

""metadataDevice"" field in host based cluster is not tested yet.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 5b3633bfd6c2add55b2aa1dc15268cc5cb092650)
docs: improve Upgrade Health verification page

* Make ""Status Output"" command directly usable on a copy-and-paste basis
* Link to 'Rook toolbox' which can be helpful if somebody does not have a toolbox running

Signed-off-by: Timoses <timoses@tutanota.com>
(cherry picked from commit fdc2aecddb41894d6c40836d82300b4ada6d9e60)
build: update release version to v1.9.4

For the patch release the example manifests and docs are updated
to v1.9.4

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.9.4 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
build: Update examples and base operator image to use ceph v16.2.9 (, @parth-gr)
test: Add canary integration test for osd with metadata device (, @satoru-takeuchi)
csi: Update CephFS OSD caps for external clusters (, @parth-gr)
docs: New doc framework with mkdocs and related build changes (, @galexrt @travisn)
docs: Add ceph telemetry design doc (, @BlaineEXE)
osd: Remove broken argument for upgraded lvm-based OSDs on PVCs (, @leseb)
operator: Rename telemetry rook-version to rook/version (, @BlaineEXE)
helm: Only copy relevant monitoring settings (, @travisn)
rgw: Validate RGW endpoint IP for external clusters (, @parth-gr)"
"helm: add missing port for webhook in helm

adding port which was missing from helm rook-ceph chart
which is used by webhook due to which it was failing with
```
failed to run operator: gave up to run the operator manager: failed to
run the controller-runtime manager: listen tcp :9443: bind: address
already in use
```

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 94f0c0dc25485ef68a636da51335177d9317d396)
osd: support OSD on logical volume in host-based cluster

Rook supports raw mode OSD in host-based cluster. So we can also
support OSD on logical volume in this kind of cluster.

Logical volumes aren't picked by filters (i.e. `useAllDevices: true`
and `device{Path,}Filter` to avoid unwanted LV consumption on upgrade.

Closes: https://github.com/rook/rook/issues/2047

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 7e571f611472eef8ad385227140e8838b9c58c5c)
ci: fix workflow file

PR 10584 was merged by mistake even though lvm canary test failed. This test
failed due to the lack of the backport of a recent workflow file change (PR 10385).

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
mgr: skip updating service if there is no selector

When the mgr services are updated by the operator to set the
active mgr properly, skip services that do not currently
have a selector set.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit b8dac76d186ba47e9fd8a3263838200b47798ccd)
csi: default values of leader election not enough

csi pods uses leader election and they were using
default values but seems like default values of leader
election are not working for some specific clusters.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 5e92a30a7782669e4907f5635efac5de8a8efdf6)
ci: pin the whereabouts version to v0.5.3

The whereabouts manifests in the master branch
have moved around, so until the new approach
is investigated we pin to the latest release
version v0.5.3

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 53955790f35e64c9642d679f9f22fe017f9e8109)
osd: metadata device supports udev path

This commit adds udev path for metadata device

Closes: https://github.com/rook/rook/issues/10486

Signed-off-by: Liang Zheng <zhengliang0901@gmail.com>
(cherry picked from commit 7609dad72f02a2ba903bc6b5a9a7995b6f605b3f)
Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
external: fix secrets naming

The secrets are being created with ""rook-"" prefix, but used without it.
Signed-off-by: Ali, Akil <ali-akil@gmx.de>
(cherry picked from commit 25265bc9c29922857b29e227716bc652faa2f461)
object: generated code

Signed-off-by: zhucan <zhucan.k8s@gmail.com>
(cherry picked from commit 6f6c26009c70d7f9f4a05ba77287fe0231772a10)
object: support separated network for objectstore

Signed-off-by: zhucan <zhucan.k8s@gmail.com>
(cherry picked from commit 5ee75d6652a4ac52ca3f716babbb6f262db1b45b)
core: fix spelling

* another
* are
* availability
* available
* bootstrap
* boundaries
* ceph
* certificate
* class
* codifies
* consuming
* corrupted
* createor
* csi
* deployments
* exceeded
* execute
* filesystem
* healthiness
* heuristics
* immediately
* insecure
* installed
* isolated
* maintained
* maximum
* minute
* monitor
* new
* nginx
* nonexistent
* not
* occurs
* omitempty
* operator
* orchestration
* persistentvolumes
* placement
* preexisting
* prometheus
* protecting
* provisioner
* purposes
* reconcile
* regex
* related
* requests
* returns
* rubbish
* running
* schedulable
* schedule
* serviceaccount
* simulating
* snapshots
* statement
* static
* tenants
* the
* unavailable
* volumeattachment
* waiting
* with
* wrapper
* zonegroup

Signed-off-by: Josh Soref <2119212+jsoref@users.noreply.github.com>
(cherry picked from commit 6e7b8767f39287818fac066d2f77dcb2792eb22a)
docs: add telemetry section to quickstart guide

To start collecting telemetry on upstream clusters,
we add a new section to the quickstart guide that
requests users to enable the telemetry.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 9ea37be45f2edadbf534b4e0252641febe045299)
core: let IsInitialized return errors

Let's return an error instead of a bool so we can better parse it and
decide what to do with it.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 247d725aac43f46dc5c823fc59f4c1bd476511e5)
core: more checkpoint for context cancelled

Some context canceled were missed and not reported correctly. We had
multiple reconcilers running in //. Since they all run in goroutine then
will continue to run until they timeout (if timeout is available,
    otherwise would run forever until the op is restarted).

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit a6036074dbaab6e8c25b0eed13d4894454294c7d)
pool: configureRBDStats remove postfix dot in mgr config path

The ceph rbd_stats does not take affect with dot postfix.

Closes: https://github.com/rook/rook/issues/10574
Signed-off-by: shalev.p <shalev.p@taboola.com>
(cherry picked from commit 49996522bfe11fdd69a959dfaef13e8a6c94bab0)
docs: clarify PG count actions and update pgcalc URL

Signed-off-by: Anthony D'Atri <anthonyeleven@users.noreply.github.com>
(cherry picked from commit 6b2b0f468c2e2e8b57e6c2892790a15d3573af35)
build: update examples to ceph v16.2.10

With the release of ceph v16.2.10 we update the operator base
image and the default example install to configure v16.2.10.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
ci: use ceph v17.2.1 instead of latest v17

there could be something breaking with latest ceph.
So, let's stick to v17.2.1.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 4501cc25c6534a2fa66233812fe79f0a3382e07e)
docs: update Example Configurations Docs

Some link fixing in Example Configurations
Ref: https://rook.io/docs/rook/v1.9/Storage-Configuration/Block-Storage-RBD/rbd-mirroring/
     https://rook.io/docs/rook/v1.9/Getting-Started/example-configurations/#block-devices

Signed-off-by: chienfuchen32 <chienfuchen32@gmail.com>
(cherry picked from commit 5ddca98460f3bcb4675f70ed776fafff7b100f10)
helm: add labels and annotations to PrometheusRule

Signed-off-by: Mathieu Parent <mathieu.parent@insee.fr>
(cherry picked from commit 44b43557f9b142e87396039903b95aff8b2b5225)
build: update release version to v1.9.8

For the patch release the operator version and example manifests are
updated to v1.9.8

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.9.8 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
osd: Support OSDs on logical volumes in host-based clusters (, @satoru-takeuchi)
Report rbd pool stats properly (, @shalevpenker97)
helm: Add labels and annotations to the Prometheus rule (, @sathieu)
build: Set default Ceph version to v16.2.10 (, @travisn)
docs: Clarify PG count actions and update pgcalc URL (, @anthonyeleven)
core: Fix stuck reconciler with more checkpoints for cancelled context (, @leseb)
docs: Add telemetry section to quickstart guide (, @travisn)
core: Fix numerous spelling errors (, @jsoref)
object: Network mode can be set separately for cephcluster and rgw (, @zhucan)
osd: Add udev path support for a metadata device (, @microyahoo)
csi: Set leader election timeouts for the csi driver (, @subhamkrai)
mgr: Ensure service selector is initialized for services with label app=rook-ceph-mgr (, @travisn)
helm: Add missing port for webhook in the helm chart (, @subhamkrai)
external: Correctly name variables in import-external-cluster.sh script (, @der-ali)"
"docs: add comment regarding placement restrictions

The sample files placement rules are too restrictive for small clusters.
The comment provides a hint how to fix this.

Closes: https://github.com/rook/rook/issues/11658

Signed-off-by: Michael Lipp <mnl@mnl.de>
(cherry picked from commit f466789ad50672c166d54f62611d2e054569d28a)
rbdmirror: set log rotation from 7 to 4x i.e 28

increasing the rotation from default 7 to 28 as
in case of rbdmirror logs seems not enough in some cases
with maxLogSize 500 so it's better to increase the rotation
for rbdmirror specific.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 036715c3b2d0601c3cd0748429c69d62c86d1761)
object: rgw metadata pg count reduction on latest pacific

The removal of the rgw_rados_pool_pg_num_min property
was completed in v16.2.11 for Pacific. The previous
fix in PR 11024 only assumed the fix was in Quincy v17.2.2
or newer. Now we account for v16.2.11 as well.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 107d947f970871aa2af05ac22e85bdd632011ba6)
core: remove dead code for rook version labels

The RookVersionLabelMatchesCurrent() method is no longer
used, so remove it.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 47d7c06bdc47d95465e5f38f9bcb22bb3bc65293)
osd: ensure rook version label is not set on pod

The rook-version tag must not be set on the pod spec labels
since it will result in the ceph daemons being restarted every
time there is a rook version update, even if the ceph version
or pod spec was not otherwise updated.

The rook-version tag was being added to the OSD pod spec
due to a shared pointer to the labels. The code intended
to only add the version label to the deployment labels,
but since the pod labels shared the map variable, the
pod unintentionally also had the version label added.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 1ba93b4047c14d65f77a6167175b84f5a30e353c)
csi: add missing node access to cephfs driver

Node access is only needed when we are using
volumeBindingMode: WaitForFirstConsumer in
the storageclass its not required for Immediate
BindingMode.

fixes:

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 1cfa7eefaea2d3923487861258a50c6371f53376)
object: update os user caps

Removing user caps will be skipped as the UserCaps is empty, which will cause updating user caps to not take effect.

Signed-off-by: Liang Zheng <zhengliang0901@gmail.com>
(cherry picked from commit c81aa7f8566bee247f9de11b0ae22adb6c5f82f1)
build: allow building on Mac with Apple silicon

There are a couple minor changes needed to allow building Rook on Apple
silicon.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 442e6480bd2e4de9d5601fd4d92b791251adebd7)
osd: handle device name change and device removel correctly

If a kernel device name change happens and a block device file
in the OSD directory becomes dangling link, this OSD fails
to start continuously. This problem can be resolved by confirming
the validity of the device file and recreating it if necessary.

The original problem happened in host-based clusters. A similar
problem exists in PVC-based clusters. In this case, if a PV,
corresponds to an existing OSD, and points to a missing block
device file, the OSD pod fails to consume this PV. Although this
behavior is undesirable, I don't think this problem should be
handled in Rook. If doing so, we must re-create the existing PV.
Rook shouldn't do such work.

Closes: https://github.com/rook/rook/issues/10860

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 3a44a394b5e57e611588981dabd12f820e94a6fd)
build: set the release version to v1.10.12

For the patch release update the examples and docs to
v1.10.12

Signed-off-by: travisn <tnielsen@redhat.com>","Improvements
Rook v1.10.12 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
osd: Handle device name change and device removal correctly (, @satoru-takeuchi)
object: Update object store user caps (, @microyahoo)
csi: Add missing node access to CephFS driver (, @Madhu-1)
object: Handle RGW metadata PG count reduction on 16.2.11 (, @travisn)
osd: Ensure rook version label is not set on OSD pod (, @travisn)
rbdmirror: set log rotation for rbd mirroring daemon to 28 rotations (, @subhamkrai)"
"build: print go version when building

Print the Go version when running any Go build target. This can be
helpful in making sure that we are building with the Go version we want
and expect.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit a83745cbcdd9edbef6c4774f0c5540a23821bdd5)
build: use latest golang v1.16.7 (Go CVE-2021-34558)

Rook CephObjectStore S3 connections may be affected by CVE-2021-34558.
This is fixed in Go v1.16.6, so we update to the latest Go version
available to ensure this is fixed in future builds.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 1592c9b9dadf1735794def6f7df15bfd20e6c331)
nfs: bump nfs-ganesha to 3.5 version

Signed-off-by: Oleksii Kravchenko <kamikaze.ua@gmail.com>
(cherry picked from commit 62463dc61d23882fdc28117b53225337471272f3)
ceph: make storage device config nullable

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 36c53fe6f321c5ecafc5e9f9aec60c25d175f2f7)
ceph: use serviceAccountName as the key in ceph csi templates

Signed-off-by: Humble Chirammal <hchiramm@redhat.com>
(cherry picked from commit dff0513750ddf6737641f294f76ec28811897ead)
ceph: add `-0` for helm k8s version check

to use prerelease of kubernetes it requires
to have `-0` added in kubernetes version check
ex:
```{{- if semverCompare "">=1.16.0-0"" .Capabilities.KubeVersion.GitVersion }}```

Closes: https://github.com/rook/rook/issues/8548
Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 1681cfe89d85513392cf3397a0de6984d41a168b)
ceph: add permissions to rook-ceph-mgr role for osd removal

This commit adds permissions to the rook-ceph-mgr role
to delete PVCs and deployments and patch deployment scale
to remove OSDs using `ceph orch osd rm` in the rook orchestrator.

Signed-off-by: Joseph Sawaya <jsawaya@redhat.com>
(cherry picked from commit 331e06659e25851db4f83fcaaaf0dc61b8820c1f)
core: convert util.NewSet() to sets.NewString()

Converting util.NewSet() instance to use sets.NewString() instance

Closes: https://github.com/rook/rook/issues/8479
Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 1601ba1c1cca8e72b7e17230f211f84770579d60)
ceph: signal signals handling with context

As of Golang 1.16, we can use `signal.NotifyContext()` from the signal
package. Essentially it combines signal handling for termination as well
as canceling the context to stop any ongoing operations.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 4e2879a15476d12bace38ce27a95b1bd35ff9282)
ceph: fix panic in reCreateCSIDriverInfo

Initialize the client and the csidriver object
before calling the reCreateCSIDriverInfo
function.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit d48f67a82cb580791b42102f693962a404009094)
ceph: fix logging of csidriver

log the successful message about
starting CSIDriver after creating
the daemonset and deployment objects.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit e2dc41837151c4b9372701c65459fd3e09af2ba2)
ceph: remove variable declaration

remove csiDriver and csiClient variables
creation and reuse them from the method
receivers.
Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit d246dde443bc2e68ce63f4a8575968ab16ff7c9d)
ceph: add support for update() from lib-bucket-provisioner

Recently lib-bucket-provisioner add support for update() API.
Include that on the obc implementation since it can be used to
update quota for OBC.

Fixes:

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit f4bb47e4408cfef996fbf25b77dbdcde042e9ff6)
core: convert util.NewSet() to sets.NewString()

Converting util.NewSet() instance to use sets.NewString() instance

Closes: https://github.com/rook/rook/issues/8479
Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 77ba1ef11b9fee4064aacdf370ef48649366991d)
core: removing util.set package files

We are no longer using package util.set
for creating instances,
and instead of that using sets.String package

Closes: https://github.com/rook/rook/issues/8479
Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit b1cfeb9dbe571ef2d8092dcbc5d8604e51c6b074)
ceph: do not check ok-to-stop when OSDs are in CLBO

This handles the scenario where the OSDs have been created but not yet
started due to a wrong CR configuration.
For instance, when OSDs are encrypted and Vault is used to store
encryption keys, if the KV version is incorrect during the cluster
initialization the OSDs will fail to start and stay in CLBO until the
CR is updated again with the correct KV version so that it can start.

For this scenario, if the CRUSH map has no host registered yet it's fair
to assume the initialization broke and we need to fix it. So when don't
need to call ok-to-stop since it will always fail and eventually force
pass but let's not wait for nothing.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 88048cc4e871ced8cb452245cbf034f4cbf9e666)
ceph: merge toleration for osd/prepareOSD pod if specified both places

earlier, `ApplyToPodSpec()` was only taking one toleration and ignoring
tolerations from `placement.ALL()`.

this commit merge toleration for Mgr,Mon,Osd pod
example, for osd it will merge
spec.placement.all and
storageDeviceClassSets.Placement(in case of pvc) or
spec.placement.osd(in case of non-pvc's).

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit e1f232eeb7ac716e53ec27912ac0556062085a83)
ceph: consolidate the calls to set mon config

The mon config had two different implementations that have evolved
over the lifetime of the project. This is a simple refactor to remove
the SetConfig() option and stick with the MonStore as a single
implementation for updating the mon store.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit cdfe1982d1c0121d162b99299f1ebf460d960511)
ceph: test against release version in the branch

The release version needs to be the same in the example/test manifests
as it is in the local build image. The github actions are different in
this regard than the Jenkins builds were. The Jenkins builds always
locally used the master tag instead of a release-specific tag.
Now that the github actions use the release-specific tag, the test
framework no longer should be using the master tag in release branches.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 23b772643bb36b4e4b27ef32477f4b7141d87896)
build: update release version to v1.7.2

Update the example manifests and git tags for the v1.7.2 release.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.7.2 s a patch release limited in scope and focusing on small feature additions and bug fixes.
Ceph
Merge toleration for osd/prepareOSD pod if specified both places (, @subhamkrai)
Fix panic when recreating the csidriver object (, @Madhu-1)
Build with latest golang v1.16.7 (, @BlaineEXE)
Do not check ok-to-stop when OSDs are in CLBO (, @leseb)
Convert util.NewSet() to sets.NewString() (, @parth-gr)
Add support for update() from lib-bucket-provisioner (, @thotz)
Signal handling with context (, @leseb)
Make storage device config nullable (, @BlaineEXE)
Allow K8s version check on prerelease versions (, @subhamkrai)
Add permissions to rook-ceph-mgr role for osd removal in rook orchestator (, @josephsawaya)
Use serviceAccountName as the key in ceph csi templates (, @humblec)
Consolidate the calls to set mon config (, @travisn)
NFS
Upgrade nfs-ganesha to 3.5 version (, @kam1kaze)"
"ci: trigger push build action after tag creation

earlier push build action was not triggered due
to github action limitation.
```
An action in a workflow run can’t trigger a new workflow run.
```

so now, we'll use user personal toke to create tag so that push
build action pick the user not github action who created the tag.

Closes: https://github.com/rook/rook/issues/8580
Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit c53304c3b4f762488d8129cecc65282eaa612acc)
ceph: adding CephMonQuorumLost critical alert

Signed-off-by: Arun Kumar Mohan <amohan@redhat.com>
(cherry picked from commit 5c34393eca1192f6a48d2818d9e19581465f290c)
ci: fix mirror scenario by removing ownerref

When we copy the peer token secret from a namespace to another we also
copy the ownerref, however the creation succeeds but the controller
removes the secret since the uid of the owner do not exist in that
namespace.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 07f006ac43c909ffa79a01300408d6a958fdbec6)
ceph: update endpoint with IP for external RGW server

For external RGW server use the IP mentioned in Gateway for admin Ops
operattions.

Fixes:
Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit d4562f6b83bcc8c0f9c037699ed8b749a494f4fe)
docs: add a document to set-up rbd mirroring

The document tracks the steps which are required
to set-up rbd mirroring on clusters.

Signed-off-by: Yug Gupta <yuggupta27@gmail.com>
(cherry picked from commit e584efa96694ea532657d7ce48fcbf853f8102c1)
docs: add documents for failover and failback

add a document to track the steps for failover
and failback in case of Async DR; for Planned
Migration and Disaster Recovery use case.

Signed-off-by: Yug Gupta <yuggupta27@gmail.com>
(cherry picked from commit c0b8f5a708913cf661f413fc75ff6e03f9c30383)
ceph: add mirrored pool yaml

Add a new yaml for creating pools that
have mirroring enabled.

Signed-off-by: Yug Gupta <yuggupta27@gmail.com>
(cherry picked from commit 41ef8561d03cb10bd8f53e23286af1bd5ce862f1)
ceph: add volume replication cr yaml

Add a new yaml for creating volume replicationclass
and volume replication cr.

Signed-off-by: Yug Gupta <yuggupta27@gmail.com>
(cherry picked from commit 0f62a7c03d56a23729a74279e476660e85a49053)
test: create volume replication crds for yaml validation

The yaml validation of the examples folder requires all the CRDs
to be created in advance of the dry-run command.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 2c61ea2fc3f331271dd38cf22d743a1596f82549)
core: treat cluster as not existing if the cleanup policy is set

The cluster CR can be forcefully deleted and cleanup the
cluster resources if the yes-really-destroy-data policy
is set on the CR. In this case, the other controllers should
treat the cluster CR as not existing and allow the finalizers
to be removed on those resources if they are requested for
deletion.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit fd10d98dc60d149d41377e97d1f14e4c657a4823)
rgw: stop using context.TODO() and use parent ctx

The clusterInfo has the parent Context so let's use it.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit c54a5556f31cbdd6b11d0ff6916d17bcde630db8)
ceph: ability to set label to crash collector

We can now set labels to the crash collector deployment by editing the
CephCluster CR with:

```yaml
spec:
  labels:
    crashcollector:
```

Closes: https://github.com/rook/rook/issues/9039
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 4f2c685ad958009412bcbaf4ee543a439f0488a6)
rgw: read tls secret hint for insecure tls

If the admin wants to use insecure TLS to validate connections to rgw
internally, the TLS secret can have another entry ""insecureSkipVerify""
and set it to ""true"".

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 86c9a8f3dee76c0077d2a9d2853476ec7400a583)
helm: add appversion property to the charts

The appVersion should be set to the version of the application. Since the helm
charts are built by Rook in the same release version as Rook itself, the
version and appVersion values will be the same.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit bffe99c39d4ceeb48d6abd97b75f0f6ed76101e0)
docs: add doc note for caBundleRef for cephobjectstore

Add missed doc note for caBundleRef added as fix for issue
https://github.com/rook/rook/issues/8490

Related-Issue: https://github.com/rook/rook/issues/8490
Signed-off-by: Denis Egorenko <degorenko@mirantis.com>
(cherry picked from commit 7f9f760d70fddc17116887103c35995f73aa9be0)
bot: add more commitlint tags, remove ceph

Remove the unspecific 'ceph' tag, and add a few other specific tags:
  block (for block storage that is not pool-specific)
  file (for file storage that is not mds-specific)
  monitoring (for prometheus, etc.)
  nfs (for CephNFS and nfs-ganesha)
  object (for object storage that is not rgw-specific)

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 010addaf5d8bcb76bcf2e45cab766f958d25ab4e)
nfs: add pool setting CR option

Ths NFS spec now supports the CephBlockPool spec which means that it can
take advantage of all the known settings like compression, size, failure
domain etc.

Closes: https://github.com/rook/rook/issues/9034
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit e0145b9643e1cc138e3212a68eb6c9faa4ac6529)
mgr: do not set the balancer mode on pacific

On Pacific, Ceph's default is ""upmap"", so we should let it be
like this.
This lets the user change the mode is desired.
On Octopus though, Rook continues to force the mode to ""upmap"".

Closes: https://github.com/rook/rook/issues/9062
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit bccc84efa2c88644505d2763398e99d99cb19f8e)
rgw: change the way to livenessProbe and introduce readinessProbe

rgw doesn't respond `livenessProbe` if the number of connection reaches its
limit (by default, 1000). Then rgw is out of service but still live.
Hense the current `livenessProbe` logic is suitiable for `readinessProbe`.
`tcpSocket` is enough for `livenessProbe`.

Remove rgw-multisite-test related code because this test doesn't exist
in release-1.7 branch.

Closes:

Signed-off-by: Yuzuki Mimura <yuzuki725.m@gmail.com>
Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 536b59ef0f7cd20f60634eceb23b6e0dbb8ca5e8)
monitoring: fix 'CephMonQuorumLost' alert

Only the 'Running' mons with result value of '1' should be counted.

Signed-off-by: Arun Kumar Mohan <amohan@redhat.com>
(cherry picked from commit af44e5c58470f3bf1d5e950dc19e07c70de693da)
rbd-mirror: use a sorted list for peer token content

The monitor list was not sorted, so each time we were reconciling, the
peer secret token will see its content updated with randomized
monitors. This would enter our predicate and trigger a reconcile.
Potentially an endless one, if the randomized list is already different.

Closes: https://github.com/rook/rook/issues/9076
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 8cb6cdcea428e72e6b9021ff9cba548f5ab60626)
bot: add `security` and `operator` as commitlint tags

add `security` and `operator` as commitlint tags

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 2cb90be600dd75ddb510144a760ff1c0c9dd51bc)
core: allow downgrade of all daemons consistently

In the event a ceph image is specified that is lower than the current running
version of the daemons, the downgrade is allowed, even if not technically
supported. All of the core daemons (mon,mgr,osd) were being downgraded,
but the daemons for other controllers (rgw,mds,rbdmirror) were not being
downgraded, resulting in an inconsistent cluster. Now we log that the downgrade
is not supported and all all of the daemons to be downgraded.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 0c6ed25c4e8c29a0c933a15c4dbb59614d310114)
csi: support ephemeral volumes with Ceph CSI RBD and CephFS driver

This commit make required changes for ceph csi drivers to work with
ephemeral volume support. With ephemeral volume support a user can
specify ephemeral volumes in its pod spec and tie the lifecycle
of the PVC with the POD.

An example POD spec looks like this:

```
kind: Pod
apiVersion: v1
metadata:
  name: csi-rbd-demo-ephemeral-pod
spec:
  containers:
    - name: web-server
      image: docker.io/library/nginx:latest
      volumeMounts:
        - mountPath: ""/myspace""
          name: mypvc
  volumes:
    - name: mypvc
      ephemeral:
        volumeClaimTemplate:
          spec:
            accessModes: [""ReadWriteOnce""]
            storageClassName: ""rook-ceph-block""
            resources:
              requests:
                storage: 1Gi
```

Signed-off-by: Humble Chirammal <hchiramm@redhat.com>
(cherry picked from commit dcf522c37d2148d973c3d52edf93ea3f473cf754)
build: update the patch version to v1.7.7

The example manifests and documentation are updated to v1.7.7

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
build: add create-tag workflow

Add the workflow that allows us to create release tags to the
release-1.7 branch.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
build: backport gen_release_notes.sh script

Backport the tests/scripts/gen_release_notes.sh script to release-1.7
that is needed by the create-tag workflow.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
Revert ""ci: trigger push build action after tag creation""

This reverts commit c53304c3b4f762488d8129cecc65282eaa612acc.

After experimenting with this release, we have found that the
`workflow_run` action source doesn't work for branches. The
documentation was updated with this PR and has more detail.
https://github.com/github/docs/pull/531

For now, we will revert back to using on.push.tags = [""v*""]

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 30e02c1063a2c9568edb651563e4f6b5efeb0225)","Improvements
Rook v1.7.7 is a patch release limited in scope and focusing on small feature additions and bug fixes to the Ceph operator.
docs: Support ephemeral volumes with Ceph CSI RBD and CephFS driver (, @humblec)
core: Allow downgrade of all daemons consistently (, @travisn)
core: Reconcile once instead of multiple times after the cluster CR is edited (, @leseb)
nfs: Add pool setting CR option (, @leseb)
ceph: Trigger 'CephMonQuorumLost' alert when mon quorum is down (, @aruniiird)
rgw: Updated livenessProbe and readinessProbe (, @satoru-takeuchi)
mgr: Do not set the balancer mode on pacific (, @leseb)
helm: Add appVersion property to the charts (, @travisn)
rgw: Read tls secret hint for insecure tls (, @leseb)
ceph: Ability to set labels on the crash collector (, @leseb)
core: Treat cluster as not existing if the cleanup policy is set (, @travisn)
docs: Document failover and failback scenarios for applications (, @Yuggupta27)
ceph: Update endpoint with IP for external RGW server (, @thotz)
Full Changelog: v1.7.6...v1.7.7"
"ceph: update the csi sidecar versions in templates and documentation

Signed-off-by: Humble Chirammal <hchiramm@redhat.com>
(cherry picked from commit 966a88ea81b08892e2245e765912f06ae8756454)
ceph: prometheus rules format changes

Due to the latest jsonnet and jsonnetfmt, v0.17.0, we have the
`description` and `message` lines format changed.

Signed-off-by: Arun Kumar Mohan <amohan@redhat.com>
(cherry picked from commit 55faa31230b8ebdbbeb324af3df75d0b02c16cff)
ceph: adding 'namespace' into the result of 'ceph_node_down' query

This will add 'namespace' field into the result of 'ceph_node_down'
query.

Signed-off-by: Arun Kumar Mohan <amohan@redhat.com>
(cherry picked from commit 11ff00e309c007938548822a12f81c99f326a21a)
ci: wait longer for csi to be available

Sometimes the CI needs more time...

Closes: https://github.com/rook/rook/issues/8825
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 85216a266cca4e0acb7b7309d00b1e7bcd022b47)
docs: fix link to advanced documentation

The ceph common issue had a bad link to the advanced doc topic.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit c5757402d1678ed078c675f4503d25f5d2e6ac15)
ceph: add signal handling for log collector

The log collector was not responding to SIGINT or SIGTERM correctly
since the parent bash process did not have the job control functionality
enabled. Now any signal received on bash will exit the container
immediately.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit a649f641009b38b6b7434a513e97b577ddfcd0b6)
docs: fix the example of local PVC based cluster

PV for mon must be a filesystem volume.

Closes: https://github.com/rook/rook/issues/8818

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 8c7f2ba4d52728b3e9472f8628bec91baf79311b)
ceph: add missing rights rook-ceph-purge-osd account

The purge osd job need to read and update persistentvolumeclaims
While the job doesn't failed with osd and deployments well deleted
The associated pvc is not deleted by the job as it failed to read it

Signed-off-by: n.fraison <n.fraison@criteo.com>
(cherry picked from commit 51500189373bed42af94446236af853cf5bfea4a)
ci: wait longer for pod label to be deleted

I've seen cases were the CI needs a few more seconds to delete and
object store. When logging in the runner, the object store is gone and
the timing matches too with the runner's logs (comparing with the
operator's logs).

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit b4a36e99674d44cb807e40294133e68c13153bd8)
ceph: fix external script when passing monitoring list

If we call the script with --monitoring-endpoint
10.1.8.29,10.1.8.36,10.1.8.25, we need to parse each comma-separated
address and not the entire block.
Now each address is tested properly.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit f47b870718cec36db2c70fdacf01f578199852fb)
rgw: use insecure TLS for bucket health check

We have seen cases where the signed certificate used for the RGW does not
contain the internal DNS endpoint, resulting in the health check to fail
since the certificate is not valid for this domain.
People consuming the gateways by external clients and for specific
domains do not necessarily have the internal DNS configured in the
certificate.
So let's be a bit more flexible and simply ensure a connectivity check
and bypass the certificate validation.

Also, this is fixing the tls code in newS3Agent and adds unit tests.

Closes:
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit cda5dad291d940b5a7f596f125c9845c64b1146a)
ceph: do not build all the args to remote exec cmd

When proxying commands to the cmd-proxy container we don't need to build
the command line with the same flags as the operator. The cmd-proxy
container does not use any ceph config file and just relies on the
CEPH_ARGS environment variable in the container. So passing the same
args as the operator causes to fail since we don't have a ceph config
file in `/var/lib/rook/openshift-storage/openshift-storage.config` thus
the remote exec fails with:

```
global_init: unable to open config file from search list ...
```

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 17999bcb3d89b12740c8342c55fbd628b7b3c841)
build: update command to generate image list

While build.all we have race condition where images.txt
file was update with duplicate entries. So, removing `-a`
from 1st tee and also add `sort -h`and `uniq` command to
confirm no duplicate entry is in the file.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 2d7755ca1541cbe8978a9624228606d7e938f3ad)
Signed-off-by: subhamkrai <srai@redhat.com>
ci: retry on image pull error

Try to avoid the following:

```
error pulling image configuration: received unexpected HTTP status: 500 Internal Server Error
```

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit e3f7d2f0467e513e10f7c4e796880e0be77142de)
ceph: do not fail on keys deletion

Prior, we were returning a nil map and thus the assignment for forced
deletion was not working since we were trying to assign on a nil map.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 2e73baf4f590cad7626fb9763b46dfe8a541c6b2)
rgw: update period if period does not exist

Rook should update the RGW object store's period if the period doesn't
yet exist. This protects us from the case where the
'radosgw-admin period update --commit` command fails and the
CephObjectStore controller reconciles again.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 7b9293624ab7b6dafcb9d2fa9ec4e8374c9d20f3)
build: use intermediate tmp for offline image gen

Reading from a file, processing the file in a pipe, and outputting the
piped content to the same file can have undefined results, often leading
to an empty file. Use an intermediate temp file for generating the
offline image list.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 24bf99f31cf6e1111e0789ca8f91daa3d0f1d5b7)
ceph: adding 'namespace' field to the needed ceph queries

Signed-off-by: Arun Kumar Mohan <amohan@redhat.com>
(cherry picked from commit 8950e78a4f9a15669fee50699647cc6249068322)
rgw: add period does not exist debug message

Log as a debug message when the RGW period will be updated because it
does not exist.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit e10fb751e53eca8dee453ccc100dddddb2b1c4ca)
ceph: change CephAbsentMgr to use 'up' query

Instead of using 'absent' query, we are trying to use 'up' which should
provide us with the needed 'namespace' field in the resultant metrics

Signed-off-by: aruniiird <amohan@redhat.com>
(cherry picked from commit 854eb0113f2fb8749f2a73da56efba8e52166584)
ceph: increasing the auto-resolvable alerts' delay to 15m

The following alerts,

CephMonHighNumberOfLeaderChanges
CephOSDDiskNotResponding
CephClusterWarningState

, which are resolved automatically, in most cases,
are causing unnecessary admin events. So we are increasing the
alert delay time to '15m'.

Signed-off-by: Arun Kumar Mohan <amohan@redhat.com>
(cherry picked from commit a7f16c912ab2eb26f7d8ee341f9471e6520cd061)
ceph: reverting the time delay of 'CephMonHighNumberOfLeaderChanges'

As 'CephMonHighNumberOfLeaderChanges' means there is a
multiple monitor election and indicate some communication
issue between the monitors. Increasing interval timing for
this alert is not considered as safe. So reverting this
change back to 5m

Signed-off-by: Arun Kumar Mohan <amohan@redhat.com>
(cherry picked from commit 4d845425e652a109abe7f61c3460e947d3e797f8)
docs: add doc to recover from pod from lost node

This commit adds the doc which has the manual
steps to recover from the specific scenario
like
`on the node lost, the new pod can't mount the
same volume`.

Closes: https://github.com/rook/rook/issues/1507
Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 758770474396dcb9eb12c2b436e007af2aea12fe)
core: close stdoutPipe for the discovery daemon

Closing stdoutPipe for the discovery daemon that
could possibly leaks memory due to unclosed resources.

Closes: https://github.com/rook/rook/issues/8914
Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 6387c7d0631e35d5aa3a25d6219e9c9369b0d730)
docs: add node restart requirement for csi upgrade issue

The cephfs csi volume plugin if restarted when host networking is not
enabled will cause the volumes to hang. In Rook v1.6.0 - v1.6.4
host networking was not enabled by default, causing all cephfs
volumes to hang during upgrade from those releases.
A note is added to the upgrade guide to help make this issue
more visible.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
ceph: initialize rbd block pool after creation

This is done in order to prevent deadlock when parallel
PVC create requests are issued on a new uninitialized
rbd block pool due to https://tracker.ceph.com/issues/52537.

Fixes:

Signed-off-by: Rakshith R <rar@redhat.com>
(cherry picked from commit ab87e1d2389fe034c16a215a71d4d1fba6570ad9)
csi: no longer install the volumereplication crds from rook

The volume replication CRDs are an external component, not owned by Rook.
Therefore, they should be installed as any other independent component
in case the admin will install other consumers of the volumereplication CRDs
in the future in addition to Rook and the CSI driver.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit c420f2309c3af71c55a8ef31bd0c6616b7ad38e3)
build: update the patch version to v1.7.5

The example manifests and documentation is updated to v1.7.5

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.7.5 is a patch release limited in scope and focusing on small feature additions and bug fixes to the Ceph operator.
Update csi sidecar references to the latest versions (, @humblec)
No longer install the VolumeReplication CRDs from Rook (, @travisn)
Initialize rbd block pool after creation (, @Rakshith-R)
Close stdoutPipe for the discovery daemon (, @subhamkrai)
Add documentation to recover a pod from a lost node (, @subhamkrai)
Increasing the auto-resolvable alerts delay to 15m (, @aruniiird)
Change CephAbsentMgr to use 'up' query (, @aruniiird)
Adding 'namespace' field to the needed ceph queries (, @aruniiird)
Update period if period does not exist (, @BlaineEXE)
Do not fail on KMS keys deletion (, @leseb)
Do not build all the multus args to remote exec cmd (, @leseb)
Fix external script when passing monitoring list (, @leseb)
Use insecure TLS for bucket health check (, @leseb)
Add PVC privileges to the rook-ceph-purge-osd service account (, @ashangit)
Fix the example of local PVC-based cluster (, @satoru-takeuchi)
Add signal handling for log collector (, @leseb)
Prometheus rules format changes (, @aruniiird)
Add namespace to ceph node down query (, @aruniiird)"
"build: replace local build tag with regex

The local build tag replacement in the CI should work the same
whether in master or release branches, so we use a regex to
match any rook/ceph tag to be renamed to the local-build tag.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 7167de0601afb9aa28d8737df75e6558421530e6)
core: limit use of wildcards in cluster-scoped rbac

Rook needs to be able to watch all `ceph.rook.io` resources to reconcile
them; however, it does not need blanket verb privileges. Reduce the
privileges as much as possible.

Ideally, Rook would only have update permissions to status and
finalizers of resources; however, finalizers are not a full-fledged
subresource at this time, and ""update"" permissions must be maintained
for `ceph.rook.io` resources.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 684fe30126b54a711f44005d408ae32ef052a60c)
security: update auth permissions for external cluster

Added a clusterName, poolName , filesystemName, radosNamespace
as a suffix on ceph auth principals for external cluster so
every csi authentication would be unique if
restricted_auth_permission flag is specified.

Closes: https://github.com/rook/rook/issues/9192
Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 6ed7423bac8ecedafbbb5bea00d4650f9f128884)
security: make cephfs_filesystem_name flag optional

cephfs_filesystem_name flag isn't mandatory if restricted_auth_permission
is on.

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 4a3088c5801ffc7434f376bc1870e6b6cdc7a2fa)
osd: use cluster name when fetching the cephcluster

Previously we were using the namespace, it's a mistake, even though most
clusters use the same name as the namespace.
Let's be precise and use the cluster name when looking for it.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 0a54db935bbd6f15cd836c61ee9d2d124c6f3d05)
helm: use operatorNamespace if exists for monitoring RBAC

right now the RoleBinding for monitoring is created with the cluster namespace as the subject
this causes the operator to loop on reconcile due to it not having permissions to create monitors
in the other cluster

moving the subject to the operator namespace fixes this

Signed-off-by: Henry Zhang <me@henry.dev>
(cherry picked from commit 3d89834ee406937a68a8ea3c2221933e3b8a2801)
build: make crd/rbac generation order deterministic

Linux doesn't guarantee file ordering, so when dealing with files in
order, we can use 'sort' to make sure the order is deterministic. For
yq's usage of files, we need to keep file names in an intermediate
variable, and this should be an array to support file paths with spaces.
'readarray' is not available on MacOS's built-in bash, so a longer
'while read' loop is needed for the array creation.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 6f4a23694d26608ef360da3fb0a6cbb3a575cd07)
osd: add ibm key protect kms

The cluster-wide encryption feature now has a new supported key
management system: IBM Key protect. More information about the backend
can be found in Rook documentation under the

Today's implementation stores OSD encryption keys has ""Standard"" keys.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit a7acf490b60f2c52803e96cf42405f21939eaa81)
mgr: update services when active mgr changes

When the active mgr changes, there may be user-created services
that also need to have their selector updated to point to the
new active mgr. Now the operator will update any service in the
rook operator namespace that has the label app=rook-ceph-mgr
to point to the active mgr.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 11127f54ca6be21c93da16b664fc57058632f341)
ci: skip encryption test if env is not set

If the secret is not present in the run then let's skip it.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit f014724288c7feb6539bc0d3b8f614aaf9cb1777)
osd: correct bluestore compression min blob size for ssd

Update bluestore compression min blob size for ssd to 8192.
It was typo which was added long time back.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit d87be97a50ef67c1696e96eb44ff06d624352d6e)
csi: update ceph csi images to release 3.5.0

Signed-off-by: Humble Chirammal <hchiramm@redhat.com>
(cherry picked from commit e8d9884f05660a460d831f2ee7b8b00b2ce9e347)
csi: update sidecar to the latest releases

Below sidecars are updated to the latest releases with this commit.

csi-provisioner      : 3.1.0
csi-attacher         : 3.4.0
node-driver-registrar: 2.4.0

Signed-off-by: Humble Chirammal <hchiramm@redhat.com>
(cherry picked from commit b7584f30071003f4ba948b74ac5f3846eac34d56)
build: set LC_ALL on the make target

Simply applying `LC_ALL=C` will work for the current shell only. For all
the shells and sub-shell to use it, we must set it globally.
Making it the first thing in the Make entrypoint now so the CRD and RBAC
sorting works on all the platforms.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 8512b6a0e17e04528865db4733b760336b26d075)
docs: update scaledobject.yaml for applicable with keda v2.5

Even though mention about keda 2.x version, the scaledObject.yaml or
rgw-keda.yaml referring to older keda CRs

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit e90c36f25550a99b1ce6a5813a368b0dc7a05470)
csi: add osd blocklist capabilities to the external cephcluster

The CSI users created by the external script(both for rbd and cephfs)
need the blocklist capability so the CSI pods can execute the
`osd blocklist` commands for metro DR
update the mon caps of csi users with `profile simple-rados-client-with-blocklist`
so they have privileges to run osd blocklist cmds

Closes: https://issues.redhat.com/browse/RHSTOR-2451

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 7e851f15c6506838329ce6b9d8012f73177996ef)
csi: implement csi-addons sidecar

This commit implements the csi-addons sidecar.

Signed-off-by: yati1998 <ypadia@redhat.com>
(cherry picked from commit 2b92dc812c52cbd278f2dc566795e3293f513603)
csi: restrict csiaddons to use only 1 port

This commit restrict csiaddons to open only 1 port
as per the requirement which is required for security.

Fixes:

Signed-off-by: yati1998 <ypadia@redhat.com>
(cherry picked from commit c559bbdf6bdf5727530b080129c21c4bf91a2437)
mon: add annotation to mon secret and cm

add annotations to secrets and configmaps to use
different tools to sync secrets and configmap.
Currently, these annotation is applied only on
the `rook-ceph-mon-endpoints` configmap and
the secrets `rook-ceph-mon` and `rook-ceph-admin-keyring`.

Closes: https://github.com/rook/rook/issues/8999
Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 02d43e82e04d080f7c98ec9aa96ed56a2a2673ad)
csi: add support to create volumesnapshotclass

add support for helm charts to create default
volumesnapshotclass for cephfs and rbd

fixes:

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 85dc21270434b97b3710fcd5084eca2a1c586fff)
core: support priority class for crashcollector

Support priorityClass to crashcollectors as mons, mgrs, and osds.

https://rook.io/docs/rook/v1.8/ceph-cluster-crd.html#priority-class-names-configuration-settings

The main use case is applying the high priority to crashcollectors to preempt normal pods
under heavy load. Without this feature, we might lose crash information.

Closes: https://github.com/rook/rook/issues/9500

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 5465481e0b3cfcfeb09481080488c4bf62545fb7)
core: reconcile operator configuration with env var

Previously, we were ignoring configuration changes coming from the
operator's pod env variables. We were assuming most users were using the
operator configmap ""rook-ceph-operator-config"" but most Helm users
don't. Now we will reconcile if a cephcluster is found during a CREATE
event (can be an operator restart or a cephcluster creation) AND no
""rook-ceph-operator-config"" is found which means the operator's pod env
var are used.
Also, unit tests have been added (long due) for the predicate!

Closes:
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 1208bc141023ec0aa64ac9a8e7f2293f6b8a7043)
helm: apply operator settings in configmap instead of deployment

Some operator settings can be applied dynamically in a configmap
instead of requiring the operator to restart. While these settings
may be infrequently updated, applying these settings in the configmap
can avoid an unnecessary operator restart. This will also make the
operator deployment more consistent with the non-helm install.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 741f211a13b30b6c5ba41ea08f3549584700618e)
nfs: use hashing function from existing k8sutil package

We have a function to hash a string so let's use it.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 92ada526108f8bf93ff1672035725cf23568beff)
subvolumegroup: fix code deletion

We want to log properly when ENOTEMPTY is caught during deletion, so
fixing the condition.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 640d30339d51fb298be998191cc84426e1520ef1)
csi: change rook-ceph-csi-config to expose clusterID for subvolume

The rook-ceph-csi-config config map now includes CephFS subvolumegroups
when a subvolumegroup CR is created. It is useful for ceph-csi to
understand which subvolumegroup to use for a given cluster.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 739abf66627a531dcec04924b2b221520bea5d48)
csi: updates the default csi-addons image

This commit updates the csi-addons image version
from v0.1.0 to v0.2.1.
Also, this updates the staging path from
{{ .KubeletDirPath }}/plugins/kubernetes.io/csi/pv/ to
{{ .KubeletDirPath }}/plugins/kubernetes.io/csi/.

This changes is done as the reclaimspace on block mode
was not working.
For more details:
 https://github.com/csi-addons/kubernetes-csi-addons/pull/97

Signed-off-by: yati1998 <ypadia@redhat.com>
(cherry picked from commit 07c5fc7e4654775254f4d8a9cabbfc7115dac47e)
osd: rename a few configuration flags

For better consistency with IBM_KP_SERVICE_API_KEY and use
""ibmkeyprotect"" as a provider name for more clarity.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 7cc6e23a0b710173e7b46971c4633d6365040db1)
ci: fix encryption test condition

For the ""if"" to work we need to bring the env in the step with the ""env""
keyword. Otherwise, the env is never imported and the condition is
always false.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 802a86ccd5013da977695b91cc4d9b91db0ca53c)
csi: update cephcsi to 3.5.1 release

This PR updates the cephcsi version from
3.5.0 to 3.5.1 which includes minor fixes

fixes:

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 39825f230211ca7bdc008793ecabae5956658d62)
build: update the release version to v1.8.3

With the patch release the example manifests and docs are updated to v1.8.3

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.8.3 is a patch release limited in scope and focusing on small feature additions and bug fixes to the Ceph operator.
helm: Apply operator settings in configmap instead of deployment (, @travisn)
csi: Update cephcsi to 3.5.1 release (, @Madhu-1)
csi: Update to the ceph csi release 3.5 image and sidecars  (, @humblec)
csi: Change rook-ceph-csi-config to expose clusterID for subvolume (, @leseb)
core: Reconcile csi driver even if the operator configmap does not exist (, @leseb)
core: Support priority class for the crashcollector daemon (, @satoru-takeuchi)
csi: Add support to create a VolumeSnapshotClass (, @Madhu-1)
mon: Support annotations for critical metadata secrets and configmaps for backup (, @subhamkrai)
csi: Add osd blocklist capabilities to the external cephcluster (, @parth-gr)
csi: Add support for the csi-addons sidecar, though disabled by default (, @yati1998)
build: Set LC_ALL on the make target (, @leseb)
osd: Correct bluestore compression min blob size for ssd (, @subhamkrai)
osd: Add KMS support for IBM KeyProtect (, @leseb)
mgr: Update services with the label app=rook-ceph-mgr when the active Ceph mgr changes (, @travisn)
helm: Use operatorNamespace if exists for monitoring RBAC (, @henryzhangsta)
osd: Use cluster name when fetching the cephcluster (, @leseb)
security: Apdate auth permissions for external cluster (, @parth-gr)
core: Limit use of wildcards in cluster-scoped rbac (, @BlaineEXE)"
"ceph: silence harmless errors when the operator is not initialized

If the ceph cli outputs an error with ""error calling conf_read_file""
this means that the operator has not written its ceph configuration
file. Thus ceph cli commands will fail, so we can just ignore that since
the operator will soon write this file in its initialization sequence.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 279375014691b6465de9ff6521657befe0199301)
ceph: stop using the namespace in the site's name

Removing the site's name helps us reducing the size of the rbd-mirror
socket path which under certain circumstances could exceed the system
limit.
Also, the namespace information is not that relevant, the cluster FSID
is.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 0459a20173028abb908fc0926f1eb4e5ad435d97)
ceph: rehydrate the bootstrap peer token secret on monitor changes

If the monitors addresses change, we must update the peer secret with
the new addresses. For this, each time the configmap
""rook-ceph-mon-endpoints"" is updated, we trigger a reconcile on the
CephBlockPool CRs, which will update the token secret.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit dc0985c7f63dfd21039adfb5a95041d13d99c951)
ceph: update Ceph version to v15.2.12 (latest)

This version of Ceph notably fixes an issue where the Ceph dashboard's
urlPrefix option caused the dashboard to be inaccessible.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
ceph: fix helm chart to allow multiple filesystems

Fix helm chart to allow multiple filesystems. This isn't required for Pacific but when upgrading from 1.5.x this is usually still set.

Signed-off-by: Ben Grabham <git@chillichef.com>
(cherry picked from commit 25c3b868fd153cb9a80cd8edc5cd756872451701)
ceph: do not configure external metric endpoint is not present

If no endpoint are configured let's simply return.

Closes: https://github.com/rook/rook/issues/7963
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit db91fd8bc3e9dbc2f8e348d2b507e87dd8d8c321)
ceph: remove '--site-name' arg when creating bootstrap peer token

`rbd mirror pool peer bootstrap create` will use cluster fsid by default, so specifying --site-name shouldn't be needed at all.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit b13c494fec6c2ffb875d227c789259fb12ce0f74)
ceph: pin volume replication to release-v0.1 branch

added volume replication operator release-v0.1
branch to the go.mod as we are doing enhancements to the
volume replicaiton CRDS. Once we have a release will
change this to release-v0.1 branch.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 95d1bb9184979de715d2fe819b81fa5606d891a2)
ceph: change operator log level dynamically

earlier, to change the operator log level we need
to change the deployment which requires a restart
the operator pod.

Now, we are changing the log level dynamically
by reading the configmap. For, backward compatibility
we still load from env var.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 0d17dede9c74656649f42234bf6ae29c26d3ac20)
ceph: update ceph version to 15.2.13

We're happy to announce the 13th backport release in the Octopus series.
 We recommend users to update to this release. For a detailed release
notes with links & changelog please refer to the official blog entry at
https://ceph.io/releases/v15-2-13-octopus-released

Notable Changes
---------------

* RADOS: Ability to dynamically adjust trimming rate in the monitor and
several other bug fixes.

Signed-off-by: Sébastien Han <seb@redhat.com>
ceph: update the backend path for transit engine

The backend has for trasnit secret in vault kms for RGW is changed from pacific

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit d909c309f3fa7c8313395d17d3e2826cc780e3f5)
core: expand PVC only if storageclass allow expansion

Expand the functionality of 'ExpandPVCIfRequired' to check if
storageclass does allow expansion then only expand the PVC.
otherwise skip the expansion.

Signed-off-by: Nitin Goyal <nigoyal@redhat.com>
(cherry picked from commit 7df51fab598664e701cbffbd9f616c6285241622)
ceph: parse json correctly

radosgw-admin may output logs before and after JSON when this command succeeds. We should
get rid of these logs before unmarshaling output. Although the logs before JSON were
treated in  PR7354, the logs after JSON weren't.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit ca9aa1a11c3cc0aa7480fcbd4469aef628a2bd14)
ceph: remove one extra mon per health check

If the number of desired mons is reduced, for example from 5 down to 3,
the extra mons will be removed by the next health check. Only a single
mon can be removed per health check to ensure that other mons do not
become unhealthy at the same time as removing an extra mon, and so the
list of healthy mons can be refreshed. If multiple mons are removed in
a single health check, we risk removing too many mons and losing quorum.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 9e982a0effeb75a09351cae32fe04376a54d9ddc)
ceph: force upper case for Operator log level

When the operator configmap is edited, it is likely that some user will
simply put ""debug"" instead of ""DEBUG"", so let's always transform the
value to upper case to ease user experience.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 7e7be7ea5646df9747ab1ab0e47899154132cdce)
ceph: updated multus documentation with examples

updated multus documentation with ceph-cluster example and multiple
examples to show the network selector settings.

Signed-off-by: rohan47 <rohgupta@redhat.com>
(cherry picked from commit 312854c4cb8f432442533b5978e4ccb128e79ada)
ceph: add option for adding csi pods' tolerations & affinity separately

This commit adds support for adding tolerations and affinities for
cephfs and rbd (provisioner & nodeplugin) pods separately.

Closes:

Signed-off-by: Rakshith R <rar@redhat.com>
(cherry picked from commit 87cf668b28a9510279bda553553743d3c3444a08)
ceph: stop the monitoring before cleanup

Saw this today in the logs:

```
2021-06-02 13:02:54.787838 I | ceph-block-pool-controller: deleting pool ""testpool""
2021-06-02 13:02:56.178094 I | cephclient: no images/snapshosts present in pool ""testpool""
2021-06-02 13:02:56.178125 I | cephclient: purging pool ""testpool"" (id=17)
panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x1cef49f]

goroutine 1607 [running]:
github.com/rook/rook/pkg/operator/ceph/pool.(*mirrorChecker).checkMirroringHealth(0xc001a98ba0, 0x8, 0xc000d34c60)
	/home/runner/work/rook/rook/pkg/operator/ceph/pool/health.go:115 +0xdf
github.com/rook/rook/pkg/operator/ceph/pool.(*mirrorChecker).checkMirroring(0xc001a98ba0, 0xc0016fd500)
	/home/runner/work/rook/rook/pkg/operator/ceph/pool/health.go:82 +0x147
created by github.com/rook/rook/pkg/operator/ceph/pool.(*ReconcileCephBlockPool).reconcile
	/home/runner/work/rook/rook/pkg/operator/ceph/pool/controller.go:298 +0xee5
```

Essentially, it's intermittent but when deleting the pool the
healthcheck kicked in and fetched the mirroring status, which returned
empty. THe subsequent code tried to access content of a nil pointer,
  hence the error.
So now we stop monitoring first, then we proceed with the deletion.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit e478bdadb1d132a5ff0a07167324d7a873906cac)
ceph: retry starting CSI drivers on failure

CSI drivers failed to start if rook encountered error
while reading configmap with no retry.
This commit introduces retry for starting CSI driver
if there is a failure in reading configmap upto 3 times.

Fixes:

Signed-off-by: Rakshith R <rar@redhat.com>
(cherry picked from commit 411e36900e0386aeae3ed90f61ebd05f6e74a229)
build: bump to golang version 1.16

this commit bump to golang version 1.16.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit bf7b4609b1319ed1bd490e66f98598466533581e)
ceph: fix external cluster upgrade

Both MonSpec.Count and CephVersionSpec.Image should be optional for the
external cluster. So marking them as so.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit d764af8d11cfbe82d1dfb32d97358362ece4d67a)
docs: update ceph-teardown doc

update ceph teardown doc to include cleanupPolicy which enables automatic clean up of the dataDirHostPath and the drives

Signed-off-by: Santosh Pillai <sapillai@redhat.com>
(cherry picked from commit 2ed122bc571390a45387dc9b17763ff0433c9e9d)
build: set release version to v1.6.4

With the patch release update the example manifests to the new version.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.6.4 is a patch release limited in scope and focusing on small feature additions and bug fixes.
Ceph
Support for separate tolerations and affinities for rbd and cephfs CSI drivers (, @Rakshith-R)
Update ceph version to 15.2.13 (, @leseb)
External cluster upgrades fix for CRD schema (, @leseb)
Build with golang 1.16 instead of 1.15 (, @subhamkrai)
Retry starting CSI drivers on initial failure (, @Rakshith-R)
During uninstall stop monitoring rbd mirroring before cleanup (, @leseb)
Update the backend path for RGW transit engine (, @thotz)
If reducing mon count only remove one extra mon per health check (, @travisn)
Parse radosgw-admin json properly for internal commands (, @satoru-takeuchi)
Expand OSD PVCs only if the underlying storage class allow expansion (, @iamniting)
Allow the operator log level to be changed dynamically (, @subhamkrai)
Pin experimental volume replication to release-v0.1 branch (, @Madhu-1)
Remove '--site-name' arg when creating bootstrap peer token (, @leseb)
Do not configure external metric endpoint if not present (, @leseb)
Helm chart to allow multiple filesystems (, @SerialVelocity)
Rehydrate the bootstrap peer token secret on monitor changes (, @leseb)"
"docs: remove health checker related option in object-external.yaml

The health checker options are no longer applicable to external rgw
servers, so remove those info.

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit 8f8de7f33537975b15f475fdcf05a48b97a716e3)
test: update kv version for rgw-kms tests

The test is getting time out while checking backend version for kv
engines in RGW KMS unit tests.

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit c4984208e8bccd4cce1a67b33d6693b89e4f1a3d)
csi: fix custom ceph.conf for csi pods

we need to set the variable in the template
instead of the global variable for the
template rendering.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 436a87ea1309a97e765fb5854585d4b14ec13305)
docs: fix ceph cluster crd list indentation issue

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit 787be917dc33077e86582f357f06161c5c0238ca)
Signed-off-by: Alexander Trost <galexrt@googlemail.com>
core: unset messenger2 configuration

Unset encryption configuration and default
rbd map option when the encryption is not
enabled or it disabled after sometime.

Unset compression option also when the compression
is disabled.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit d1a86f6a63338907e930cf3ac934cfa0049110c7)
build: update release version to v1.10.10

For the patch release the examples and docs are updated
to version v1.10.10

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.10.10 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
core: Fix regression in v1.10.9 causing PVC mounts to fail in clusters with older kernels where encryption is not enabled (, @Madhu-1)
csi: Enable custom ceph.conf overrides for csi pods that was being ignored (, @Madhu-1)
docs: Correctly indent ceph cluster crd list items (, @galexrt)
docs: Remove obsolete health checker related option in object-external.yaml (, @thotz)"
"csi: log a warning if pod namespace env var not found

If the pod namespace was not found by the csi helper to update
the mon endpoints configmap, the reconcile was failing. To allow
for the update to continue in unit tests and ignore the env var,
we only log the warning instead of failing the reconcile.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 76b349d80897d3da58eb5bf113605734244d9a7f)
csi: populate mon endpoints even if driver not enabled

If the csi driver was enabled at a later time, the mon endpoints
would not be populated. The populate the csi config, either a new
cluster reconcile or restarting the operator would be necessary.
It is simpler just to update the csi configmap with every reconcile
even if the csi driver is not enabled.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 8bce38fadb6a21d91bacf35a26c9f085e6e9a6f4)
core: rework usage of ReportReconcileResult

ReportReconcileResult should never be given an object that is nil. It is
impossible to force compile-time checking for this because the object's
type is an interface. We can't force this, but we can rework the
function definition to handle more cases where the object may not be
returned fully-complete, and we can rework callers to return structs
(not pointers-to-structs) so it is less likely a caller will pass nil
to the function.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit c92c6fbc36fbfd01f9f90aca08e4f392b0061f10)
core: fix incorrect join command

Fixing typo in join command
joing -> join

Signed-off-by: vavuthu <vavuthu@redhat.com>
(cherry picked from commit ce98b17bf79796a2e45968d414006313fe911f39)
core: assign ACCESS_KEY and SECRET_KEY values only in case of actual run

When using dry-run option with external script, function create_rgw_admin_ops_user
is not returning expected values which leads to TypeError. This fix is to append
values to out_map dictionary only in case of actual run.

Signed-off-by: vavuthu <vavuthu@redhat.com>
(cherry picked from commit 149beedf207246d4476e8cdf0b7d7cbda2890a6f)
core: avoid creating json_out incase of dry-run

When using dry-run option with external script, out_map dictionary
doesn't contain keys ( ACCESS_KEY and SECRET_KEY ) which leads to KeyError.
This fix to avoid creating json_out incase of dry-run since we will not use
json_out for dry-run.

Signed-off-by: vavuthu <vavuthu@redhat.com>
(cherry picked from commit b9d8df9ec9d57b220a2775847c53bd2b9b047898)
ci: add pylint in ci

adding pylint in ci.

Closes: https://github.com/rook/rook/issues/9866
Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit fd475575ffb5036aaaf8e8e39846bfcfe775aea7)
docs: add annotations to restart ceph daemons

If the ceph daemons need to be restarted after applying the custom
ceph.conf, adding annotations or labels to the cluster CR is
perhaps the simplest way to automate the rolling update.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 027477a890570c7bc9a7a50cbe76b65485f001bb)
test: avoid potential data inconsistency on zapping disk

Data inconsistency might happen if the disk is accessed just after disk
zapping because direct I/O is not synchronous by itself.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 3bbffd1e4df317cbf907f61e563eb5187cea1a63)
core: add `Phase` in `additionalPrinterColumns` for all CRs

this commit adding `Phase` in `additionalPrinterColumns` for
all the CRs.

this is how it looks now, example:

```
$ kc get cephfilesystem
NAME   ACTIVEMDS   AGE     PHASE
myfs   1           4m57s   Ready
srai@ ~
$ kc get cephblockpool
NAME                    PHASE
device-health-metrics   Ready
replicapool             Progressing
srai@ ~
$ kc get cephclient
NAME     PHASE
cinder   Ready
glance   Ready
```

Closes: https://github.com/rook/rook/issues/9883
Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit dc488591e27af4bb214d69e6202a8e706f2fe1ba)
helm: fix the invalid nodeAffinity configuration in the comment

This commit fixes the missing indentation for nodeAffinity configuration
example in the comment. If users try to use the example configuration by
copy and paste, an error will occur.

Signed-off-by: Kazuki Suda <kazuki.suda@gmail.com>
(cherry picked from commit bb98cf373a67f6a1b3006749de49a3db9b810aa7)
core: fix GetLogCollectorResources to get the right resources

Fix GetLogCollectorResources to use the logcollector instead of the crashcollector key

Closes: https://github.com/rook/rook/issues/9897
Signed-off-by: Yuval Manor <yuvalman958@gmail.com>
(cherry picked from commit d222ad65e3870d8ce5dbff982fee302da9ec16a5)
object: use us-east-1 for aws go lang sdk

The aws go lang sdk needs value for region, it is set differently in
various part of current code. With PR the value is always `us-east-1` so
that it will work RGW server without any issues.

This reverts commit 280c29f330e03a08d23c1fda1f1b26574c1b9bdb.

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit fc2b8012c6b1a544f1e5e0ecb8fb4b20c13af23f)
ci: fixed pylint failure

pylint was failing with used-before-assignment error
fixed it by making the variables assignmet before it was used
Also backward compatibility is removed from the ModuleNotFoundError import,
as we auto installed python3 version on ceph standalone

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 339855f172f7b3ae0014d7863b08a3aa429a12a0)
Signed-off-by: parth-gr <paarora@redhat.com>
core: reload go routine after CR is edited

Previously, the struct maintaining the list of cluster was still
initialized with a cluster item. Then the monitoring check will see that
the cluster is part of the struct already and thus won't run the
monitoring go routine again.
Now each time we cancel the context, we also remove the cluster item
from the map so that when the controller runs again, the monitoring
struct is re-populated and the go routine runs and statuses are updated.

Closes: https://github.com/rook/rook/issues/9911
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 05506e7a6836ab27d75552cc14174e6cea274cc8)
build: update release version to v1.8.8

Updating the example manifests and docs to point to the latest
release v1.8.8.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.8.8 is a patch release limited in scope and focusing on small feature additions and bug fixes to the Ceph operator.
core: Cluster CR status was not being refreshed after updating the cluster CR (, @leseb)
core: GetLogCollectorResources to get the right resources (, @yuvalman)
object: Remove unnecessary region option from the OBC StorageClass (, @thotz)
core: Add Phase in additionalPrinterColumns for all CRs (, @subhamkrai)
test: Avoid potential data inconsistency on zapping disk (, @satoru-takeuchi)
ci: Add pylint in ci (, @subhamkrai)
core: Incorrect join command in external cluster script (, @vavuthu)
core: Rework usage of ReportReconcileResult (, @BlaineEXE)
csi: Populate mon endpoints even if csi driver not enabled (, @travisn)"
"ceph: add nullable to object gateway settings

In some clusters, the schema validation is failing for the default
object.yaml example that the value must be of a type string null.
While the null value shouldnt be strictly needed, we need working
examples by default.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 65bffb436057bc99e7f8770a7220d19ffbe2f4cd)
ceph: remove redundant comment in cephfs snapshotclass

This commit removes `# apiVersion: snapshot.storage.k8s.io/v1alpha1`
line in cephfs snapshotclass.yaml which was introduced in PR 7711 by mistake.

Signed-off-by: Rakshith R <rar@redhat.com>
(cherry picked from commit eae135a0b02660f6d568314f95a6e6833056519e)
ceph: allow heap dump generation when logCollector is not running

We don't need to set log_file to empty string since ""log_to_file"" is set
to False. This is probably an old leftover/hack we were doing in the
past when ""log_to_file"" and other related options were not there.

Because of this line
https://github.com/ceph/ceph/blob/master/src/perfglue/heap_profiler.cc#L99,
Ceph looks for the log_file conf option. In our case it was empty, so
the logging would default to the current directory which points to the
container runtime root when not set and we don't have permission to
write there.

We now force it to Ceph's default so that existing cluster will get the
fix after upgrading.

Just removing the option allows us to get dump in /var/log/ceph.
Phew, what a bug!

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 19de2b28e9b5fad8b9fb86d101c96eb54ab97bd6)
ceph: update podDisruptionBudget controller for OSD

This PR has following changes around OSD pdbs
- Detect node drains more reliably. When OSD is down and OSD pod is not scheduled to any node or if the scheduled node is not ready, then assume that node is draining.
- Don't set no-out flag on the failure domain if the OSD is down due to reasons other than node drain (say disk failure)
- update unit tests
- update design doc to reflect above changes

Signed-off-by: Santosh Pillai <sapillai@redhat.com>
(cherry picked from commit aee8f568534d50a290f5c7fb74845c1407a4934f)
ceph: create crash collector pods after secret created

there was confusion regarding crash collector pods
in pending state which was basically due to secret
`rook-ceph-crash-collector-keyring` was not created
till mons are in quorum. this commit creates crash
collector pods after secret `rook-ceph-crash-collector-keyring`
is created.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit b4efd9f8f4bb03e5029b13d86fbc2506588018c7)
ceph: remove redundant csi statefulset template path vars

This commit removes redundant `RBDProvisionerSTSTemplatePath` and
`CephFSProvisionerSTSTemplatePath` variables which were forgetten to
be removed in https://github.com/rook/rook/pull/5982 when csi support
for k8s 1.13 was removed.

Signed-off-by: Rakshith R <rar@redhat.com>
(cherry picked from commit e9f0136b1368a16eb9a2c9439fe7c42f4565c501)
ceph: actively update the service endpoint for external mgr

If the cluster is external we want to periodically rehydrate the mgr
endpoint. This handles the scenarion where the active manager changes,
 so we need to update the endpoint with the new IP address.
The create-external-cluster-resources.py script now requires an extra
permission to query the manager service so Rook can discover the active
one and its IP.

Testing:

```
[leseb@tarox~/go/src/github.com/rook/rook][external-active-mgr-change] minikube kubectl -- exec -n rook-ceph deploy/rook-ceph-tools -ti -- ceph mgr stat
{
    ""epoch"": 37,
    ""available"": true,
    ""active_name"": ""b"",
    ""num_standby"": 1
}

[leseb@tarox~/go/src/github.com/rook/rook][external-active-mgr-change] kubectl -n rook-ceph-external get ep
NAME                     ENDPOINTS          AGE
rook-ceph-mgr-external   172.17.0.12:9283   3m10s

[leseb@tarox~/go/src/github.com/rook/rook][external-active-mgr-change] k scale --replicas=0 deployment rook-ceph-mgr-b
deployment.apps/rook-ceph-mgr-b scaled

[leseb@tarox~/go/src/github.com/rook/rook][external-active-mgr-change] minikube kubectl -- exec -n rook-ceph deploy/rook-ceph-tools -ti -- ceph mgr stat
{
    ""epoch"": 40,
    ""available"": true,
    ""active_name"": ""a"",
    ""num_standby"": 0
}

[leseb@tarox~/go/src/github.com/rook/rook][external-active-mgr-change] kubectl -n rook-ceph-external get ep
NAME                     ENDPOINTS          AGE
rook-ceph-mgr-external   172.17.0.13:9283   3m55s
```

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 5e1e9f4c92886b7327078614a43e398226957024)
ceph: simplify external mode setup

The preparation script does not require any manual inputs anymore. The
cluster/examples/kubernetes/ceph/create-external-cluster-resources.sh
will create and set the env variable needed for the import script.
Hopefully this will reduce the friction in some installation, especially
for the mon ports.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 0bdbb944bff56e17f1dc1c9d3be596a8682a7da3)
ceph: do not overwrite the probe handler

Changing the livenessprobe handler is not possible anymore for the
simple reason that it does not make sense. Practicly speaking we just
cannot change its value since it is propapaged to all the daemons. The
exec handler contains the socket name of the daemon, because daemons
have different names we cannot possibly make it generic since it will
apply to all.

Closes: https://github.com/rook/rook/issues/7842
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 266a359a0eff8a5eaea85c984f91a4c21319e5c7)
ceph: wait for the prometheus module to be ready

Before running the external script test let's make sure the prometheus
exporter is loaded. We often see in the CI errors like:

```
  kubectl -n rook-ceph exec $(kubectl get pod -l app=rook-ceph-tools -n rook-ceph -o jsonpath='{.items[0].metadata.name}') -- python3 /etc/ceph/create-external-cluster-resources.py --rbd-data-pool-name replicapool
  shell: /bin/bash -e {0}
  env:
    GOROOT: /opt/hostedtoolcache/go/1.16.4/x64
    MINIKUBE_HOME: /home/runner/work/_temp
Execution Failed: unable to connect to endpoint: 172.17.0.10:9283
Traceback (most recent call last):
  File ""/etc/ceph/create-external-cluster-resources.py"", line 801, in <module>
    raise err
  File ""/etc/ceph/create-external-cluster-resources.py"", line 798, in <module>
    rjObj.main()
  File ""/etc/ceph/create-external-cluster-resources.py"", line 779, in main
    generated_output = self.gen_json_out()
  File ""/etc/ceph/create-external-cluster-resources.py"", line 613, in gen_json_out
    self._gen_output_map()
  File ""/etc/ceph/create-external-cluster-resources.py"", line 598, in _gen_output_map
    self.out_map['MONITORING_ENDPOINT_PORT'] = self.get_active_and_standby_mgrs()
  File ""/etc/ceph/create-external-cluster-resources.py"", line 389, in get_active_and_standby_mgrs
    self.endpoint_dial(monitoring_endpoint)
  File ""/etc/ceph/create-external-cluster-resources.py"", line 245, in endpoint_dial
    ""unable to connect to endpoint: {}"".format(endpoint_str))
__main__.ExecutionFailureException: unable to connect to endpoint: 172.17.0.10:9283
command terminated with exit code 1
```

but then when we log into the runner, we can see the command works.
So let's wait a little bit for the module to be up.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit cc763df671170882f3b426e69115e58c11a105e2)
ceph: persist expected mon endpoints immediately during mon failover

After mon failover is initiated, there was a time window where if the operator
was restarted, the new mon is started and has joined quorum, but the operator
does not believe the mon should be in quorum after the operator restart.
The operator was mistakenly removing the extra mon prematurely, sometimes
causing quorum to be lost if another mon was also down at the same time.
If the mon does not come back online, steps to recover quroum would need
to be followed from the disaster guide. Now the expected list of mons
will be updated immediately during mon failover if the operator successfully
created the new mon deployment, thus removing the window where restarting
the operator can cause quorum loss.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit bb4191a8a7ed1fcb8fd7fa61dfec53775733be5d)
ceph: fix hostpath of osd to avoid data corruption

A directory is created under dataDirHostPath for each OSD. In host-based cluster,
its name is constructed from kernel device name like _dev_sdb though user specifies
udev persistent device name. We should use unique name among all OSDs.

Closes: https://github.com/rook/rook/issues/7878

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 6af014b7985a0bc71b89454c4bf7bb71968e46bb)
build: okd operator metadata should be the same as OCP

Signed-off-by: Diego Abelenda <diego.abelenda@gmail.com>
(cherry picked from commit a58bc4982ee2f4ca7728049d5eabd721563ee944)
ceph: support specifying only public network or only cluster network

With this change, the Rook ceph cluster can have only a public network or
only a cluster network or both can be specified. Prior to this commit if
only a public network was specified, it was copied to the cluster network.

Signed-off-by: rohan47 <rohgupta@redhat.com>
(cherry picked from commit f3d2ae5405c4e4af227146a4395ab2b41f0cbd2e)
docs: fix patch command

The JSON was invalid.

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit bcdc7f861676fad91d83a75a56b943b89bd45884)
ceph: remove an missing field in crd

`CephObjectStore->gateway->type` is not used. Rook has only supported s3-like
interface and hasn't had no code which handles `type` field.

In addition, this field was removed from CRD in the following commit.

ceph: auto-gen crds
31db03fece6d11c3054a6488b96d1c6ad3722b84

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit c2adbdd8a88b39d983091651debd2c7500e482a5)
ci: retry when fetching online manifests

We now retry up to 3 times if the manifest fails to be fetched online.

Closes: https://github.com/rook/rook/issues/7927
Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit f1f3416f49a6e37321f2caebe4342bae0318d487)
ceph: updated dashboard ingress example for v1

The ingress kind is found in apiversion networking.k8s.io/v1 since K8s
1.19. We now update the examples to use v1 instead of v1beta1.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 142c3fd891f5770aeaf72d505e186bd771f18638)
core: add eventutils in the k8sutil package

eventutils will allow operator to limit events count of same event
and prevents from spaming apiserver

Signed-off-by: Nitin Goyal <nigoyal@redhat.com>
(cherry picked from commit e3fffdc711c97790309c58e9dbabac761956c261)
ceph: generate cephCluster reconcile result as events

Generate cephCluster reconcile result as an k8s event if it is not
already present on the cluster

Signed-off-by: Nitin Goyal <nigoyal@redhat.com>
(cherry picked from commit 25d2df40187097a8530e98bf84b86093b717296c)
docs: call partprobe after zapping device

Play safe: after zapping devices, issue a call to 'partprobe' to inform
the OS on partition table changes. This may assists users who face
voodoo partition creation, as described in those ROOK issues:

https://github.com/rook/rook/issues/7734
https://github.com/rook/rook/issues/7940

Signed-off-by: Shachar Sharon <ssharon@redhat.com>
(cherry picked from commit 4509958babba21a78b73054756b1f73e0023db1a)
ceph: scan raw OSDs on nodes in OSD init container

The 'ceph-volume raw list' command used to list OSDs on nodes by the
rook-ceph-osd-prepare- jobs return user-friendly device names (e.g.,
/dev/sda) rather than persistent device names. Friendly device names
often change when systems reboot, and even persistent device names can
change under certain circumstances (e.g., a disk controller is replaced
with a different one). To prevent OSD Pods created for raw OSDs on
nodes from crashing repeatedly if the device it was created with is
renamed, scan the list of OSDs on the host with 'ceph-volume raw list'
to find the right OSD to activate in the OSD pod's OSD activation init
container.

Fixes

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 8f7f24b1fc57556238869a202c511474065205c8)
build: set release version to v1.6.3

The patch release version is updated to v1.6.3

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.6.3 is a patch release limited in scope and focusing on small feature additions and bug fixes.
Ceph
Ensure correct devices are started for OSDs after node restart (, @BlaineEXE)
Write reconcile results to events on the CephCluster CR (, @iamniting)
Updated dashboard ingress example for networking v1 (, @travisn)
Remove obsolete gateway type setting in object store CRD (, @satoru-takeuchi)
Support specifying only public network or only cluster network or both (, @rohan47)
Generate same operator deployment for OKD as OCP (, @RyuunoAelia)
Ensure correct hostpath lock for OSD integrity (, @satoru-takeuchi)
Improve resilience of mon failover if operator is restarted during failover (, @travisn)
Disallow overriding the liveness probe handler function (, @leseb)
Actively update the service endpoint for external mgr (, @leseb)
Remove obsolete CSI statefulset template path vars from K8s 1.13 (, @Rakshith-R)
Create crash collector pods after mon secret created (, @subhamkrai)
OSD controller only updates PDBs during node drains instead of any OSD down event (, @sp98)
Allow heap dump generation when logCollector sidecar is not running (, @leseb)
Add nullable to object gateway settings (, @travisn)"
"osd: remove osd with purge instead of destroy

The osd destroy command leaves the osd id in use instead
of fully purging the osd id. If the osd id is not also
removed, it gives the impression that there is still
something that needs to be cleaned up from the old osd.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 879bde4416aeb85b4bf1958236be342c27dd335b)
csi: default to ReadWriteOnceWithFSType for cephfs

```
ReadWriteOnceWithFSType: Indicates that volumes will be examined
to determine if volume ownership and permissions should be modified
to match the pod's security policy. Changes will only occur if the
fsType is defined and the persistent volume's accessModes contains
ReadWriteOnce.
```

In between considering we are giving 0777 permission on nodestage
of cephfs shares, we defaulted to NONE. However giving worldwide
permission to the volume is not the right thing and it has been
fixed in cephfs via https://github.com/ceph/ceph-csi/pull/2847

This commit brings it back to the value which is also in parity
with RBD driver.

Signed-off-by: Humble Chirammal <hchiramm@redhat.com>
(cherry picked from commit 6561bdaf53800e1b19146b3e951ec2924abbc1d0)
osd: purge job will remove all pvcs for the osd

The purge job is intended to clean up all the resources
related to an OSD that is to be removed. An OSD with
a metadata, wal, and data PVC was only cleaning up the
data PVC. Now the metadata and wal PVCs will also be
cleaned up.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit b3ca0f1b874ac3c638d842dae25a6e560d6b27f2)
build: update ceph base image to v16.2.7-20220216

The latest ceph image should be used for the base of
the rook image to pick up the latest security releases.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit a98678585ae6d0c169f717f31eaca3113ca5a8a6)
docs: correct ceph toolbox path

Signed-off-by: Junyoung, Sung <wnsdud1861@gmail.com>
(cherry picked from commit 8c19e5b2601fd78a7466952401c2441e1b0810a4)
operator: document that the `rook-ceph-operator-config` ConfigMap is needed

We discovered the hard way that configuration through the environment
does not work if this ConfigMap is not present altogether. Document this
as a common issue.

Closes.

Signed-off-by: Matthias Rampke <matthias@rampke.de>
(cherry picked from commit 57d0fada7bd945f132eea0dfc52669abf8459a26)
docs: teardown typo

Fix typo in teardown documentation
demsetup -> dmsetup

Signed-off-by: spdfnet <32593931+spdfnet@users.noreply.github.com>
(cherry picked from commit 577f96efb1536cc0991ce3639fae50e3b3d67ae2)
core: disruption controller log ceph errors in debug level

The controller for disruption budgets is verbose at cluster creation
when the cluster is not yet created, which generates a lot of noise
in the log that makes the cluster look unhealthy. This is an expected
condition, so we can change this logging to debug level.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit bc6381169ee99815e8fd2507ccce367cf2e34213)
helm: add cephFileSystems storageClass.pool

CephFileSystem StorageClass created by helm chart should use the specified pool
in values.yaml rather than hardcode 'data0'

Closes:
Signed-off-by: mtt0 <retmain@foxmail.com>
(cherry picked from commit fd4cdc589ff95497df1e61e25b7437a3f992f0df)
osd: disable raw mode for specific disk configs

If a specific disk is configured to have more than one OSD per device,
or if it has a metadata device specified, exclude it from raw mode on an
individual basis.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 27ea49b9cd416f14977793d3ed784c446fef26c0)
helm: remove obsolete setting for enabling multiple filesystems

The multiple filesystem support was added in Pacific and no
need for a setting that allows the support. The setting was
already removed other places from rook in a previous change
https://github.com/rook/rook/pull/8350.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 8383d9ab87bc62708995722e83e3d55ce51d4067)
helm: fix storageClass parameters handling

Test existence of parameters to avoid printing artifacts that
break yaml
Signed-off-by: Julien Girardin <jugirardin@free.fr>
(cherry picked from commit e8024cde8d926ca0bdf1df6712cc9e30d90aa6e2)
nfs: remove secret, configmap when downscaling CephNFS

When downscaling CephNFS clusters, be sure to remove secrets and
configmaps. Also be sure to only downscale for the currently-reconciling
CephNFS cluster.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit b640969a64d2d48f8bfb0a87b02f84161f70477f)
helm: .Values.image.prefix is not referenced anywhere

Signed-off-by: kahirokunn <okinakahiro@gmail.com>
(cherry picked from commit 2e7e5e095c29ddb82fb9819567e921b9e168e053)
helm: add resources to rook-ceph-tools pod

Allow the configuration of the rook-ceph-tools pod's resource requests/limits.

Closes:
Signed-off-by: Tom Hellier <me@tomhellier.com>
(cherry picked from commit 5e65f661ccecad89d547ca0f3da551ce54bc808e)
core: sync ceph fsid on cephcluster status

FSID will be updated with cephcluster CR status
when monitoring check get start

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 2e89ff0fd92a30ced9fcc4deee13be3fea495d5b)
core: fix empty string bug

This function was always using an empty string, instead of the extracted resources

Closes:
Signed-off-by: Tom Hellier <me@tomhellier.com>
(cherry picked from commit 59b4c57406f7a3d80109b917cad36afcc87c4519)
osd: clarify vault auth error message

When kube authentication is used, let's clarify the error message and
hopefully lead to a better understanding on where to look for.
It could be misleading to print ""token auth"" when using kube auth,
although internally a token is used (the JWT from the Service
Account).

Signed-off-by: Sébastien Han <seb@redhat.com>
(cherry picked from commit 74081d90d307b961fdc2980d440ec507f73489a5)
mon: disable startup probe on canary pods

The canary pods are very short-lived pods and are not
running ceph in any form. The startup probe was mistakenly
enabled for the canary pod, which could cause the pod
to fail unexpectedly if the startup probe was triggered
after the delay timeout.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 22dea0a1efc1466d3a88d09e2e7b0050c6fc728e)
build: set release version to v1.8.7

With the patch release the example manifests and docs are
updated to v1.8.7

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.8.7 is a patch release limited in scope and focusing on small feature additions and bug fixes to the Ceph operator.
build: Update ceph base image to v16.2.7-20220216 (, @travisn)
csi: default to ReadWriteOnceWithFSType for cephfs (, @humblec)
mon: Disable startup probe on canary pods (, @travisn)
core: Add Ceph FSID on the cephcluster CR status (, @parth-gr)
csi: Properly apply CSI resource requests and limits (, @TomHellier)
helm: Add resource requests and limits to the toolbox pod (, @TomHellier)
helm: Remove obsolete .Values.image.prefix (, @kahirokunn)
osd: Clarify vault auth error message (, @leseb)
nfs: Remove secret and configmap when downscaling NFS daemons (, @BlaineEXE)
helm: Handle empty StorageClass parameters for object, rbd, and cephfs in the helm chart (, @Zempashi)
helm: Remove obsolete setting for enabling multiple filesystems (, @travisn)
osd: Use lvm mode to create multiple OSDs per device (, @BlaineEXE)
helm: Add filesystem pool name to the storage class (, @mtt0)
docs: Document that the rook-ceph-operator-config ConfigMap is required (, @matthiasr)
core: Suppress verbose disruption controller log messages (, @travisn)
osd: Purge job will remove all pvcs for the osd, not just the data pvc (, @travisn)
osd: Remove osd with purge instead of destroy (, @travisn)"
"helm: fix namespace for objstore ingress

Signed-off-by: Cyril Jouve <jv.cyril@gmail.com>
(cherry picked from commit d65c5b6dff25288968c45c8b79ddbc1c2c9db38c)
doc: describe pgHealthCheckTimeout pgHealthyRegex

Add the missing explanation of pgHealthCheckTimeout and pgHealthyRegex
in the CephCluster' CRD doc. In addition, remove a verbose sentence
from the explanation of `osdMaintenanceTimeout`.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit ab1f1d97accb6e0b172d6d9003369c7badb991cb)
doc: update the table of supported configurations for OSD creation

In some cases, it's desired to use `must` than `should`.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 2059a04fbd61e332722a25f2f2c769d1d9659f24)
mon: fix mon failover on path change

This PR fails over mon when the mon path is changed from hostPath to PVC or vice versa

Signed-off-by: sp98 <sapillai@redhat.com>
(cherry picked from commit 4b6fd89365db4d491ceb1e0b2ec6b1d6d19d534c)
external: fix the run as a user flag

there is a hardcoded value of ""client.healthchecker""
which needs to be replaced by self.run_as_user

Signed-off-by: parth-gr <partharora1010@gmail.com>
(cherry picked from commit 8d89faf615d9437ff2b66e8f12aec70c1958b14f)
build: update the release version to v1.12.10

For the patch release update the examples and docs to
v1.12.10

Signed-off-by: travisn <tnielsen@redhat.com>","Improvements
Rook v1.12.10 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
helm: Fix the namespace for the object store ingress (, @jouve)
external: Allow run as a user flag for a non-default external user (, @parth-gr)
mon: Proper detection of mon failover when the host path changes (, @sp98)"
"docs: update the documentation for external rgw servers

The StorageConfiguration docs for external needs to update with Rook
design

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit 2a96967ed0ad833a9507b9cce3710dc9e6d828e5)
docs: remove obsolete comments about old versions

Remove old mentions of rook or ceph versions that
are no longer relevant.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 0f6b09940383b37aa6278e699e10faad6399ce77)
docs: dev guide review updates

The dev guide had some outdated info that is now updated,
as well as some rewording for consistency and improved
writing.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 9f2ecedf7b9c55179a2c9dee8c6c136ef56c11cc)
rbdmirror: retry reconcile if cluster not initialized

The rbd mirror reconcile was not re-queuing the reconcile
if the cephcluster was not initialized. All other controllers
waiting for the initialization are requeuing the event,
just not the rbd mirror controller.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 28775231374ec64216e16275d3f067f4bd3a3634)
operator: pull multus validation test images before test

Before starting multus validation test clients, pull the client image to
all nodes. This will ensure that variations in client readiness timing
will not be affected by variations in the time nodes take to pull the
image. This is intended to reduce the number of false reports of flaky
multus networks.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 3a27cb60b3fec13d4ea7b979f0b1c11ce731abcc)
monitoring: service monitor should not use mgr_role label

The service monitor selectors need to match the mgr service labels.
Since the mgr service labels don't use the mgr_role (only the mgr
service selectors use the mgr_role), the mgr_role should be removed
from the service monitor.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 754f073aa5747df4db3cbd443bb14bf74de925b8)
test: allow specifying custom nginx image for multus validation

Allow overriding the nginx server image used for the web server and clients from CLI with --nginx-image flag.
Set default image in flag as 'nginxinc/nginx-unprivileged:stable-alpine'

Signed-off-by: iPraveenParihar <praveenparihar68@gmail.com>
(cherry picked from commit 78d65281539a0437d2b8a8cca755420a79e9259d)
test: add tmate pod manifest

Add a tmate manifest that can be added to CI tests to allow manually
debugging them in real-time while the test is ongoing.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit e58b09c01c3a6d219a272e478d6ce0b5040779a4)
object: use networkspec from clusterinfo spec while running radosgw-admin

The radosgw-admin command uses the network spec from ceph cluster spec
in object context but it is not filled properly in the object package.
But with PR 10898, network spec is available in clusterinfo which can
be used directly. Also removed cluserspec from object context.

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit 1f45cfa581efe79dd6d3ebf589864a4504b8c8de)
mgr: update default rook_cluster of ServiceMonitor

When deploying a cluster with Helm Chart, if the namespace is not the default value `rook-ceph`, and if the monitoring feature is enabled, then the generated ServiceMonitor's `rook_cluster` selector now follows the namespace, not the hard-coded value `rook-ceph`.

Signed-off-by: Ho Kim <ho.kim@ulagbulag.io>
(cherry picked from commit 42caef169f2eb919cc4eec3b7beda83e3600c07a)
core: use -default-* flags

enable flags with --default prefix for --log-to-stderr, --mon-cluster-log-to-stderr, --err-to-stderr, and --log-stderr-prefix

Signed-off-by: Javier <sjavierlopez@gmail.com>
(cherry picked from commit 02e17196f2d5f283e3bcdceac065e2fbb786ca55)
helm: add exporter resource entry to ceph cluster

This adds the new `exporter:` resource key to the Ceph cluster example
yaml. It also set some sane resource requests and limits for it in the
CephCluster section of the rook-ceph Helm chart.

Closes

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit 178c916012e771fe4e3f0873ac72e8aa7c7d07eb)
object: add missing caps for object store user

Lot of new caps added to rgw users, reflecting same changes on the
object store user CRD.

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit ad0c000e6ae3d65a1bf83d3215519a4ed30e577a)
test: add CI e2e test for multus validation test

Add a CI e2e test for the multus validation routine that runs whenever
the multus validation test is modified and on master/releases.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit 2eb5a9a3f69a7b20516102e97a8b622013fb3e20)
test: fix nginx image client template error

Regarding Go templates: when inside a range, the base dot (.) context is
not available, so anything used within the range must be set to a
shell-style variable.

Signed-off-by: Blaine Gardner <blaine.gardner@redhat.com>
(cherry picked from commit d0995c8d767e03bf6f18b9b60f3e94ed4379eebe)
external: fqdn should be persisted

1) donot change rgw fqdn to ip if provided,
As now the bucket class supports the
entry of fqdn

2) update crds with new description in EndpointAddress

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit f66de7b9df94bdf02b6d38b1a9cb1e4e63fdda81)
core: cleanup exporter resources

Cleanup exporter daemon even if ceph version is not supported along with other resources like
metrics service and service monitor.
Signed-off-by: avanthakkar <avanjohn@gmail.com>
(cherry picked from commit 41a829451056d6124a2aa20f8a19abd39f284429)
build: update release version to v1.11.7

For the patch release update the docs and examples to
v1.11.7

Signed-off-by: travisn <tnielsen@redhat.com>","Improvements
Rook v1.11.7 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
core: Delete exporter resources if ceph version is not supported (, @avanthakkar)
external: FQDN should be persisted instead of using the ip endpoint (, @parth-gr)
object: Implement more capabilities for object store users (, @thotz)
test: Add CI e2e test for multus validation test (, @BlaineEXE)
core: Use default-* logging flags for ceph daemons so they can be overridden (, @Javlopez)
helm: Add exporter resource entry to ceph cluster documentation (, @galexrt)
mgr: Allow other namespaces in the ServiceMonitor resource (, @kerryeon)
object: Add missing cephcluster spec addition in object controller (, @thotz)
monitoring: Service monitor should not use mgr_role label (, @travisn)
test: Allow specifying custom nginx image for multus validation (, @iPraveenParihar)
operator: Pull multus validation test images before test (, @BlaineEXE)
rbdmirror: Ensure rbd mirror daemon is upgraded (, @travisn)"
"helm: allow configuring monitoring interval

Signed-off-by: Charlie Haley <charlie.haley@hotmail.com>
(cherry picked from commit 0768eb125b4695b2143143511aa1326427ec8b89)
multus: use nginx-unprivileged image from quay

Use Quay as the source for the nginx-unprivileged image used for the
Multus validation tool because Quay does not rate limit image pulls,
which are a common complaint for users of the tool.

Signed-off-by: Blaine Gardner <blaine.gardner@ibm.com>
(cherry picked from commit cd253d0218c4572f8718b306f1df2c24e2f68bc8)
core: fix golang linter issues with variables in loops

Loop variables cannot be reliably uses since they will
change with each iteration. Update these loop variable
uses to be safe by indexing the slice rather than
using the loop variable directly.

Also suppress the linter issues for passwords used
in tests.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 6f8e42422d8b031d3b95412088e0e77d3e7218e7)
exporter: skip reconcile on exporter deletion

The exporter pod is ephemeral and frequently being deleted
and re-created when ceph daemons are created. Therefore,
we need to skip reconciling based on the deletion
of the exporter deployment.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 995a64fb3a2a35e26f6f5d3141ef6e966c2e429c)
build: update the release version to v1.12.11

For the patch release update the docs and examples
to v1.12.11

Signed-off-by: travisn <tnielsen@redhat.com>","Improvements
Rook v1.12.11 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
exporter: Skip reconcile on exporter deletion (, @travisn)
helm: Allow configuring monitoring interval (, @charlie-haley)
core: Golang linter issues with variables in loops and update linter version (, @travisn)
multus: Use nginx-unprivileged image from quay (, @BlaineEXE)"
"core: report node metrics using ceph telemetry

Add this reporting with the cephcluster reconcile,
Similar way we reported other telemetry's

Closes: https://github.com/rook/rook/issues/12344

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit f007f2aca1f8d7bfbd59968e14b64738897cd67d)
doc: correct csi ceph.conf path

correct the csi ceph.conf path
in the documentation.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit d1613af35d8b8a26a1fb74b9ae8f91a90a8b6789)
rgw: correctly handle mgr-proxied rgw cli commands in multus scenarios

Due to multi-site Ceph object resources (realms, zonegroups, zones)
reconciliation CLI commands being proxied through CephCluster's Mgr pods
in Multus-based scenarios, return codes were being additionally wrapped
by K8S' command streams and weren't adequately handled in-code, causing
reconciliation of CephObject(Realm|ZoneGroup|Zone) resources to fail, as
an exit code of 0, instead of the expected syscall.ENOENT (2) was returned.

Fixes

Signed-off-by: zer0def <zv0uzqbqnncivw0afjsx79jmd19shpps3r5f2vjc6yv@definedaszero.xyz>
(cherry picked from commit 9b69b5cb46e07ced84e5f02de30e625e70548794)
mgr: get servicemonitor exporter's interval from MonitoringSpec

this change updates the serviceMonitor interval of the the rook-ceph-exporter
with the value from the MonitoringSpec.

closes: https://github.com/rook/rook/issues/13159

Signed-off-by: Redouane Kachach <rkachach@redhat.com>
(cherry picked from commit 6b71325dbe9527179985519fee29f8a0aeef9741)
helm: use csiaddonsport correctly

We have csi.csiAddonsPort paramete but it's not used everywhere.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 1d8cdeca039d600b35c21fba1638d3b713bc5b80)
exporter: change deployment strategy to Recreate

Restarting the exporter using RollingRelease causes a race condition,
that results in exporter crashing and the ceph health to show a warning.

Signed-off-by: Divyansh Kamboj <dkamboj@redhat.com>
(cherry picked from commit f9d6cd7f3a9b67c1239d268536b318943b7f43b3)
mgr: adding CEPH_ARGS to the mgr pod so radosgw-admin can use it

ceph dashboard uses radosgw-admin for certain tasks that
aren't accessible via the rgw REST API. Due to the absence of
a valid ceph.conf file at /etc/ceph/ceph.conf within the mgr pod,
radosgw-admin fails to operate, resulting in 500 errors across
various 'Object Gateway' views on the dashboard. This change
adds CEPH_ARGS environment variable to the mgr pod enabling
its propagation and utilization by the dashboard/radosgw-admin
for executing rgw commands.

closes: https://github.com/rook/rook/issues/13255

Signed-off-by: Redouane Kachach <rkachach@redhat.com>
(cherry picked from commit afc485fa0343fa879fd44653638dd0ebe33ad3d3)
core: add pgHealthyRegex to DisruptionManagementSpec

This patch adds `pgHealthyRegex` field to DisruptionManagementSpec.
`pgHealthyRegex` is a regular expression that is used to determine which
PG states should be considered healthy. The default value of
`pgHealthyRegex` is:

        ^(active\+clean|active\+clean\+scrubbing|active\+clean\+scrubbing\+deep)$

which is effectively the same as before.

Signed-off-by: Ryotaro Banno <ryotaro.banno@gmail.com>
(cherry picked from commit 0ad88e9d681c2858c71c6dd8c6f757d85d5c8a98)
mgr: honor the ContinueUpgradeAfterChecksEvenIfNotHealthy flag

Fixes:

Previously, the mgr did not honor the flag
ContinueUpgradeAfterChecksEvenIfNotHealthy
from the cluster spec. Only osd, mds, and rgw did.

To render the update behavior correct and complete across the daemons, this
change implements the honoring of the flag for the mgr.

Signed-off-by: Michael Adam <obnox@samba.org>
(cherry picked from commit 93bf6540b245c4cf191835c91fccdc79903efe4b)
ci: add ""k8sutil"" to the allowed commit prefixes

It was somewhat difficult to find an appropriate and allowed commit
prefix for changes to the k8sutil package. This changes removes this
problem by addink ""k8sutil"" to the list of allowed prefixes in our
commitlint configuration

Signed-off-by: Michael Adam <obnox@samba.org>
(cherry picked from commit a40f305d5e015d9c9795ea1c494d0563531b4b54)
helm: add namespace to all resource templates

The helm templates assumed that the resources would be installed
to the given namespace for the helm install or upgrade. This works
perfectly until there is a desire to extract the manifests from
the helm chart and instead install with those. Thus, the namespace
is added to all the resources in the chart where they were
missing.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit b4e51f6d12bcc2bcb6a8293a522add5acbb4f367)
build: update the release version to v1.12.9

For the patch release update the manifests and docs to
v1.12.9

Signed-off-by: travisn <tnielsen@redhat.com>","Improvements
Rook v1.12.9 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
core: Report node metrics using ceph telemetry (, @parth-gr)
helm: Add namespace to all resource templates (, @travisn)
core: Add pgHealthyRegex to DisruptionManagementSpec (, @ushitora-anqou)
mgr: Adding CEPH_ARGS to the mgr pod so radosgw-admin can use it (, @rkachach)
exporter: Change deployment strategy to Recreate (, @weirdwiz)
helm: Use csiaddonsport parameter (, @satoru-takeuchi)
mgr: Get servicemonitor exporter's interval from MonitoringSpec (, @rkachach)
rgw: Handle mgr-proxied rgw cli commands in multus scenarios (, @zer0def)
mgr: Honor the continueUpgradeAfterChecksEvenIfNotHealthy flag for mgr daemon (, @obnoxxx)"
"csi: add mountinfo path for cephfs daemonset

If mountinfo path is available cephcsi will
try to recover the fuse client. adding the
support for the same in Rook.

fixes:

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 54ce2a96da310269c661bf6b339a5630d6b427cf)
mds: improve the mds liveness probe calls

Instead of checking the socket files for mds daemon,
check the mds daemon in fs maps

Closes: https://github.com/rook/rook/issues/12789

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 2dd9b00ca30d8a16b46af3b98e0bfedee45896aa)
ci: check  mds liveness probe unit test from the CI run

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 3d4036547ca507d3e8afde4dd85899f8f3295d80)
mon: write assimilate config to operator dir

The /tmp dir is not always available in some environments.
The only directories the operator should rely on
are the directories that are in its pod spec.
For assimilate-conf now we use the /var/lib/rook
directory to generate files since we know it is
a valid emptydir mounted into the operator pod.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 5359c4f4f52890cc49132b56b3f7df5c4e102504)
build: update go module deps

Update go module deps. The most interesting dep update is to
libopenstorage/secrets which no longer uses Vault code licensed under
BUSL-1.1.

Signed-off-by: Blaine Gardner <blaine.gardner@ibm.com>
osd: revert: make osd pod to sleep when osds are flapping""

This reverts commit 0e53c9ec61dc055815f12fdd5dc7d2dbc21f119f.

Signed-off-by: sp98 <sapillai@redhat.com>
osd: use bash script if restart interval is > 0

If `FlappingRestartIntervalHours` for OSD is > 0 in the cephCluster CR,
then start OSD inside a bash script.

Signed-off-by: sp98 <sapillai@redhat.com>
(cherry picked from commit ffd69291f120d88edb585254aba29a4b9031703c)
csi: fix indentation for mountinfo

Fixed the indentation for the mountinfo
or else an emptyDir is getting created
for it.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 9f2b7d572d49c3ec5f90f1f5d9d24b842a093adc)
osd: prevent to fallback to lvm mode in osd on lvm creation

Rook creates raw mode OSD as possible and falls back to lvm mode if necessary.
This logic doesn't work if only supports raw mode.

Closes: https://github.com/rook/rook/issues/11438

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 6fee3c9ff4e5746a0bd04a0b1b759ece27cccdbe)
doc: fix document about viewing dashboard outside of cluster

https://github.com/rook/rook/pull/11845 added dynamic label `mgr_role`.
The example yaml files are updated but this doc is missed.

I think it would be better to refer to `deploy/examples` but I find all
other places are not doing that. So keep it inlined to be consistent.

Signed-off-by: Bin Wang <bin.wang@mail.binwang.me>
(cherry picked from commit 25d89d2b681fd1d5a36d3a2a1e9e5681c4b8d584)
osd: print warning message if no matching node found for osd

As seen in https://github.com/rook/rook/issues/1988, it's a common
mistake to configure rook nodes with names that don't match Kubernetes's
node label. This PR prints more detailed message to help debugging
problem.

Signed-off-by: Bin Wang <bin.wang@mail.binwang.me>

Add break according to review comment

Co-authored-by: Travis Nielsen <tnielsen@redhat.com>

Update log message according to review comment

Co-authored-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 4a705b46b04cb2d6f56d94f1a7707f8adc5f1b9c)
docs: adding specific instructions to upgrade Rook toolbox

Closes: https://github.com/rook/rook/issues/13010

Signed-off-by: Redouane Kachach <rkachach@redhat.com>
(cherry picked from commit 0e132f45a6948859114af8d65e4c0ef50a46cbcc)
ci: fix mkdocs deprecated imports

migrate to using mkdocs-material's material.extensions.emoji.twemoji
and material.extensions.emoji.to_svg in place of the respective
materialx.emoji.twemoji and materialx.emoji.to_svg. Also, this requires
latest version of mkdocs-material.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit b186150e1c6a5d25d91e693623a1a18ed2607529)
build: update release version to v1.12.6

For the patch release update the docs and examples to
v1.12.6

Signed-off-by: travisn <tnielsen@redhat.com>","Improvements
Rook v1.12.6 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
osd: Prevent to fallback to LVM mode in OSD on LVM creation (, @satoru-takeuchi)
build: Reduce Go module dependencies significantly by removing unnecessary package dependencies (, @BlaineEXE)
osd: Use bash script to run OSDs if the flappingRestartIntervalHours is set (, @sp98)
mon: Write the assimilate-conf config to a valid operator working directory (, @travisn)
mds: improve the MDS liveness probe calls (, @parth-gr)
csi: Add mountinfo path for the CephFS daemonset (, @Madhu-1)
osd: Print warning message if no matching node found in nodes list for an OSD (, @wb14123)"
"pool: rbd cmd shouldn't use admin in external mode

when creating networkFence, rbd command was loading
admin config and hence running rbd command use client.admin
in case of external cluster also. With this commit instead
of client.admin user it will use what is being passed to
config.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit ef4dd76df1b8aa64415cef7c45d3d6aaaf8a38a1)
mon: failover mon from hostpath to pv

failover mons from  hostpath to pv and vice versa

Signed-off-by: sp98 <sapillai@redhat.com>
(cherry picked from commit 09356636fadde575b8eb7d79bf70aaedcc5c9a09)
ci: update helm linter to v2.6.0

The helm linter was failing with v2.4.0. Now
update the version of the action to the latest
and greatest.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit dfa522d90635e76d45be3517e34cc4c05f18980b)
docs: add namespace on delete webhook command

The only command on the page that did not have a namespace directly set was this one.

Signed-off-by: Mateus Valgueiro <mateusvalgueiro@gmail.com>
(cherry picked from commit 85401f87ea433e9889e4ddb62b18c7358af5fa13)
multus: improve the multus validation test's flakiness metric

Allow the flakiness threshold window to be tuned from the cli

Signed-off-by: Sheetal Pamecha <spamecha@redhat.com>
(cherry picked from commit 06c176524a850fc717835ae3307e205a0512bcf8)
docs: fix user capability name in object store user

Signed-off-by: Alexander Gil <pando855@gmail.com>
(cherry picked from commit d6edc3bba4bb091f42677d47f019f1e67cd8904d)
ci: fix mike deploy flags

This fixes the docs deploy issues caused by the mike 2.0.0 release that
removed/renamed some flags, see
https://github.com/jimporter/mike/releases/tag/v2.0.0

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit 4a48c14861ab10240f76e571e19798dac588e063)
ci: filter both 14 and 64 disks in CI

github ci runner is allocating both 14 and 64 Gb disks to the setup.
Rook CI currently hard codes the lsblk with a 14G filter.
This PR updates the filter to use either 14G or 64G disks.

Signed-off-by: sp98 <sapillai@redhat.com>
(cherry picked from commit 345f92961b5f51e84032297a6f72b5a42dda0f4b)
build(deps): bump helm/chart-testing-action from 2.6.0 to 2.6.1

Bumps [helm/chart-testing-action](https://github.com/helm/chart-testing-action) from 2.6.0 to 2.6.1.
- [Release notes](https://github.com/helm/chart-testing-action/releases)
- [Commits](https://github.com/helm/chart-testing-action/compare/v2.6.0...v2.6.1)

---
updated-dependencies:
- dependency-name: helm/chart-testing-action
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
(cherry picked from commit df5527ce25e1908f89fef3f911acee19eac90419)
multus: use rook image for ip range detection

Use the Rook image (defined by the operator pod) to detect the Multus
network address ranges. It is reasonable for users to want to have a
minimal Ceph image that does not have the `ip` utility installed, which
is used for detecting the address ranges of multus interfaces. Instead,
use the Rook image, which Rook can ensure has the `ip` tool if Ceph ever
removes it from their image.

Signed-off-by: Blaine Gardner <blaine.gardner@ibm.com>
(cherry picked from commit db1ca8c93e395c38345678d3579e4e4996291f5c)
ci: fix objectsuite flakiness

objectstore deletion was failing with not found error,
Could Not get resource in k8s -- Failed to run:
kubectl [get -n object-ns CephObjectStore
other-tls-test-store -o json]
So added a check if it not found then donot check its
further condition

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 40295a989c15115890b28cd60db2ccae0b0372e5)
mgr: set interval of serviceMonitor to the value from MonitoringSpec

This change updates the serviceMonitor interval field with the
value from the MonitoringSpec.

closes: https://github.com/rook/rook/issues/13159

Signed-off-by: Redouane Kachach <rkachach@redhat.com>
(cherry picked from commit 06bc976959aef0e9022b6519014ed1216e5bf7fb)
Revert ""osd: support encrypted OSD on partiton""

This reverts commit 093125904b373382212c958e0fff90ea9acd2b10.

Once we introduced encrypted OSD on partition in.
However, even though `encryptedDevice` field is `true`,
an non-encrypted OSD is created. To prevent the creation
of misconfigured OSD, it's better to revert for now.

Initially, I intended to correct this problem. However, I found
it will take long time because we need to change the KMS-related
code, init containers of both OSD pod and OSD prepare pod.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 8e80b21035f9d66e25ee9bf25d9c9afbc218489c)
pool: allow updating deviceClass on existing pool

This commits add check to update the deviceClass on
existing pool.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 133154d192c77be6c5671942ca5dbb1737c6d60d)
nfs: add optional LivenessProbe to GaneshaServerSpec

Allow end-user to have full control on NFS-Ganesha liveness probe:

  - Disabled
  - Enabled, using user-provided definition
  - Enabled, using Rook's default liveness probe for Ganesha.

Signed-off-by: Shachar Sharon <ssharon@redhat.com>
(cherry picked from commit 7c3e91390ed3ea57975e2704674c4d4103bff9b7)
nfs: allow livness-probe for nfs-ganesha container

Use K8s LivenessProbe mechanism to check OK-status of nfs-ganesha
container. A user may define his own lineness-probe, or a default one
which expects NFS TCP-port 2049 to be active; that is, willing to accept
new connections: for Ceph>=18.2.1 issue 'rpcinfo' call on local pod;
otherwise use standard K8s TCP-socket liveness probe mechanism.
Define permissive values to liveness-probe to ensure that the NFS
service is defined in failed-state only when it has non-recoverable
error.

The current default definition of LivenessProbe is expected to guard the
nfs pod from at least the following two cases:

  - Deadlocks: where an nfs-ganesha server is running, but unable serve
    new connections due to internal bad-state.

  - Resource exhaustion on the host node (e.g. OOM) which prevents the
    server from accepting new connections and reply to NULL RPC request.

In both cases we expect K8s to reschedule the nfs pod, most likely on
different host node.

Refs rook issue

Signed-off-by: Shachar Sharon <ssharon@redhat.com>
(cherry picked from commit e05184d0a79f657c4ddedcafa6316dc769f67065)
multus: fix placement error for net addr detect job

Fix an issue in the network address detection job where placement was
only retreived from osd and not merged with all.

Signed-off-by: Blaine Gardner <blaine.gardner@ibm.com>
(cherry picked from commit 0a538bfc37f1c6e5e5dfa6936d9297b37553201a)
build: update the release version to v1.12.8

For the patch release update the examples and manifests
to v1.12.8

Signed-off-by: travisn <tnielsen@redhat.com>","Improvements
Rook v1.12.8 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
multus: Enable all placement for net addr detect job (, @BlaineEXE)
nfs: Add livness-probe to nfs-ganesha container (, @synarete)
pool: Allow updating deviceClass on existing pool (, @subhamkrai)
osd: Revert encrypted OSDs on partitions since encryption was not working properly (, @satoru-takeuchi)
multus: Use rook image for ip range detection (, @BlaineEXE)
mgr: Set interval of serviceMonitor to the value from MonitoringSpec (, @rkachach)
multus: Improve the multus validation test's flakiness metric (, @Sheetalpamecha)
mon: Allow mons to failover from hostpath to persistent volumes (, @sp98)
pool: RBD cmd shouldn't use admin in external mode (, @subhamkrai)"
"helm: use toYaml for discovery nodeAffinity

this commit allow user to use requiredDuringSchedulingIgnoredDuringExecution map

Signed-off-by: Hyeonki Hong <hhk7734@gmail.com>
(cherry picked from commit 2e0c015d42be9d618c24bfaacc6685aca1245fdd)
build: update go dep go-jose

synk security check is failing and it requires
go-jose v3.0.3 or later version.

Signed-off-by: subhamkrai <srai@redhat.com>

Signed-off-by: subhamkrai <srai@redhat.com>
osd: delete the key file deletion in encryption open init containers

The key file deletion process is in the shell script commonly used by
all of encryption-open, encryption-open-metadata, and
encryption-open-wal init containers. The key file is deleted at the
encryption-open init container and encryption-open-metadata and
encryption-open-wal init containers are failed to open the key file.

The key file is in the /etc/ceph folder. Unless that folder is shared,
the key file anyway won't be available in the other init containers
even if it is not deleted by these init containers. And it will
naturally anyway be deleted after the init containers are
completed. So The key file deletion process in shell scripts is
unnecessary.

Fixes:

Signed-off-by: Yuma Ogami <yuma-ogami@cybozu.co.jp>
(cherry picked from commit cdd655ed3f257a0a008315ac1364c66fc8130ec6)
external: fix v2 port check in external script

v2 port can be avalaible without v1,
so fixing the current check

Signed-off-by: parth-gr <partharora1010@gmail.com>
(cherry picked from commit 800d2f11f5de2805b521678f86c89fce5584df85)
build: update release version to v1.13.8

For the patch release update the examples and docs to
v1.13.8

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.13.8 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
external: Fix v2 port check in external script (, @parth-gr)
security: Update go dependency go-jose to pass Snyk security scan (, @subhamkrai)
osd: Start encrypted OSDs with metadata device using shared key (, @cupnes)
helm: Use toYaml for discovery nodeAffinity (, @hhk7734)"
"osd: support create osd with metadata partition

Currently, when rook provisions OSDs(in the OSD prepare job), rook effectively run a
c-v command such as the following.
```console
ceph-volume lvm batch --prepare <deviceA> <deviceB> <deviceC> --db-devices <metadataDevice>
```
but c-v lvm batch only supports disk and lvm, instead of disk partitions.

We can resort to `ceph-volume lvm prepare` to implement it.

Signed-off-by: Liang Zheng <zhengliang0901@gmail.com>
(cherry picked from commit ee05e82ceaa9ce5a80bb6c06db49d78f2c752131)
csi: update cephcsi image to 3.10.2

Updating the cephcsi image to 3.10.2
which is the latest released one.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit c22597a32cb1a605f743b6ef2bd42f0bb1967a7a)
ci: add ""network"" to the allowed commit message prefixes

Signed-off-by: Michael Adam <obnox@samba.org>
(cherry picked from commit c38612c28068c7f8ae3fb490366621aa9c4b5551)
network:  disallow legacy hostNetwork together with non-default provider

Fixes:

Since the introduction of the ""host"" network provider, the  legacy
""hostNetwork"" setting is intended to be used only in combination with
the default network provider (""""), but the code did not enforce this.

This change adds the required validation checks to throw errors
in invalid constellations.

These checks are added both in the operator's input  validation code
and as kubernetes x-validation admission policies in the Cepcluster CRD.

Signed-off-by: Michael Adam <obnox@samba.org>
(cherry picked from commit 25aa15e6c1c0d9799123fef8e6ac35f1fbe966da)
mgr: remove privileged security context from mgr sidecar container

Mgr sidecar was using a privileged security context because it needed
to create the /var/lib/rook directory, generate the config on it, and
then copy it to the /etc/ceph directory. This change creates empty
directories on /var/lib/rook and /etc/ceph so the mgr sidecar can use
them, removing the need for using a privileged security context.

Fixes: https://github.com/rook/rook/issues/13719

Signed-off-by: Redouane Kachach <rkachach@redhat.com>
(cherry picked from commit db4b3322faf3ab0708d8bfee03d5e9f2f2008aed)
core: remove namespace/ownerRef from networkFence

since networkFence is a cluster-based resource so that we don't need
the namespace and ownerReferences as it cause garbage-collector errors.
Also, now we create the networkFence with clusteUID label so when doing
cleanup we match the cephCluster uid and networkFence label clusterUID.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 5bff860380f34d1aa1ee9dceb9bcb2ed5d64da58)
core: fix cephfs pvc network fencing

The cephfs PVC might exist on the kubernetes
node object but due to some timing issues the
ip might not be visible on the ceph cluster or
the client might already got evicted or disconnected
from ceph cluster. In this case we will not be
able to get IP details for the subvolume and we dont
have any check for empty ip's in the code and rook
tries to create NetworkFence CR with empty Ip's
and the NetworkFence will get moved to the Failed state.
This PR adds the necessary check and logging to prevent
this one.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 0e115c44bf5e5c0ecff0cc650ddc33fc05703df4)
core: use error wraping in fenceCephFSVolume

to keep the code consistent and to propogate
more details about error rook uses error wraping.
updating current code whereever its required to
wrap the details.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit eb97390df2bf3673a5f367e0f8f0fc9b6976de16)
core: retry other pvc if active client not found

retry other cephfs/rbd pvc if there
are no active clients found on ceph cluster.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit ca21bd97155279dcc171652206ac544e16c98276)
external: update import-external-cluster.sh

Removed = that was preventing the import-external-cluster.sh script from
importing external ceph cluster into k8s.

Fixes https://github.com/rook/rook/issues/13679

Signed-off-by: Tim Olow <tim@eth0.com>
(cherry picked from commit 7dcffae3f7ffe908c976f9f8a10d4ea479028c7a)
pool: skip crush rule update when not needed

The crush rule will be updated when the failure domain changes.
This update can be skipped when the expected crush rule is
already configured. Otherwise, the log has a confusing message
that makes it appear that the crush rule was updated
when in fact it was not.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 90bec3120367f71ce9a64b5a121702ed359133f0)
mon: set mon pdb max unavailable as 2 in case of 5 or more mons

If the spec.mon.count is 5 or more, then create
mon pdbs with maxUnavailable count as 2. We can
afford to have more than 1 mons down while
draining the nodes in this case.

Signed-off-by: sp98 <sapillai@redhat.com>
(cherry picked from commit a4866b4b066ec87c26cee0ba930338e8b5c467a4)
build: update csi-addons to v0.8.0

update go.mod to use csi-addons version v0.8.0.

Signed-off-by: subhamkrai <srai@redhat.com>
csi: check networkFence status before deleting

earlier, we were only checking the specs of networkFence to see if
unfencing is done before proceeding with deletion but we should also
check the status of networkFence before proceeding with deletion.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 0ace7cf8cf0ffad86fe7d02e0637db09412e436e)
csi: remove cephFs networkFence code temporarily

cephFs fencing needs more testing and bug fixes to make
it in production. We tried multiple fixes but still it need
more work. So, removing the cephfs networkFence realted code
will rever this commit when we start working on this again.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit bd4250f56e202daf9cf40ae3dd16382cb75663df)
build: update the release version to v1.13.5

For the patch release update the examples and docs
to v1.13.5.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.13.5 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
pool: Skip crush rule update when not needed (, @travisn)
osd: Support OSD creation with a metadata partition (, @microyahoo)
csi: Update Ceph-CSI image to 3.10.2 (, @Madhu-1)
mon: Set mon PDB max unavailable as 2 when there are 5 or more mons. (, @sp98)
external: fix syntax error import-external-cluster.sh (, @timolow)
core: Continue processing PVs for network fencing when no node IPs found (, @Madhu-1)
mgr: Remove unnecessary privileged security context from mgr sidecar container (, @rkachach)
network: Disallow legacy hostNetwork provider when a non-default provider is specified (, @obnoxxx)
csi: Disable CephFS network fencing  (, @subhamkrai)"
"ci: update go mod and go version in govulncheck

this commits updates the go version to 1.22.2 in govulncheck ci and
also updates golang.org/x/net to v0.23.0 to fix the ci

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit f063e8fe3965c205bec0f59b6aea4ae6ff4e4075)
Signed-off-by: subhamkrai <srai@redhat.com>
osd: prevent osd reconcile when device set names duplicated

If device set names are duplicated, the OSDs will be very confused
when multiple OSDs attempt to be configured with the same
device set names. Updating the device set names does not help
get out of the error situation since the OSDs will also be
confused about which device set they belong to. The reconcile
must fail completely if the device set names are duplicated
to avoid this error scenario.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 7f68d8be38604828177b599973dafc1a97b1b9de)
osd: legacy osds on lvm pvcs crash on resize init container

OSDs on LVM-mode PVCs are failing to come up and crashing
in the expand-bluefs init container. To avoid the crash
and allow the OSDs to start, a workaround was found to
simply remove that init container. Now we disable the
OSD resize for this case to avoid others hitting this
during upgrade as well.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit acd7b4faa05330c66636c9f034c156c184a20deb)
mgr: fix UpdateActiveMgrLabel to retry label update on failure

fix UpdateActiveMgrLabel to retry label update on failure. Previously,
the function always returned the current manager, even if update
failed, leading to inconsistent labels. This fix ensures retries on
failures.

Fixes: https://github.com/rook/rook/issues/13601

Signed-off-by: Redouane Kachach <rkachach@ibm.com>
(cherry picked from commit ee7c71c89e29135b33199cd2238cb9d5135b1e93)
ci: update go version for govulncheck

Update the version of Go used for govulncheck to get the latest CVE fix
present in Go v1.22.3.

Signed-off-by: Blaine Gardner <blaine.gardner@ibm.com>
(cherry picked from commit f21f3f549c2ad3505a26bbb4d77d680a2520258d)
osd: add cephcluster status for legacy osds to replace

LVM-based OSDs on PVCs are legacy and are not well tested.
Therefore, we add status to the cephcluster CR that at least
gives a clue that the OSDs should be replaced.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 3628e83892a631dc56f6c42e877e03b0a71d8628)
ci: fix pylint errors

Afte pylint was updated to version 3.2.0
a set of new errors appeared. This makes
ci passing by either fixing the problem
or ignoring it in the check

Signed-off-by: NymanRobin <robin.nyman@est.tech>
(cherry picked from commit dcec0804689101cc8fca547d8a8bc2f47afff2f8)
core: remove pacific specific code

Since pacific is no longer supported, we can remove pacific specific
code.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit f776c0b35e07732679974d9283cb739cb8194159)
build: update the release version to v1.13.9

For the patch release update the docs and examples
to v1.13.9

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.13.9 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
mgr: Fix UpdateActiveMgrLabel to retry label update on failure (, @rkachach)
core: Remove obsolete Ceph Pacific checks (, @satoru-takeuchi)
osd: Add cephcluster status for deprecated OSDs that should be replaced (, @travisn)
osd: Remove support for resize of legacy LVM-based OSDs on PVCs due to crash in resize container (, @travisn)
osd: Prevent osd reconcile when device set names duplicated (, @travisn)"
"ci: disable tmate for build actions

The build and release actions will rarely ever need to be
debugged. To make them more efficient and reduce their
runtime, we remove the tmate action so it won't add 10
unnecessary minutes to the end of the action.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 90a95ce57de8e75de64cf565297b6b8c3e008ad3)
ci: create toolbox-operator early in ci

moving the toolbox-operator creation early in
ci, so that by the time we wait for others pods
to come up, toolbox-operator will be ready or
will wait for 180s.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit bffa766b4fa2129a27be57d3b70d676a56e9442f)
helm: install rook in openshift cluster

The sccs were missing in the helm installation,
added it

Closes: https://github.com/rook/rook/issues/12280

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 62e3ffb2ba2977f5cdc13c386749ccd3a18fbff3)
operator: log op. config cm setting when changed

earlier, we're always logging when `GetValue` method is
called to get operator config  values which somettime
spamming the logs for example `ROOK_WATCH_FOR_NODE_FAILURE`
keep logging every time 5 min.

Now, we'll store the settings in the map and log only when
map key value is changed.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 733be02577869695103beef3b4cd3e3f0952bb7d)
build: update vault and other indirect imports

update vault and other indirect imports. Also,
updating k8s package to `v0.28.0-rc.0` since with
v0.27.4 it was through build error.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit ab3763767f41c7c08359bb6c7196b9475902a699)
ci: fix golangCI lint remove k8s.io/utils/pointer

golangci linter was throughing error `k8s.io/utils/pointer`
package is deprecated. So, I have removed that.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit a25071ac29ff50d49f2c7dc257c055dea4a9116a)
monitoring: add ""for"" to CephOSDDownHigh alert

As part of a normal restart, an OSD can go down just as prometheus tries
to scrape it, causing this alert to fire. Alerts shouldn't fire as part
of normal operations. This change requires the OSD to be down for 5
consecutive minutes before the alert will fire.

Signed-off-by: Chris Jones <chris@cjones.org>
(cherry picked from commit 9f1e5ec4ee9812b9c48e28fb49e735bf4fadbc24)
tests: start toolbox earlier in tests

The toolbox sometimes times out when the tests are waiting
for it to start. Now we create the toolbox spec sooner in
the tests so we won't need to wait so long for it to start
or increase the wait timeout in the tests.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 90d06a862b39a9e21c1d694aee72d191a4acc80a)
tests: use same ceph version for toolbox in multicluster

The multicluster test was using a different ceph image for the
toolbox than from the original cluster. For efficiency of
pulling images in the test, the toolbox of the external cluster
will now use the same ceph image as the internal cluster.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 0bd7d4ac84cc5266922a52afd0ca6c01cfa6ccb1)
mon: add mon storage class support

if zones field is specified, deploy the mon based on the zone specified,
this will help with higher mon availability.

See also: https://github.com/rook/rook/pull/11407/

Signed-off-by: Deepika Upadhyay <deepika@koor.tech>
(cherry picked from commit 2231d73259707e082c24419bf68e4382444e3c6f)
docs: update crds for mon zonal support

Signed-off-by: Deepika Upadhyay <deepika@koor.tech>
(cherry picked from commit fa7162504e96fac0ccc14e03bce8e8ab51fa41b3)
mon: add failure domain label for zonal topology

Signed-off-by: Deepika Upadhyay <deepika@koor.tech>
(cherry picked from commit 764f6597c0b7f6cc28dc1f57c1c9a582e47c6a38)
mon: fix some of the zonal storageclass support failures

Signed-off-by: Deepika Upadhyay <deepika@koor.tech>
(cherry picked from commit 0d86588620e4c6b5c2d0424c900f90c9a41b544e)
mon: update mon deployment

* fixes mon zonal deployment of 2 per zone to 1 if zones field is
  specified.
* adds zones field doc to CRDs Documentation.
* add code for picking up failureDomainLabel if specified for zones
  field in mon deployment

Signed-off-by: Deepika Upadhyay <deepika@koor.tech>
(cherry picked from commit b67bf2d6f0a297f354ab2e0ba2f6838490284621)
docs: amend for clarity on failureDomainLabel and VolumeClaimTemplate

Signed-off-by: Deepika Upadhyay <deepika@koor.tech>
(cherry picked from commit 427c53786b9587c330e2e22863cbd035de9ddeec)
osd: replace osd to use new backend store

If osd store is updated in the ceph cluster, then
delete OSDs one by one, cleanup disks and provision a new OSD on
the same disk

Signed-off-by: sp98 <sapillai@redhat.com>
(cherry picked from commit 886bb357eff2664dd4368250c7eee9800ba0881e)
build: update crds gen for new descriptions

The CRDs were not generated for the latest since
was merged without rebasing, and other updates with a newer
dependency required the newer descriptions.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 438b61721f7896935da1139d1ebd42000842b96b)
helm: replaced broken documentation references

Noticed that since the release of 1.9, the values.yaml file has some
old documentation references. Replaced them with the new locations.

Adjusted the link as requested by travisn
Placed extra line eof back as requested by path-gr

Signed-off-by: Rowan Ruseler <rowanruseler@gmail.com>
(cherry picked from commit 8f8f46dbd6219dc06d7f1d5ecaebdf535803659a)
helm: improvement in docs

values.overide isn't used for cephcluster
we use values.yaml so updated the doc with the
change

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 41aa70aedf0842438b65e6d58ec537bb0a5fdb95)
helm: update the default version tag to master

updating this to ease the local testing
using helm for master branch repo

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 67f294b6234b21b230aa5f5a427f10ccc128e6a5)
csi: set ceph cluster as ControllerRef for holder

Setting ceph cluster as the ControllerRef
for the holder daemonset set so that when
a ceph cluster is deleted the holder daemoset
will also gets deleted.

fixes:

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit d7a4f0038c3ebc23e8125c57b36ec11140abbc67)
build: remove go modules under apis directory

The go package dependencies (go.mod and go.sum) were created
under the pkg/apis directory to simplify the dependencies for
other projects referencing the rook repo. The downside is that
the dependabot can no longer open a working and valid PR since
the bot is not aware of the go.mod and go.sum in the apis directory.

Since the reduction of dependencies for vault in,
the list of extra dependencies is not quite so extensive.
We are putting effort into shrinking the dependency list instead
of using the modules files in the apis subdirectory.

Note that updated the dependencies for the latest controller
runtime which also increased the size of the modules
list in the pkgs subdirectory, which means the difference
in dependencies in the pkgs subdirectory is no longer
signficant anyway.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 1a4917de781f85eb0eea25d0d30ae73a65c56566)

# Conflicts:
#	.github/workflows/update_dependabot_bundler_pr.yml
build: update the go modules to the latest

Run make go.mod.update to update the go modules to
the latest references.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 138624a3b021e0661015676de19b4343d1f05264)
build: update go modules

Update go modules. The primary goal is to remove the goproxy import
which has security warnings. The library is not used directly or
indirectly by any called Rook code, only dependency modules. Therefore,
exclude it from the build.

At the same time, portworx deps are starting to complicate the module
update again. Rook also doesn't directly or indirectly use the portworx
code, so exclude it also.

Signed-off-by: Blaine Gardner <blaine.gardner@ibm.com>
(cherry picked from commit 87fc55200fc984cb36b5febb55f35a7bbc0a767a)
build: update go version to 1.21 from 1.20

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit e9cc7ed7b9a6a333177e09256a1eccf2d1890cee)
ci: use local tag instead master image

using `rook/ceph:master` tags take longer time
to pull and also, we should be using `rook/ceph:local-build`
tag for our ci. This will help canary raw test to be more stable.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit ad50c8e78054c2d290528106c029ac6d6da76c7d)
multus: auto-update the  validation job manifest file with help text

Signed-off-by: Michael Adam <obnox@samba.org>

this change  introduces a new 'make target 'docs'that generates part of the documentation

It particular, it runs the `helm-docs` target.

Additionally, `make docs`  updates the  multus validation job manifest
by inserting the output of `rook multus validation run --help` between
two newly introduced markers.

The result of running `make docs` is intended to be committed to git after running

Fixes:

Signed-off-by: Michael Adam <obnox@samba.org>
Signed-off-by: Blaine Gardner <b.blaine.gardner@gmail.com>
Co-authored-by: Blaine Gardner <b.blaine.gardner@gmail.com>
Co-authored-by: Michael Adam <obnox@samba.org>

Update build/deploy/generate-deploy-examples.sh

Signed-off-by: Michael Adam <obnox@samba.org>
(cherry picked from commit 22882c535820fcf97d1c8f9f60f3aee788430b47)
ci: update the docs check workflow to run `make docs` instead of `make helm-docs`

Signed-off-by: Michael Adam <obnox@samba.org>
(cherry picked from commit 585c9a51fc5964743a269267c3c76e307b2fb1ca)
multus: commit updated validation job manifest from `make docs`

Signed-off-by: Michael Adam <obnox@samba.org>
(cherry picked from commit 8a6b7786e086afa2a97310909694b945c703d46c)
object: allow creating an object user in different namespace

The object user was previously required to be created in the
same namespace as the object store and the cluster. Now,
the object user can be reconciled even in a different namespace
from the cluster and object store. The namespace would be specified
in the object user CR.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 2b1cc4c7b82ae9f5dd85f06e78e2e0e6ca43bbf6)
docs: correct some libcephsqlite statements

Signed-off-by: Patrick Donnelly <batrick@batbytes.com>
(cherry picked from commit d09a90f69fff0405455df9c026ca9b3f2e5fc155)
ci: enable tmate when in debug mode

we don't want to wait for extra 10min once the ci passed,
so we'll add a check if `debug-ci` label is added or debug runner
is triggered from UI then only start tmate. Also, updaing the
development doc and rook test doc.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit a223b6777b54edc3a51409bd39fdf14a8bc81284)
core: return valid CIDR ip

we need to return a valid CIDR IP
to get it fenced properly, the previously
returned one was like `10.63.0.5:0/32` which
is not a valid CIDR, removing `:0` to look like
proper IP CIDR.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit eb304a50739cd4aeec5c4fc11f0e10910cac310d)
ci: upgrade the kubernetes versions for ci

since, kubernetes v1.28.0 release upgrading the
latest k8s version to v.1.28.0 excepth objectSuite
tes.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 90d81e11b6a72d0bf94fdbaebe5f43d0f9505adc)
mon: typo in json tag of struct MonMap

The json tag in struct MonMap had a spelling error where ""json"" was incorrectly splled as ""josn"". This commit corrects the spelling to ""json"".

Signed-off-by: go-bai <599500688@qq.com>
(cherry picked from commit f4cfa95768dcf3dd10df438d71821859cd33291d)
external: change cluster_name to k8s_cluster_name

it was confusing if we are calling a ceph cluster name
or k8s cluster name, so re-named

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 98c4567219198e8d13f35ed4c75b6ff000c3d12e)
object: avoid creating same bucket for two different OBC

If bucket exists for Provision(), then check whether user in the OBC and
owner of bucket are same.

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit b39e813290ab6ed79c27aa14e80f31b4e8730ae9)
build: update release version to v1.12.3

For the patch release update the examples and documents to
v1.12.3.

Signed-off-by: travisn <tnielsen@redhat.com>","Improvements
Rook v1.12.3 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
object: Avoid creating same bucket for two different OBCs (, @thotz)
object: Allow creating an object user in different namespace (, @travisn)
external: rename --cluster_name parameter to --k8s_cluster_name (, @parth-gr)
core: Return valid CIDR IP for blocklisting (, @Madhu-1)
ci: Add K8s v1.28 to test suite (, @subhamkrai)
csi: Set ceph cluster as ControllerRef for holder daemonset (, @Madhu-1)
build: Add support for Go version 1.21 in addition to 1.20 (, @subhamkrai)
build: Update go modules (, @BlaineEXE)
build: Remove go modules under apis directory (, @travisn)
helm: Documentation uses values.yaml instead of values-override.yaml (, @parth-gr)
osd: Implement replacing OSDs for when the backend store may change in future (, @sp98)
mon: Support mon backing storage in different storage classes across zones (, @ideepika)
monitoring: Add ""for"" to CephOSDDownHigh alert (, @cjyar)
operator: Log operator config configmap settings only when changed (, @subhamkrai)
build: Update vault and other indirect imports (, @subhamkrai)
helm: Support helm chart install in OpenShift clusters (, @parth-gr)"
"docs: specify that `rook-ceph` helm chart should be upgraded first

Today, it's unclear that there is an expected order of operation when it
comes up upgrades. In reality, the `rook-ceph` helm chart includes the
operator, which should have the opportunity to update any custom
resources before the `rook-ceph-cluster` is upgraded.

Signed-off-by: Kyle Fazzari <kyrofa@ubuntu.com>
(cherry picked from commit ce6baa4f3177a40809dea8f17dbf9725f224df29)
doc: document `spec.csi` section in cephcluster crd

This commit documents the newly added `spec.csi`
section containing CSI driver related options.

Signed-off-by: Rakshith R <rar@redhat.com>
(cherry picked from commit 24430f989a8aae1ebef2e2be417d6550776b5dc5)
ci: upgrade kubernetes version to latest version

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 54b3c9f79febca7b33aa897b1cd29b5ffc5dc3da)
helm: allow configuring monitoring interval

Signed-off-by: Charlie Haley <charlie.haley@hotmail.com>
(cherry picked from commit 0768eb125b4695b2143143511aa1326427ec8b89)
mon: allow changing hostNetwork settings

Allow changing spec.network.hostNetwork settings on a running cluster
by failing over the mons

Signed-off-by: sp98 <sapillai@redhat.com>
(cherry picked from commit 42ea2897cff022d27189502d6a00889ef58c5a43)
build(deps): bump actions/upload-artifact from 3 to 4

Bumps [actions/upload-artifact](https://github.com/actions/upload-artifact) from 3 to 4.
- [Release notes](https://github.com/actions/upload-artifact/releases)
- [Commits](https://github.com/actions/upload-artifact/compare/v3...v4)

---
updated-dependencies:
- dependency-name: actions/upload-artifact
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
(cherry picked from commit 4782ccf5ad50da364cfd64005477a47915fd46ee)
build: update base and manifests to ceph v18.2.1

Update Rook operator base image and example manifests to the latest Ceph
version released late last week v18.2.1.

Signed-off-by: Blaine Gardner <blaine.gardner@ibm.com>
(cherry picked from commit 01d7b22cf14088bdedf21f3bdfdc02f9c5682184)
helm: fix duplicate tolerations

Fix duplicates tolerations in operator Deployment

Resolves https://github.com/rook/rook/issues/13416

Signed-off-by: Julien Francoz <julien-github@francoz.net>
(cherry picked from commit 1171b60862534c6e7b6dcb953c733ade7af2df37)
csi: update the CSI-Addons sidecar to v0.8.0

Quite some improvements have been included in the recently released
v0.8.0 of the CSI-Addons sidecar for Kubernetes. Rook users will benefit
from running the latest version of the sidecar when deploying Ceph-CSI.

See-also: https://github.com/csi-addons/kubernetes-csi-addons/releases/tag/v0.8.0
Signed-off-by: Niels de Vos <ndevos@ibm.com>
(cherry picked from commit 1ca1257c65f2bf94be8e86b6dcebfd28114167b9)
ci: improve collect-log script

I was debugging helm tests, I noticed, the operator namespace
content is empty and operator is created in same namespace as
other pods. Also, let's collect the 'kube-system' namespace logs
in multus test only as that is the only test where we need to debug
cluster networking and require kube-system logs.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 2d3e561a00a81ece6311ecd731908a8eb2340968)
csi: remove gRPC metrics service

This commit removes the gRPC metrics svc which was missed in PR.

Signed-off-by: Praveen M <m.praveen@ibm.com>
(cherry picked from commit 17c9a069bdf12ae07e091d7b0b47840ac8e1bf76)
csi: update default cephcsi version to 3.10.1

This commit updates default cephcsi driver version
to v3.10.1

Signed-off-by: Riya Singhal <rsinghal@redhat.com>
(cherry picked from commit ef1ee6ebae66b187026309139e0ee36c34c32ef3)
csi: implement network fencing for cephFS

Signed-off-by: Riya Singhal <rsinghal@redhat.com>
(cherry picked from commit 9202e2082918201496704af149a34d99e1ebb786)
build: update release version to v1.13.1

For the patch release update the examples and manifests
to v1.13.1

Signed-off-by: travisn <tnielsen@redhat.com>
ci: remove ceph SVGs in helm test

Both the helm tests are failing because,
```
2023-12-19 08:47:06.136640 E | ceph-file-controller: failed to reconcile CephFilesystem ""helm-ns/ceph-filesystem-test"". CephFilesystem ""helm-ns/ceph-filesystem-test"" will not be deleted until all dependents are removed: CephFilesystemSubVolumeGroups: [ceph-filesystem-test-csi]
```
So, let's remove the ceph SVGs before removing Ceph filesystem.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit d8766ff871c04d309964555e28b0d5f20730fd9f)","Improvements
Rook v1.13.1 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
build: Update base and example manifests to ceph v18.2.1 (, @BlaineEXE)
csi: Update default Ceph-CSI version to v3.10.1 (, @riya-singhal31)
csi: Update the CSI-Addons sidecar to v0.8.0 (, @nixpanic)
csi: Implement network fencing for CephFS (, @riya-singhal31)
helm: Allow configuring monitoring interval (, @charlie-haley)
mon: Allow changing hostNetwork settings (, @sp98)
csi: Remove obsolete gRPC metrics service (, @iPraveenParihar)
helm: Fix duplicate tolerations (, @jfcoz)
ci: Run K8s v1.29 in the CI (, @subhamkrai)
docs: Add spec.csi section in the CephCluster documentation (, @Rakshith-R)"
"osd: use old passphrase to kill the luks slot

While adding a new encryption key to slot 1
if there exists a key in slot 1 which is not
equal to the one we want to update it with,
we kill the slot and then add the new key to it.

While killing the slot, the existing code uses
the new key, which is not valid in such cases.

This patch modifies the code to use the key in
slot 0 (the one that we know works) to kill the slot.

Signed-off-by: Niraj Yadav <niryadav@redhat.com>
(cherry picked from commit b8b7af349596da3fa6b15ba411f4b684be75f35c)
osd: fix activate failure when block device moves

Block devices can move between reboots. In corner cases, an OSDs block
device might move to a lower-indexed device while the previous device
does not exist. For example, an OSD on /dev/sde might move to /dev/sdd
on reboot if the original /dev/sdd died. There would be no /dev/sde
after that.

Users report that NVMe drives commonly change names, even when there are
no disk failures.

For these cases, ensure the activate script properly handles cases where
the previous disk is not present on the node and where the OSD is still
available on a different disk.

Signed-off-by: Blaine Gardner <blaine.gardner@ibm.com>
(cherry picked from commit f2304bf8b84a76c5aae4bde6f5f620a81c1b8039)
csi: skip creating networkFence when csi disabled

skip creating networkFence when 'ROOK_CSI_DISABLE_DRIVER' is set to
'false'.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 4be450ae4b6b521d0da5ce8709f9b03a3feb8012)
docs(fix): missing `**` for bold text

In docs page Storage-Configuration/Shared-Filesystem-CephFS/filesystem-storage.md

Signed-off-by: dbrennand <52419383+dbrennand@users.noreply.github.com>
(cherry picked from commit e9ff24fec3768349e83b75ee478b6586b924bac6)
build: update go-retryablehttp from 0.7.6 to 0.7.7

this commit updates go-retryablehttp from 0.7.6 to 0.7.7
and without this govulcheck ci is failing.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 9fbf3d3)

Signed-off-by: subhamkrai <srai@redhat.com>
csi: update csi-addons repo link

updating csi-addons repo link
to pull the yamls for installation

closes:

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 266fd49c0293f97ee2d7df48134a283b4e5e8820)
build: update the release version to v1.14.8

For the patch release update the manifests and docs
to v1.14.8

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.14.8 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
osd: Fix activate failure when block device moves (, @BlaineEXE)
csi: Update csi-addons repo link for correctly versioned downloads (, @Madhu-1)
build: Update go-retryablehttp from 0.7.6 to 0.7.7 (, @subhamkrai)
osd: Use old passphrase to kill the LUKS slot during key rotation (, @black-dragon74)
csi: Skip creating networkFence when csi is disabled (, @subhamkrai)"
"csi: enable csi-addons-side when crds are deployed

when deploying csi, we'll check if csi-addons crds
are deployed we'll enable csi-addons sidecar by default.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit a755ec156aa94e8a5cbee1afef0d7cdedb41e179)
core: restart ceph daemons when network updated

We need to restart all the ceph daemons whenever
cephCluster network settings are modified like
requiremsgr2, encryption and compression. This
required for Ceph to consider the new settings
it require new ceph daemons all over.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 29d2b6a0715881a19edcda381a68a4ca6895db87)
ci: simplify the docs-check workflow by extracting functionality

This simplifies the docs-check workflow definition by extracting  functionality
directly coded into the workflow file into new make targets 'check-docs'
and 'check-helm-docs' and replacing the code in the workflow file by the simple invocation of
new make targets. As a side effect, it makes it easily possible for a
developer to check locally if they forgot to commit any autogenerated
docs.

Signed-off-by: Michael Adam <obnox@samba.org>
(cherry picked from commit 04670d3f76c33d4d6f220daf23e530ff1582a01f)
docs: mention `make check-helm-docs` and `make docs` in the contributing guide

Signed-off-by: Michael Adam <obnox@samba.org>
Co-authored-by: : Michael Adam <obnox@samba.org>
signed-off-by: Travis Nielsen <tnielsen@redhat.com>
Co-authored-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit c8c97bb8a1df56438d7672cc56623b1a1e93d8dc)
monitoring: set port for servicemonitor for ceph-exporter

ceph-exporter's ServiceMonitor and Service CRD contain different port
name, which results in no metrics being collected by prometheus.

this commit makes GetCephMonitor configurable, which we use to set
consistent port names in ServiceMonitor and Service for ceph-exporter.

Signed-off-by: Divyansh Kamboj <dkamboj@redhat.com>
(cherry picked from commit 708dd29a979550d56c0b061fbedcef038c087646)
osd: replace existing OSDs to use new store

This follow up the
- fixes replacing of encrypted OSDs.
- Updates OSD status at the end of reconcile

Signed-off-by: sp98 <sapillai@redhat.com>
(cherry picked from commit 11b8d10a5a6671d982381e71a070356c7433e436)
build: correct release version for toolbox based on operator

The toolbox based on the operator image was added after the initial
release of v1.12.0, where the image tags from master were replaced
by hte release version. When the feature was backported,
the master tag remained. Now the version tag is set
as expected.

Signed-off-by: travisn <tnielsen@redhat.com>
helm: move discovery daemon settings into configmap

This allows the rook mgr module to check if the discovery daemon is enabled. The udev blacklist setting was also moved just to keep similar settings in the same place.

Signed-off-by: Stephen Muth <smuth4@gmail.com>
(cherry picked from commit 37d8de09934e2050e24b665901913a339f158aec)
operator: move most of discover pod setting to cm

It's better to move most of discover daemon setting
from env to configmap rook-ceph-operator-config.
Although, we are moving to configmap, we keep reading settings
from env but the priority will be configmap settings.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit fb395800678cd9c0dae079163dc18d97ef072192)
operator: config default interval value for discovery daemon

Correctly set discoveryInterval default value by passing defaultDiscoverInterval to k8sutil.GetValue
Allow to set ROOK_DISCOVER_DEVICES_INTERVAL env var through discoveryDaemonInterval helm value

Signed-off-by: Louis Bailleul <louis.bailleul@pgs.com>
(cherry picked from commit e56122cbceddb63cef009c73711ad5cea98476ac)
multus: detect network CIDRs via canary

Change how Rook detects network CIDRs for Multus networks. The IPAM
configuration is only defined as an arbitrary string JSON blob with a
""type"" field and nothing more. Rook's detection of CIDRs for whereabouts
had already grown out of date since the initial implementation.
Additionally, Rook did not support DHCP IPAM, which is a reasonable
choice for users. And more, Rook did not support CNI plugin chaining,
which further complicates NADs. Based on the CNI spec, network chaning
can result in any changes to network CIDRs from the first-given plugin.

All these problems make it more and more difficult for Rook to support
Multus by inspecting the NAD itself to predict network CIDRs. Instead,
it is better for Rook to treat the CNI process as a black box. To
preserve legacy functionality of auto-detecting networks and to make
that as robust as possible, change to a canary-style architecture like
that used for Ceph mons, from which Rook will detect the network CIDRs
if possible.

Also allow users to specify overrides for CIDR ranges. This allows Rook
to still support esoteric and unexpected NAD or network configurations
where a CIDR range is not detectable or where the range detected would
be incomplete. Because it may be impossible for Rook to understand the
network CIDRs wholistically while residing only on a portion of the
network, this feature should have been present from Multus's inception.

Improving CIDR auto-detection and allowing users to specify overrides
for auto-detected CIDRs rounds out Rook's Multus support for CephCluster
(core/RADOS) installations. No further architectural changes should be
needed for CephClusters as regards application of public/cluster network
CIDRs for Multus networks.

Signed-off-by: Blaine Gardner <blaine.gardner@ibm.com>
(cherry picked from commit 3c43268d0a924c3966a253b1bf28a5d491cdedb1)
helm: update docs to reflect reef support

some helm comments incorrectly indicate ceph v18 is not supported

Signed-off-by: Micah Nagel <micah.nagel@defenseunicorns.com>
(cherry picked from commit 0ff224d453128db5af21814e9e7fece92c8ca556)
object: unique username for OBC even when preceding OBC was retained

For an OBC's name we cannot simply use the OBC's namespace and name,
because they can be reused, while the preceding bucket might be
retained by reclaimPolicy. (Commit 2733375ca4ef also didn't solve
this issue, as it is an intra-cluster issue.) Therefore we instead
use the OBC's UID which should be unique within the cluster and
across clusters.

Signed-off-by: Sebastian Hasler <sebastian.hasler@stuvus.uni-stuttgart.de>
(cherry picked from commit 041fc1a71ce5fc6c6f7be323fb855642a7c86452)
exporter: bind to all interfaces if IPv6 is enabled

Previously ceph-exporter would only bind to IPv4 interfaces. Now if the
CephCluster is configured with `dualStack: true` and/or `ipFamily: IPv6`
an additional flag (`--addrs ::`) will be added to the ceph-exporter
container to make it listen both IPv6 and IPv4 interfaces.

Signed-off-by: Matthew Penner <me@matthewp.io>
(cherry picked from commit d09a43df3789652d7932933d1fadf2597342d7f5)
build: update the release version to v1.12.4

For the patch release update the docs and examples
to v1.12.4.

Signed-off-by: travisn <tnielsen@redhat.com>","Improvements
Rook v1.12.4 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
core: Restart ceph daemons when network updated (, @subhamkrai)
helm: Update docs/comments to reflect reef support (, @mjnagel)
exporter: Bind to all interfaces if IPv6 is enabled (, @matthewpi)
object: Unique username for OBC even when preceding OBC was retained (, @haslersn)
multus: Allow using NADs without inspectable CIDRs (, @BlaineEXE)
discover: Fix discover daemonset default value for discovery interval (, @lbailleul)
operator: Move discover pod settings to the operator configmap (, @subhamkrai)
build: Correct release version for toolbox based on operator in release-1.12 branch (, @travisn)
osd: Replace existing OSDs to be upgraded when new store is available (, @sp98)
ci: Simplify docs-check workflow by extracting functionality  (, @obnoxxx)
csi: Enable csi-addons-side when dependent CRDs are deployed (, @subhamkrai)
monitoring: Set port for exporter servicemonitor (, @weirdwiz)"
"ci: wait for all OSD pods to become Running in wait_for_prepare_pod

Currently, `wait_for_prepare_pod` only waits until 1 prepare pod and 1
OSD pod are in Running state.

So if `wait_for_ceph_to_be_ready` failed after `wait_for_prepare_pod`
succeeded, there are 4 possible cases:

1. some prepare pods didn't start correctly;
2. some prepare pods didn't finish correctly;
3. some OSD pods didn't start correctly; or
4. all prepare pods and OSD pods worked correctly, but some other
   process failed.

As far as I understand, the number of prepare pods on the GitHub CI is
always 1, so cases 1 and 2 are not problematic. However, it is hard to
distinguish the other two cases from the CI log.

To solve the above problems, this patch makes wait_for_prepare_pod wait
for all OSD pods to become running state. If wait_for_prepare_pod
timeouts before the OSD pods become running state, this will be a strong
indication that the OSD pods didn't start properly (i.e., case 3).

Signed-off-by: Ryotaro Banno <ryotaro.banno@gmail.com>
(cherry picked from commit e9c1f81d79f9e6a1fae74e27aa2bf78695e7d8f2)
helm: update default ceph version to v18.2.1

In the cluster chart, set the default ceph version
to v18.2.1.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 5f60d2dfac0c67509e44eb76aeb7fa4b2a50352e)
docs: update all examples to ceph v18.2.1

Since v18.2.1 is the default recommendation for the ceph version,
update all the docs and examples to that version.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 56a3370d835c0ba4c48ec5347775cbd321c4cce0)
doc: add that resizing `encryptedDevice` is not yet supported for host-based clusters

Caused by the following issue:
https://github.com/rook/rook/issues/13262

Signed-off-by: Yuma Ogami <yuma-ogami@cybozu.co.jp>
(cherry picked from commit 3a55526d557ee159f1fa9f5e94ed5232a036272e)
multus: use nginx-unprivileged image from quay

Use Quay as the source for the nginx-unprivileged image used for the
Multus validation tool because Quay does not rate limit image pulls,
which are a common complaint for users of the tool.

Signed-off-by: Blaine Gardner <blaine.gardner@ibm.com>
(cherry picked from commit cd253d0218c4572f8718b306f1df2c24e2f68bc8)
manifest: shorten crd descriptions to 100 chars

Long CRD descriptions were pushing the size of the CRDs manifest
over 1MB, which causes issues when creating the CRDs. To shorten
the manifest, the descriptions are now limited to 100 chars.
This still gives some ability for dev tools to show a brief
description if needed. The generated CRD docs still contain
the full descriptions for reference.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 3c1b0692e414d00253fadf85f9dfa7b341ae37dc)
osd: create config before migration osd

create the ceph config and keyring file in the osd prepare pod
before starting the OSD migration. These files are needed to
run any ceph command.

Signed-off-by: sp98 <sapillai@redhat.com>
(cherry picked from commit 94953f3f7b81f678ee18c7d793d566f886bc978f)
core: core: fix error handling on setting watcher

If `cmClient.Watch()` failed, `watcher.Stop()` causes null pointer
dereference.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit b1a81509a5e90de8d4f7cf9fbcc2214d55a68d8b)
external: honour support of cluster-name legacy flag

we have changed the --cluster-name flag to --k8s-cluster-name
but to support automation while upgrade we should support
the legacy flag

Signed-off-by: parth-gr <partharora1010@gmail.com>
(cherry picked from commit 8e4ec01cbb1c64ef3cbc5e4822a9e2e34adf9c5f)
mds: increase max limit of mds active daemons

The mds max daemons had been set arbitrarily to 10.
Allow more mds daemons for clusters that have a
scenario for large numbers of mds to manage the
filesystem metadata.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 98816ad79fd128dede62a9b02f703cef4769b6a8)
build: update release version to v1.13.2

For the patch release update the exampls and docs
to v1.13.2

Signed-off-by: travisn <tnielsen@redhat.com>","Improvements
Rook v1.13.2 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
helm: Update cluster chart and all examples to ceph v18.2.1 (, @travisn)
mds: Increase max limit of mds active daemons (, @travisn)
external: Support the cluster-name legacy flag in the external script (, @parth-gr)
core: Fix error handling on setting watcher (, @satoru-takeuchi)
osd: Create ceph conf and keyring files before osd migration (, @sp98)
doc: Resizing encryptedDevice is not yet supported for host-based clusters (, @cupnes)
manifest: Shorten CRD descriptions to 100 chars (, @travisn)
multus: Use nginx-unprivileged image from quay for multus tool (, @BlaineEXE)"
"csi: only create CSI config configmap in CSI reconciler

There have been some issues with non-CSI Rook controllers that are
creating the CSI config configmap (`rook-ceph-csi-config`). This causes
problems with the K8s OwnerReference. The primary CSI reconciler
(controller) creates the configmap with the correct owner reference,
which is supposed to be the operator deployment.

Other instances were creating the configmap with owner references set to
the CephCluster. This is a minor bug, but it can result in this
configmap being deleted along with the first CephCluster that initially
created it.

To fix this issue, remove all instances of `CreateCsiConfigMap()` except
the single usage which the CSI reconcile uses to initially create the
configmap. Other controllers that might have attempted to create this
configmap previously will return an error indicating that it is waiting
for the configmap to be created.

Signed-off-by: Blaine Gardner <blaine.gardner@ibm.com>
(cherry picked from commit eb3278d57509086622776ef2736fd2f43b34b4ec)
csi: ensure correct csi config map owner during creation

In the primary CSI reconcile, ensure the CSI config map
(`rook-ceph-csi-config`) has the correct owner info.

This corrects any pre-existing config maps that might have incorrect
owner info, which has observed to include references to CephClusters.
The config map should only have a single reference, and it should refer
to the operator deployment.

If any existing Rook clusters have a CSI config map which has a
CephCluster as an owner, this change will ensure that the config map is
not deleted when the CephCluster is deleted. This is especially
important for any environments with multiple CephClusters installed.

Signed-off-by: Blaine Gardner <blaine.gardner@ibm.com>
(cherry picked from commit 605b9633eaf3ec562c1e04cc69a1798d609e6ec4)
helm: use correct metadata and data ec block pool

The metadata and data block pools for an EC block pool
were switched, causing issues with the EC configuration.
Now the metadata and data pool settings are correct
in the helm chart.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit bbfa4f21ad21580784f3ca0e85620e3348a30b18)
ci: add k8s 1.30 support in ci

adding support for kubernetes 1.30 in ci which released yesterday.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 128ec16ee681ded8a80dabf2821180fdf2d848c5)
build: update the release version to v1.14.2

For the patch release update the examples and manifests
to v1.14.2

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.14.2 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
ci: Add K8s 1.30 support (, @subhamkrai)
helm: Use correct metadata and data EC block pool (, @travisn)
csi: Only create CSI config configmap in CSI reconciler (, @BlaineEXE)"
"ci: fix codespell ci by skipping some words

fixing 'secert' to `secret` and adding workds like
`NotIn, addin` to skip work list.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 85c25bbc6eb07c356970b8e75212b6224cb6d517)
Signed-off-by: subhamkrai <srai@redhat.com>
build: remove iproute build dependency on centos repo

Multus requires that the 'ip' tool be installed in the Rook image.
Today, it is present in the upstream Ceph base image that is used, but
that is expected to change in the future. The Ceph project intends to
switch to CentOS 9 minimal images, and the 'ip' tool will likely be
removed from the base image at that point.

However, Rook CI has occasionally had issues with the current 'dnf
install' command when CentOS repos go down, or when there is otherwise
some problem. Because the package is already installed today, there is
no need to hamstring Rook builds when CentOS is having problems. But we
do want to make sure that Rook builds don't silently succeed in the
eventual future when 'ip' tool is removed from the Ceph image.

For now, replace the 'dnf install' with a check to verify that 'ip' tool
is installed, and add a shorter form of this note as a comment above it
to help Rook maintainers know how to resolve future 'ip' tool removal.

Signed-off-by: Blaine Gardner <blaine.gardner@ibm.com>
(cherry picked from commit c4e99c14623c37638cd8add8824f90d594003722)
osd: fix activate failure when block device moves

Block devices can move between reboots. In corner cases, an OSDs block
device might move to a lower-indexed device while the previous device
does not exist. For example, an OSD on /dev/sde might move to /dev/sdd
on reboot if the original /dev/sdd died. There would be no /dev/sde
after that.

Users report that NVMe drives commonly change names, even when there are
no disk failures.

For these cases, ensure the activate script properly handles cases where
the previous disk is not present on the node and where the OSD is still
available on a different disk.

Signed-off-by: Blaine Gardner <blaine.gardner@ibm.com>
(cherry picked from commit f2304bf8b84a76c5aae4bde6f5f620a81c1b8039)
csi: update csi-addons repo link

updating csi-addons repo link
to pull the yamls for installation

closes:

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 266fd49c0293f97ee2d7df48134a283b4e5e8820)
build: update the release version to v1.13.10

For the patch release update the manifests and docs
to v1.13.10

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.13.10 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
osd: Fix activate failure when block device moves (, @BlaineEXE)
csi: Update csi-addons repo link for correctly versioned download (, @Madhu-1)"
"mgr: fix UpdateActiveMgrLabel to retry label update on failure

fix UpdateActiveMgrLabel to retry label update on failure. Previously,
the function always returned the current manager, even if update
failed, leading to inconsistent labels. This fix ensures retries on
failures.

Fixes: https://github.com/rook/rook/issues/13601

Signed-off-by: Redouane Kachach <rkachach@ibm.com>
(cherry picked from commit ee7c71c89e29135b33199cd2238cb9d5135b1e93)
docs: improve wording in BlockPoolRados Namespace CRD doc

Signed-off-by: Michael Adam <obnox@samba.org>
(cherry picked from commit 10df932d62a3188c2a88b3b5f47fe24f6645b1a3)
ci: add misspell linter

add misspell linter to check all source codes

Signed-off-by: Liang Zheng <zhengliang0901@gmail.com>
(cherry picked from commit e76dd03f5433cccec3e0690c2a5450c7769c35cd)
ci: update ubuntu image to 22.04

updating ubuntu image to 22.04 from 20.04 which is used in ci test

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 11ce20feaf21c4c1d99038f82c2b9f6694f97d78)
Signed-off-by: subhamkrai <srai@redhat.com>
ci: update go version for govulncheck

Update the version of Go used for govulncheck to get the latest CVE fix
present in Go v1.22.3.

Signed-off-by: Blaine Gardner <blaine.gardner@ibm.com>
(cherry picked from commit f21f3f549c2ad3505a26bbb4d77d680a2520258d)
ci: add missing markdownlint CI step

The CI step that runs markdown lint accidentally got removed as part of
PR updates. Add the CI step back in.

Signed-off-by: Blaine Gardner <blaine.gardner@ibm.com>
(cherry picked from commit 115e0aa430dd936cde70698891e8539ee062b8cc)
osd: add cephcluster status for legacy osds to replace

LVM-based OSDs on PVCs are legacy and are not well tested.
Therefore, we add status to the cephcluster CR that at least
gives a clue that the OSDs should be replaced.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 3628e83892a631dc56f6c42e877e03b0a71d8628)
ci: bump github actions dependency setup-go

The version v2 was deprecated and was causing warnings.

Signed-off-by: NymanRobin <robin.nyman@est.tech>
(cherry picked from commit 8af9917b9eb93ca3242dddde55790942d0eca63b)
ci: fix pylint errors

Afte pylint was updated to version 3.2.0
a set of new errors appeared. This makes
ci passing by either fixing the problem
or ignoring it in the check

Signed-off-by: NymanRobin <robin.nyman@est.tech>
(cherry picked from commit dcec0804689101cc8fca547d8a8bc2f47afff2f8)
core: remove pacific specific code

Since pacific is no longer supported, we can remove pacific specific
code.

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit f776c0b35e07732679974d9283cb739cb8194159)
ci: push image ci failing in ubuntu 22.04

since we moved to ubuntu 22.04, ci push image build is failing
due wrong parameter `--platforms linux/amd64 linux/arm64,` it should
be instead `--platforms linux/amd64, linux/arm64`.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit f89540c4efa2d0c14933be947607ddd8f18f8ad2)
ci: remove extra comma from platforms

The last pr missed removing the extra comma after the platform
so, instead of ` linux/amd64,linux/arm64,` it should be
` linux/amd64,linux/arm64`.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit ea159ad9b73c90de20775722134f1fa596a969f1)
docs: update documentation for volume clone

after cross-storageclass clone/restore, now we can
clone across different storageclass.
this commit updates the documentation indicating
the same.

Signed-off-by: yati1998 <ypadia@redhat.com>
(cherry picked from commit 945da179e2e4a26a3fc78435b733d815a0fc7a43)
build: update the release version to v1.14.4

For the patch release update the docs and manifests
to v1.14.4

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.14.4 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
core: Remove obsolete Ceph Pacific checks (, @satoru-takeuchi)
osd: Add cephcluster status for deprecated OSDs that should be replaced (, @travisn)
mgr: Fix UpdateActiveMgrLabel to retry label update on failure (, @rkachach)
ci: Update ubuntu image from 20.04 to 22.04 (, @subhamkrai)"
"build: update s5cmd to version v2.2.1

This is the latest available version.
The previously used version v2.0.0 was very outdated.

Fixes:

Co-authored-by: subham rai subhamkrai <srai@redhat.com>
Signed-off-by: Michael Adam <obnox@samba.org>
Signed-off-by: Subham Rai subhamkrai <srai@redhat.com>
  signed-off-by: Travis Nielsen <tnielsen@redhat.com>
    Co-authored-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit cef43e115509b7ed2174bc32e37e950163c2412d)
build: avoid crd edits when building on mac

On mac development machines, the crds are being left in a
state of change with the description removed and the
OBC CRDs removed from crds.yaml and resources.yaml.
By skipping the related env vars, these resources
are no longer left unexpectedly modified.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 0bf117493dc890c91bc109ac88b78a6bf0ae967a)
osd: make osd pod to sleep when osds are flapping

When OSDs flap, ceph stops the OSD daemon if its marked down greater than
5 times in 600 seconds. But OSD pod restarts and marks the OSD `up` again.
This causes the PGs mapped to these OSDs to peer. While the PGs are peering,
IO to these PGs are blocked.

So we need to ensure that if ceph is marking OSD `down` due to flapping, OSD pod
should not restart to mark the OSDs `up` again.

This PR adds a sleep to the OSD pod if the container returned with a 0 exit code
Default behavior is to sleep for 6 hrs. But user can configure it from the
ceph cluster spec.

Signed-off-by: sp98 <sapillai@redhat.com>
(cherry picked from commit 4eb9f62205cab31e0079435726c15592ea04fe57)
test: update multus canary test

Update the multus canary test to reflect modern knowledge about how it
should be configured.

No longer test for the network device in OSD pods. Pods will utterly
fail to start if Multus is unable to attach interfaces.
Instead, look to the OSD map to test the connections more wholistically.
OSDs must have map IPs that include both public and cluster network.
This implicitly tests that the interfaces exist in the Pod, and it
additionally verifies other details, like Ceph `*_network` configs are
set propertly.

Signed-off-by: Blaine Gardner <blaine.gardner@ibm.com>
(cherry picked from commit 3e2e906ea750be69f26dc28baf13f3f2c16bbe21)
helm: obc rbac aggregation to user facing roles

add view & edit ClusterRole for obc.

the roles are added to the default user facing roles
view / edit / admin respectively using k8s ClusterRole aggregation.

feature disabled for backward compatibility
and controlled with rbacAggregate.enableOBCs.

Signed-off-by: Cyril Jouve <jv.cyril@gmail.com>
(cherry picked from commit 45d897b8b32eb1247450699073315c984da9856e)
osd: support encrypted OSD on partiton

Let's use raw mode for encrypted OSD. This mode supports encrypted
OSD on partition.

Closes: https://github.com/rook/rook/issues/10984

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 093125904b373382212c958e0fff90ea9acd2b10)
core: import packages only once

Signed-off-by: guoguangwu <guoguangwu@magic-shield.com>
(cherry picked from commit 235ac293ffdefc8fe1c5d7beefef797a72828c06)
docs: review the teardown guide for updated guidelines

The teardown guide is updated with the guidelines to use
third person wording and be more concise. Also, remove
the list of CRDs from the example that easily becomes
outdated as the list changes from release to release.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 40d4eedb8327f2afff28401d707788cab4f21303)
mgr: adding support for prometheus endpoint configuration

Using the new configuration parameters prometheusEndpoint and
prometheusEndpointSSLVerify users can configure dashboard to
point to their prometheus instance.

closes:

Signed-off-by: Redouane Kachach <rkachach@redhat.com>
(cherry picked from commit c76393543687f0321e016ef633223ee433369f91)
docs: krew is wrong word use kubectl instead

krew is itself a plugin and it is wrong wording
to use krew plugin intead it should be kubectl
pluging.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 47c00381362bfc14e5b1b7b12e439c7ff282f39d)
external: update healthchecker caps for rbd command

when creating networkFence CR, it requires IP's to block
which we get from running `rbd status ...` command. But,
the client.healthchecker user didn't had the right caps
to run hence it was giving error. Now, adding the required
caps `profile rbd-read-only` to osd so that rbd command can
be executed.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit c78bd1cbc61b885ae4a2385ec6432b121dd21f1c)
ci: suppress  snyk MPL license warnings

Fixes:

This patch introduces a  .snyk policy file that lets snyk suppress the warnings
 about  the MPL license in projects pulled in as dependencies.

Additinally, this  fixes a typo in the name of the snyk workflow
file

Signed-off-by: Michael Adam <obnox@samba.org>
Co-authored-by: Travis Nielsen <tnielsen@redhat.com>
Co-authored-by: Blaine Gardner <b.blaine.gardner@gmail.com>
(cherry picked from commit d3bc9aafee32876c27e97469f109ab5e1e3dda81)
ci: fix the  snyk policy to  correctly  ignore the  MPL  license issue

after  https://github.com/rook/rook/pull/12932 has been merged, we
continue to see MPL issues reported by the snyk CI runs:

https://github.com/rook/rook/actions/runs/6302663608/job/17110310884

This updates to the `.snyk` policy file to correctly ignore the MPL license issue
by using the  the proper snyk ID for this issue

According to the doc
https://docs.snyk.io/manage-risk/policies/the-.snyk-file,

the correct ID is `snyk:lic:npm:symbol:MPL-2.0`

The update to the file has been performed with the `snyk ignore`
command to ensure validity of the policy file.

Fixes:

Signed-off-by: Michael Adam <obnox@samba.org>
(cherry picked from commit 4a672c8c35860bedc3f21741b17300e86de81524)
ci: suppress mpl license from snyk

The Snyk scan was failing on a warning with the
MPL 2.0 license, which is compatible with Rook.
Now the warnings are suppressed.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit b718622919e48f579b27cf7124221019ae64fbdb)
ci: fix github action free disk space

Since `google-cloud-sdk` is renamed with `google-cloud-cli`,
the github action is failing to remove the older name and this
is causing ci issues. Applying changes suggested by community to
manually remove some packages to resolve the issue.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 326757630720aec7186695cc60dd89eba990baf3)
ci: remove workaround for clean disk action

The issues are fixed from the clean disk action
repo and we shouldn't require any workaround. Also,
I'm not using git revert to revert the commit is earlier
clean disk action was mentioned in every CI which was
duplicate and now we have placed the action to composite yaml

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit e14f8c77109331161424450df3633ae8e32b40bc)
core: use crash profile in crash daemon keyring

The ceph documentation indicates to use the crash profile
instead of specifying rw for the mgr access.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit fab23d34072dac479a719ce362a448d02e856542)
file: disable active standby when set to false

The activeStandby property of the filesystem CR was not
taking effect when changed from true to false. The standby
was only being enabled when true, but never applied when
changed to false.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit f7094d1d13d8e5852f5ce9f0515f5ac9207b9b35)
docs: fixing some spelling issues

closes: https://github.com/rook/rook/issues/12987

Signed-off-by: Redouane Kachach <rkachach@redhat.com>
(cherry picked from commit b3dd74ea20e740c2b7ce760acd93716ac8374cfe)
ci: fixing linter error

Fixing linter error (using variable 'urllib' before assignment)
Adding logic to properly import urlencode depending on python version

closes: https://github.com/rook/rook/issues/12985

Signed-off-by: Redouane Kachach <rkachach@redhat.com>
(cherry picked from commit aa59e3bb86d9eff81c7e618fa5554b5b76fbba0f)
object: create cosi user for each object store

Create each cosi user for each object store and secret which holds
credentials.

Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit a941b3c33f452fe7e4c1af34b5e61bc28ffb6cbe)
ci: make use of caching in actions/setup-go

The GH action to set up Golang (actions/setup-go) has cache
functionality. For cache hits, this saves ~2 minutes for each run. In
order for the cache to hit, caching must not be disabled, and the code
must be checked out before setting up Golang.

Signed-off-by: Blaine Gardner <blaine.gardner@ibm.com>
(cherry picked from commit bf9e5dc1f5836a3a1893d2663461fd2a3fcecaf4)

# Conflicts:
#	.github/workflows/golangci-lint.yaml
multus: allow node profiles in validation test

Add the ability to specify node profiles in the multus validation test.

This addresses a few points of early feedback on the validation tool.
Statements below critique the tool's behavior before this patch.
1. The tool assumes all daemons are on public and cluster network, which
   means users who have a significantly smaller cluster net (a
   design choice) cannot run a single test to determine if Rook is
   likely to install correctly.
2. The tool does not have placement options to select only a subset of
   Kubernetes nodes to run validation on.
3. Users of multus seem to have a dedicated pool of storage nodes more
   often than the average Rook install. This makes sense for security-
   and perforance-minded users. The tool cannot run a single test to
   verify storage-only and general-workload nodes at one time.

These points are addressed by allowing users to specify configurations
for different ""NodeTypes.""

Each NodeType config has options for selecting the number of OSDs as
well as the number of other (non-OSD) Ceph daemons. This limits the
unnecessary exhaustion of cluster network addresses from critique 1.

Each NodeType config has its own placement (critique 2).

Users can define as many NodeTypes as needed to test the network for
their planned CephCluster. Specifically, this allows the tool to test
storage-only nodes and generalized-workload nodes at the same time. An
arbitrary number of NodeTypes are allowed to support even more highly
specialized cluster setups, such as multiple tiers of storage nodes
where some storage-only nodes may run more OSDs than others.

Signed-off-by: Blaine Gardner <blaine.gardner@ibm.com>
(cherry picked from commit 0c721e05d50f80fc3b32bceef29e3ca2914ee5d1)
docs: improving minikube setup documentation

Adding some detailed instructions on how to use the local
built Rook image on minikube cluster

Signed-off-by: Redouane Kachach <rkachach@redhat.com>
(cherry picked from commit 5f4fae4f3bc34a47f37cbc82d85ed06fb4f22482)
external: fix client healhchecker user keyring return

if the client.health checker already exited it was
returning extra information, It was making the structure and
return JSON non idempotent output, So fixed
that problem by returning a single value

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit bf5252e13994e270a02fa0ab314cbed1f78fbc0b)
ci: add a test to check the script result in idempotent output

Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 98125c78b953704439ca72f29880c3bb1a51fd9e)
osd: revert: make osd pod to sleep when osds are flapping

This reverts commit 4eb9f62205cab31e0079435726c15592ea04fe57.

Signed-off-by: sp98 <sapillai@redhat.com>
exporter: change verbose info to debug logs

Several messages were showing up in the operator log
more often than necessary, so let's change them to
debug level.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 29fb87967515d1d5f1fb6f4d6cd56fa506ec2956)
docs: fixing typos

Signed-off-by: Redouane Kachach <rkachach@redhat.com>
(cherry picked from commit e32ece275c510eec77ed1cd8fab2766606dbce4d)
build: update the release version to v1.12.5

For the patch release update the examples and docs
to v1.12.5.

Signed-off-by: travisn <tnielsen@redhat.com>","Improvements
Rook v1.12.5 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
external: Fix return value for client.healthchecker user keyring (, @parth-gr)
object: Create cosi user for each object store (, @thotz)
mgr: Allow more than two mgrs (, @travisn)
core: Use crash profile in crash daemon keyring (, @travisn)
multus: Allow node profiles in validation test (, @BlaineEXE)
file: Disable active standby when set to false (, @travisn)
mgr: Adding support for prometheus endpoint configuration (, @rkachach)
external: Update healthchecker caps for rbd command (, @subhamkrai)
docs: Review the teardown guide for updated guidelines (, @travisn)
osd: Support encrypted OSDs on partitons (, @satoru-takeuchi)
helm: Clusterrole to add objectbucketclaims to user facing roles (, @jouve)
build: update s5cmd to version v2.2.1 (, @obnoxxx)
core: Import packages only once (, @testwill)
docs: Improving minikube developer setup documentation (, @rkachach)"
"operator: use Linux container CPU quota

Go is not cgroup aware and by default will set GOMAXPROCS to the number
of available threads, regardless of whether it is within the allocated
quota. This behaviour causes high amount of CPU throttling and degraded
application performance.

Fixes:

Signed-off-by: Thomas Way <thomas@6f.io>
(cherry picked from commit 97e3e69bf49dfa45899e825bc31a366219834a87)
doc: fix broken links

Fixing the broken links in the docs.

Signed-off-by: karthik-us <ksubrahm@redhat.com>
(cherry picked from commit ea700bcf9a5449784f15adb66c7e118438185c22)
Revert ""doc: fix broken links""

This reverts commit ea700bcf9a5449784f15adb66c7e118438185c22.

Signed-off-by: karthik-us <ksubrahm@redhat.com>
(cherry picked from commit 532e865ba2a4be55fab0c8c3feef2e71b5f38aee)
csi: update sidecars to latest release

updating all the csi sidecars to the
latest release.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit 43fa57fa57d4e8cc2dbbbf26b0bba56e3e9095c7)
external: enable the use of only v2 mon port

currently  the script requires to have both v2 and v1 port
to enable v2 port, but that is not the necessary condition,
so removing the chek, and enabling it only v2 is present to
successfully configure with v2 only

part-of: https://github.com/rook/rook/issues/13827

Signed-off-by: parth-gr <partharora1010@gmail.com>
(cherry picked from commit 117bc76f20c6e2a7610bf57572bca367a81639b6)
build: use 'baseos' as repo for iproute install

The rook/ceph Dockerfile uses dnf to ensure iproute (containing the 'ip'
CLI tool) is installed in the Rook image for Multus usage. This comes
from the 'baseos' repo, but if any other repos are unavailable
temporarily, it can cause the container build to fail.

Use the '--repo baseos' flag to help prevent these kinds of failures.
Additionally, this will speed up the build slightly since it does not
attempt to load any non-necessary repos.

This change may make the container build slightly fragile in the future
if CentOS changes the name of its baseos repo, or if the Ceph image
switches to a non-CentOS base image.

Signed-off-by: Blaine Gardner <blaine.gardner@ibm.com>
(cherry picked from commit 072884f4512e5be28c6c929e46faa4a8e1f4c7ae)
build: fix master version helm values replacement

Signed-off-by: Alexander Trost <galexrt@googlemail.com>
(cherry picked from commit 6f61f4600edb7f4169ad94728ff2e42fcfc6e6c0)
doc: remove legacy rgw service documentation

the rgw service was removed, because users reported certificate
issues when Rook created Services for RGWs that had TLS (HTTPS) enabled.
It is now up to the user to create a Service if they want to use one.

part-of: https://github.com/rook/rook/discussions/13863

Signed-off-by: parth-gr <partharora1010@gmail.com>
(cherry picked from commit 2c922c28798e16d9f4bfc6f4272ca2c0c3842685)
csi: update CSIDriverOption params during saving cluster config

During cluster creation, csi config map was first filled with
mon ips and without CSIDriverOptions.
This commit makes sure CSIDriverOptions are added at the begining
when the entry is first created.

Signed-off-by: Rakshith R <rar@redhat.com>
(cherry picked from commit 330f604cca1384b763bce629626b75fce6f73bd4)

# Conflicts:
#	pkg/operator/ceph/csi/cluster_config.go
#	pkg/operator/ceph/csi/cluster_config_test.go
ci: remove minor version from setup-go in govulncheck

The patch version was pinned which caused problems
with security patches. Unpin it and always check
for new patch version

Signed-off-by: NymanRobin <nyman.robin@gmail.com>
(cherry picked from commit fdacd1e587d2349665c509e5a44217dd0023554e)
docs: note that changing encryption option settings for existing clusters is not dangerous

We have prohibited changing all network-related configurations after cluster creation.
However, as a result of https://github.com/rook/rook/discussions/13584, we found that
the connections.encryption flag can be regarded as an exception.

Signed-off-by: ESASHIKA Kaoru <kaoru-esashika@cybozu.co.jp>
(cherry picked from commit 9ceb8aa7e08427a05ffe4db4579cd58b11587ecc)
build: update the release version to v1.13.6

For the patch release update the docs and example manifests
to v1.13.6.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.13.6 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
helm: Replace the master tag in the values.yaml with the release tag (, @travisn)
manifest: Reduce CRD size by removing some descriptions (, @rkachach)
csi: Update CSIDriverOption params during saving cluster config (, @Rakshith-R)
external: Remove requirement for v1 port and allow exclusive v2 mon port configuration (, @parth-gr)
csi: Update sidecars to latest release (, @Madhu-1)
operator: Use Linux container CPU quota (, @uhthomas)
helm: Fix links to obsolete ceph master documentation (, @galexrt)"
"mgr: fixing dashboard configuration handling

previously, the dashboard parameters supported by Rook were stored in the
daemon configuration section (mgr.X, for example). This differs from
Cephadm-based deployments, where all configurations are stored in the
global mgr configuration section. This variance could result in
configuration mismatches between the active and standby dashboards.
Furthermore, all Ceph dashboard documentation exclusively points to
the global mgr configuration section and makes no use of individual
daemons sections.

Fixes: https://github.com/rook/rook/issues/13577

Signed-off-by: Redouane Kachach <rkachach@redhat.com>
(cherry picked from commit 57e3937d405b9c4ed16bd571e228d0bc09bf6487)
mgr: adding logic to keep retrying in case mgr config delete fails

we dont set removeMgrDaemonConfiguration to true unless all the
delete operations went successfull.

Signed-off-by: Redouane Kachach <rkachach@redhat.com>
(cherry picked from commit 39c06d2fa5ba98b5515cbff26206143deff70007)
csi: option to customize csi driver name prefix

For now we are using the operator namespace name
as the prefix for the csi driver, This PR provides
an option for the users if someone wants to have
their own prefix for the csi driver, if someone tries
to change the prefix for existing csi driver rook
operator will fail to reconcile the csi driver.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit c35a8532aa39133f2780e63d9dadfccc79cce675)
object: watch updates for cosidriver crd

The changes made to cosi driver are reflected. Add the cosidriver crd to
predicate workflow.

Fixes:
Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit 3da2331fa3ff8662d308d6c3b47e385fdae5f675)
ci: reformat the python scripts

currently there is a new release of black
formatter so updating it with new release

Closes: https://github.com/rook/rook/issues/13630

Signe-off-by: parth-gr <partharora1010@gmail.com>
Signed-off-by: parth-gr <paarora@redhat.com>
(cherry picked from commit 75fcffd08cf841e10753e53ef528529494719671)
docs: clarify the k8s versioning in the doc

we need to clarify what all version we do support

Signed-off-by: parth-gr <partharora1010@gmail.com>
(cherry picked from commit bad4e972eeed17c5b23a398974584b1d70817710)
object: fix the deafult multisite zonegroup creation

there was a bug in the code which doesn't
sets realm if we try to get the zonegoup
so because of that 1.12 this backport pr
for original change was not working

Signed-off-by: parth-gr <partharora1010@gmail.com>
(cherry picked from commit a9c77280c6cde03cf129afc988711ad7135fe98c)
mgr: use the ac-user-set-password cmd to update the password

previous code was calling the following command to create the
dashboard user:
> ceph dashboard ac-user-create <username> -i <password-file>
this works the first time when the user doesn't exist, however subsequent
calls for example when the password has changed or when the secret was
deleted from k8s, will not take place as this command will succeeded
because the user already exists but the password is not updated in
this case. The fix consists in adding an explicit call to the command:
> ceph dashboard ac-user-set-password <username> -i <password-file>
which ensures the password is updated correctly in the access control db

Fixes: https://github.com/rook/rook/issues/13594

Signed-off-by: Redouane Kachach <rkachach@redhat.com>
(cherry picked from commit cb028f3a28370c5011ae82d3f11f1ee1f9607202)
exporter: dont delete exporter service on daemon deletion

The exporter service and service monitor should not
be deleted if an individual daemon is being removed
from a node. As long as the exporter is enabled with
v18 and newer, the exporter service and service monitor
should exist. Clusters were seeing their metrics stop
collection when the exporter service and service monitor
would disappear, especially when multiple clusters are
configured.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit a1fc70f2fcb591c69c3effa075d5fe89d809a581)
csi: fix NetNamespaceFilePath generation

Corrected the NetNamespaceFilePath generation in the
subvolumegroup & radosnamespace controller by replacing
the cephCluster.Name with cephCluster.Namespace.

Signed-off-by: Praveen M <m.praveen@ibm.com>
(cherry picked from commit 67ff924b57033f54b0bd66b50f1cd5943c0ce331)
ci: check for gofmt usage in golangci-lint

This is needed because not all contributors may be using gomft to format
source code, and this could result in inconsistent usage over time.

Signed-off-by: Blaine Gardner <blaine.gardner@ibm.com>
(cherry picked from commit c98ce0a56b023caedebd27ca19bfc955d6c682b5)
ci: disk in github action increased to 75G from 64G

the disk size in the github action machine has
increased from 64G to 75G. Now, we detech the version
automatically not fetching hard coded value.

Co-authored-by: Jan Klippel <jan.klippel@uhurutec.com>
Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 6b0deb32d973f7aad1dd57520ad14336cbf5ea8e)
ci: fix detection of GH actions extra disk

The 'extra' block device attached to GH actions runners has changed size
twice in 3 months. The previous strategy of detecting the disk by size
is becoming harder to maintain. Additionally, the block size with recent
changes (75G) is now the same as the boot device (also 75G), making the
method inexact.

The method can now be summarized as, ""find the boot disk and choose the
disk that isn't the boot disk to be the 'extra' one used.""

Prior to this, we used a one-liner based on `lsblk`. While we could
still make this a one-liner, the method is now updated to 2 effective
lines, plus debug text output to stderr to help if we need to debug
further in the future.

Of note, the 'extra' disk has a mount point of ""/mnt"", but it is unclear
whether this is a reliable heuristic for detecting the extra disk. For
years now, GH action runners have had only 2 disks. Therefore, it seems
slightly more likely that a heuristic to ""choose the non-boot disk"" will
be a more robust long-term solution.

If this strategy proves to be unreliable in the future, it may be wise
to consider whether ""the device with a partition mounted to '/mnt'""
would be a good alternative.

Signed-off-by: Blaine Gardner <blaine.gardner@ibm.com>
(cherry picked from commit feacb6424e3f6aa9f07efaecb4e78eaf543d5dcc)
ci: fix ci failure for multicluster tests

This PR fixes the failure while running multicluster mirroring CI tests

Signed-off-by: sp98 <sapillai@redhat.com>
(cherry picked from commit 45adae1931cb76639d4e1588240cf85f53ad975e)
test: use mounter kernal instead of fuse

this kernal version is greater than 5.11 let's
use mounter kernal instead of fuse.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit abc272c91c9e8f18c522595cd69485db72320d4c)
object: add check specific to name and namespace for ceph cosi driver

The name for cephcosi driver should be ceph-cosi-driver and namespace
should same as the rook operator. Otherwise request need to be failed.

Fixes:
Signed-off-by: Jiffin Tony Thottan <thottanjiffin@gmail.com>
(cherry picked from commit 5b5e1c02922ab3aacec530efb937611712182508)
csi: update network fence CR name

this commit updates the name of network fence CR to
node name + driver name, which will allow the creation of
multiple network fence per drivers on the same node, and
modifies the unit test and deletion procedure for the
same.

Signed-off-by: Riya Singhal <rsinghal@redhat.com>
(cherry picked from commit c2e3cf367c330fb8714c878eda8b3ae68ecc650a)
core: skip reconcile if override configmap is empty

If the configmap rook-config-override is empty,
there is no need to trigger the reconcile to update
the ceph daemons. This configmap update is causing
unnecessary reconciles periodically in some clusters
even when it is empty.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 0240ee85631d360e0acb328bcb30489059377aec)
core: set blocking PDB even if no unhealthy PGs appear

When `managePodBudgets` is enabled, the Rook operator sets a blocking
PDB by considering the failure domains of the OSDs. This functionality
is implemented by `reconcilePDBsForOSDs`, and it sets the PDB only after
unhealthy PGs appear. However, there are no unhealthy PGs when an OSD
with no PGs becomes down. In this case, the PDB is never enabled.

This PR makes the operator configure the blocking PDB without waiting
for the unhealthy PGs to appear. This PR solves the above problem
because the blocking PDB is always enabled when a down OSD is detected.

Signed-off-by: Ryotaro Banno <ryotaro.banno@gmail.com>
(cherry picked from commit 6def9c8e30b042950b471b2796f238a514752624)
docs: fix CephCluster.spec.cephVersion.imagePullPolicy list item

Signed-off-by: Joshua Hoblitt <josh@hoblitt.com>
(cherry picked from commit a670fd9671b1583aabc254f9ea93afb6c9ee40a0)
osd: correct counting the devices when metadataDevice is set

The validation logic of checking the number of devices is
wrong when `metadataDevice` is set and `osdsPerDevice` > 1.
`len(cvReports)` is the expected number of OSDs and is
the number of specified data devices multiplied
by `osdsPerDevice`.

Closes: https://github.com/rook/rook/issues/13637

Signed-off-by: Satoru Takeuchi <satoru.takeuchi@gmail.com>
(cherry picked from commit 753bbfe1c421576ffd6bbee12129acb2f2077fcf)
helm: remove cpu limits from all pods

When CPU requests and limits are assigned to a pod,
the pod will be guaranteed the requests, up to the limits.
Even if there are spare CPU cycles, the pod cannot use
them. Thus, pods can be unnecessarily denied compute
when they need to burst if the limits are set.

Therefore, it is not recommended to set CPU limits
since the CPU requests are already guaranteeing that
no pod will be starved at least for its requests.

Signed-off-by: travisn <tnielsen@redhat.com>
(cherry picked from commit 27265ff2795d39bb7211b3b0fa93e9fcfcde9b8d)
core: remove ownerRef from networkFence

since networkFence is a cluster-based resource so that we don't need
the namespace and ownerReferences as it cause garbage-collector errors.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 2ac418a3b2ba689a53b9ec65596dbe225c0dce89)
build: update the release version to v1.13.4

For the patch release update the examples and docs
to v1.13.4.

Signed-off-by: travisn <tnielsen@redhat.com>","Improvements
Rook v1.13.4 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
helm: Remove cpu limits from all pods (, @travisn)
core: Set blocking PDB even if no unhealthy PGs appear (, @ushitora-anqou)
mgr: Update the dashboard password when the secret changes (, @rkachach)
core: Skip reconcile if override configmap is unchanged (, @travisn)
core: remove invalid ownerRef from networkFence (, @subhamkrai)
osd: Correctly count the devices when metadataDevice is set (, @satoru-takeuchi)
csi: Update network fence CR name (, @riya-singhal31)
object: Add check specific to name and namespace for ceph cosi driver (, @thotz)
exporter: Don't delete exporter service on daemon deletion (, @travisn)
csi: Fix NetNamespaceFilePath generation with namespace instead of name (, @iPraveenParihar)
csi: Option to set a static csi driver name (, @Madhu-1)
object: Fix the default multisite zonegroup creation (, @parth-gr)
docs: Declare the max supported K8s version (, @parth-gr)
ci: Reformat the python script (, @parth-gr)
object: Watch for updates to the cosidriver CRD (, @thotz)
mgr: Improvements to dashboard configuration handling (, @rkachach)"
"osd: legacy osds on lvm pvcs crash on resize init container

OSDs on LVM-mode PVCs are failing to come up and crashing
in the expand-bluefs init container. To avoid the crash
and allow the OSDs to start, a workaround was found to
simply remove that init container. Now we disable the
OSD resize for this case to avoid others hitting this
during upgrade as well.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit acd7b4faa05330c66636c9f034c156c184a20deb)
doc: fix external cluster document

fixing the list numbers in external document

closes: https://github.com/rook/rook/issues/13968

Signed-off-by: parth-gr <partharora1010@gmail.com>
(cherry picked from commit fe30ac83ad1c26d108090a80f21995c195173476)
external: add support for rados namespace for rbd ec pools

currently addded the support for rados namesapce
for rbd ec pools upstream

closes: https://github.com/rook/rook/issues/13633

Signed-off-by: parth-gr <partharora1010@gmail.com>
(cherry picked from commit adf40b1944056c7e96d7ad545232d710c81a9320)
docs: fixing typo in ceph-object-store-crd.md

Example cephobjectstore uses wrong field name for ""dnsNames"".

Signed-off-by: Adam Prycki <adam.prycki@gmail.com>
(cherry picked from commit c1e727384a95456a4c79ffb9d66aa0c99c8c7acb)
operator: support custom dashboard service labels and annotations

Unlike other components, the Ceph dashboard Service object could not be
configured with custom labels and annotations. This can be useful when
integrating Rook into a cluster with custom controllers similarly to how
the RGW service is customized.

Signed-off-by: Steven Fackler <sfackler@gmail.com>
(cherry picked from commit 0c38dd81c25a28427f3fb72934f9c9956140b0de)
csi: create csi configmap if csi controller is disabled

Creating a cluster never succeeds if CSI driver is disabled
So to fix that we need to always create the csi configmap

closes: https://github.com/rook/rook/issues/14123

Signed-off-by: parth-gr <partharora1010@gmail.com>
(cherry picked from commit 47ed6a863268940f90e3701de6a77535a2a60147)
csi: update csi sidecars' image version

Below sidecars are updated with latest available versions

csi-node-driver-registrar: v2.10.1
csi-resizer: v1.10.1
csi-provisioner: v4.0.1
csi-attacher: v4.5.1
csi-snapshotter: v7.0.2

Signed-off-by: Praveen M <m.praveen@ibm.com>
(cherry picked from commit faf78376215b9c369e1acbb3db0bd43cee559837)
mon: fix mon scaledown when mons are portable

in case of portable mons, mon scaledown was skipped
with below code
```
if mon.NodeName == """" {
			logger.Debugf(""mon %q is not scheduled to a specific host"", mon.DaemonName)
			continue
		}
```
which skips mon removal if mon nodeName is empty
but if mons are scale down in case of portable mons
in that case also we want to remove extra mons to match
the cephCluster configuration.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit d23a8433ed49d26ca39ea2649d14b4e288ccc720)
external: restructure external cluster examples manifests

This PR will add separate directory to handle the external manifest. Here external manifests will have same namespace (rook-ceph) for external cluster.

Signed-off-by: smoshiur1237 <moshiur.rahman@est.tech>
(cherry picked from commit dab17f72a1507b714391bfc9011e5a554e4b0d44)
csi: remove the out-dated prerequisites

Signed-off-by: Praveen M <m.praveen@ibm.com>
(cherry picked from commit 0467eb8a4c7f865317cd9e9db378d077e073ab59)
doc: update snapshot version

Signed-off-by: Praveen M <m.praveen@ibm.com>
(cherry picked from commit da8518095dae23af0dfc68fd3f54b085003f558f)
ci: use markdownlint to enforce mkdocs compatibility

mkdocs uses a markdown renderer that is hardcoded to 4 spaces per tab
for detecting indentation levels, including ordered- and
unordered-lists. Since we cannot easily change the renderer, begin using
a markdown linter in CI that will fail if official docs do not adhere to
the spacing rules.

As a starting point, the markdownlint config does not begin with the
default set of checks, which might overwhelm attempts to fix them.
Instead, focus on list-tab-spacing rules and a few other highly useful
checks.

markdownlint also has some gaps in its abilities that allow common Rook
doc issues to pass acceptance. However, it allows creating custom
linting plugins. Create 2 such linting plugins to check 2 things:

- all doc lines (except code blocks) must be aligned to a 4-space
  boundary, without exception. This ensures that markdown will render
  correctly with mkdocs. This unfortunately makes it possible to create
  lists that are internally aligned strangely.
- admonitions must all follow the same format of
  ```
  !!! header
      body
  ```

For the strange lists, this is allowed and renders correctly, but it
looks strange:

```md
- first bullet
- second bullet
    still second bullet
- third bullet

    has a paragraph
    of text inside

- last bullet

Signed-off-by: Blaine Gardner <blaine.gardner@ibm.com>
(cherry picked from commit c9d99e01a08871788a10307882c35dbc640f6858)
mon: remove quincy check since quincy is min version

With the removal of Ceph Pacific support, no need to check if Quincy
is avaiable to support encryption on the wire.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 25d36c4c75e5c16cd1832549ba11666589cff148)
mon: disable v1 port if msgr2 is required

The mon was listening on both v1 and v2 ports inside the daemon
even though the service endpoint would not redirect any traffic
to the v1 port. When msgr2 is required, disable the mon from
listening on the v1 port for reduced security footprint.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 954b000ba6fa948fd3b8864d3f775bd161386c37)
osd: limit storageClassDeviceSets to 63 chars

there are some cases where storageClassDeviceSets length
are more 63 chars and osd provisioned failed due to this.
with error
```
 failed to run osd provisioning job for PVC ""ocs-deviceset-*-local-volume-storageclass-0-data-*"": Job.batch ""rook-ceph-osd-prepare-*"" is invalid: [spec.template.spec.volumes[10].name: Invalid value: ""ocs-deviceset-*-local-volume-storageclass-0-data-*"": must be no more than 63 characters, spec.template.spec.containers[0].volumeMounts[9].name: Not found: ""ocs-deviceset-*-local-volume-storageclass-0-data-*"",
```

Using x-validator to limit the maxLength to the deviceClassSet.Name to
40 chars and adding code check that overall pvc name should be less than
63 chars.

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit 6f5cc9b01dd78924dc6bb8cff1f7215e6286aa0c)
csi: fix missing namespace bug in csi cluster config map

Someone testing the Multus holder pod removal feature encountered an
issue where the migration process failed to lead to a system state where
PVCs could be created successfully.

The root cause was found to be a ceph csi config map wherein the primary
CephCluster entry was lacking a value for the ""namespace"" field.

I observed this once in my development on the holder pod removal
feature, but I was unable to reproduce and assumed it was my own error.
Since this has been seen in a user environment, it must be that the
error is a race condition, and I am unable to determine the exact source
of the bug.

I do not believe this bug would be present if the code that updates the
CSI configmap were properly idempotent, but it has many conditions based
on prior states, and I was unable to determine how to resolve this
underlying impelementation pattern issue.

Instead, I opted to separate the `clusterKey` parameter into two clear
parts:
1. `clusterID` for when `clusterKey` is used as an analogue for
   `clusterID`
2. `clusterNamespace` for when `clusterKey` is used as an analogue for
   `clusterNamespace`

I added unit tests to ensure that SaveClusterConfig() will be able to
detect when the namespace is currently missing, and using the new
`clusterNamespace` field, it should always know what value to use as
input when correcting the bug in already-installed systems.

I also verified that this update works when the function simultaneously
removes netNamespaceFilePath entries, and that those entries are removed
properly.

Finally, manual testing also verifies the change.

Signed-off-by: Blaine Gardner <blaine.gardner@ibm.com>
(cherry picked from commit 4ff881240f3bba1a6bceba24d33cd3f553aee5b6)
build: update release version to v1.14.3

For the patch release update the docs and examples
to v1.14.3

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.14.3 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
csi: Fix missing namespace in internal csi cluster config map (, @BlaineEXE)
osd: Limit storageClassDeviceSet names to 40 chars (, @subhamkrai)
mon: Disable the msgr v1 port listening inside the mon pod if msgr2 is required (, @travisn)
external: Restructure external cluster examples manifests (, @smoshiur1237)
mon: Allow mon scale-down when mons are portable (, @subhamkrai)
osd: Legacy LVM-based OSDs on PVCs crash on resize init container (, @travisn)
csi: Update csi sidecars image version  (, @iPraveenParihar)
csi: Create csi configmap if csi controller is disabled (, @parth-gr)
operator: Support custom dashboard service labels and annotations (, @sfackler)
external: Add support for rados namespace for rbd EC pools (, @parth-gr)
ci: Use markdownlint to enforce mkdocs compatibility (, @BlaineEXE)"
"ci: update go mod and go version in govulncheck

this commits updates the go version to 1.22.2 in govulncheck ci and
also updates golang.org/x/net to v0.23.0 to fix the ci

Signed-off-by: subhamkrai <srai@redhat.com>
(cherry picked from commit f063e8fe3965c205bec0f59b6aea4ae6ff4e4075)
doc: make CSI host netowrking required

The network providers doc, including the holder pod migration sections,
were developed with the understanding that CSI could be placed into pod
networking mode if desired by users. In reality, this hasn't been
supported due to bugs.

This allows streamlining the holder pod migration sections to no longer
need to document for users what to do if they use CSI in pod network
mode.

Rook will continue to have the `CSI_ENABLE_HOST_NETWORK` config
available as an undocumented value. This can allow users who desperately
cannot use host networking to still use pod networking, though this will
mean any CSI node plugin updates could stall mounts for running apps.
Thus we do not support it.

Signed-off-by: Blaine Gardner <blaine.gardner@ibm.com>
(cherry picked from commit 519c7e891126fba3b2c5202dbf019755fe7cd4d9)
ci: fix mergify auto merge test names

The test names must match exactly for the mergify
auto merge to complete successfully. Update two of
the test names to match the latest CI.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 83b017994ecb7cd3ff976bc9faf5c7904750e97e)
doc: fix network provider bullets and numbering

Most bullets and numbering in the network providers doc (sub-doc of
CephCluster CR) wasn't rendering properly on the web. Fix by making sure
there is a blank line before each numbered/bulleted section. And make
sure nested numberings are indented 4 spaces.

Signed-off-by: Blaine Gardner <blaine.gardner@ibm.com>
(cherry picked from commit ad9e0976e2a72f708edd0ebfeac193cfa6c1f6db)
core: subvolumegroup clean up

Cleanup the resources created by subvolumegroup
when its deleted. Following resources will be cleaned up:
- OMAP value
- OMAP keys
- Clones
- Snapshots
- Subvolumes

Signed-off-by: sp98 <sapillai@redhat.com>
(cherry picked from commit ef00fdac538634cd3c12eb8dc26cba5a2762a065)
subvolumegroup: add support for size and datapool

cephfs subvolumegroup supports creating svg
with quota and the datapool, This PR adds the
support for the same.

Signed-off-by: Madhu Rajanna <madhupr007@gmail.com>
(cherry picked from commit f57a8b6bbe8211bb1bfba7e55653acc5c6bebdc9)
osd: add option upgradeOSDRequiresHealthyPGs

For check if cluster PGs are healthy before osd updates
Which helps gainning more confidence in the osd upgrades

Signed-off-by: mmaoyu <wupiaoyu61@gmail.com>
(cherry picked from commit 6d4afe23e5e6ee1ed70b505ab6863150d9266af8)
osd: prevent osd reconcile when device set names duplicated

If device set names are duplicated, the OSDs will be very confused
when multiple OSDs attempt to be configured with the same
device set names. Updating the device set names does not help
get out of the error situation since the OSDs will also be
confused about which device set they belong to. The reconcile
must fail completely if the device set names are duplicated
to avoid this error scenario.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 7f68d8be38604828177b599973dafc1a97b1b9de)
core: cephblockpoolRadosNamespace cleanup

Clean up pool images and snapshots in the
radosnamespace

Signed-off-by: sp98 <sapillai@redhat.com>
(cherry picked from commit f6b1449faaceb3a0ab69b532df82b1ab9906236e)
operator: make crds outputs more verbose

The following printcolumns were added

CephBlockPoolRadosNamespace: Phase,
BlockPoolName, Age
CephFilesystemSubVolumeGroup: Phase,
FilesystemName, PinningConfig, Age

Also improved the error messages in
SubVolumeGroupClient

Signed-off-by: NymanRobin <nyman.robin@gmail.com>
(cherry picked from commit 70a7e61da56577ba909cea68b234a5f8bcc5ac06)
operator: load cluster owner info in LoadClusterInfo

The CreateOrLoadClusterInfo (and therefore LoadClusterInfo) methods were
not loading the ClusterInfo.OwnerInfo. This should help future CRD
controllers get the full ClusterInfo struct without having missing
information. Current controllers that need ClusterInfo fill the field
themselves.

During testing, I observed one corner case where an upgraded cluster was
missing the `rook-ceph-csi-config` configmap. The cluster had a
CephFilesystemSubVolumeGroup resource created, and the reconcile for
that resource was attempting to create the missing CSI configmap and
failing with a nil pointer exception due to the missing OwnerInfo field
in ClusterInfo. This cluster condition hasn't been reproduced in healthy
environments, and it is unknown how the CSI configmap came to be
missing. However, the case did expose the missing loaded info as a
potential for causing nil pointer exceptions during corner cases when
code is otherwise correct.

Signed-off-by: Blaine Gardner <blaine.gardner@ibm.com>
(cherry picked from commit bd9447ea4c52ae05f96aa46c278d3b3cd3f829c2)
build: update the release version to v1.14.1

For the patch release update the examples and docs
to v1.14.1.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.14.1 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
crds: More verbose kubectl info for CephBlockPoolRadosNamespace and CephFilesystemSubVolumeGroup (, @NymanRobin)
subvolumegroup: Add support for quota and datapool (, @Madhu-1)
osd: Add option to require healthy PGs during OSD upgrade (, @mmaoyu)
core: Cleanup RADOS namespace with forced deletion annotation (, @sp98)
core: Cleanup Subvolumegroups with forced deletion annotation (, @sp98)
osd: Prevent osd reconcile when device set names duplicated (, @travisn)
doc: Host networking required for CSI driver (, @BlaineEXE)
operator: Ensure cluster owner info is set in LoadClusterInfo (, @BlaineEXE)"
"pool: skip updating crush rules for stretch clusters

Pools in stretch clusters must all specify the same
CRUSH rule. No pools can use a different rule. When there
is a change in the device class, we do not even expect to update
the crush rules in a stretch cluster. Different device classes
are not supported in stretch clusters, and it's expected to be
a homogenous environment. Therefore, skip all crush rule updates
in stretch clusters.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit b92bbba6714ba6d9a0f1b44f076efa16cb44c730)
multus: add host checking to validation tool

In order to help users check that they have implemented the newly-added
Multus host configuration prerequisites, add a check to the validation
tool to verify connectivity.

Because users who are already running clusters with Multus enabled, add
a flag that allows users to only check for host configuration
prerequisites. This mode will not start the large number of clients that
would normally be started because those clients could disrupt a running
Rook cluster negatively.

Host checking pods require host network access. Many Kubernetes
distributions have pod security features enabled. In order to allow
non-Vanilla distros to run this tool, allow specifying a service account
that pods will run as, which can be configured by the admin to allow
test pods.

Signed-off-by: Blaine Gardner <blaine.gardner@ibm.com>
(cherry picked from commit 33f5407dd4f642ae70448dd64340daedd9de5143)

# Conflicts:
#	Documentation/CRDs/Cluster/network-providers.md
#	deploy/examples/multus-validation.yaml
multus: reset validation tool debounce time to 30

Reset the Multus validation tool debounce time to its intended 30 second
value. It was changed to 5 for testing, and the change was accidentally
committed.

Signed-off-by: Blaine Gardner <blaine.gardner@ibm.com>
(cherry picked from commit 5884f1c90085817b7a59e8d0658e53a2d27267fd)
csi: make kube apiserver qps configurable

This commit adds the flexibility to configure kube apiserver qps
as per the user requirement and also keeps the existing values as
the default one.

Signed-off-by: yite.gu <yitegu0@gmail.com>
(cherry picked from commit 80541a23c9959e066e0ea5fd512e61994ad49536)
mgr: lookup cluster crd on active mgr watch

Signed-off-by: Artem Torubarov <artem.torubarov@clyso.com>
(cherry picked from commit 3f2d0eb1f815475cba71219027b26addecdda2ff)
mgr: properly detect if dashboard cert already exists

If the dashboard cert already exists when ssl is enabled,
we need to not restart the dashboard module. The module
should only be restarted when there is a change to the
dashboard configuration. When ssl is enabled, the dashboard
is essentially being restarted every time there is a reconcile
which is causing issues with the mgr getting blocklisted
unnecessarily by ceph during failover.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 6ce616bf96062da6d13ace1e7160d6bfe683ea7f)
tests: retry helm upgrade during upgrade tests

The helm upgrade tests have been failing frequently, but not
always, on the oldest version of K8s that is tested in the CI
for the past few months. Add a retry to attempt to get
the CI passing more consistently.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 043b4466755c6f12a22e484cc2442205da979e31)
manifest: update the ceph recommended version to v18.2.4

Since Reef v18.2.4 is released, set it to the default
ceph version that is deployed with Rook.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit e26920a483f414507bdbaa28a48ebf789da5eda2)

# Conflicts:
#	deploy/examples/images.txt
multus: install ip tool for multus

The ceph base image removed the ip tool, so we add
it into the rook image.

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>
(cherry picked from commit 4e2447277f05afbb73690459d6c84627bf41bf04)
build: update the release version to v1.14.9

For the patch release update the manifests and docs
to v1.14.9

Signed-off-by: Travis Nielsen <tnielsen@redhat.com>","Improvements
Rook v1.14.9 is a patch release limited in scope and focusing on feature additions and bug fixes to the Ceph operator.
manifest: Update the ceph recommended version to v18.2.4 (, @travisn)
mgr: Properly detect if dashboard cert already exists to avoid unnecessary dashboard module restarts (, @travisn)
mgr: Lookup cluster crd on active mgr watch (, @arttor)
csi: Make kube apiserver qps configurable (, @YiteGu)
multus: Reset validation tool debounce time to 30 (, @BlaineEXE)
multus: Add host checking to validation tool (, @BlaineEXE)
pool: Skip updating crush rules for stretch clusters (, @travisn)"
"Bump pytorch-lightning from 1.0.0 to 1.0.1

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.0.0 to 1.0.1.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/master/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.0.0...1.0.1)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
fix typo and test pickling of data and models
Enable control over verbosity of optuna
fix test coverage target
Bump pytorch-lightning from 1.0.1 to 1.0.2

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.0.1 to 1.0.2.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/master/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.0.1...1.0.2)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Add optuna to tutorial
Enable stacking of variable lengths tensors
FIx second stacking variable length tensors occurance","Added
Hyperparameter tuning with optuna to tutorial
Control over verbosity of hyper parameter tuning
Fixes
Interpretation error when different batches had different maximum decoder lengths
Fix some typos (no changes to user API)"
"Bump pytorch-lightning from 1.2.1 to 1.2.2

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.2.1 to 1.2.2.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/master/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.2.1...1.2.2)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump sphinx from 3.5.1 to 3.5.2

Bumps [sphinx](https://github.com/sphinx-doc/sphinx) from 3.5.1 to 3.5.2.
- [Release notes](https://github.com/sphinx-doc/sphinx/releases)
- [Changelog](https://github.com/sphinx-doc/sphinx/blob/3.x/CHANGES)
- [Commits](https://github.com/sphinx-doc/sphinx/compare/v3.5.1...v3.5.2)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump optuna from 2.5.0 to 2.6.0

Bumps [optuna](https://github.com/optuna/optuna) from 2.5.0 to 2.6.0.
- [Release notes](https://github.com/optuna/optuna/releases)
- [Commits](https://github.com/optuna/optuna/compare/v2.5.0...v2.6.0)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump pytorch-lightning from 1.2.2 to 1.2.3

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.2.2 to 1.2.3.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/master/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.2.2...1.2.3)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump pydata-sphinx-theme from 0.4.3 to 0.5.0

Bumps [pydata-sphinx-theme](https://github.com/pydata/pydata-sphinx-theme) from 0.4.3 to 0.5.0.
- [Release notes](https://github.com/pydata/pydata-sphinx-theme/releases)
- [Changelog](https://github.com/pydata/pydata-sphinx-theme/blob/master/docs/changelog.rst)
- [Commits](https://github.com/pydata/pydata-sphinx-theme/compare/v0.4.3...v0.5.0)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Improve docs parsing
Bump flake8 from 3.8.4 to 3.9.0

Bumps [flake8](https://gitlab.com/pycqa/flake8) from 3.8.4 to 3.9.0.
- [Release notes](https://gitlab.com/pycqa/flake8/tags)
- [Commits](https://gitlab.com/pycqa/flake8/compare/3.8.4...3.9.0)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump pytorch-lightning from 1.2.3 to 1.2.4

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.2.3 to 1.2.4.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/1.2.4/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.2.3...1.2.4)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Better linking in docs
update poetry
Update minimal python for pytorch 1.8
Fix data being on different devices
Fix syntax
Amend changelog
Fix docstring
Fix move to device
Ensure output can always be concatenated
Amend changelog
Allow lists for multiple losses and normalizers
Amend changelog
Bump isort from 5.7.0 to 5.8.0

Bumps [isort](https://github.com/pycqa/isort) from 5.7.0 to 5.8.0.
- [Release notes](https://github.com/pycqa/isort/releases)
- [Changelog](https://github.com/PyCQA/isort/blob/develop/CHANGELOG.md)
- [Commits](https://github.com/pycqa/isort/compare/5.7.0...5.8.0)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump sphinx from 3.5.2 to 3.5.3

Bumps [sphinx](https://github.com/sphinx-doc/sphinx) from 3.5.2 to 3.5.3.
- [Release notes](https://github.com/sphinx-doc/sphinx/releases)
- [Changelog](https://github.com/sphinx-doc/sphinx/blob/3.x/CHANGES)
- [Commits](https://github.com/sphinx-doc/sphinx/commits)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump pytest-github-actions-annotate-failures from 0.1.1 to 0.1.2

Bumps [pytest-github-actions-annotate-failures](https://github.com/utgwkk/pytest-github-actions-annotate-failures) from 0.1.1 to 0.1.2.
- [Release notes](https://github.com/utgwkk/pytest-github-actions-annotate-failures/releases)
- [Commits](https://github.com/utgwkk/pytest-github-actions-annotate-failures/compare/v0.1.1...v0.1.2)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump pydata-sphinx-theme from 0.5.0 to 0.5.1

Bumps [pydata-sphinx-theme](https://github.com/pydata/pydata-sphinx-theme) from 0.5.0 to 0.5.1.
- [Release notes](https://github.com/pydata/pydata-sphinx-theme/releases)
- [Changelog](https://github.com/pydata/pydata-sphinx-theme/blob/master/docs/changelog.rst)
- [Commits](https://github.com/pydata/pydata-sphinx-theme/compare/v0.5.0...v0.5.1)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump pytorch-lightning from 1.2.4 to 1.2.5

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.2.4 to 1.2.5.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/1.2.5/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.2.4...1.2.5)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump torch from 1.8.0 to 1.8.1

Bumps [torch](https://github.com/pytorch/pytorch) from 1.8.0 to 1.8.1.
- [Release notes](https://github.com/pytorch/pytorch/releases)
- [Commits](https://github.com/pytorch/pytorch/compare/v1.8.0...v1.8.1)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump pydata-sphinx-theme from 0.5.1 to 0.5.2

Bumps [pydata-sphinx-theme](https://github.com/pydata/pydata-sphinx-theme) from 0.5.1 to 0.5.2.
- [Release notes](https://github.com/pydata/pydata-sphinx-theme/releases)
- [Changelog](https://github.com/pydata/pydata-sphinx-theme/blob/master/docs/changelog.rst)
- [Commits](https://github.com/pydata/pydata-sphinx-theme/compare/v0.5.1...v0.5.2)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump pylint from 2.7.2 to 2.7.3

Bumps [pylint](https://github.com/PyCQA/pylint) from 2.7.2 to 2.7.3.
- [Release notes](https://github.com/PyCQA/pylint/releases)
- [Changelog](https://github.com/PyCQA/pylint/blob/master/ChangeLog)
- [Commits](https://github.com/PyCQA/pylint/compare/pylint-2.7.2...pylint-2.7.3)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump pylint from 2.7.3 to 2.7.4

Bumps [pylint](https://github.com/PyCQA/pylint) from 2.7.3 to 2.7.4.
- [Release notes](https://github.com/PyCQA/pylint/releases)
- [Changelog](https://github.com/PyCQA/pylint/blob/master/ChangeLog)
- [Commits](https://github.com/PyCQA/pylint/compare/pylint-2.7.3...pylint-2.7.4)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump ipykernel from 5.5.0 to 5.5.3

Bumps [ipykernel](https://ipython.org) from 5.5.0 to 5.5.3.

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump pytorch-lightning from 1.2.5 to 1.2.6

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.2.5 to 1.2.6.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/master/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.2.5...1.2.6)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump pytest from 6.2.2 to 6.2.3

Bumps [pytest](https://github.com/pytest-dev/pytest) from 6.2.2 to 6.2.3.
- [Release notes](https://github.com/pytest-dev/pytest/releases)
- [Changelog](https://github.com/pytest-dev/pytest/blob/main/CHANGELOG.rst)
- [Commits](https://github.com/pytest-dev/pytest/compare/6.2.2...6.2.3)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump optuna from 2.6.0 to 2.7.0

Bumps [optuna](https://github.com/optuna/optuna) from 2.6.0 to 2.7.0.
- [Release notes](https://github.com/optuna/optuna/releases)
- [Commits](https://github.com/optuna/optuna/compare/v2.6.0...v2.7.0)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Ensure tests execute and bad normalization is flagged
Amend changelog
require pytorch lightning 1.2.4 or higher
Fix groupnormalizer
Ensure groupnormalizer detection works for scale_by_group=True
Bump fsspec from 0.8.7 to 0.9.0

Bumps [fsspec](https://github.com/intake/filesystem_spec) from 0.8.7 to 0.9.0.
- [Release notes](https://github.com/intake/filesystem_spec/releases)
- [Commits](https://github.com/intake/filesystem_spec/compare/0.8.7...0.9.0)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump pytorch-lightning from 1.2.6 to 1.2.7

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.2.6 to 1.2.7.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/master/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.2.6...1.2.7)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Fix encoders scale
Fix group normalizer scale check
update dependencies
Prepare using distribution loss generically
Amend changelog
update pydata-shpinx-theme config
Remove not-needed prediction handling with distribution loss for logging
Update metrics and enable consistent usage of distribution or other metrics
Handle MultiLoss metrics
Fix issue with crossentropy quantiles
Update black
Update docs and release notes for v0.8.5
Ensure quantiles are only calculated when necessary
Bump sphinx from 3.5.3 to 3.5.4

Bumps [sphinx](https://github.com/sphinx-doc/sphinx) from 3.5.3 to 3.5.4.
- [Release notes](https://github.com/sphinx-doc/sphinx/releases)
- [Changelog](https://github.com/sphinx-doc/sphinx/blob/4.x/CHANGES)
- [Commits](https://github.com/sphinx-doc/sphinx/commits/v3.5.4)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Update dependencies
Update dependencies","Added
Allow lists for multiple losses and normalizers ()
Warn if normalization is with scale < 1e-7 ()
Allow usage of distribution losses in all settings ()
Fixed
Fix issue when predicting and data is on different devices ()
Fix non-iterable output ()
Fix problem with moving data to CPU for multiple targets ()
Contributors
domplexity"
"Fixes for GPU and MultiLoss
Update changelog
Update changelog with correct title
Update dependencies
Remove print and fix docs requirements
Clean up comments
Remove syncing for MultiLoss","Fixed
Fix with creating tensors on correct devices ()
Fix with MultiLoss when calculating gradient ()
Contributors"
"Bump optuna from 2.4.0 to 2.5.0

Bumps [optuna](https://github.com/optuna/optuna) from 2.4.0 to 2.5.0.
- [Release notes](https://github.com/optuna/optuna/releases)
- [Commits](https://github.com/optuna/optuna/compare/v2.4.0...v2.5.0)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Update README.md

Updating usage guide, argument name in TimeSeriesDataSet was missspelled
Update README.md

Added missing import in usage guide
[Security] Bump bleach from 3.2.1 to 3.3.0

Bumps [bleach](https://github.com/mozilla/bleach) from 3.2.1 to 3.3.0. **This update includes a security fix.**
- [Release notes](https://github.com/mozilla/bleach/releases)
- [Changelog](https://github.com/mozilla/bleach/blob/master/CHANGES)
- [Commits](https://github.com/mozilla/bleach/compare/v3.2.1...v3.3.0)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Automerge dependabot
Bump statsmodels from 0.12.1 to 0.12.2

Bumps [statsmodels](https://github.com/statsmodels/statsmodels) from 0.12.1 to 0.12.2.
- [Release notes](https://github.com/statsmodels/statsmodels/releases)
- [Changelog](https://github.com/statsmodels/statsmodels/blob/master/CHANGES.md)
- [Commits](https://github.com/statsmodels/statsmodels/compare/v0.12.1...v0.12.2)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump pytorch-lightning from 1.1.6 to 1.1.7

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.1.6 to 1.1.7.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/master/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.1.6...1.1.7)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Add back link to github to docs
Handle bug when determining output_size for TFT when using multiple targets
Ensure output size is inferred correctly for multitarget
Move prediction to CPU
Amend changelog
remove else clause
Add PR to changelog
Add dataset filtering
Update documentation with filter logic
Bump pytorch-lightning from 1.1.7 to 1.1.8

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.1.7 to 1.1.8.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/master/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.1.7...1.1.8)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump pytest-xdist from 2.2.0 to 2.2.1

Bumps [pytest-xdist](https://github.com/pytest-dev/pytest-xdist) from 2.2.0 to 2.2.1.
- [Release notes](https://github.com/pytest-dev/pytest-xdist/releases)
- [Changelog](https://github.com/pytest-dev/pytest-xdist/blob/master/CHANGELOG.rst)
- [Commits](https://github.com/pytest-dev/pytest-xdist/compare/v2.2.0...v2.2.1)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Autonotebook tqdm change
Changelog update
Bump sphinx from 3.4.3 to 3.5.0

Bumps [sphinx](https://github.com/sphinx-doc/sphinx) from 3.4.3 to 3.5.0.
- [Release notes](https://github.com/sphinx-doc/sphinx/releases)
- [Changelog](https://github.com/sphinx-doc/sphinx/blob/3.x/CHANGES)
- [Commits](https://github.com/sphinx-doc/sphinx/compare/v3.4.3...v3.5.0)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
fix typo in np.percentile call
Bump sphinx from 3.5.0 to 3.5.1

Bumps [sphinx](https://github.com/sphinx-doc/sphinx) from 3.5.0 to 3.5.1.
- [Release notes](https://github.com/sphinx-doc/sphinx/releases)
- [Changelog](https://github.com/sphinx-doc/sphinx/blob/3.x/CHANGES)
- [Commits](https://github.com/sphinx-doc/sphinx/compare/v3.5.0...v3.5.1)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump pylint from 2.6.0 to 2.6.2

Bumps [pylint](https://github.com/PyCQA/pylint) from 2.6.0 to 2.6.2.
- [Release notes](https://github.com/PyCQA/pylint/releases)
- [Changelog](https://github.com/PyCQA/pylint/blob/master/ChangeLog)
- [Commits](https://github.com/PyCQA/pylint/compare/pylint-2.6.0...pylint-2.6.2)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump pylint from 2.6.2 to 2.7.0

Bumps [pylint](https://github.com/PyCQA/pylint) from 2.6.2 to 2.7.0.
- [Release notes](https://github.com/PyCQA/pylint/releases)
- [Changelog](https://github.com/PyCQA/pylint/blob/master/ChangeLog)
- [Commits](https://github.com/PyCQA/pylint/compare/pylint-2.6.2...pylint-2.7.0)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump mypy from 0.800 to 0.812

Bumps [mypy](https://github.com/python/mypy) from 0.800 to 0.812.
- [Release notes](https://github.com/python/mypy/releases)
- [Commits](https://github.com/python/mypy/compare/v0.800...v0.812)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump ipykernel from 5.4.3 to 5.5.0

Bumps [ipykernel](https://ipython.org) from 5.4.3 to 5.5.0.

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump fsspec from 0.8.5 to 0.8.7

Bumps [fsspec](https://github.com/intake/filesystem_spec) from 0.8.5 to 0.8.7.
- [Release notes](https://github.com/intake/filesystem_spec/releases)
- [Commits](https://github.com/intake/filesystem_spec/compare/0.8.5...0.8.7)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump pytorch-lightning from 1.1.8 to 1.2.1

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.1.8 to 1.2.1.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/master/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.1.8...1.2.1)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
[Security] Bump aiohttp from 2.3.10 to 3.7.4

Bumps [aiohttp](https://github.com/aio-libs/aiohttp) from 2.3.10 to 3.7.4. **This update includes a security fix.**
- [Release notes](https://github.com/aio-libs/aiohttp/releases)
- [Changelog](https://github.com/aio-libs/aiohttp/blob/master/CHANGES.rst)
- [Commits](https://github.com/aio-libs/aiohttp/compare/v2.3.10...v3.7.4)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump nbsphinx from 0.8.1 to 0.8.2

Bumps [nbsphinx](https://github.com/spatialaudio/nbsphinx) from 0.8.1 to 0.8.2.
- [Release notes](https://github.com/spatialaudio/nbsphinx/releases)
- [Changelog](https://github.com/spatialaudio/nbsphinx/blob/master/NEWS.rst)
- [Commits](https://github.com/spatialaudio/nbsphinx/compare/0.8.1...0.8.2)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump pylint from 2.7.0 to 2.7.2

Bumps [pylint](https://github.com/PyCQA/pylint) from 2.7.0 to 2.7.2.
- [Release notes](https://github.com/PyCQA/pylint/releases)
- [Changelog](https://github.com/PyCQA/pylint/blob/master/ChangeLog)
- [Commits](https://github.com/PyCQA/pylint/compare/pylint-2.7.0...pylint-2.7.2)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump coverage from 5.4 to 5.5

Bumps [coverage](https://github.com/nedbat/coveragepy) from 5.4 to 5.5.
- [Release notes](https://github.com/nedbat/coveragepy/releases)
- [Changelog](https://github.com/nedbat/coveragepy/blob/master/CHANGES.rst)
- [Commits](https://github.com/nedbat/coveragepy/compare/coverage-5.4...coverage-5.5)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Only save relevant hyperparameters than can be also saved to yml
Remove update signature as it cannot be serialized by yaml.dump()
Model comparison and better imports
update test for distributed training
Test inference with model on GPU
Fix missing numeric stability for non-centered data
Add recurrent model
Amend changelog
Add rnn
Amend readme
Add sgd and all torch optimizers
add decoder mlp and tests
Release changelog","Added
Adding a filter functionality to the timeseries datasset ()
Add simple models such as LSTM, GRU and a MLP on the decoder ()
Allow usage of any torch optimizer such as SGD ()
Fixed
Moving predictions to CPU to avoid running out of memory ()
Correct determination of output_size for multi-target forecasting with the TemporalFusionTransformer ()
Tqdm autonotebook fix to work outside of Jupyter ()
Fix issue with yaml serialization for TensorboardLogger ()
Contributors
JakeForsey
vakker"
"Add release notes section
Fix docs generation error
Fix docstring
Bump sphinx from 3.4.1 to 3.4.2

Bumps [sphinx](https://github.com/sphinx-doc/sphinx) from 3.4.1 to 3.4.2.
- [Release notes](https://github.com/sphinx-doc/sphinx/releases)
- [Changelog](https://github.com/sphinx-doc/sphinx/blob/3.x/CHANGES)
- [Commits](https://github.com/sphinx-doc/sphinx/compare/v3.4.1...v3.4.2)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Upgrade AR example and torch dependency
Add fsspec
Update checkpointing
Fix multi-length, multi-length targets and add regression test
Amend changelog
Reverse min_prediction_idx PR that limited length of encoder sequence for some subsequences
Amend changelog
Bump sphinx from 3.4.2 to 3.4.3

Bumps [sphinx](https://github.com/sphinx-doc/sphinx) from 3.4.2 to 3.4.3.
- [Release notes](https://github.com/sphinx-doc/sphinx/releases)
- [Changelog](https://github.com/sphinx-doc/sphinx/blob/3.x/CHANGES)
- [Commits](https://github.com/sphinx-doc/sphinx/compare/v3.4.2...v3.4.3)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Add support for lagged variables
Add more type annotations
Make lagged targets available for autoregressive models
Update tutorial
Amend changelog
Fix deepar validation of covariates
Fix tests
Fix docs
Add release to changelog
Fix typo","Added
Add ""Release Notes"" section to docs ()
Enable usage of lag variables for any model ()
Changed
Require PyTorch>=1.7 ()
Fixed
Fix issue for multi-target forecasting when decoder length varies in single batch ()
Enable longer subsequences for min_prediction_idx that were previously wrongfully excluded ()
Contributors"
"Bump scipy from 1.5.2 to 1.5.3

Bumps [scipy](https://github.com/scipy/scipy) from 1.5.2 to 1.5.3.
- [Release notes](https://github.com/scipy/scipy/releases)
- [Commits](https://github.com/scipy/scipy/compare/v1.5.2...v1.5.3)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Ensure defaults are not modified in models
Update nbeats notebook with MASE metric
Fixing isort error
Bump pyarrow from 1.0.1 to 2.0.0

Bumps [pyarrow](https://arrow.apache.org/) from 1.0.1 to 2.0.0.

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Add issue and PR templates for github
Enable testing of Python 3.9
Fix occasional timeseries_from_init_parameters issue
More control over pytorch lightning verbosity
Bump pytorch-lightning from 1.0.2 to 1.0.3

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.0.2 to 1.0.3.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/master/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.0.2...1.0.3)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump nbsphinx from 0.7.1 to 0.8.0

Bumps [nbsphinx](https://github.com/spatialaudio/nbsphinx) from 0.7.1 to 0.8.0.
- [Release notes](https://github.com/spatialaudio/nbsphinx/releases)
- [Changelog](https://github.com/spatialaudio/nbsphinx/blob/master/NEWS.rst)
- [Commits](https://github.com/spatialaudio/nbsphinx/compare/0.7.1...0.8.0)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Clarify conda pytorch dependeny
Removed double forward pass for decoder LSTM

There were two forward passes for the decoder LSTM, which waste (actually a lot) of CPU/GPU cycles.
Added back one removed line for pad_packed_sequence
Made previous two commits linter-firendly
Bump torch from 1.6.0 to 1.7.0

Bumps [torch](https://github.com/pytorch/pytorch) from 1.6.0 to 1.7.0.
- [Release notes](https://github.com/pytorch/pytorch/releases)
- [Commits](https://github.com/pytorch/pytorch/compare/v1.6.0...v1.7.0)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Remove python 3.9 from testing
Remove lightning 1.0.4 as it has a bug","Fixes
Fix issue where hyperparameter verbosity controlled only part of output ()
Fix occasional error when .get_parameters() from TimeSeriesDataSet failed ()
Remove redundant double pass through LSTM for temporal fusion transformer ()
Prevent installation of pytorch-lightning 1.0.4 as it breaks the code ()
Prevent modification of model defaults in-place ()"
"Update pre-commit hooks
Fix initialization of tft with correct order of arguments
Amend changelog
Bump optuna from 2.7.0 to 2.8.0

Bumps [optuna](https://github.com/optuna/optuna) from 2.7.0 to 2.8.0.
- [Release notes](https://github.com/optuna/optuna/releases)
- [Commits](https://github.com/optuna/optuna/compare/v2.7.0...v2.8.0)

---
updated-dependencies:
- dependency-name: optuna
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump mypy from 0.812 to 0.901

Bumps [mypy](https://github.com/python/mypy) from 0.812 to 0.901.
- [Release notes](https://github.com/python/mypy/releases)
- [Commits](https://github.com/python/mypy/compare/v0.812...v0.901)

---
updated-dependencies:
- dependency-name: mypy
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pytorch-lightning from 1.3.4 to 1.3.5

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.3.4 to 1.3.5.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/1.3.5/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.3.4...1.3.5)

---
updated-dependencies:
- dependency-name: pytorch-lightning
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump black from 21.5b2 to 21.6b0

Bumps [black](https://github.com/psf/black) from 21.5b2 to 21.6b0.
- [Release notes](https://github.com/psf/black/releases)
- [Changelog](https://github.com/psf/black/blob/main/CHANGES.md)
- [Commits](https://github.com/psf/black/commits)

---
updated-dependencies:
- dependency-name: black
  dependency-type: direct:development
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump mypy from 0.901 to 0.902

Bumps [mypy](https://github.com/python/mypy) from 0.901 to 0.902.
- [Release notes](https://github.com/python/mypy/releases)
- [Commits](https://github.com/python/mypy/compare/v0.901...v0.902)

---
updated-dependencies:
- dependency-name: mypy
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump torch from 1.8.1 to 1.9.0

Bumps [torch](https://github.com/pytorch/pytorch) from 1.8.1 to 1.9.0.
- [Release notes](https://github.com/pytorch/pytorch/releases)
- [Changelog](https://github.com/pytorch/pytorch/blob/master/RELEASE.md)
- [Commits](https://github.com/pytorch/pytorch/compare/v1.8.1...v1.9.0)

---
updated-dependencies:
- dependency-name: torch
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pytorch-lightning from 1.3.5 to 1.3.6

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.3.5 to 1.3.6.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/master/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.3.5...1.3.6)

---
updated-dependencies:
- dependency-name: pytorch-lightning
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pytest-xdist from 2.2.1 to 2.3.0

Bumps [pytest-xdist](https://github.com/pytest-dev/pytest-xdist) from 2.2.1 to 2.3.0.
- [Release notes](https://github.com/pytest-dev/pytest-xdist/releases)
- [Changelog](https://github.com/pytest-dev/pytest-xdist/blob/master/CHANGELOG.rst)
- [Commits](https://github.com/pytest-dev/pytest-xdist/compare/v2.2.1...v2.3.0)

---
updated-dependencies:
- dependency-name: pytest-xdist
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
fix typos and outputmixin
fix OutputMixIn initialization
Bump isort from 5.8.0 to 5.9.1

Bumps [isort](https://github.com/pycqa/isort) from 5.8.0 to 5.9.1.
- [Release notes](https://github.com/pycqa/isort/releases)
- [Changelog](https://github.com/PyCQA/isort/blob/main/CHANGELOG.md)
- [Commits](https://github.com/pycqa/isort/compare/5.8.0...5.9.1)

---
updated-dependencies:
- dependency-name: isort
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump mypy from 0.902 to 0.910

Bumps [mypy](https://github.com/python/mypy) from 0.902 to 0.910.
- [Release notes](https://github.com/python/mypy/releases)
- [Commits](https://github.com/python/mypy/compare/v0.902...v0.910)

---
updated-dependencies:
- dependency-name: mypy
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pytorch-lightning from 1.3.6 to 1.3.7

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.3.6 to 1.3.7.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/master/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.3.6...1.3.7)

---
updated-dependencies:
- dependency-name: pytorch-lightning
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pytorch-lightning from 1.3.7 to 1.3.7.post0

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.3.7 to 1.3.7.post0.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/master/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.3.7...1.3.7post0)

---
updated-dependencies:
- dependency-name: pytorch-lightning
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Name log after target name instead of target number
Amend changelog
Bump pandoc from 1.0.2 to 1.1.0

Bumps [pandoc](https://github.com/boisgera/pandoc) from 1.0.2 to 1.1.0.
- [Release notes](https://github.com/boisgera/pandoc/releases)
- [Commits](https://github.com/boisgera/pandoc/commits)

---
updated-dependencies:
- dependency-name: pandoc
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pylint from 2.8.3 to 2.9.1

Bumps [pylint](https://github.com/PyCQA/pylint) from 2.8.3 to 2.9.1.
- [Release notes](https://github.com/PyCQA/pylint/releases)
- [Changelog](https://github.com/PyCQA/pylint/blob/master/ChangeLog)
- [Commits](https://github.com/PyCQA/pylint/compare/v2.8.3...v2.9.1)

---
updated-dependencies:
- dependency-name: pylint
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pytorch-lightning from 1.3.7.post0 to 1.3.8

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.3.7.post0 to 1.3.8.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/1.3.8/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.3.7post0...1.3.8)

---
updated-dependencies:
- dependency-name: pytorch-lightning
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pylint from 2.9.1 to 2.9.3

Bumps [pylint](https://github.com/PyCQA/pylint) from 2.9.1 to 2.9.3.
- [Release notes](https://github.com/PyCQA/pylint/releases)
- [Changelog](https://github.com/PyCQA/pylint/blob/main/ChangeLog)
- [Commits](https://github.com/PyCQA/pylint/compare/v2.9.1...v2.9.3)

---
updated-dependencies:
- dependency-name: pylint
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
fix base model typo
Bump sphinx from 4.0.2 to 4.0.3

Bumps [sphinx](https://github.com/sphinx-doc/sphinx) from 4.0.2 to 4.0.3.
- [Release notes](https://github.com/sphinx-doc/sphinx/releases)
- [Changelog](https://github.com/sphinx-doc/sphinx/blob/4.x/CHANGES)
- [Commits](https://github.com/sphinx-doc/sphinx/compare/v4.0.2...v4.0.3)

---
updated-dependencies:
- dependency-name: sphinx
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Make optimizer initialization flexible
Amend changelog
Improve docstrings for optimizer
Add support for multiple outputs in Baseline model
Amend changelog
Bump isort from 5.9.1 to 5.9.2

Bumps [isort](https://github.com/pycqa/isort) from 5.9.1 to 5.9.2.
- [Release notes](https://github.com/pycqa/isort/releases)
- [Changelog](https://github.com/PyCQA/isort/blob/main/CHANGELOG.md)
- [Commits](https://github.com/pycqa/isort/compare/5.9.1...5.9.2)

---
updated-dependencies:
- dependency-name: isort
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump invoke from 1.5.0 to 1.6.0

Bumps [invoke](https://github.com/bitprophet/alabaster) from 1.5.0 to 1.6.0.
- [Release notes](https://github.com/bitprophet/alabaster/releases)
- [Changelog](https://github.com/bitprophet/alabaster/blob/master/docs/changelog.rst)
- [Commits](https://github.com/bitprophet/alabaster/commits)

---
updated-dependencies:
- dependency-name: invoke
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump sphinx from 4.0.3 to 4.1.1

Bumps [sphinx](https://github.com/sphinx-doc/sphinx) from 4.0.3 to 4.1.1.
- [Release notes](https://github.com/sphinx-doc/sphinx/releases)
- [Changelog](https://github.com/sphinx-doc/sphinx/blob/4.x/CHANGES)
- [Commits](https://github.com/sphinx-doc/sphinx/compare/v4.0.3...v4.1.1)

---
updated-dependencies:
- dependency-name: sphinx
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump black from 21.6b0 to 21.7b0

Bumps [black](https://github.com/psf/black) from 21.6b0 to 21.7b0.
- [Release notes](https://github.com/psf/black/releases)
- [Changelog](https://github.com/psf/black/blob/main/CHANGES.md)
- [Commits](https://github.com/psf/black/commits)

---
updated-dependencies:
- dependency-name: black
  dependency-type: direct:development
...

Signed-off-by: dependabot[bot] <support@github.com>
Fix template to document attributes not for nn.Module
Bump pylint from 2.9.3 to 2.9.4

Bumps [pylint](https://github.com/PyCQA/pylint) from 2.9.3 to 2.9.4.
- [Release notes](https://github.com/PyCQA/pylint/releases)
- [Changelog](https://github.com/PyCQA/pylint/blob/main/ChangeLog)
- [Commits](https://github.com/PyCQA/pylint/compare/v2.9.3...v2.9.4)

---
updated-dependencies:
- dependency-name: pylint
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Added pruner option to TFT optimize_hyperparameters-method
Bump pylint from 2.9.4 to 2.9.5

Bumps [pylint](https://github.com/PyCQA/pylint) from 2.9.4 to 2.9.5.
- [Release notes](https://github.com/PyCQA/pylint/releases)
- [Changelog](https://github.com/PyCQA/pylint/blob/main/ChangeLog)
- [Commits](https://github.com/PyCQA/pylint/compare/v2.9.4...v2.9.5)

---
updated-dependencies:
- dependency-name: pylint
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump sphinx from 4.1.1 to 4.1.2

Bumps [sphinx](https://github.com/sphinx-doc/sphinx) from 4.1.1 to 4.1.2.
- [Release notes](https://github.com/sphinx-doc/sphinx/releases)
- [Changelog](https://github.com/sphinx-doc/sphinx/blob/4.x/CHANGES)
- [Commits](https://github.com/sphinx-doc/sphinx/compare/v4.1.1...v4.1.2)

---
updated-dependencies:
- dependency-name: sphinx
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pytorch-lightning from 1.3.8 to 1.4.0

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.3.8 to 1.4.0.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/master/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.3.8...1.4.0)

---
updated-dependencies:
- dependency-name: pytorch-lightning
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pyarrow from 4.0.1 to 5.0.0

Bumps [pyarrow](https://arrow.apache.org/) from 4.0.1 to 5.0.0.

---
updated-dependencies:
- dependency-name: pyarrow
  dependency-type: direct:development
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pylint from 2.9.5 to 2.9.6

Bumps [pylint](https://github.com/PyCQA/pylint) from 2.9.5 to 2.9.6.
- [Release notes](https://github.com/PyCQA/pylint/releases)
- [Changelog](https://github.com/PyCQA/pylint/blob/main/ChangeLog)
- [Commits](https://github.com/PyCQA/pylint/compare/v2.9.5...v2.9.6)

---
updated-dependencies:
- dependency-name: pylint
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump isort from 5.9.2 to 5.9.3

Bumps [isort](https://github.com/pycqa/isort) from 5.9.2 to 5.9.3.
- [Release notes](https://github.com/pycqa/isort/releases)
- [Changelog](https://github.com/PyCQA/isort/blob/main/CHANGELOG.md)
- [Commits](https://github.com/pycqa/isort/compare/5.9.2...5.9.3)

---
updated-dependencies:
- dependency-name: isort
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pytest-github-actions-annotate-failures from 0.1.2 to 0.1.3

Bumps [pytest-github-actions-annotate-failures](https://github.com/utgwkk/pytest-github-actions-annotate-failures) from 0.1.2 to 0.1.3.
- [Release notes](https://github.com/utgwkk/pytest-github-actions-annotate-failures/releases)
- [Commits](https://github.com/utgwkk/pytest-github-actions-annotate-failures/compare/v0.1.2...v0.1.3)

---
updated-dependencies:
- dependency-name: pytest-github-actions-annotate-failures
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pytorch-lightning from 1.4.0 to 1.4.1

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.4.0 to 1.4.1.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/1.4.1/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.4.0...1.4.1)

---
updated-dependencies:
- dependency-name: pytorch-lightning
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump optuna from 2.8.0 to 2.9.1

Bumps [optuna](https://github.com/optuna/optuna) from 2.8.0 to 2.9.1.
- [Release notes](https://github.com/optuna/optuna/releases)
- [Commits](https://github.com/optuna/optuna/compare/v2.8.0...v2.9.1)

---
updated-dependencies:
- dependency-name: optuna
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Amend changelog
Bump nbsphinx from 0.8.6 to 0.8.7

Bumps [nbsphinx](https://github.com/spatialaudio/nbsphinx) from 0.8.6 to 0.8.7.
- [Release notes](https://github.com/spatialaudio/nbsphinx/releases)
- [Changelog](https://github.com/spatialaudio/nbsphinx/blob/master/NEWS.rst)
- [Commits](https://github.com/spatialaudio/nbsphinx/compare/0.8.6...0.8.7)

---
updated-dependencies:
- dependency-name: nbsphinx
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pytorch-lightning from 1.4.1 to 1.4.2

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.4.1 to 1.4.2.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/1.4.2/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.4.1...1.4.2)

---
updated-dependencies:
- dependency-name: pytorch-lightning
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pylint from 2.9.6 to 2.10.2

Bumps [pylint](https://github.com/PyCQA/pylint) from 2.9.6 to 2.10.2.
- [Release notes](https://github.com/PyCQA/pylint/releases)
- [Changelog](https://github.com/PyCQA/pylint/blob/main/ChangeLog)
- [Commits](https://github.com/PyCQA/pylint/compare/v2.9.6...v2.10.2)

---
updated-dependencies:
- dependency-name: pylint
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pytorch-lightning from 1.4.2 to 1.4.3

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.4.2 to 1.4.3.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/1.4.3/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.4.2...1.4.3)

---
updated-dependencies:
- dependency-name: pytorch-lightning
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pytorch-lightning from 1.4.3 to 1.4.4

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.4.3 to 1.4.4.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/1.4.4/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.4.3...1.4.4)

---
updated-dependencies:
- dependency-name: pytorch-lightning
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pytest from 6.2.4 to 6.2.5

Bumps [pytest](https://github.com/pytest-dev/pytest) from 6.2.4 to 6.2.5.
- [Release notes](https://github.com/pytest-dev/pytest/releases)
- [Changelog](https://github.com/pytest-dev/pytest/blob/main/CHANGELOG.rst)
- [Commits](https://github.com/pytest-dev/pytest/compare/6.2.4...6.2.5)

---
updated-dependencies:
- dependency-name: pytest
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump black from 21.7b0 to 21.8b0

Bumps [black](https://github.com/psf/black) from 21.7b0 to 21.8b0.
- [Release notes](https://github.com/psf/black/releases)
- [Changelog](https://github.com/psf/black/blob/main/CHANGES.md)
- [Commits](https://github.com/psf/black/commits)

---
updated-dependencies:
- dependency-name: black
  dependency-type: direct:development
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pytorch-lightning from 1.4.4 to 1.4.5

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.4.4 to 1.4.5.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/1.4.5/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.4.4...1.4.5)

---
updated-dependencies:
- dependency-name: pytorch-lightning
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
docs: typo in argument of TimeSeriesDataSet
Bump pytorch-lightning from 1.4.5 to 1.4.6

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.4.5 to 1.4.6.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/1.4.6/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.4.5...1.4.6)

---
updated-dependencies:
- dependency-name: pytorch-lightning
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
fix infinite loop in TimeDistributedEmbeddingBag
Bump sphinx from 4.1.2 to 4.2.0

Bumps [sphinx](https://github.com/sphinx-doc/sphinx) from 4.1.2 to 4.2.0.
- [Release notes](https://github.com/sphinx-doc/sphinx/releases)
- [Changelog](https://github.com/sphinx-doc/sphinx/blob/4.x/CHANGES)
- [Commits](https://github.com/sphinx-doc/sphinx/compare/v4.1.2...v4.2.0)

---
updated-dependencies:
- dependency-name: sphinx
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump black from 21.8b0 to 21.9b0

Bumps [black](https://github.com/psf/black) from 21.8b0 to 21.9b0.
- [Release notes](https://github.com/psf/black/releases)
- [Changelog](https://github.com/psf/black/blob/main/CHANGES.md)
- [Commits](https://github.com/psf/black/commits)

---
updated-dependencies:
- dependency-name: black
  dependency-type: direct:development
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pytorch-lightning from 1.4.6 to 1.4.7

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.4.6 to 1.4.7.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/master/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.4.6...1.4.7)

---
updated-dependencies:
- dependency-name: pytorch-lightning
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pylint from 2.10.2 to 2.11.0

Bumps [pylint](https://github.com/PyCQA/pylint) from 2.10.2 to 2.11.0.
- [Release notes](https://github.com/PyCQA/pylint/releases)
- [Changelog](https://github.com/PyCQA/pylint/blob/main/ChangeLog)
- [Commits](https://github.com/PyCQA/pylint/compare/v2.10.2...v2.11.0)

---
updated-dependencies:
- dependency-name: pylint
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pylint from 2.11.0 to 2.11.1

Bumps [pylint](https://github.com/PyCQA/pylint) from 2.11.0 to 2.11.1.
- [Release notes](https://github.com/PyCQA/pylint/releases)
- [Changelog](https://github.com/PyCQA/pylint/blob/main/ChangeLog)
- [Commits](https://github.com/PyCQA/pylint/compare/v2.11.0...v2.11.1)

---
updated-dependencies:
- dependency-name: pylint
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
- add fitted_ attribute to MultiNormalizer when fit is called
- add test on MultiNormalizer fitted
Drop python 3.6
Update changelog
Update dependencies
Bump torch from 1.9.0 to 1.9.1

Bumps [torch](https://github.com/pytorch/pytorch) from 1.9.0 to 1.9.1.
- [Release notes](https://github.com/pytorch/pytorch/releases)
- [Changelog](https://github.com/pytorch/pytorch/blob/master/RELEASE.md)
- [Commits](https://github.com/pytorch/pytorch/commits)

---
updated-dependencies:
- dependency-name: torch
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pytest-xdist from 2.3.0 to 2.4.0

Bumps [pytest-xdist](https://github.com/pytest-dev/pytest-xdist) from 2.3.0 to 2.4.0.
- [Release notes](https://github.com/pytest-dev/pytest-xdist/releases)
- [Changelog](https://github.com/pytest-dev/pytest-xdist/blob/master/CHANGELOG.rst)
- [Commits](https://github.com/pytest-dev/pytest-xdist/compare/v2.3.0...v2.4.0)

---
updated-dependencies:
- dependency-name: pytest-xdist
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pytorch-lightning from 1.4.7 to 1.4.8

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.4.7 to 1.4.8.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/master/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.4.7...1.4.8)

---
updated-dependencies:
- dependency-name: pytorch-lightning
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Fix some ambigious dtypes
Fix unsavable hparams
Update deps
Update changelog
Improve hparams saving and loading
Adding release title","Added
Use target name instead of target number for logging metrics ()
Optimizer can be initialized by passing string, class or function ()
Add support for multiple outputs in Baseline model ()
Added Optuna pruner as optional parameter in TemporalFusionTransformer.optimize_hyperparameters ()
Dropping support for Python 3.6 and starting support for Python 3.9 ()
Fixed
Initialization of TemporalFusionTransformer with multiple targets but loss for only one target ()
Added missing transformation of prediction for MLP ()
Fixed logging hyperparameters ()
Ensure MultiNormalizer fit state is detected ()
Fix infinite loop in TimeDistributedEmbeddingBag ()
Contributors
TKlerx
chefPony
eavae"
"Bump optuna from 2.3.0 to 2.4.0

Bumps [optuna](https://github.com/optuna/optuna) from 2.3.0 to 2.4.0.
- [Release notes](https://github.com/optuna/optuna/releases)
- [Commits](https://github.com/optuna/optuna/compare/v2.3.0...v2.4.0)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump pytorch-lightning from 1.1.3 to 1.1.4

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.1.3 to 1.1.4.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/master/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.1.3...1.1.4)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Fix mutable dataframe
Amend changelog
Amend changelog
fix multiple target prediction
missed cases
Bump pytest-cov from 2.10.1 to 2.11.0

Bumps [pytest-cov](https://github.com/pytest-dev/pytest-cov) from 2.10.1 to 2.11.0.
- [Release notes](https://github.com/pytest-dev/pytest-cov/releases)
- [Changelog](https://github.com/pytest-dev/pytest-cov/blob/master/CHANGELOG.rst)
- [Commits](https://github.com/pytest-dev/pytest-cov/compare/v2.10.1...v2.11.0)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump nbsphinx from 0.8.0 to 0.8.1

Bumps [nbsphinx](https://github.com/spatialaudio/nbsphinx) from 0.8.0 to 0.8.1.
- [Release notes](https://github.com/spatialaudio/nbsphinx/releases)
- [Changelog](https://github.com/spatialaudio/nbsphinx/blob/master/NEWS.rst)
- [Commits](https://github.com/spatialaudio/nbsphinx/compare/0.8.0...0.8.1)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump scikit-learn from 0.24.0 to 0.24.1

Bumps [scikit-learn](https://github.com/scikit-learn/scikit-learn) from 0.24.0 to 0.24.1.
- [Release notes](https://github.com/scikit-learn/scikit-learn/releases)
- [Commits](https://github.com/scikit-learn/scikit-learn/compare/0.24.0...0.24.1)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump pytest-cov from 2.11.0 to 2.11.1

Bumps [pytest-cov](https://github.com/pytest-dev/pytest-cov) from 2.11.0 to 2.11.1.
- [Release notes](https://github.com/pytest-dev/pytest-cov/releases)
- [Changelog](https://github.com/pytest-dev/pytest-cov/blob/master/CHANGELOG.rst)
- [Commits](https://github.com/pytest-dev/pytest-cov/compare/v2.11.0...v2.11.1)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Fix plot interpretability of NBeats
Amend changelog
Bump pytorch-lightning from 1.1.4 to 1.1.5

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.1.4 to 1.1.5.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/master/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.1.4...1.1.5)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump pydata-sphinx-theme from 0.4.1 to 0.4.2

Bumps [pydata-sphinx-theme](https://github.com/pandas-dev/pydata-sphinx-theme) from 0.4.1 to 0.4.2.
- [Release notes](https://github.com/pandas-dev/pydata-sphinx-theme/releases)
- [Changelog](https://github.com/pandas-dev/pydata-sphinx-theme/blob/master/docs/changelog.rst)
- [Commits](https://github.com/pandas-dev/pydata-sphinx-theme/compare/v0.4.1...v0.4.2)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump mypy from 0.790 to 0.800

Bumps [mypy](https://github.com/python/mypy) from 0.790 to 0.800.
- [Release notes](https://github.com/python/mypy/releases)
- [Commits](https://github.com/python/mypy/compare/v0.790...v0.800)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump pyarrow from 2.0.0 to 3.0.0

Bumps [pyarrow](https://arrow.apache.org/) from 2.0.0 to 3.0.0.

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump pytest from 6.2.1 to 6.2.2

Bumps [pytest](https://github.com/pytest-dev/pytest) from 6.2.1 to 6.2.2.
- [Release notes](https://github.com/pytest-dev/pytest/releases)
- [Changelog](https://github.com/pytest-dev/pytest/blob/master/CHANGELOG.rst)
- [Commits](https://github.com/pytest-dev/pytest/compare/6.2.1...6.2.2)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump pydata-sphinx-theme from 0.4.2 to 0.4.3

Bumps [pydata-sphinx-theme](https://github.com/pandas-dev/pydata-sphinx-theme) from 0.4.2 to 0.4.3.
- [Release notes](https://github.com/pandas-dev/pydata-sphinx-theme/releases)
- [Changelog](https://github.com/pandas-dev/pydata-sphinx-theme/blob/master/docs/changelog.rst)
- [Commits](https://github.com/pandas-dev/pydata-sphinx-theme/compare/v0.4.2...v0.4.3)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump coverage from 5.3.1 to 5.4

Bumps [coverage](https://github.com/nedbat/coveragepy) from 5.3.1 to 5.4.
- [Release notes](https://github.com/nedbat/coveragepy/releases)
- [Changelog](https://github.com/nedbat/coveragepy/blob/master/CHANGES.rst)
- [Commits](https://github.com/nedbat/coveragepy/compare/coverage-5.3.1...coverage-5.4)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Bump pytorch-lightning from 1.1.5 to 1.1.6

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.1.5 to 1.1.6.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/master/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.1.5...1.1.6)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Make tuning trainer kwargs overwritable
Add test
allow adding categories to NaNLabelEncoder
Remove empty sidebar
Bump matplotlib from 3.3.3 to 3.3.4

Bumps [matplotlib](https://github.com/matplotlib/matplotlib) from 3.3.3 to 3.3.4.
- [Release notes](https://github.com/matplotlib/matplotlib/releases)
- [Commits](https://github.com/matplotlib/matplotlib/compare/v3.3.3...v3.3.4)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
Correct shapes of prediction output
Amend changelog
Ensure output concatenation works for any type of output
Fix memory leak
Update the naming of the logged loss
Fix description of SMAPE and MAPE
Remove cloudpickle
Amend changelog
Add release date","Added
Make tuning trainer kwargs overwritable ()
Allow adding categories to NaNEncoder ()
Fixed
Underlying data is copied if modified. Original data is not modified inplace ()
Allow plotting of interpretation on passed figure for NBEATS ()
Fix memory leak for plotting and logging interpretation ()
Correct shape of predict() method output for multi-targets ()
Remove cloudpickle to allow GPU trained models to be loaded on CPU devices from checkpoints ()
Contributors
kigawas
snumumrik"
"Bump coverage from 6.3.3 to 6.4

Bumps [coverage](https://github.com/nedbat/coveragepy) from 6.3.3 to 6.4.
- [Release notes](https://github.com/nedbat/coveragepy/releases)
- [Changelog](https://github.com/nedbat/coveragepy/blob/master/CHANGES.rst)
- [Commits](https://github.com/nedbat/coveragepy/compare/6.3.3...6.4)

---
updated-dependencies:
- dependency-name: coverage
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump networkx from 2.8.1 to 2.8.2

Bumps [networkx](https://github.com/networkx/networkx) from 2.8.1 to 2.8.2.
- [Release notes](https://github.com/networkx/networkx/releases)
- [Commits](https://github.com/networkx/networkx/compare/networkx-2.8.1...networkx-2.8.2)

---
updated-dependencies:
- dependency-name: networkx
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump mypy from 0.950 to 0.960

Bumps [mypy](https://github.com/python/mypy) from 0.950 to 0.960.
- [Release notes](https://github.com/python/mypy/releases)
- [Commits](https://github.com/python/mypy/compare/v0.950...v0.960)

---
updated-dependencies:
- dependency-name: mypy
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump ipython from 8.3.0 to 8.4.0

Bumps [ipython](https://github.com/ipython/ipython) from 8.3.0 to 8.4.0.
- [Release notes](https://github.com/ipython/ipython/releases)
- [Commits](https://github.com/ipython/ipython/compare/8.3.0...8.4.0)

---
updated-dependencies:
- dependency-name: ipython
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pytorch-lightning from 1.6.3 to 1.6.4

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.6.3 to 1.6.4.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/1.6.4/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.6.3...1.6.4)

---
updated-dependencies:
- dependency-name: pytorch-lightning
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pylint from 2.13.9 to 2.14.0

Bumps [pylint](https://github.com/PyCQA/pylint) from 2.13.9 to 2.14.0.
- [Release notes](https://github.com/PyCQA/pylint/releases)
- [Commits](https://github.com/PyCQA/pylint/compare/v2.13.9...v2.14.0)

---
updated-dependencies:
- dependency-name: pylint
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pillow from 9.1.0 to 9.1.1

Bumps [pillow](https://github.com/python-pillow/Pillow) from 9.1.0 to 9.1.1.
- [Release notes](https://github.com/python-pillow/Pillow/releases)
- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)
- [Commits](https://github.com/python-pillow/Pillow/compare/9.1.0...9.1.1)

---
updated-dependencies:
- dependency-name: pillow
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump coverage from 6.4 to 6.4.1

Bumps [coverage](https://github.com/nedbat/coveragepy) from 6.4 to 6.4.1.
- [Release notes](https://github.com/nedbat/coveragepy/releases)
- [Changelog](https://github.com/nedbat/coveragepy/blob/master/CHANGES.rst)
- [Commits](https://github.com/nedbat/coveragepy/compare/6.4...6.4.1)

---
updated-dependencies:
- dependency-name: coverage
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump mypy from 0.960 to 0.961

Bumps [mypy](https://github.com/python/mypy) from 0.960 to 0.961.
- [Release notes](https://github.com/python/mypy/releases)
- [Commits](https://github.com/python/mypy/compare/v0.960...v0.961)

---
updated-dependencies:
- dependency-name: mypy
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump networkx from 2.8.2 to 2.8.3

Bumps [networkx](https://github.com/networkx/networkx) from 2.8.2 to 2.8.3.
- [Release notes](https://github.com/networkx/networkx/releases)
- [Commits](https://github.com/networkx/networkx/compare/networkx-2.8.2...networkx-2.8.3)

---
updated-dependencies:
- dependency-name: networkx
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump ipykernel from 6.13.0 to 6.13.1

Bumps [ipykernel]() from 6.13.0 to 6.13.1.

---
updated-dependencies:
- dependency-name: ipykernel
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump nbsphinx from 0.8.8 to 0.8.9

Bumps [nbsphinx](https://github.com/spatialaudio/nbsphinx) from 0.8.8 to 0.8.9.
- [Release notes](https://github.com/spatialaudio/nbsphinx/releases)
- [Changelog](https://github.com/spatialaudio/nbsphinx/blob/master/NEWS.rst)
- [Commits](https://github.com/spatialaudio/nbsphinx/compare/0.8.8...0.8.9)

---
updated-dependencies:
- dependency-name: nbsphinx
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Solved deprecation warning

weights_summary is deprecated in v1.5 and will be removed in v1.7. Please pass ModelSummary directly to the Trainer’s callbacks argument instead. To disable the model summary, pass enable_model_summary = False to the Trainer.
Bump pylint from 2.14.0 to 2.14.1

Bumps [pylint](https://github.com/PyCQA/pylint) from 2.14.0 to 2.14.1.
- [Release notes](https://github.com/PyCQA/pylint/releases)
- [Commits](https://github.com/PyCQA/pylint/compare/v2.14.0...v2.14.1)

---
updated-dependencies:
- dependency-name: pylint
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pydata-sphinx-theme from 0.8.1 to 0.9.0

Bumps [pydata-sphinx-theme](https://github.com/pydata/pydata-sphinx-theme) from 0.8.1 to 0.9.0.
- [Release notes](https://github.com/pydata/pydata-sphinx-theme/releases)
- [Commits](https://github.com/pydata/pydata-sphinx-theme/compare/v0.8.1...v0.9.0)

---
updated-dependencies:
- dependency-name: pydata-sphinx-theme
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump sphinx from 4.5.0 to 5.0.1

Bumps [sphinx](https://github.com/sphinx-doc/sphinx) from 4.5.0 to 5.0.1.
- [Release notes](https://github.com/sphinx-doc/sphinx/releases)
- [Changelog](https://github.com/sphinx-doc/sphinx/blob/5.x/CHANGES)
- [Commits](https://github.com/sphinx-doc/sphinx/compare/v4.5.0...v5.0.1)

---
updated-dependencies:
- dependency-name: sphinx
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
bugfix: dtype inconsistency in TorchNormalizer with method='identity'
Update notebooks
Bump docutils from 0.17.1 to 0.18.1

Bumps [docutils](http://docutils.sourceforge.net/) from 0.17.1 to 0.18.1.

---
updated-dependencies:
- dependency-name: docutils
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump ipykernel from 6.13.1 to 6.14.0

Bumps [ipykernel]() from 6.13.1 to 6.14.0.

---
updated-dependencies:
- dependency-name: ipykernel
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump optuna from 2.10.0 to 2.10.1

Bumps [optuna](https://github.com/optuna/optuna) from 2.10.0 to 2.10.1.
- [Release notes](https://github.com/optuna/optuna/releases)
- [Commits](https://github.com/optuna/optuna/compare/v2.10.0...v2.10.1)

---
updated-dependencies:
- dependency-name: optuna
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump networkx from 2.8.3 to 2.8.4

Bumps [networkx](https://github.com/networkx/networkx) from 2.8.3 to 2.8.4.
- [Release notes](https://github.com/networkx/networkx/releases)
- [Commits](https://github.com/networkx/networkx/compare/networkx-2.8.3...networkx-2.8.4)

---
updated-dependencies:
- dependency-name: networkx
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump ipykernel from 6.14.0 to 6.15.0

Bumps [ipykernel]() from 6.14.0 to 6.15.0.

---
updated-dependencies:
- dependency-name: ipykernel
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pylint from 2.14.1 to 2.14.2

Bumps [pylint](https://github.com/PyCQA/pylint) from 2.14.1 to 2.14.2.
- [Release notes](https://github.com/PyCQA/pylint/releases)
- [Commits](https://github.com/PyCQA/pylint/compare/v2.14.1...v2.14.2)

---
updated-dependencies:
- dependency-name: pylint
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump sphinx from 5.0.1 to 5.0.2

Bumps [sphinx](https://github.com/sphinx-doc/sphinx) from 5.0.1 to 5.0.2.
- [Release notes](https://github.com/sphinx-doc/sphinx/releases)
- [Changelog](https://github.com/sphinx-doc/sphinx/blob/5.x/CHANGES)
- [Commits](https://github.com/sphinx-doc/sphinx/compare/v5.0.1...v5.0.2)

---
updated-dependencies:
- dependency-name: sphinx
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump notebook from 6.4.10 to 6.4.12

Bumps [notebook](http://jupyter.org) from 6.4.10 to 6.4.12.

---
updated-dependencies:
- dependency-name: notebook
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pylint from 2.14.2 to 2.14.3

Bumps [pylint](https://github.com/PyCQA/pylint) from 2.14.2 to 2.14.3.
- [Release notes](https://github.com/PyCQA/pylint/releases)
- [Commits](https://github.com/PyCQA/pylint/compare/v2.14.2...v2.14.3)

---
updated-dependencies:
- dependency-name: pylint
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump ipywidgets from 7.7.0 to 7.7.1

Bumps [ipywidgets](http://ipython.org) from 7.7.0 to 7.7.1.

---
updated-dependencies:
- dependency-name: ipywidgets
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pandas from 1.4.2 to 1.4.3

Bumps [pandas](https://github.com/pandas-dev/pandas) from 1.4.2 to 1.4.3.
- [Release notes](https://github.com/pandas-dev/pandas/releases)
- [Changelog](https://github.com/pandas-dev/pandas/blob/main/RELEASE.md)
- [Commits](https://github.com/pandas-dev/pandas/compare/v1.4.2...v1.4.3)

---
updated-dependencies:
- dependency-name: pandas
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump black from 22.3.0 to 22.6.0

Bumps [black](https://github.com/psf/black) from 22.3.0 to 22.6.0.
- [Release notes](https://github.com/psf/black/releases)
- [Changelog](https://github.com/psf/black/blob/main/CHANGES.md)
- [Commits](https://github.com/psf/black/compare/22.3.0...22.6.0)

---
updated-dependencies:
- dependency-name: black
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump torch from 1.11.0 to 1.12.0

Bumps [torch](https://github.com/pytorch/pytorch) from 1.11.0 to 1.12.0.
- [Release notes](https://github.com/pytorch/pytorch/releases)
- [Changelog](https://github.com/pytorch/pytorch/blob/master/RELEASE.md)
- [Commits](https://github.com/pytorch/pytorch/compare/v1.11.0...v1.12.0)

---
updated-dependencies:
- dependency-name: torch
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pylint from 2.14.3 to 2.14.4

Bumps [pylint](https://github.com/PyCQA/pylint) from 2.14.3 to 2.14.4.
- [Release notes](https://github.com/PyCQA/pylint/releases)
- [Commits](https://github.com/PyCQA/pylint/compare/v2.14.3...v2.14.4)

---
updated-dependencies:
- dependency-name: pylint
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pytest-github-actions-annotate-failures from 0.1.6 to 0.1.7

Bumps [pytest-github-actions-annotate-failures](https://github.com/utgwkk/pytest-github-actions-annotate-failures) from 0.1.6 to 0.1.7.
- [Release notes](https://github.com/utgwkk/pytest-github-actions-annotate-failures/releases)
- [Changelog](https://github.com/utgwkk/pytest-github-actions-annotate-failures/blob/main/CHANGELOG.md)
- [Commits](https://github.com/utgwkk/pytest-github-actions-annotate-failures/compare/v0.1.6...v0.1.7)

---
updated-dependencies:
- dependency-name: pytest-github-actions-annotate-failures
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pre-commit from 2.19.0 to 2.20.0

Bumps [pre-commit](https://github.com/pre-commit/pre-commit) from 2.19.0 to 2.20.0.
- [Release notes](https://github.com/pre-commit/pre-commit/releases)
- [Changelog](https://github.com/pre-commit/pre-commit/blob/main/CHANGELOG.md)
- [Commits](https://github.com/pre-commit/pre-commit/compare/v2.19.0...v2.20.0)

---
updated-dependencies:
- dependency-name: pre-commit
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pytest-sugar from 0.9.4 to 0.9.5

Bumps [pytest-sugar](https://github.com/Teemu/pytest-sugar) from 0.9.4 to 0.9.5.
- [Release notes](https://github.com/Teemu/pytest-sugar/releases)
- [Changelog](https://github.com/Teemu/pytest-sugar/blob/master/CHANGES.rst)
- [Commits](https://github.com/Teemu/pytest-sugar/commits)

---
updated-dependencies:
- dependency-name: pytest-sugar
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump ipykernel from 6.15.0 to 6.15.1

Bumps [ipykernel]() from 6.15.0 to 6.15.1.

---
updated-dependencies:
- dependency-name: ipykernel
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump coverage from 6.4.1 to 6.4.2

Bumps [coverage](https://github.com/nedbat/coveragepy) from 6.4.1 to 6.4.2.
- [Release notes](https://github.com/nedbat/coveragepy/releases)
- [Changelog](https://github.com/nedbat/coveragepy/blob/master/CHANGES.rst)
- [Commits](https://github.com/nedbat/coveragepy/compare/6.4.1...6.4.2)

---
updated-dependencies:
- dependency-name: coverage
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pytorch-lightning from 1.6.4 to 1.6.5

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.6.4 to 1.6.5.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/Lightning-AI/lightning/blob/1.6.5/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.6.4...1.6.5)

---
updated-dependencies:
- dependency-name: pytorch-lightning
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pylint from 2.14.4 to 2.14.5

Bumps [pylint](https://github.com/PyCQA/pylint) from 2.14.4 to 2.14.5.
- [Release notes](https://github.com/PyCQA/pylint/releases)
- [Commits](https://github.com/PyCQA/pylint/compare/v2.14.4...v2.14.5)

---
updated-dependencies:
- dependency-name: pylint
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump mypy from 0.961 to 0.971

Bumps [mypy](https://github.com/python/mypy) from 0.961 to 0.971.
- [Release notes](https://github.com/python/mypy/releases)
- [Commits](https://github.com/python/mypy/compare/v0.961...v0.971)

---
updated-dependencies:
- dependency-name: mypy
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump networkx from 2.8.4 to 2.8.5

Bumps [networkx](https://github.com/networkx/networkx) from 2.8.4 to 2.8.5.
- [Release notes](https://github.com/networkx/networkx/releases)
- [Commits](https://github.com/networkx/networkx/compare/networkx-2.8.4...networkx-2.8.5)

---
updated-dependencies:
- dependency-name: networkx
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Delete nhits.ipynb
Create nhits.ipynb
Bump sphinx from 5.0.2 to 5.1.1

Bumps [sphinx](https://github.com/sphinx-doc/sphinx) from 5.0.2 to 5.1.1.
- [Release notes](https://github.com/sphinx-doc/sphinx/releases)
- [Changelog](https://github.com/sphinx-doc/sphinx/blob/5.x/CHANGES)
- [Commits](https://github.com/sphinx-doc/sphinx/compare/v5.0.2...v5.1.1)

---
updated-dependencies:
- dependency-name: sphinx
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump scipy from 1.8.1 to 1.9.0

Bumps [scipy](https://github.com/scipy/scipy) from 1.8.1 to 1.9.0.
- [Release notes](https://github.com/scipy/scipy/releases)
- [Commits](https://github.com/scipy/scipy/compare/v1.8.1...v1.9.0)

---
updated-dependencies:
- dependency-name: scipy
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump mistune from 0.8.4 to 2.0.3

Bumps [mistune](https://github.com/lepture/mistune) from 0.8.4 to 2.0.3.
- [Release notes](https://github.com/lepture/mistune/releases)
- [Changelog](https://github.com/lepture/mistune/blob/master/docs/changes.rst)
- [Commits](https://github.com/lepture/mistune/compare/v0.8.4...v2.0.3)

---
updated-dependencies:
- dependency-name: mistune
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump nbconvert from 5.5.0 to 6.5.0

Bumps [nbconvert](https://github.com/jupyter/nbconvert) from 5.5.0 to 6.5.0.
- [Release notes](https://github.com/jupyter/nbconvert/releases)
- [Commits](https://github.com/jupyter/nbconvert/compare/5.5...6.5)

---
updated-dependencies:
- dependency-name: nbconvert
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump flake8 from 4.0.1 to 5.0.2

Bumps [flake8](https://github.com/pycqa/flake8) from 4.0.1 to 5.0.2.
- [Release notes](https://github.com/pycqa/flake8/releases)
- [Commits](https://github.com/pycqa/flake8/compare/4.0.1...5.0.2)

---
updated-dependencies:
- dependency-name: flake8
  dependency-type: direct:development
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump flake8 from 5.0.2 to 5.0.3

Bumps [flake8](https://github.com/pycqa/flake8) from 5.0.2 to 5.0.3.
- [Release notes](https://github.com/pycqa/flake8/releases)
- [Commits](https://github.com/pycqa/flake8/compare/5.0.2...5.0.3)

---
updated-dependencies:
- dependency-name: flake8
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pyarrow from 8.0.0 to 9.0.0

Bumps [pyarrow](https://github.com/apache/arrow) from 8.0.0 to 9.0.0.
- [Release notes](https://github.com/apache/arrow/releases)
- [Commits](https://github.com/apache/arrow/compare/go/v8.0.0...go/v9.0.0)

---
updated-dependencies:
- dependency-name: pyarrow
  dependency-type: direct:development
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump flake8 from 5.0.3 to 5.0.4

Bumps [flake8](https://github.com/pycqa/flake8) from 5.0.3 to 5.0.4.
- [Release notes](https://github.com/pycqa/flake8/releases)
- [Commits](https://github.com/pycqa/flake8/compare/5.0.3...5.0.4)

---
updated-dependencies:
- dependency-name: flake8
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump torch from 1.12.0 to 1.12.1

Bumps [torch](https://github.com/pytorch/pytorch) from 1.12.0 to 1.12.1.
- [Release notes](https://github.com/pytorch/pytorch/releases)
- [Changelog](https://github.com/pytorch/pytorch/blob/master/RELEASE.md)
- [Commits](https://github.com/pytorch/pytorch/compare/v1.12.0...v1.12.1)

---
updated-dependencies:
- dependency-name: torch
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump scikit-learn from 1.1.1 to 1.1.2

Bumps [scikit-learn](https://github.com/scikit-learn/scikit-learn) from 1.1.1 to 1.1.2.
- [Release notes](https://github.com/scikit-learn/scikit-learn/releases)
- [Commits](https://github.com/scikit-learn/scikit-learn/compare/1.1.1...1.1.2)

---
updated-dependencies:
- dependency-name: scikit-learn
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump docutils from 0.18.1 to 0.19

Bumps [docutils](https://docutils.sourceforge.io/) from 0.18.1 to 0.19.

---
updated-dependencies:
- dependency-name: docutils
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump coverage from 6.4.2 to 6.4.3

Bumps [coverage](https://github.com/nedbat/coveragepy) from 6.4.2 to 6.4.3.
- [Release notes](https://github.com/nedbat/coveragepy/releases)
- [Changelog](https://github.com/nedbat/coveragepy/blob/master/CHANGES.rst)
- [Commits](https://github.com/nedbat/coveragepy/compare/6.4.2...6.4.3)

---
updated-dependencies:
- dependency-name: coverage
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump nbconvert from 6.5.0 to 6.5.1

Bumps [nbconvert](https://github.com/jupyter/nbconvert) from 6.5.0 to 6.5.1.
- [Release notes](https://github.com/jupyter/nbconvert/releases)
- [Commits](https://github.com/jupyter/nbconvert/compare/6.5...6.5.1)

---
updated-dependencies:
- dependency-name: nbconvert
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump nbconvert from 6.5.1 to 6.5.2

Bumps [nbconvert](https://github.com/jupyter/nbconvert) from 6.5.1 to 6.5.2.
- [Release notes](https://github.com/jupyter/nbconvert/releases)
- [Commits](https://github.com/jupyter/nbconvert/compare/6.5.1...6.5.2)

---
updated-dependencies:
- dependency-name: nbconvert
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump coverage from 6.4.3 to 6.4.4

Bumps [coverage](https://github.com/nedbat/coveragepy) from 6.4.3 to 6.4.4.
- [Release notes](https://github.com/nedbat/coveragepy/releases)
- [Changelog](https://github.com/nedbat/coveragepy/blob/master/CHANGES.rst)
- [Commits](https://github.com/nedbat/coveragepy/compare/6.4.3...6.4.4)

---
updated-dependencies:
- dependency-name: coverage
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump matplotlib from 3.5.2 to 3.5.3

Bumps [matplotlib](https://github.com/matplotlib/matplotlib) from 3.5.2 to 3.5.3.
- [Release notes](https://github.com/matplotlib/matplotlib/releases)
- [Commits](https://github.com/matplotlib/matplotlib/compare/v3.5.2...v3.5.3)

---
updated-dependencies:
- dependency-name: matplotlib
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump nbconvert from 6.5.2 to 6.5.3

Bumps [nbconvert](https://github.com/jupyter/nbconvert) from 6.5.2 to 6.5.3.
- [Release notes](https://github.com/jupyter/nbconvert/releases)
- [Commits](https://github.com/jupyter/nbconvert/compare/6.5.2...6.5.3)

---
updated-dependencies:
- dependency-name: nbconvert
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump ipywidgets from 7.7.1 to 8.0.1

Bumps [ipywidgets](https://github.com/jupyter-widgets/ipywidgets) from 7.7.1 to 8.0.1.
- [Release notes](https://github.com/jupyter-widgets/ipywidgets/releases)
- [Commits](https://github.com/jupyter-widgets/ipywidgets/compare/7.7.1...8.0.1)

---
updated-dependencies:
- dependency-name: ipywidgets
  dependency-type: direct:development
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump nbconvert from 6.5.3 to 7.0.0

Bumps [nbconvert](https://github.com/jupyter/nbconvert) from 6.5.3 to 7.0.0.
- [Release notes](https://github.com/jupyter/nbconvert/releases)
- [Commits](https://github.com/jupyter/nbconvert/compare/6.5.3...7.0.0)

---
updated-dependencies:
- dependency-name: nbconvert
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump networkx from 2.8.5 to 2.8.6

Bumps [networkx](https://github.com/networkx/networkx) from 2.8.5 to 2.8.6.
- [Release notes](https://github.com/networkx/networkx/releases)
- [Commits](https://github.com/networkx/networkx/compare/networkx-2.8.5...networkx-2.8.6)

---
updated-dependencies:
- dependency-name: networkx
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pylint from 2.14.5 to 2.15.0

Bumps [pylint](https://github.com/PyCQA/pylint) from 2.14.5 to 2.15.0.
- [Release notes](https://github.com/PyCQA/pylint/releases)
- [Commits](https://github.com/PyCQA/pylint/compare/v2.14.5...v2.15.0)

---
updated-dependencies:
- dependency-name: pylint
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Update new poetry install method
update poetry path
update poetry lock
update dependencies
cpflows via pip
remove pandoc dependency
add torchmetric keywords
Update changelog
Update changelog
add method_kwargs
Quantiles for robust scaler are adjustable
update design
Update css layout
Fix encoder as dict issue
Fix MQF2 tests
update changelog","Fixed
Removed pandoc from dependencies as issue with poetry install ()
Added metric attributes for torchmetric resulting in better multi-GPU performance ()
Added
""robust"" encoder method can be customized by setting ""center"", ""lower"" and ""upper"" quantiles ()"
"Bump pydata-sphinx-theme from 0.8.0 to 0.8.1

Bumps [pydata-sphinx-theme](https://github.com/pydata/pydata-sphinx-theme) from 0.8.0 to 0.8.1.
- [Release notes](https://github.com/pydata/pydata-sphinx-theme/releases)
- [Commits](https://github.com/pydata/pydata-sphinx-theme/compare/v0.8.0...v0.8.1)

---
updated-dependencies:
- dependency-name: pydata-sphinx-theme
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pylint from 2.12.2 to 2.13.0

Bumps [pylint](https://github.com/PyCQA/pylint) from 2.12.2 to 2.13.0.
- [Release notes](https://github.com/PyCQA/pylint/releases)
- [Changelog](https://github.com/PyCQA/pylint/blob/main/ChangeLog)
- [Commits](https://github.com/PyCQA/pylint/compare/v2.12.2...v2.13.0)

---
updated-dependencies:
- dependency-name: pylint
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pylint from 2.13.0 to 2.13.2

Bumps [pylint](https://github.com/PyCQA/pylint) from 2.13.0 to 2.13.2.
- [Release notes](https://github.com/PyCQA/pylint/releases)
- [Changelog](https://github.com/PyCQA/pylint/blob/main/ChangeLog)
- [Commits](https://github.com/PyCQA/pylint/compare/v2.13.0...v2.13.2)

---
updated-dependencies:
- dependency-name: pylint
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump sphinx from 4.4.0 to 4.5.0

Bumps [sphinx](https://github.com/sphinx-doc/sphinx) from 4.4.0 to 4.5.0.
- [Release notes](https://github.com/sphinx-doc/sphinx/releases)
- [Changelog](https://github.com/sphinx-doc/sphinx/blob/4.x/CHANGES)
- [Commits](https://github.com/sphinx-doc/sphinx/compare/v4.4.0...v4.5.0)

---
updated-dependencies:
- dependency-name: sphinx
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump ipykernel from 6.9.2 to 6.10.0

Bumps [ipykernel](https://github.com/ipython/ipython) from 6.9.2 to 6.10.0.
- [Release notes](https://github.com/ipython/ipython/releases)
- [Commits](https://github.com/ipython/ipython/commits)

---
updated-dependencies:
- dependency-name: ipykernel
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump black from 22.1.0 to 22.3.0

Bumps [black](https://github.com/psf/black) from 22.1.0 to 22.3.0.
- [Release notes](https://github.com/psf/black/releases)
- [Changelog](https://github.com/psf/black/blob/main/CHANGES.md)
- [Commits](https://github.com/psf/black/compare/22.1.0...22.3.0)

---
updated-dependencies:
- dependency-name: black
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Add multivariate distribution loss
Simplify and add docsting
Amended changelog
Add docs
Update docs
Update requirements
Fix typo
Fix TFT list/tuple issue at interpretation
Bump pylint from 2.13.2 to 2.13.3

Bumps [pylint](https://github.com/PyCQA/pylint) from 2.13.2 to 2.13.3.
- [Release notes](https://github.com/PyCQA/pylint/releases)
- [Changelog](https://github.com/PyCQA/pylint/blob/main/ChangeLog)
- [Commits](https://github.com/PyCQA/pylint/compare/v2.13.2...v2.13.3)

---
updated-dependencies:
- dependency-name: pylint
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Enable quantile loss for N-HiTS
Update pre-commit hooks
Streamline deepar tutorial
Amend changelog
Amend changelog
Sync with master
Bump pytorch-lightning from 1.5.10 to 1.6.0

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.5.10 to 1.6.0.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/master/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.5.10...1.6.0)

---
updated-dependencies:
- dependency-name: pytorch-lightning
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Update dependencies
Allow up to Python 3.10
Bump ipykernel from 6.10.0 to 6.11.0

Bumps [ipykernel](https://github.com/ipython/ipython) from 6.10.0 to 6.11.0.
- [Release notes](https://github.com/ipython/ipython/releases)
- [Commits](https://github.com/ipython/ipython/commits)

---
updated-dependencies:
- dependency-name: ipykernel
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pylint from 2.13.3 to 2.13.4

Bumps [pylint](https://github.com/PyCQA/pylint) from 2.13.3 to 2.13.4.
- [Release notes](https://github.com/PyCQA/pylint/releases)
- [Changelog](https://github.com/PyCQA/pylint/blob/main/ChangeLog)
- [Commits](https://github.com/PyCQA/pylint/compare/v2.13.3...v2.13.4)

---
updated-dependencies:
- dependency-name: pylint
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
timeseries comments
Fix issue with variable being used before defined in TFT interpretation
Bump pre-commit from 2.17.0 to 2.18.1

Bumps [pre-commit](https://github.com/pre-commit/pre-commit) from 2.17.0 to 2.18.1.
- [Release notes](https://github.com/pre-commit/pre-commit/releases)
- [Changelog](https://github.com/pre-commit/pre-commit/blob/main/CHANGELOG.md)
- [Commits](https://github.com/pre-commit/pre-commit/compare/v2.17.0...v2.18.1)

---
updated-dependencies:
- dependency-name: pre-commit
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump ipykernel from 6.11.0 to 6.12.1

Bumps [ipykernel](https://github.com/ipython/ipython) from 6.11.0 to 6.12.1.
- [Release notes](https://github.com/ipython/ipython/releases)
- [Commits](https://github.com/ipython/ipython/commits)

---
updated-dependencies:
- dependency-name: ipykernel
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Refactor metrics
Bump pylint from 2.13.4 to 2.13.5

Bumps [pylint](https://github.com/PyCQA/pylint) from 2.13.4 to 2.13.5.
- [Release notes](https://github.com/PyCQA/pylint/releases)
- [Changelog](https://github.com/PyCQA/pylint/blob/main/ChangeLog)
- [Commits](https://github.com/PyCQA/pylint/compare/v2.13.4...v2.13.5)

---
updated-dependencies:
- dependency-name: pylint
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
update mqf2
Update dependencies
Fix energy score
Bump ipykernel from 6.12.1 to 6.13.0

Bumps [ipykernel](https://github.com/ipython/ipykernel) from 6.12.1 to 6.13.0.
- [Release notes](https://github.com/ipython/ipykernel/releases)
- [Changelog](https://github.com/ipython/ipykernel/blob/main/CHANGELOG.md)
- [Commits](https://github.com/ipython/ipykernel/compare/v6.12.1...v6.13.0)

---
updated-dependencies:
- dependency-name: ipykernel
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pytorch-lightning from 1.6.0 to 1.6.1

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.6.0 to 1.6.1.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/1.6.1/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.6.0...1.6.1)

---
updated-dependencies:
- dependency-name: pytorch-lightning
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Stabilize MFQ2 loss
Update lock file
Fix docs
Fix typos
Fix rename of group_id to sequence_id
Improve printing of objects
Fix sampler
Fix sampler
Add Tweedie Loss
Bump pandoc from 2.1 to 2.2

Bumps [pandoc](https://github.com/boisgera/pandoc) from 2.1 to 2.2.
- [Release notes](https://github.com/boisgera/pandoc/releases)
- [Commits](https://github.com/boisgera/pandoc/commits)

---
updated-dependencies:
- dependency-name: pandoc
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pylint from 2.13.5 to 2.13.7

Bumps [pylint](https://github.com/PyCQA/pylint) from 2.13.5 to 2.13.7.
- [Release notes](https://github.com/PyCQA/pylint/releases)
- [Changelog](https://github.com/PyCQA/pylint/blob/main/ChangeLog)
- [Commits](https://github.com/PyCQA/pylint/compare/v2.13.5...v2.13.7)

---
updated-dependencies:
- dependency-name: pylint
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump nbconvert from 6.4.5 to 6.5.0

Bumps [nbconvert](https://github.com/jupyter/nbconvert) from 6.4.5 to 6.5.0.
- [Release notes](https://github.com/jupyter/nbconvert/releases)
- [Commits](https://github.com/jupyter/nbconvert/compare/6.4.5...6.5)

---
updated-dependencies:
- dependency-name: nbconvert
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pytest from 7.1.1 to 7.1.2

Bumps [pytest](https://github.com/pytest-dev/pytest) from 7.1.1 to 7.1.2.
- [Release notes](https://github.com/pytest-dev/pytest/releases)
- [Changelog](https://github.com/pytest-dev/pytest/blob/main/CHANGELOG.rst)
- [Commits](https://github.com/pytest-dev/pytest/compare/7.1.1...7.1.2)

---
updated-dependencies:
- dependency-name: pytest
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump mypy from 0.942 to 0.950

Bumps [mypy](https://github.com/python/mypy) from 0.942 to 0.950.
- [Release notes](https://github.com/python/mypy/releases)
- [Commits](https://github.com/python/mypy/compare/v0.942...v0.950)

---
updated-dependencies:
- dependency-name: mypy
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pytorch-lightning from 1.6.1 to 1.6.2

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.6.1 to 1.6.2.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/1.6.2/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.6.1...1.6.2)

---
updated-dependencies:
- dependency-name: pytorch-lightning
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump ipython from 7.32.0 to 7.33.0

Bumps [ipython](https://github.com/ipython/ipython) from 7.32.0 to 7.33.0.
- [Release notes](https://github.com/ipython/ipython/releases)
- [Commits](https://github.com/ipython/ipython/compare/7.32.0...7.33.0)

---
updated-dependencies:
- dependency-name: ipython
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pylint from 2.13.7 to 2.13.8

Bumps [pylint](https://github.com/PyCQA/pylint) from 2.13.7 to 2.13.8.
- [Release notes](https://github.com/PyCQA/pylint/releases)
- [Changelog](https://github.com/PyCQA/pylint/blob/main/ChangeLog)
- [Commits](https://github.com/PyCQA/pylint/compare/v2.13.7...v2.13.8)

---
updated-dependencies:
- dependency-name: pylint
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump matplotlib from 3.5.1 to 3.5.2

Bumps [matplotlib](https://github.com/matplotlib/matplotlib) from 3.5.1 to 3.5.2.
- [Release notes](https://github.com/matplotlib/matplotlib/releases)
- [Commits](https://github.com/matplotlib/matplotlib/compare/v3.5.1...v3.5.2)

---
updated-dependencies:
- dependency-name: matplotlib
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Update docs
Update default for hidden_size of MQF2
Bump pytorch-lightning from 1.6.2 to 1.6.3

Bumps [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning) from 1.6.2 to 1.6.3.
- [Release notes](https://github.com/PyTorchLightning/pytorch-lightning/releases)
- [Changelog](https://github.com/PyTorchLightning/pytorch-lightning/blob/master/CHANGELOG.md)
- [Commits](https://github.com/PyTorchLightning/pytorch-lightning/compare/1.6.2...1.6.3)

---
updated-dependencies:
- dependency-name: pytorch-lightning
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump ipython from 8.2.0 to 8.3.0

Bumps [ipython](https://github.com/ipython/ipython) from 8.2.0 to 8.3.0.
- [Release notes](https://github.com/ipython/ipython/releases)
- [Commits](https://github.com/ipython/ipython/compare/8.2.0...8.3.0)

---
updated-dependencies:
- dependency-name: ipython
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pyarrow from 7.0.0 to 8.0.0

Bumps [pyarrow](https://github.com/apache/arrow) from 7.0.0 to 8.0.0.
- [Release notes](https://github.com/apache/arrow/releases)
- [Commits](https://github.com/apache/arrow/compare/go/v7.0.0...go/v8.0.0)

---
updated-dependencies:
- dependency-name: pyarrow
  dependency-type: direct:development
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump invoke from 1.7.0 to 1.7.1

Bumps [invoke](https://github.com/pyinvoke/invoke) from 1.7.0 to 1.7.1.
- [Release notes](https://github.com/pyinvoke/invoke/releases)
- [Commits](https://github.com/pyinvoke/invoke/compare/1.7.0...1.7.1)

---
updated-dependencies:
- dependency-name: invoke
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump scikit-learn from 1.0.2 to 1.1.0

Bumps [scikit-learn](https://github.com/scikit-learn/scikit-learn) from 1.0.2 to 1.1.0.
- [Release notes](https://github.com/scikit-learn/scikit-learn/releases)
- [Commits](https://github.com/scikit-learn/scikit-learn/compare/1.0.2...1.1.0)

---
updated-dependencies:
- dependency-name: scikit-learn
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pre-commit from 2.18.1 to 2.19.0

Bumps [pre-commit](https://github.com/pre-commit/pre-commit) from 2.18.1 to 2.19.0.
- [Release notes](https://github.com/pre-commit/pre-commit/releases)
- [Changelog](https://github.com/pre-commit/pre-commit/blob/main/CHANGELOG.md)
- [Commits](https://github.com/pre-commit/pre-commit/compare/v2.18.1...v2.19.0)

---
updated-dependencies:
- dependency-name: pre-commit
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump coverage from 6.3.2 to 6.3.3

Bumps [coverage](https://github.com/nedbat/coveragepy) from 6.3.2 to 6.3.3.
- [Release notes](https://github.com/nedbat/coveragepy/releases)
- [Changelog](https://github.com/nedbat/coveragepy/blob/master/CHANGES.rst)
- [Commits](https://github.com/nedbat/coveragepy/compare/6.3.2...6.3.3)

---
updated-dependencies:
- dependency-name: coverage
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump pylint from 2.13.8 to 2.13.9

Bumps [pylint](https://github.com/PyCQA/pylint) from 2.13.8 to 2.13.9.
- [Release notes](https://github.com/PyCQA/pylint/releases)
- [Changelog](https://github.com/PyCQA/pylint/blob/main/ChangeLog)
- [Commits](https://github.com/PyCQA/pylint/compare/v2.13.8...v2.13.9)

---
updated-dependencies:
- dependency-name: pylint
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Allow transformations for multinormaldistribution
Distribution transformations for everything
Fix tests
Update nhits tutorial
Update deepar example
Re-calibrate distribution tests
Adjust test with `log` link
Bump scipy from 1.8.0 to 1.8.1

Bumps [scipy](https://github.com/scipy/scipy) from 1.8.0 to 1.8.1.
- [Release notes](https://github.com/scipy/scipy/releases)
- [Commits](https://github.com/scipy/scipy/compare/v1.8.0...v1.8.1)

---
updated-dependencies:
- dependency-name: scipy
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump networkx from 2.8 to 2.8.1

Bumps [networkx](https://github.com/networkx/networkx) from 2.8 to 2.8.1.
- [Release notes](https://github.com/networkx/networkx/releases)
- [Commits](https://github.com/networkx/networkx/compare/networkx-2.8...networkx-2.8.1)

---
updated-dependencies:
- dependency-name: networkx
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Implicit Quantiles
amend changelog
Update test for implicit quantile
More tests for implicit quantiles
Fix centering
Bump scikit-learn from 1.1.0 to 1.1.1

Bumps [scikit-learn](https://github.com/scikit-learn/scikit-learn) from 1.1.0 to 1.1.1.
- [Release notes](https://github.com/scikit-learn/scikit-learn/releases)
- [Commits](https://github.com/scikit-learn/scikit-learn/compare/1.1.0...1.1.1)

---
updated-dependencies:
- dependency-name: scikit-learn
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Set date for release in changelog
Fix GPU execution
Remove basic_rnn","Added
DeepVar network ()
Enable quantile loss for N-HiTS ()
MQF2 loss (multivariate quantile loss) ()
Non-causal attention for TFT ()
Tweedie loss ()
ImplicitQuantileNetworkDistributionLoss ()
Fixed
Fix learning scale schedule ()
Fix TFT list/tuple issue at interpretation ()
Allowed encoder length down to zero for EncoderNormalizer if transformation is not needed ()
Fix Aggregation and CompositeMetric resets ()
Changed
Dropping Python 3.6 suppport, adding 3.10 support ()
Refactored dataloader sampling - moved samplers to pytorch_forecasting.data.samplers module ()
Changed transformation format for Encoders to dict from tuple ()
Contributors"
"Bump v8.1.1
fix: do not focus disabled or hidden days ()
Bump 8.1.2","What's Changed
fix: do not focus disabled or hidden days by @gpbl in
Full Changelog: v8.1.1...v8.1.2"
"Update CHANGELOG.md for v8.0.6
website(chore): Upgrade docusaurus to beta 22 ()
fixed: missing `dropdown_year` CSS class in `YearsDropdown` ()
fix: disable focus on outside days ()
repo: add GIT_USER dev variable
Bump v
Update CHANGELOG.md for v8.0.7","What's Changed
fixed: missing dropdown_year CSS class in YearsDropdown by @pwolfert in
fixed: Maximum update depth exceeded when select the range date by @gpbl in
website(chore): Upgrade docusaurus to beta 22 by @gpbl in
New Contributors
@pwolfert made their first contribution in
Full Changelog: v8.0.6...v8.0.7"
"Bump v8.0.4
fix(docs): typo in property name ()
fix(docs): update link to DayPicker dialog

Closes
chore(pkg): remove yarn install task from workspace
chore(pkg): upgrade dependencies
chore(pkg): downgrade auto-id to 0.16

v0.17 doesn’t work well with React < 18: https://github.com/reach/reach-ui/issues/921
chore: fix umd file in rollup
changed: use aria-disabled instead of disabled ()
Bump 8.0.5","What's Changed
fix(docs): typo in property name by @dzek69 in
Use aria-disabled instead of disabled by @gpbl in
New Contributors
@dzek69 made their first contribution in
Full Changelog: v8.0.4...v8.0.5"
"Bump v8.2.0
Enable automatic tasks in workspace
Update README.md
website: update docs
Update README.md
Update README.md
doc\(keyboardDocumentation): Corrected the typo error in the KeyboardNavigation file ()
fix(docs): incorrect function matcher example ()
chore(docs): fix alignment of example
fix: CSS module doesn't include the root class ()
Bump v8.2.1","What's Changed
fix: CSS module doesn't include the root class by @gpbl in
New Contributors
@krishna63 made their first contribution in
@AntanasMisiunas made their first contribution in
Full Changelog: v8.2.0...v8.2.1"
"Bump 8.1.2
CI: add github token to deploy
website: fix theme not working in render page
fix: `onDayClick` called twice in selection mode ()
Bump v8.1.3
changed: accept `undefined` for the selected prop ()
Update CHANGELOG.md","What's Changed
fix: onDayClick called twice in selection mode by @gpbl in
changed: accept undefined for the modifier props by @gpbl in
Full Changelog: v8.1.2...v8.1.3"
"Bump v8.0.1
Update bug_report.md
chore(ci): update node-version
feat: add `weekStartsOn` prop ()

Co-authored-by: gpbl <io@gpbl.dev>
docs: update upgrading guide

Fix
Update README.md
repo: upgrade dependencies
website: temporarly disable search

See
chore: clean up comments
repo: change deploy step
repo: update workflows descriptions
chore: split Caption into smaller components ()
repo: remove links to docs
Bump v8.0.2
Revert ""repo: remove links to docs""

This reverts commit f5f50fba70b6f87691788453a92b0da002f3ff90.","new: added weekStartsOn prop ()
new: split the Caption components into CaptionDropdowns and CaptionNavigation components ()
this change should make easier to customize the caption"
"Update changelog
Bump 8.3.4","What's Changed
build: fix CSS module types  by @gpbl in
fix: disable tab for outside days () by @DanielJKelly in
New Contributors
@DanielJKelly made their first contribution in
Full Changelog: v8.3.1...v8.3.2"
"Bump v8.3.6
build(deps): bump loader-utils from 2.0.2 to 2.0.3 ()
fix(docs): minor typo in upgrading content ()
build(deps): bump loader-utils from 2.0.3 to 2.0.4 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
fix: matcherToArray should return a copy of the array ()
chore(style): add opacity to differentiate outside days ()

Co-authored-by: Ganesh Anbazhagan <ganeshpandiyan.anbazhagan@aexp.com>
Bump v8.3.7","What's Changed
chore(style): add opacity to differentiate outside days by @hpdganesh in
fix(docs): minor typo in upgrading content by @baldyeagle in
fix(bug): matcherToArray should return a copy of the array by @gpbl in
build(deps): bump loader-utils from 2.0.2 to 2.0.4 by @dependabot in
New Contributors
@baldyeagle made their first contribution in
@hpdganesh made their first contribution in
Full Changelog: v8.3.6...v8.3.7"
"fix: typo in css rdp-hidden module css ()

fix: type in css rdp-hidden module css
docs: fix ""Upgrading from v7 to v8"" ()

The link was missing the `/v8` prefix. Adding it points correctly to the v8 version of the website.
docs: update upgrading URL
website: update announcement bar
docs: upgrading guide
fix(style): borders grid are not collapsed ()
build(deps-dev): bump typescript from 5.5.3 to 5.5.4 ()

Bumps [typescript](https://github.com/Microsoft/TypeScript) from 5.5.3 to 5.5.4.
- [Release notes](https://github.com/Microsoft/TypeScript/releases)
- [Changelog](https://github.com/microsoft/TypeScript/blob/main/azure-pipelines.release.yml)
- [Commits](https://github.com/Microsoft/TypeScript/compare/v5.5.3...v5.5.4)

---
updated-dependencies:
- dependency-name: typescript
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps-dev): bump @typescript-eslint/eslint-plugin from 7.16.1 to 7.18.0 ()

build(deps-dev): bump @typescript-eslint/eslint-plugin

Bumps [@typescript-eslint/eslint-plugin](https://github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/eslint-plugin) from 7.16.1 to 7.18.0.
- [Release notes](https://github.com/typescript-eslint/typescript-eslint/releases)
- [Changelog](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/CHANGELOG.md)
- [Commits](https://github.com/typescript-eslint/typescript-eslint/commits/v7.18.0/packages/eslint-plugin)

---
updated-dependencies:
- dependency-name: ""@typescript-eslint/eslint-plugin""
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps-dev): bump eslint-plugin-react-refresh from 0.4.8 to 0.4.9 ()

Bumps [eslint-plugin-react-refresh](https://github.com/ArnaudBarre/eslint-plugin-react-refresh) from 0.4.8 to 0.4.9.
- [Release notes](https://github.com/ArnaudBarre/eslint-plugin-react-refresh/releases)
- [Changelog](https://github.com/ArnaudBarre/eslint-plugin-react-refresh/blob/main/CHANGELOG.md)
- [Commits](https://github.com/ArnaudBarre/eslint-plugin-react-refresh/compare/v0.4.8...v0.4.9)

---
updated-dependencies:
- dependency-name: eslint-plugin-react-refresh
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps-dev): bump vite from 5.3.4 to 5.3.5 ()

Bumps [vite](https://github.com/vitejs/vite/tree/HEAD/packages/vite) from 5.3.4 to 5.3.5.
- [Release notes](https://github.com/vitejs/vite/releases)
- [Changelog](https://github.com/vitejs/vite/blob/main/packages/vite/CHANGELOG.md)
- [Commits](https://github.com/vitejs/vite/commits/v5.3.5/packages/vite)

---
updated-dependencies:
- dependency-name: vite
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
fix: add to range to work with min / required prop ()

* fix: add to range to work with min / required prop

* Update css

* Update style.css

* fix(style): borders grid are not collapsed

* Update test for resetting range

* Return `undefined` when possible

* Update shift key example
docs: updates for selection modes
docs: update custom-components guide
build: bump v9.0.5
style: add weeknumber text align
fix: remove extra “role” attributes
Revert ""fix: remove extra “role” attributes""

This reverts commit f5cff23c304449263c9743a0332275137e567790.
fix: remove invalid test (min changed to 1)","This release improves the range mode behavior (see the updated docs) and address some styling issues.
What's Changed
fix: improved range mode to work with min / required props by @gpbl in
fix(style): typo in css rdp-hidden module css breaking CSS builds by @ayuhito in
fix(style): borders grid are not collapsed by @gpbl in
fix(style): week numbers are now centered by @gpbl in c919ad8
New Contributors
@ayuhito made their first contribution in
@rishabh-ink made their first contribution in
Full Changelog: v9.0.4...v9.0.5"
"Updat CHANGELOG.md
docs: fix internal links
docs: update upgrading.mdx for typo ()
docs: fix link in CHANGELOG.md ()
fix: prop types not being correctly interpreted by TS ()

* Fix prop types not being correctly interpreted

* Add docs to selection props

* Add missing disabled matcher
feat: add `DeprecatedUI` enum ()

Add `DeprecatedUI` enum
docs: update upgrading guide
website: style tweaks
types: Add DeprecatedUI enum ()

* Add `DeprecatedUI` enum

* Update jsdocs
Bump v9.0.1","This update improves backward compatibility with v8.10.1.
What's Changed
fix: prop types not being correctly interpreted by TS by @gpbl in
feat: add DeprecatedUI enum by @gpbl in
Full Changelog: v9.0.0...v9.0.1"
"Bump v8.9.0
Create SECURITY.md
Update dependabot.yml
chore(build): update dependabot.yml

Signed-off-by: gpbl <io@gpbl.dev>
build(deps-dev): bump @rollup/plugin-terser from 0.4.3 to 0.4.4 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps-dev): bump @adobe/css-tools from 4.0.1 to 4.3.1 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps-dev): bump webpack from 5.88.2 to 5.89.0 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps-dev): bump @types/react-dom from 18.2.7 to 18.2.13 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
fix(types): PropsWithChildren not compatible with React 17 ()

Co-authored-by: Binh Van Phan <binh.van.phan@mgm-tp.com>
build(types): add missing `Locale` imports ()
build(types): align to internal code style ()
fix(docs): fix typo in doc block
build: push v8.9.1","What's Changed
Bug fixes
fix(types): PropsWithChildren not compatible with React 17 by @binhpv in
Build
build(types): add missing Locale imports by @gpbl in
Updated dependencies
build(deps-dev): bump @rollup/plugin-terser from 0.4.3 to 0.4.4 by @dependabot in
build(deps-dev): bump @adobe/css-tools from 4.0.1 to 4.3.1 by @dependabot in
build(deps-dev): bump webpack from 5.88.2 to 5.89.0 by @dependabot in
build(deps-dev): bump @types/react-dom from 18.2.7 to 18.2.13 by @dependabot in
New Contributors
@binhpv made their first contribution in
Full Changelog: v8.8.3...v8.9.1"
"Bump v8.3.0
workspace: update build tasks
Revert ""chore: add new Components type ()""

This reverts commit 9960123799f09ad01566de6bb46994c7ac9533fb.
chore: upgrade dependencies
chore: downgrade node-resolve
website: fix build
tests: reduce console noise
fix: types for selection modes not being correctly set ()
fix: isMatch to match open DateIntervals ()
Update CHANGELOG.md
Bump v8.3.1","What's Changed
fix: types for selection modes not being correctly set by @gpbl in
fix: isMatch to match open DateIntervals by @gpbl in
Full Changelog: v8.3.0...v8.3.1"
"Update CHANGELOG.md
website: upgrade dependencies
ci: add website-deploy action
ci: Update react-day-picker actions
ci: update website-deploy action
ci: update react-day-picker action
CI: update website-deploy action
CI: update script
CI: website-deploy
CI: website-deploy
CI: website-deploy
CI: website-deploy
website: add edit link to docs
CI: website-deploy
CI: remove postinstall script
CI: trigger workflow
CI: website-deploy
CI: trigger deploy
CI: website-deploy
CI: trigger deploy
CI: do not trigger deploy
CI: website-deploy
CI: conditional deploy
CI: fix publish_dir
repo: remove script
CI: update workflows
CI: react-day-picker
CI: workflows
CI: remove workflow
CI: update publish workflow
CI: update workflow names
CI: update workflow name
CI: update publish workflow
fix: use parsed fromDate/toDate in useInput ()
changed: add names to fields and buttons ()
changed: focus vs focus-visible styles ()
Bump v8.1.4","What's Changed
fix: use parsed fromDate/toDate in useInput by @hypergeometric in
changed: add names to fields and buttons by @gpbl in
changed: focus vs focus-visible styles by @gpbl in
New Contributors
@hypergeometric made their first contribution in
Full Changelog: v8.1.3...v8.1.4"
"build(deps): bump eslint-plugin-import from 2.26.0 to 2.27.5 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: gpbl <io@gpbl.dev>
docs: fix custom-multiple example
chore: improve ButtonProps type ()
Bump v8.5.1","What's Changed
chore: improve ButtonProps type by @gpbl in
Full Changelog: v8.5.0...v8.5.1"
"Bump 8.3.4
fix: range_middle class is added to days not in the selected range ()
Bump v8.3.5","What's Changed
fix: range_middle class is added to days not in the selected range by @gpbl in
Full Changelog: v8.3.4...v8.3.5"
"Bump v9.0.1
docs: fix internal links
docs: update upgrading guide
docs: update changelog.md
feat: add excludeDisabled prop for range mode ()

* feat: add excludeDisabled for range mode

* Update test","This update improves backward compatibility with v8.10.1 for range selection mode.
What's Changed
feat: add excludeDisabled prop for range mode by @gpbl in
Full Changelog: v9.0.1...v9.0.2"
"Update LICENSE copyright year
Update README.md
Update PULL_REQUEST_TEMPLATE.md
build(deps): bump actions/download-artifact from 3 to 4 ()

Bumps [actions/download-artifact](https://github.com/actions/download-artifact) from 3 to 4.
- [Release notes](https://github.com/actions/download-artifact/releases)
- [Commits](https://github.com/actions/download-artifact/compare/v3...v4)

---
updated-dependencies:
- dependency-name: actions/download-artifact
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps): bump actions/upload-artifact from 3 to 4 ()

Bumps [actions/upload-artifact](https://github.com/actions/upload-artifact) from 3 to 4.
- [Release notes](https://github.com/actions/upload-artifact/releases)
- [Commits](https://github.com/actions/upload-artifact/compare/v3...v4)

---
updated-dependencies:
- dependency-name: actions/upload-artifact
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Giampaolo Bellavite <io@gpbl.dev>
Revert ""build(deps): bump actions/download-artifact from 3 to 4 ()""

This reverts commit e741b6f4aa2bbae859abc281ad883751014fbfa3.
Revert ""build(deps): bump actions/upload-artifact from 3 to 4 ()""

This reverts commit 72b38054fbcd59a56900ef5356ee1c57dc330b27.
Update bug_report.md
build(deps-dev): bump eslint-plugin-prettier from 5.1.1 to 5.1.2 ()

Bumps [eslint-plugin-prettier](https://github.com/prettier/eslint-plugin-prettier) from 5.1.1 to 5.1.2.
- [Release notes](https://github.com/prettier/eslint-plugin-prettier/releases)
- [Changelog](https://github.com/prettier/eslint-plugin-prettier/blob/master/CHANGELOG.md)
- [Commits](https://github.com/prettier/eslint-plugin-prettier/compare/v5.1.1...v5.1.2)

---
updated-dependencies:
- dependency-name: eslint-plugin-prettier
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps): bump actions/upload-artifact from 3 to 4 ()

Bumps [actions/upload-artifact](https://github.com/actions/upload-artifact) from 3 to 4.
- [Release notes](https://github.com/actions/upload-artifact/releases)
- [Commits](https://github.com/actions/upload-artifact/compare/v3...v4)

---
updated-dependencies:
- dependency-name: actions/upload-artifact
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps): bump actions/download-artifact from 3 to 4 ()

Bumps [actions/download-artifact](https://github.com/actions/download-artifact) from 3 to 4.
- [Release notes](https://github.com/actions/download-artifact/releases)
- [Commits](https://github.com/actions/download-artifact/compare/v3...v4)

---
updated-dependencies:
- dependency-name: actions/download-artifact
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps): bump clsx from 2.0.0 to 2.1.0 ()

Bumps [clsx](https://github.com/lukeed/clsx) from 2.0.0 to 2.1.0.
- [Release notes](https://github.com/lukeed/clsx/releases)
- [Commits](https://github.com/lukeed/clsx/compare/v2.0.0...v2.1.0)

---
updated-dependencies:
- dependency-name: clsx
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Update bug_report.md
chore: remove unused useIsomorphicLayoutEffect module ()

Delete an unused module

Seems to have been accidentally included in https://github.com/gpbl/react-day-picker/commit/f3327c92ee2142ec4ced28a257ba3c84386f8127 as part of the development process because the final version of that commit has two copies of that hook.
build: Fix Preact support by externalizing JSX runtime ()

Fix Preact support by not bundling a hard-coded copy of the JSX runtime
build(deps): bump pnpm/action-setup from 2 to 3 ()
fix(types): Add support for props that exist on downstream providers whose props are derived from prop spreading ()

Add support for props that exist on downstream providers whose props are derrived from prop spreading
Bump v8.10.1

Signed-off-by: gpbl <io@gpbl.dev>","What's Changed
build: fix Preact support by externalizing JSX runtime by @pwolfert in
build: remove unused useIsomorphicLayoutEffect module by @pwolfert in
fix(types): improved props for RootContext componet @zakbutcher in
New Contributors
@union-zakbutcher made their first contribution in
Full Changelog: v8.10.0...v8.10.1"
"Bump v9.0.3
fix: button alignment
Update bug_report.md
Update bug_report.md
Update bug_report.md
fix: typo in CSS for --rdp-range_start-color ()
fix: dropdown is transparent in Windows OS ()
fix: endMonth date not working as expected ()

* fix: endMonth date not working as expected

* Add test
docs: update for custom components
feat: add back onDayMouseEnter and onDayMouseLeave ()

* Add back onDayMouseEnter and onDayMouseLeave

* Update changelog to mention the missing events
Bump v9.0.4","This release fixes some bugs and improves compatibility with v8.10. Thanks for your feedback and patience!
What's Changed
fix(css): typo in .rdp-range_end by @AlessioDP in
fix(css): dropdown is transparent in Windows OS by @gpbl in
fix: endMonth date not working as expected by @gpbl in
feat: added back onDayMouseEnter and onDayMouseLeave by @gpbl in
New Contributors
@AlessioDP made their first contribution in
Full Changelog: v9.0.3...v9.0.4"
"build: bump v8.8.2
build(deps-dev): bump postcss from 8.4.27 to 8.4.29 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps-dev): bump @typescript-eslint/eslint-plugin from 5.61.0 to 5.62.0 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
chore(docs): add strict mode to website ()
chore(build): update dependencies ()
build(deps-dev): bump @types/node from 18.15.13 to 20.6.5 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps-dev): bump rimraf from 5.0.1 to 5.0.5 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps): bump focus-trap-react from 10.2.1 to 10.2.2 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
feat: support for nonce, lang, title global attributes ()
build(deps-dev): bump postcss from 8.4.30 to 8.4.31 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps-dev): bump @types/node from 20.6.5 to 20.8.3 ()
build(deps-dev): bump @rollup/plugin-commonjs from 25.0.4 to 25.0.5 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps-dev): bump eslint from 8.50.0 to 8.51.0 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build: remove allowSyntheticDefaultImports requirement ()
feat: added ""Months"" custom component ()

Co-authored-by: gpbl <io@gpbl.dev>
build(deps): bump clsx from 1.2.1 to 2.0.0 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
feat: new `--rdp-selected-color` CSS variable for text of selected days ()
Bump v8.9.0","What's Changed
feat: support for nonce, lang, title global attributes by @gpbl in
feat: new custom components ""Months"" by @pawelgoc in
feat: new --rdp-selected-color CSS variable for text of selected days by @gpbl in
Updated internal dependencies
Details
chore(build): update dependencies by @gpbl in
build(deps-dev): bump postcss from 8.4.27 to 8.4.29 by @dependabot in
build(deps-dev): bump @typescript-eslint/eslint-plugin from 5.61.0 to 5.62.0 by @dependabot in
chore(docs): add strict mode to website by @gpbl in
build(deps-dev): bump @types/node from 18.15.13 to 20.6.5 by @dependabot in
build(deps-dev): bump rimraf from 5.0.1 to 5.0.5 by @dependabot in
build(deps): bump focus-trap-react from 10.2.1 to 10.2.2 by @dependabot in
build(deps-dev): bump postcss from 8.4.30 to 8.4.31 by @dependabot in
build(deps-dev): bump @types/node from 20.6.5 to 20.8.3 by @dependabot in
build(deps-dev): bump @rollup/plugin-commonjs from 25.0.4 to 25.0.5 by @dependabot in
build(deps-dev): bump eslint from 8.50.0 to 8.51.0 by @dependabot in
build: remove allowSyntheticDefaultImports requirement by @gpbl in
build(deps): bump clsx from 1.2.1 to 2.0.0 by @dependabot in
New Contributors
@pawelgoc made their first contribution in
Full Changelog: v8.8.2...v8.8.3"
"Bump v8.8.0
build(deps): bump @typescript-eslint/eslint-plugin from 5.59.0 to 5.59.11 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
docs: remove shadow-dom from examples ()
build: move from yarn to pnpm ()
build: move the main package to the repo root ()
build(deps-dev): bump @typescript-eslint/eslint-plugin from 5.59.11 to 5.61.0 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps-dev): bump webpack from 5.83.1 to 5.88.1 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps-dev): bump date-fns from 2.29.3 to 2.30.0 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps-dev): bump tsc-alias from 1.8.6 to 1.8.7 ()

Bumps [tsc-alias](https://github.com/justkey007/tsc-alias) from 1.8.6 to 1.8.7.
- [Release notes](https://github.com/justkey007/tsc-alias/releases)
- [Commits](https://github.com/justkey007/tsc-alias/compare/v1.8.6...v1.8.7)

---
updated-dependencies:
- dependency-name: tsc-alias
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps): bump word-wrap from 1.2.3 to 1.2.4 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps-dev): bump jest and @types/jest ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps-dev): bump eslint-plugin-jest from 27.2.1 to 27.2.3 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps-dev): bump jest-axe from 7.0.1 to 8.0.0 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps-dev): bump webpack from 5.83.1 to 5.88.2 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps): bump @codesandbox/sandpack-react from 2.6.1 to 2.6.9 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps-dev): bump postcss from 8.4.23 to 8.4.27 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps): bump semver from 5.7.1 to 5.7.2 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps-dev): bump tough-cookie from 4.1.2 to 4.1.3 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps-dev): bump @jest/types from 29.5.0 to 29.6.1 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps-dev): bump @rollup/plugin-terser from 0.4.1 to 0.4.3 ()

Bumps [@rollup/plugin-terser](https://github.com/rollup/plugins/tree/HEAD/packages/terser) from 0.4.1 to 0.4.3.
- [Changelog](https://github.com/rollup/plugins/blob/master/packages/terser/CHANGELOG.md)
- [Commits](https://github.com/rollup/plugins/commits/terser-v0.4.3/packages/terser)

---
updated-dependencies:
- dependency-name: ""@rollup/plugin-terser""
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps-dev): bump @types/react-dom from 18.2.6 to 18.2.7 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps-dev): bump postcss from 8.4.23 to 8.4.27 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps-dev): bump eslint-config-prettier from 8.8.0 to 9.0.0 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
fix: prepublish script typo in package.json ()
build(deps-dev): bump tslib from 2.5.0 to 2.6.1 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps-dev): bump @rollup/plugin-commonjs from 25.0.0 to 25.0.4 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps-dev): bump @rollup/plugin-node-resolve from 15.0.2 to 15.1.0 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
fix: range not selected when missing the `from` value ()
fix: dropdown may navigate to the wrong month when multiple months are set ()
build: bump v8.8.1","What's Changed
fix: range not selected when missing the from value by @Sam-Apostel in
fix: dropdown may navigate to the wrong month when multiple months are set by @gpbl in
docs: remove shadow-dom from examples by @gpbl in
Build updates
Toggle list
build(deps): bump @typescript-eslint/eslint-plugin from 5.59.0 to 5.59.11 by @dependabot in
build: move from yarn to pnpm by @gpbl in
build: move the main package to the repo root by @gpbl in
build(deps-dev): bump @typescript-eslint/eslint-plugin from 5.59.11 to 5.61.0 by @dependabot in
build(deps-dev): bump webpack from 5.83.1 to 5.88.1 by @dependabot in
build(deps-dev): bump date-fns from 2.29.3 to 2.30.0 by @dependabot in
build(deps-dev): bump tsc-alias from 1.8.6 to 1.8.7 by @dependabot in
build(deps): bump word-wrap from 1.2.3 to 1.2.4 by @dependabot in
build(deps-dev): bump jest and @types/jest by @dependabot in
build(deps-dev): bump eslint-plugin-jest from 27.2.1 to 27.2.3 by @dependabot in
build(deps-dev): bump jest-axe from 7.0.1 to 8.0.0 by @dependabot in
build(deps-dev): bump webpack from 5.83.1 to 5.88.2 by @dependabot in
build(deps): bump @codesandbox/sandpack-react from 2.6.1 to 2.6.9 by @dependabot in
build(deps-dev): bump postcss from 8.4.23 to 8.4.27 by @dependabot in
build(deps): bump semver from 5.7.1 to 5.7.2 by @dependabot in
build(deps-dev): bump tough-cookie from 4.1.2 to 4.1.3 by @dependabot in
build(deps-dev): bump @jest/types from 29.5.0 to 29.6.1 by @dependabot in
build(deps-dev): bump @rollup/plugin-terser from 0.4.1 to 0.4.3 by @dependabot in
build(deps-dev): bump @types/react-dom from 18.2.6 to 18.2.7 by @dependabot in
build(deps-dev): bump postcss from 8.4.23 to 8.4.27 by @dependabot in
build(deps-dev): bump eslint-config-prettier from 8.8.0 to 9.0.0 by @dependabot in
build: prepublish script typo in package.json by @trabeast in
build(deps-dev): bump tslib from 2.5.0 to 2.6.1 by @dependabot in
build(deps-dev): bump @rollup/plugin-commonjs from 25.0.0 to 25.0.4 by @dependabot in
build(deps-dev): bump @rollup/plugin-node-resolve from 15.0.2 to 15.1.0 by @dependabot in
New Contributors
@trabeast made their first contribution in
@Sam-Apostel made their first contribution in
Full Changelog: v8.8.0...v8.8.1"
"ci: Update action
ci: fix action
ci: run on workflow_dispatch
Upgrade dependencies ()
website: upgrade dependencies ()
build: upgrade rollup to 3.2 ()
build(deps): bump terser from 5.10.0 to 5.15.1 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
repo: upgrade eslint package ()
build(deps): bump minimist from 1.2.5 to 1.2.7 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
build(deps): bump follow-redirects from 1.14.7 to 1.15.2 ()

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
test(deps): Upgrade jest to v29 ()
fix: set tabIndex to 0 when day is focused ()
Update CHANGELOG.md
Bump v8.3.6","What's Changed
fix: set tab-index to 0 when day is focused by @gpbl in
Upgraded dependencies by @gpbl in
Full Changelog: v8.3.5...v8.3.6"
"Fixes stash docs references
Refresh views after removing or renaming a remote
Do not attempt to save a git file if it doesn't exist

For example, the user might `rebase --abort` while looking at the
""git-rebase-todo"" file which will in turn delete the file.
Rewrite when to ignore an activate event for clarity

There is a small behavior change here as well in that we don't trigger
if we *enter* a Terminus view anymore.
Force focus for native git files on load

If ""subl -w"" is set, Sublime has problems focusing the active view
but only if we start the git command from within Sublime itself, for
example using GitSavvy itself or Terminus.

We mitigate by trying to force focus the just loaded view.  (A way to
bring the view's window to front would be handy here.)
Fix possible freeze when undoing in the commit message view

The interaction between automatically setting the `read_only` state and
automatically updating the diff in the background confuses Sublime
in a way that it freezes and shuts down.

A reproduction was:  Put the cursor in the read only area, for example
the help comment.  Try `ctrl+z` for undo while in the read-only area.
Note that it tells you in the status bar ""Undo: ..."" without any visual
difference.  Move to the writeable area, `ctrl+z` again.  Now, Sublime
freezes.

The fix is to switch the `read-only` state not sync, t.i. using the
`on_selection_modified_async` callback.  From the perspective of the
fix it looks like ""undoing"" triggers a cursor movement *to* the
read-only area, and a sync selection-modified event then toggles the
read-only state which crashes Sublime.","Fix links in the stash docs (@kinduff)
Refresh views after removing or renaming remotes
Do not attempt to save already deleted git editor files ()
Try to force focus the view git opens and awaits for editing ()
Fix possible crash when undoing in the commit message view ()"
"Fix `remote_to_url` function docs
Simplify `remote -v` parsing
Add mypy types to `github.remotes`
Inject `remotes` into `get_integrated_remote_name`
Make injecting `remotes` into `get_integrated_remote_name` mandatory
Do not use `self.remotes` which might be undefined
Optimize side-effects chain in `guess_github_remote`
Remove always true conditional
Remove always true conditional
Rewrite `guess_github_remote` for clarity of intent

For `guess_github_remote` the invariant is really when the current
`tracked_remote` is not the same as the configured `integrated_remote`.
See for the feature request.
Reorder side-effects in `get_integrated_remote_name`

Try to avoid the `git config` call for zero or exactly one configured
remote.
Remove unnecessary conditional
Do not call `get_upstream_for_active_branch` twice
Try ""upstream"" as a good remote name

The current convention used by GitHub tooling is to use ""origin"" for
the fork of the repo, and ""upstream"" for the original ""source"" repo.

If you're the owner of the repo, just set ""origin"".

Here, we really want the ""source"" remote where the PR's and issues are
created.
Simplify `get_integrated_branch_name`
Fix MRU order in `open_on_remote` for mypy
Inject `remotes` into `guess_github_remote`
Fix commented import code
Fix MRU order in `github.pull_request` for mypy
Only fill in start range if manually configured

Fixes
Provide a `mixin_base` for mypy
Use `mixin_base` for `BranchesMixin`
Optimize side-effects in `GsGithubCreatePullRequestCommand`

We utilize the rich information `Branch` gives us as fetched via
`get_branches()`.  Esp. the costly status check is not necessary since
we only want the ""behind/ahead"" info not the dirty state.
Pass down current branch's name when creating a PR

Since we already know the name of the current branch, passing it down
saves us one git call later.
Unnest conditional for clarity
Refactor `open_comparision_in_browser` for side-effects

The code, for example `get_integrated_remote_url` relies on
`get_remotes()`.  So we call this once and use its value.
Raise if remote urls can't be parsed for GitHub

If the remote url is in a form we don't understand it is exceptional.
Just `return None`, t.i. doing nothing, doesn't help.  We just throw
to make it visible although ugly.
Type check `github.py`
Optionally pass down upstream to `get_integrated_remote_name`
Read ""GitSavvy"" config in one go and inject it

It is faster to read the whole config in one go if we need both
`get_integrated_remote_name` and `get_integrated_branch_name`.  So we
just do this, and pass the info around.

Note that the config keys are essentially case insensitive, so our
""ghBranch"" becomes ""ghbranch"".
Optimize `gs_push` for side-effects
Move `get_local_branch` method
Implement `get_local_branches`
Make `sort_by_recent` a keyword argument
Use `enqueue_on_worker` throughout `push.py`
Pass down arguments
Fix `CONFIRM_FORCE_PUSH` message
Fix: Also set upstream if `prompt_for_tracking_branch` is `False`

Ref https://github.com/timbrel/GitSavvy/pull/569#discussion_r89279892

The difference between both ways of pushing is really if the user is
asked for a remote branch name or not.  It basically boils down to
hitting `<enter>` once more.
Implement iterative depth-first traversal for `_follow_path`

In Sublime Text we have a recursion depth of 1000.  The recursion
algorithm is also very slow for deep or long paths.

We switch to the iterative version using a stack.  This is classical,
the only notable difference being that we don't yield the starting
nodes (dots).
Use `cooperative_thread_hopper` to colorize the path

Because of the excessive side-effects (queries against the view)
`_colorize_dots` must run on the UI thread but then we can't block
for too long or we get freezing.

Using the `cooperative_thread_hopper` utilitiy we cut the unit of work
in time slices (of 17ms).

- We always paint the dot where the cursor is immediately because it
  indicates the active line.

- We also paint before ""hopping"" because usually we have enough time
  to compute and paint the visible viewport.  Thus we can give the
  illusion the viewport is painted and ready.

- We process the `uow` going round-about.  Usually only one path is
  extremly long, while others are short.  If we for example naively
  just follow a long path down, we miss the opportunity of painting
  the dots above quickly.  We go round-about in circles thus computing
  and painting the viewport as fast as possible.

- Although we could compute in the background, we rather abort because
  the computation is heavy, and interleaving computations of different
  paths still lead to a stutter UI.
Teach `block_time_passed_factory` a default timeout
Restart the timer after yielding
Hide `PATH_CACHE` as an implementation detail
Rename `_follow_path` to `follow_path`
Let `follow_path_down` and `follow_path_up` return an `Iterator`
Remove `follow_dots` as duplicate of `follow_first_parent_commit`
Rename `follow_first_parent_commit` to `follow_first_parent`
Implement `follow_dots`

To account for merges, search for fixup and squash base commit following
*all* paths.  (We used to just follow the first-parent.)
Revert ""Restrict trigger types for pull requests""

This reverts commit 5e597c6b774e95910a7cbed7770a1151a7fbcf64.

Revert because the explicit trigger types for ""pull_request"" are
actually the default ones.
Do not run tests on GitHub/Windows

Remove the windows jobs because they're flaky.
Remove GitHub/macos jobs

Save the CPU cycles.  We don't need them as there is no much difference
between linux and macos on the Sublime environment.
Do not highlight a sole ""@""
Narrow highlighting sha references

There is never a good enough *simple* regex to highlight sha's.  But
usually they're separated by spaces or followed by an ""@"".

`\b` doesn't cut it because then the suffix in fluefla-a23452b matches.
Update syntax tests
Offer push with ""force-with-lease"" if behind

Fixes
Run first phase of `gs_push` on the UI thread

The first phase of `gs_push` only makes 1 git call now, it is thus fast
enough to run sync.  Running sync has the advantage that the previous
""originating"" panel, for example the Command Palette or the graph
actions menu do *not* visually close inbetween.  (So there is no gap
between this original panel and a potential coming ""Force push?"" panel.)

There is also no `on_activated` call between them.  Of course, the push
itself must run on the worker.
Move ""Fetch"" to the top of the actions menu

We switch to the order ""fetch/pull/push"" as fetch is used to often,
basically to preview the upstream changes.
Extract `show_actions_panel` to `utils.py`
Use `show_actions_panel` in `gs_delete_branch`
Move `ask_for_local_branch` to `base_commands.py`
Use `ask_for_local_branch` in `gs_delete_branch`
Use `show_panel` in `commit.py`
Fix type of `sublime.show_quick_panel`
Remove unused `list_remote_branches`

The last usage of this function has been removed in 4dd91369
(Enhancement: offer push to remote rather than configuring remote, Aug
2017).
Add `on_cancel` callback to `show_remote_panel`
Simplify `last_remote_used` getter

`RemotePanel` is the only call site of this getter, and it opt-out of
the special behavior.  So just remove the special behavior.
Use the store for `last_remote_used`
Remove unused `selected_remote` argument
Save the `get_current_branch_name()` side-effect
Always run `self.select_branch` on the UI thread

Since we reduced the side-effects to one, run on the UI thread for the
better UX.
Implement `on_cancel` callback for `show_branch_panel`
Remove unused `local_branch` argument
Use `allow_direct=True` for more commands

`allow_direct` has been introduced by.  If `True` we will not ask
the user for a remote if there is only one configured.

We hereby turn this on for more commands, actually as suggested in
https://github.com/timbrel/GitSavvy/pull/791#issuecomment-338007502
Streamline questions when pushing a branch with no upstream yet

Fixes

Re-interpret the ""prompt_for_tracking_branch"" setting.  Only show
the ""really?""-confirmation if `True`, the default.  If `False`,
start the push flow which in turn asks at least for the remote branch
name.  These questions can be aborted with ""ESC"" as usual.

As pushing for the first time just before creating the PR is probably
the most common scenario, read ""prompt_for_tracking_branch"" just like
`gs_push` would do.

See also the very recent d87012cf (Fix: Also set upstream if
`prompt_for_tracking_branch` is `False`)
Improve input panel help text for remote/target branch name

As this is becomes the only stopping point/question we're asking for
the nice path of only having one remte, make it very clear which remote
we push to.
Remove `prompt_for_tracking_branch` setting
Move `gs_push_to_branch` class down in the source
Add types to `push.py` and `show_remote_panel`
Improve status message on push start
Rename `get_local_branch` to `get_local_branch_by_name`
Make `set_upstream` a local argument
Flip arg call order for consistency
Use `refresh_gitsavvy_interfaces` after push
Pass down `args` to the default input handlers
Use input handlers for `gs_push_to_branch_name`
Use input handlers for `gs_push_to_branch`
Use a different storage for the ""show_option_all"" remote panel

With ""show_option_all"" the panel gets an imaginary first item, namely
""All..."".  We want to make it possible to save this selection, and to
not interfere with all other remote panels which do not set this option.
(Currently, only `gs_fetch` uses it.)

For example, we want to support a user always fetching all but pushing
to (of course) a specific remote.

Enhances. We change the initial value back to the common ""origin""
in all cases.  Generally, fetching all does not scale, and it is an
edge-case feature.
Use ""<ALL>"" instead of `True` to signal the all option has been taken
Use input handlers in `fetch.py`
Use `refresh_gitsavvy_interfaces` after fetch","This release focuses on speed and code improvements when pushing to a remote
or creating pull requests against GitHub.
Visible changes are:
The setting prompt_for_tracking_branch (default: True) has been removed.
We recognize by convention ""upstream"" as a good remote name for integration with GitHub.
(Before we only considered ""origin"".)
We always open the PR against the original, ""source"" repo, respecting the chosen
default branch of that repo.  If you really want to create a PR against a fork,
you need to configure that manually by invoking github: set remote for integration
from the Command Palette.
[*]  When working with GitHub, GitSavvy guesses one remote as the ""integration"" remote.
This is the remote where for example the issues and PR's land.  It is not necessarily the
remote you can also push to.  For example, when you fork a repo to contribute to an open
source project, you push to your fork to close an issue on their repo, and you
open the pull request against that same ""source"" repo.  In this model you have at least
two remotes configured.  (You don't need multiple remotes and all this of course. For
small fixes, you might just have your fork as the only remote known to git.  That is
enough to make a pull request using GitSavvy.  Other features, like listing the open issues,
reviewing pull requests, won't work though. )
The convention here is that you name the remote of the ""source"" repo upstream, and
usually your fork origin.  Or you name the ""source"" remote origin and choose an
arbitrary name for your fork.  Technically, GitSavvy probes upstream and then origin
to guess the so-called integration remote.
This usually doesn't matter if you have push permissions to the repo, if you ""own"" it.
Then you usually deal only with origin as both the push and fetch remote.
You may of course have dozens of other remotes though from people making pull requests
to your repo.  These remotes should not get a special name but the name of the user of
the PR.
Quality-of-life improvements:
We usually don't ask for a remote anymore if there is only one remote configured.
Offer a forceful ""push"" if the branch is behind."
"Fix `row_offset` if the view has some folded content

`row_offset` tells you for example that a given row is the 20th
in the viewport.  The algorithm didn't count for hidden rows which
happens if the user folds the code.

We switch to comparing the y values of two vectors.  `viewport_position`
return the top `y`, and `text_to_layout` returns the current `y` the
cursor is on.
Fix `gs_prev_hunk`

Jumping ""back"" was maybe too tricky implemented.  There is another bug
when we have two modifications at the end of a hunk.  Because we always
choosed the line start of `b` (t.i. `view.line(b).a` in the code) there
was a chance landed in another modification.

Keep it simple, and just use a different algorithm for jumping ""prev"".
Generally, we want to jump to the start of a hunk even when jumping
""up"".  We now jump twice ging up but then just take the `a` part which
is now the first modification of the hunk we want.

Also more understandable, prevent all viewport moves directly in
`jump`.  We then either `restore()` or show the region we found anyway.
Factor out `all_modifications` fn
Refactor for symmetry between moving back and forth
Fix: Take the `b` filename as a goto symbol

We switch here, and mark `b` instead of `a` as the filename for the
Goto funtionality.  This is (more) correct here because we generally
have the current workstate on the b-side.

Imagine you check in a new file or you renamed a file.  In the first
case, `a` doesn't point to any file, in the latter `a` points to the
old file.
Do not render dashboards twice on resurrect

On resurrect, for example starting up Sublime with the status dashboard
open, we first `focus_view` in `__new__` which will run `render`
`on_activated`, then we `render` a second time in `__init__`.

This patch removes the (imperative) call in `__init__`.","Fix inline_diff scrolling if the view has some folded regions ()
Fix edge case bug when jumping back using the new gs_prev_hunk cmd wasn't possible anymore ()
Take the filename at b in the diff view as a Goto Symbol ()
Do not render the dashboards twice when starting Sublime ()"
"Iterate make commit syntax

We modernize the make commit syntax for following reasons:

- We don't want to mark lines beginning with a '#' as comments because
  we actually commit them. (Ref)

- We want to make it easy to select the commit message. (Ref)
  After this change `meta.commit.message` can be used to extract the
  message.

- Additionally mark commit sha's in the message

Ref
Ref
Fix typos
Make our syntax mandatory
Extract `extract_commit_message` function

Fixes
Use a selector to find the start of dropped content
Fix sign command
Do not store unused ""help_text""
Shorten view close command
Concise do commit command
Show subject length ruler only if the subject gets large

This is probably super-finetuning but it makes a better initial look.
Take stripped subject line when comnputing length warnings
Remove ""prepare-commit-msg"" feature

Fixes
Fixes

For now we remove the feature of supporting the ""prepare-commit-msg"".

- The pre-call to `git commit` runs before we can show a view which is
  just too slow. (We cannot wait x seconds before showing something to
  the user.)

- In the current implementation the ""pre-commit"" hook did run twice;
  first in the prepare phase, and then in the actual commit phase again.

- There is no consensus if we should show the prepared message in our
  (editable) message field or below the fold in the dropped content
  area. Both options are not satisfying: since the prepared message
  often contains git ""native"" comments (lines leading with a `#`) the
  user would have to remove these lines manually. Likewise, if we put
  the message below the fold, the user has to move any useful info up.

- Standard hooks usually only present a diff to the user. This is
  exactly what we already do.
Do not use our syntaxes for git native files

The syntaxes Sublime ships for git actually outperform our ones, so
there would be no need to use ours. Especially the ""make-commit"" syntax
isn't compatible anymore becuase it does not mark lines beginning with
a `#` as comment.

Enable auto-saving for those files on Windows.

Fixes
Remove interactive rebase helpers

These weren't working from Sep 2017 (b8fdddc) to Oct 2019 (8c58e58)
(where they got silently, t.i. without a PR, fixed).

Since nobody filed an issue in that time, we can remove this
functionality.

Fixes
Fix: Only show project settings help popup if editing a project

Fixes

Also: do not show the popup if the project already defines the
""GitSavvy"" key under ""settings"", t.i. everything is setup correctly.
Add tests
Snake case and define `__all__` for `commit.py`
Remove unused ""use_syntax_for_commit_editmsg"" setting
Extract `replace_region` functions into `view.py`
Update diff in prepare commit view if stage changes

Fixes

Whenever the commit view gets focus, we run `git diff` again and update
the view accordingly. When nothing is staged we show that as well.
Maybe show ""Nothing to commit""

Fixes

We always run `git diff` basically for the potential empty output. Thus
we can show ""Nothing to commit"" even if the user opted out of showing
the diff and diffstat.
Fix: Remove debug printing","Small fixups around the ""prepare commit message"" view.
The diff updates when the stage changes. No need to close the view! Just stage or unstage bits using the various other views, and come back.
We do not run the ""prepare-commit-msg"" hook anymore (fe72688)"
"Show reverse diff from commit to workspace
Internal: Refactor away show_commit_info from LogPanel

It is a lot more convenient to just set on_highlight.

When you need a different on_highligh you just overwrite the current one. Either
by a new call or as a kwargs to show_log_panel

For to go easier
Internal: LogPanel, disable highlight if on_highlight is't callable
Rename `fpath` to `file_path`
Fix: expose on_highlight to LogMixin
respect log_show_more_commit_info
set_project_data only when key does not exist
move GitSavvy settings into ""settings"" key
show popup rather than presist setting
Fix: do not continue when the window is not a project
feat: expand home dir when cloning a project

see official docs for how it works:
https://docs.python.org/2/library/os.path.html#os.path.expanduser
Typo: Read view settings, not window settings
Enhancement: refactor show_input_panel
Enhancement: disable modifier+enter keys in single line input panel
Fix: use fallback encoding to decode stderr
Feature: git push --force-with-lease
Enhancement: better message when prompt_on_abort_commit

Additionally, no prompt will be made if the message is empty and the default
value of prompt_on_abort_commit is set as true
Git log current file will highlight commit diff for current file
Make the debug log link absolute

To help users reach the guide faster when opening a bug report
Enhancement: add status message when commiting
Fix: push selected non-tracking branch

close
Fix: do not allow commit twice
bump to 2.17.4
Internal: update UnitTesting link
Fix: help_text will be stripped
Fix: typo in remote address
# On branch typo
# Changes to be committed:
#	modified:   README.md
#","Changes since 2.17.3:
Feature:
git push --force-with-lease
Internal:
Refactor away show_commit_info from LogPanel (Merge 4dd2091)
LogPanel, disable highlight if on_highlight is't callable (Merge 4dd2091)
Enhancement:
Move the project GitSavvy key into ""settings""
Show reverse diff from commit to workspace for checking out files
expand home dir when cloning a project
refactor show_input_panel and disable modifier+enter keys in single line input panel
expand home dir when cloning a project
Fix:
expose on_highlight to LogMixin
do not continue when the window is not a project
use fallback encoding to decode stderr
push selected non-tracking branch
Contributors:
Pavel Savchenko
herr kaste
Simon
Randy Lai"
"Only re-paint commit message view if diff has changed

The commit view is now a hybrid, in the top you can write the message,
in the diff we make the view read only.  Unfortunately replacing the
diff *always* creates an undo entry which can get in the way (a bit)
when writing the message.

This is not huge because we only refresh on focus. But we do it async
so from time to time the refresh can end after the user typed again.
We reduce this effect by just not drawing when the view is already
up-to-date.

This helps especially *if* the diff was up-to-date because in that
case `ctrl+z` is a no-op for the user.  (T.i. hitting `ctrl+z` gives
no visual feedback because both states were the same.)
Extract `show_region` to `core/view.py`
Show the whole hunk when using `gs_next_hunk`/`gs_prev_hunk`

We used to just show the first line of the hunk which is a mistake.
(Iirc this was just done to do less work; a kind of performance fear
without ever measuring.)

We now walk and collect the whole hunk and compute a combined region
for it.

Note that `gs_prev_hunk` already walked the whole hunk before; without
a noticeable performance issue.
Improve `show_region`

`show_region` only used `view.show` on a widened region; a region with
some context added.  This works reliable but for wide jumps, i.e. the
target region is not in the viewport, it still only scrolls as few as
possible, usually bringing the target only on the bottom (or top) of
the screen.

We add a new strategy for such wide jumps where we try to bring the
region roughly at the center of the viewport.  This is similiar to
calling `view.show(..., True)` but here we also try to fit the region
into the viewport if possible.

Note that we don't just center the region in the viewport, nor do we
center just the starting line.","Avoid unnecessary repaints in the commit message view to avoid polluting Sublime's undo history.
Improve scrolling when using gs_next_hunk and gs_prev_hunk."
"Update README.md
Fix: Always show ""Diff against workdir"" if on HEAD commit

I.e. it is not necessary to check if we're on the checked out branch,
being on the ""HEAD"" commit is enough.

Otherwise we open the explicit diff ""HEAD against the head commit""
which is -- of course -- always empty.
Fix: Ensure refs in ""local_branches"" are actual branches

A typical other ref name is for example `refs/bisect/bad` etc.  These
should not count as local ""branches"".

Filter them here so they do not show up under ""Delete <x>"" or ""Move <x>
to ..."".

In reality we even raised because other code assumed everything under
`local_branches` would be also in `get_branches()`.  Fix that.","Fix two issues with the menu in the Repo History.
Esp. hot-fix a possible crash. () For example, when bisecting,
the code didn't like the refs/bisect/good (et.al) refs which are
somewhat ""local"" but also not branches."
"Add mypy ignore comment after mypy 1.10.0
Teach (un)stage functions to behave on invalid args
Reapply reference document after a Sublime Text restart

Surprisingly the reference document information is not stored in the
workspace or otherwise ""persistent"", so we need to re-apply it after a
restart.
Add pre-check for untracked files to `gs_line_history`","Views showing older revisions of a file lost their diff gutter marker when restarting Sublime Text.  Fixed that.
Do not attempt a line history on untracked files.
Tighten the hot-fix in 2.44.2"
"Fix `vintageous_enter_insert_mode` for NeoVintageous 1.22.0

Fixes

In NeoVintageous/NeoVintageous, pushed as 1.22.0 (Oct 2020), the
relevant commands were renamed.

We follow the new names, but for now also call the old ones.
Fix: List `intent-to-add`ed files as unstaged

The current behavior is to *not* list `i-t-a` files at all.  Basically
they disappear after adding.

We move the `i-t-a` files to the unstaged section, following git cli
behavior here.  This indicates that diffing the file will work.","Fix compatibility with NeoVintageous 1.22.0 ()
Recognize files which are intended-to-add as unstaged files ()"
"Fix commit syntax

The commit syntax (used by `Show Commit` or the `Line History`)
incorrectly assigns `meta.commit_message` twice on the message itself,
and then does not *pop* that meta scope in the diff section.

We fix by flattening the stack and handling all ""embeds"" in `main`.
Ensure dashboard views render on focus

Fixes

We have two code paths actually when creating a new interface object
for an existing view.

1. The user uses a short-cut or any other binding to open a dashboard.
Then we reuse a possible given view using `focus_view` which in turn
fires `on_activated`.

2. The user just focuses such a view.  Then we receive an `on_activated`
event, and must ensure we `render` imperatively.

This patch here addresses 2.

The bug was introduced by f29a0c9 (Do not render dashboards twice on
resurrect).  Just reverting is not a fix but would lead the other bug
(rendering twice) open again.
Cache extracting commit message regions

`find_by_selector(...)` is the costly operation here.  We cache here
using `view.change_count()` as invalidator.  By caching at the bottom
layer, the general flow gets simpler too because we don't need to pass
`message_regions` around anymore.
Cache `follow_path_down` and `follow_path_up`
Implement sane navigation in log graph view

1. For example, on pressing `up` we always want to move to the previous
commit, regardless of where the cursor was.

2. Don't own the cursor.  For example, keep the column stable if
possible.

3. Usually the graph is huge and `find_by_selector` is expensive here.
Make a custom implementation with constant performance.
Explicitly check possible region against `None`

Empty, zero-length regions, also evaluate to `False`, so for regions
we *must* check `is None` explicitly.
Fall back to normal ""up/down"" movement on the edges

Allow normal ""up""/""down"" in and to the prelude section of the view.
Handle ""initial"" jump to the first commit
Restore robotic movements for the old navigate bindings

T.i. the traditional bindings `,.` always bring the cursor back to the
commit hash, and don't allow movement outside of the edges.

For `up|down` we imitate the standard cursor movement.
Do not cache reading the HEAD commit

Ref

In other places, we check if the `commit_hash` is `""""` or `""HEAD""`
to skip caching, so this one was missing here.

The use case is a user binding to `gs_show_commit` with `commit_hash`
set to `HEAD`.  This kind-of just works with this patch.

However, arbitrary references, like for example tags or branch names,
are not supported.
Let `gs_show_commit` resolve HEAD

Usually `gs_show_commit` receives a commit hash, and since these are
immutable, the views were always static and its content cacheable.

We now allow to set `commit_hash=""HEAD""` and resolve the commit hash
automatically.

Fixes
Teach diff syntax ""--cc"" headers
Let `g` in the status view not forcefully jump to ""HEAD""","Make the new navigation (up|down) in the ""Repo History"" snappy and more natural.
Ensure dashboards are refreshed, for example when switching projects.
Do not forcefully jump to ""HEAD"" when using g in the status dashboard.
Allow gs_show_commit to show the ""HEAD"" commit.
Fix syntax highlighting errors in the ""Line History"" view.
Teach the diff syntax the ""--cc"" (combined diff) header."
"Fix: Graph menu should open if cursor is on a detached HEAD

Since 0bcabc7e (Add ""fetch""/""push""/""pull"" to the graph menu) published
with 2.26.0 (Sep 2020) a user cannot open the actions menu if on a sole
detached HEAD commit.

Generally, the idea of having a sparse dict to represent the line or
commit info makes the handling here brittle and hard to read.  We can
handle that later, for now `info[""local_branches""]` can fail and must
be made safe using `.get()`.
Do not guess `selected_branch` if only remote branches are shown

The active branch cannot be a remote branch (you can only do
detached checkouts on these).

Let's save the call to `get_current_branch_name()` here.
Fix: Compare longest with shortest commit message

We currently work visually here, t.i. on the actual drawn graph, and
have to expect shortened commit messages.  We always worked with a
cleaned original message (see: `message_from_fixup_squash_line`) but
have to do the same (`.rstrip(""."")`) when comparing with other messages.

The code also assumed the original message is the truncated one.
This is often but not necessary always true. We therefore sort by length
before comparing with `startswith`.
Add Github Action for the tests
Rename `pythonapp.yml` to `lint.yml`
Set ENV to what we had on Travis
Delete Travis workflow
Restrict trigger types for pull requests","Fix edge case when finding the base commit to a fixup commit ()
Fix: The action menu in the History views did not pop up on detached HEAD commits ()
Minor performance tweak for the branch panel ()"
"Improve debug message wording
Add type signature to `git_version_from_path`
Log which binary and version of git we use
Do not show error panel if a killed process throws

Fixes

It is likely that processes we kill (intentionally) do not exit clean.
Suppress the error panel in that case.","Fix: Do not show the error panel for processes we intentionally killed ()
When debugging, print the used git binary and its version ()"
"Consider filtered graphs to be unique

In other words, if the user has a filtered graph open, for example
""-Ssome_method"" do not use this graph for showing (following) any
possible commit because it is usually not here anyway.
Reuse ""file revision views""
Reuse ""commit views""
Reuse ""commit message views""
Implement hunk by hunk navigation using Sublime's gutter marker

With the Sublime gutter markers, they also introduced the commands
""next_modification"" and ""prev_modification"".  Unfortunately, they
jump really between single, recognized edits, leading to frustrating
fine-grained jumps.  On the other side, GitGutter always jumped from
hunk to hunk but is slightly discouraged because of the - as it seems -
unnecessary overhead.

We introduce the commands ""gs_next_hunk"" and ""gs_prev_hunk"" which jump
hunk per hunk using Sublime's basically instant, and computational
cheap markers.

`LINE_DISTANCE_BETWEEN_EDITS = 2` mimics an ""-U0"" diff.  Increasing the
number would reduce the number of individual hunks a user can jump to.
Add hunk navigation bindings to ""File Revision View""","Reuse views more often when navigating around. ()
Add hunk-per-hunk navigation (via [,.]) to the ""File Revision View"".  ()
Notable: The commands gs_next_hunk and gs_prev_hunk introduced in actually
work for all normal views for which Sublime draws modification gutter marks.  These are
thus a direct replacement for the built-in next_modification/prev_modification
commands. The latter jump per edit, whereby our commands jump from hunk to hunk."
"Do not use ""simplify history"" features for ""File History""

Fixes

As explained in https://git-scm.com/docs/git-log#_history_simplification
`<file_paths>`, `--simplify-by-decoration`, and `--sparse` interact.

For the common ""Repo History"" ""sparse"" is easy to follow and to
understand, but when showing a ""File History"" it is not a good default
mode anymore. The settings ""--sparse"", ""--dense"" etc. become rather fine
grained research methods. Git's ""Default mode"" (again see their docs)
becomes the only understandable mode.

So we just follow here and use history simplification only when showing
the ""Repo History"".
Do not force a ""cached"" mode when reusing views

When reusing diff views it is often desired to not force a specific
""cached"" mode but just switch to the view. For example, a user might
have a key binding to diff the current file. Here it is better to
just have *one* binding to open or focus the diff, and switch the
""cached"" mode via `<TAB>`.

We thus make `in_cached_mode` a three-state toggle, t.i. not setting it
(`None`) becomes also meaningful in that it only focuses the view.

Fixes regression introduced by c74159fef38729bb2c179b74b6831991a31ce70f
(""Update ""cached"" mode when reusing diff views""), thus related to.","Fix ""File History"" showing a ""sparse"" history for some repos.
Fix regression introduced in 2.22.3"
"Switch to ubuntu-20.04
Rename test classes to contain ""GraphView""
Use builtin `addCleanup` method
Use builtin `expectedFailure` decorator
Use builtin `addCleanup` method
Fix `await_active_panel_to_be` to use its argument
Make `view` arg to `close_view` mandatory
Make `window` argument to `create_new_view` mandatory
Fix: Respect branch decoration in commit headers

For example, the Line History might yield multiple commits, and git
might put branch decoration (for example ""(HEAD -> ...)"") on the first
line right after the commit hash.

Rewrite `CommitHeader.commit_hash` to not include them.
Add newline after the commit message in a fixture

In reality git always prints newlines around the commit message, and
here before the `--` marker.

Add this to our fixture to be realistic.
Snake case and define `__all__` for the GitLab modules
Safely access `THROTTLED_CACHE` dict

Reading `THROTTLED_CACHE` seems safe as we never pop items from it.
Unless we hot-reload.  Then we evict everything, and the code can
possibly throw.

Just choose the safe `.get()` variant.
Traverse dots in visual order

Especially with feature branches of different lengths it happens that
we already see commits from the main line while other branches are
still running.

Although not an error per se it is confusing and often wasteful.  Sort
the dots by `dot.pt` to restrain exact visual order.
Walk up to 100 commits to find fixup/squash matches
Teach ""jump-to-file"" to compute columns for combined diffs

The ""jump-to-file"" algorithm did not count that combined diffs actually
have a wider ""line-mode"" section than the usual patches.

We change from `max(col, 1)` to `max(col - mode_len + 1, 1)`.
Note that for `mode_len = 1` nothing changes.
Fix: Ensure rewrite actions run on the worker thread

Fixes

Fix a regression introduced by 1e31e247 (Let `LogPanel` continue
synchronous on `enter`).

Commit 1e31e247 introduced that `show_log_panel` continues on the main
thread on `enter`.  Hence actual users of `show_log_panel` must
explicitly opt-in and hop to a different thread if they want to.

Even for the rebase dashboard running on the main thread had the
advantage that the user could not issue different commands *while*
a rewrite was in progress.  Generally though, these rewrites possible
take a long time so it can feel like Sublime freezes.  Running on the
worker might be the better solution here.

The actual bug describes is a bug in the long distance.  When the
user uses the ""live_panel"" panel feature for ""git commit"" commands,
we deadlock for ""live_panel_output_timeout"" (default: 10s) because the
reader thread used for live logging waits for the main thread to write
to the panel while the git commands - running on the main thread - waits
for the panel to update.

This commit does *not* solve this underlying bug-by-design but just
the problem at hand. This is still the right commit as rewriting on the
main thread can take too long time anyway.","Hot-fix a tricky regression in the rebase dashboard in combination with live logging.  ()
Unfortunately, a proper fix for the underlying bug is still needed.
Teach ""jump-to-file"" to compute columns for combined diffs.  ()
Also, some other minor fixes, see:"
"Fine tune fixup and squash helper triggers

1. Allow the helpers at EOL position if the line is a fixup or squash
line.

This is actually the position the user lands on after using the helper,
and we want to allow selecting a different commit easily.

2. Only trigger the helper if there no text follows.

Here, for example the user first wanted to do a ""fixup"" but then decides
to edit the first word from ""fixup"" to ""squash"".  The user therefore
goes to BOL, deletes the right word, and types ""sq<tab>"" to autocomplete
to ""squash"".  This just works now because ""squash"" is via the help text
always in the buffer.
Preselect given subject line

If the subject line is given, let the helpers try to highlight such a
commit message.  This is handy since the commit detail panel appears
again and one can assure to have selected the right one.  (Or quickly
look at the diff again etc.)
Add [R] binding to start an interactive rebase
Fix: Close rebase panel automatically if the rebase finished

Fixes

We closed the panel automatically if it didn't contain the text
""rebase --continue"" which works okay unless the command itself is
""rebase --continue"".  (The idea was rather to check the output help
text from git.)

We switch to check for `not in_rebase()` which seems a natural fit.","Fix: Close rebase panel automatically if a rebase --continue finished the rebase ()
Add [R] binding to start an interactive rebase ()
Fine tune fixup helpers ()"
"Fix: Update settings when reusing commit message view
Rewrite settings abstraction for performance and reliability

Fixes
Fixes
Based on but rewrites rejected

Generally, we want to support project wide overrides for the settings.
We could access these settings using `view.settings()`. However, for
`WindowCommand`s we don't necessarily have an `active_view()` for
example if the ""view"" is actually a `Sheet` showing an image or (in
ST4) a HTML page.  (Note that `sublime.active_window()` always yields
but `window.active_view()` can return `None`.)

For simplicity, we switch to depend solely on a `Window` and read the
project settings directly using `window.project_data()`.  We implement
caches for both the project settings and the global app settings. (The
caches make a difference if we run commands *not* on the main thread
because we avoid the synchronization.)
Do not refresh inline diff twice when reusing the view

For the inline diff view, we actually call ""refresh"" at the end of the
`gs_inline_diff_open` command to update the scroll position and the
cursor immediately within one re-paint.  We thus need to prevent our
automatic refresh signal on focus.","Fix: Reusing a commit message view should update the commit mode (for example --amend)
Fix: Reusing an inline_diff view called ""refresh"" twice ‍
Ship a new settings abstraction (Fixes) which should be more reliable and faster."
"Force no animation when setting the viewport

Our usage of `set_viewport_position` always is to fully control the
viewport, often to prevent any scrolling.  I thought the default
here is `False` but actually the default is to follow the global
`animation_enabled` setting (which in turn is `true` by default).

We hence force `False` in all calls.

This removes some flicker and glitches when the user has animation on.
Remove references to gitter.im

Fixes

We're too low-volume to have a chat room.
Make clear that GitSavvy requires 2.16.0 in the README
Update README

Binding to `ctrl+shift+s` is what users really should do.
Be defensive when deciding to auto jump to first hunk

Rewrite the logic for when we attempt a jump to the first hunk for
clarity.  Be defensive and avoid the more complicated and costly
call for `capture_cur_position`.","Fix some render glitches when the user has the global animation_enabled setting on (which it is by default). ()
Fix edge cases where the inline diff might not respect our inline_diff_auto_scroll setting."
"fix(ItkVtkViewProxy): Do not animate when mouseover volume rendering

This preserves a high quality volume rendering when the mouse is moving
over the volume. We still request animation when the slicing planes are
enabled so the cursor widget is updated.
doc(package.json): Point homepage to GitHub Pages","Bug Fixes
ItkVtkViewProxy: Do not animate when mouseover volume rendering (e4b3a90)"
"chore(Dependencies): Bump vtk.js to 7.8.2
fix(icons): Use consistent colors for icons and orientation widget","Bug Fixes
icons: Use consistent colors for icons and orientation widget (1b332d1)"
"ci(Release): Permission access to test/data
fix(2DImageRendering): Set color level, color window

The window is too large, otherwise, making the image appear dim.

VTK.js has a different state setup for 3D that makes this necessary. Use this
approach for now.","Bug Fixes
2DImageRendering: Set color level, color window (5b3aa65)"
"chore(Dependencies): Bump webpack to 5.22.0
fix(Webpack): Use UMD module for itkVtkViewerCDN.js

These were added to the itkVtkViewer.js configuration, which results in
it being empty with `npm start`.

Also, migrate the `output` configuration to the more modern format:

  https://webpack.js.org/configuration/","Bug Fixes
Webpack: Use UMD module for itkVtkViewerCDN.js (4c39a82)"
"perf(applyXSlice): render async after changing slice position
fix(ImageRenderingActor): catch errors on update image
fix(applyRenderedImage): keep volume visibility off in slice view
fix(updateRenderedImage): sequentially compute component ranges

Kicking off too many workers causes tab crashes","Bug Fixes
applyRenderedImage: keep volume visibility off in slice view (be77822)
ImageRenderingActor: catch errors on update image (ca854f6)
updateRenderedImage: sequentially compute component ranges (5b829cb)
Performance Improvements
applyXSlice: render async after changing slice position (3c899c2)"
"fix(ImageRenderingActor): keep loading image even if camera moves
fix(updateRenderedImage): only set colorRanges in applyRenderedImage

Don't also set them in createLayersUIMachine","Bug Fixes
ImageRenderingActor: keep loading image even if camera moves (e569cc1)
updateRenderedImage: only set colorRanges in applyRenderedImage (70cfb34)"
"doc(Logo): Add app attribution paragraph on click

Suggested-by: Will Schroeder <will.schroeder@kitware.com>
doc(ColorMapPresetNames): Update used values

This is not currently used directly.
fix(updateLabelMapPiecewiseFunction): return with no label map

To address:

  react_devtools_backend.js:6 [mobx] Encountered an uncaught exception that was thrown by a reaction or observer component, in: 'Reaction[Reaction@379]' TypeError: Cannot read property '0' of null
    at updateLabelMapPiecewiseFunction (updateLabelMapPiecewiseFunction.js:23)
    at EventEmitter.viewModeChangedListener (createViewer.js:76)
    at EventEmitter.emit (index.js:202)
    at createViewer.js:761
    at executeAction (mobx.module.js:914)
    at Reaction@379 (mobx.module.js:901)
    at reactionRunner (mobx.module.js:2156)
    at Reaction.onInvalidate (mobx.module.js:2136)
    at Reaction.runReaction (mobx.module.js:1761)
    at runReactionsHelper (mobx.module.js:1898)
fix(createColorRangeInput): Do not update colorRange if set

During createViewer.setImage.
fix(createTranferFunctionWidget): Do not replace Gaussians with new image

If the Gaussians have already been set, use them.","Bug Fixes
createColorRangeInput: Do not update colorRange if set (d75461a)
createTranferFunctionWidget: Do not replace Gaussians with new image (b4c488d)
updateLabelMapPiecewiseFunction: return with no label map (e357205)"
"fix(userInterface): Use unique element identifiers
refactor(userInterface): Rename viewerCSSIdentifier with viewerDOMId","Bug Fixes
userInterface: Use unique element identifiers (7aa52f1)"
"fix(refui-applyColorMap): check for null in compare image case

First call to applyColorMap in compare image case
gives fusedImage with null scalar values.
chore(package): update vtk.js to 29.4.6
fix(package): update puppeteer/chrome to get structuredClone

structuredClone used by vtk.js Texture
fix(ci): upgrade chrome in headless test docker
fix(ci): keep old chrome, add structureClone polyfill
fix(ndarrayToPointSet): array size is product of shape","Bug Fixes
ci: keep old chrome, add structureClone polyfill (26e0d09)
ci: upgrade chrome in headless test docker (949a40f)
ndarrayToPointSet: array size is product of shape (938c503)
package: update puppeteer/chrome to get structuredClone (6c14c09)
refui-applyColorMap: check for null in compare image case (60f4138)"
"build(pre-commit-hook): Run prettier as a pre-commit Git hook

Option 1 from: https://prettier.io/docs/en/precommit.html
fix(Viewer): Replace component select with tabs
style(format): Auto-fix style/format issues","Bug Fixes
Viewer: Replace component select with tabs (2216a13)"
"chore(deps): Bump itk.js to 6.0.0
chore(deps): Bump vtk.js to 5.1.15
fix(deps): Update workbox-sw path for 2.1.0
fix(webpack): Address no alert webpack warnings

Addresses:

  WARNING in ./src/viewers/index.js

  /home/matt/src/itk-vtk-image-viewer/src/viewers/index.js
  40:5  warning  Unexpected alert  no-alert
  54:5  warning  Unexpected alert  no-alert

  ✖ 2 problems (0 errors, 2 warnings)","<a name""2.0.2"">
Bug Fixes
deps: Update workbox-sw path for 2.1.0 (51bba5c6)
webpack: Address no alert webpack warnings (5a993af0)"
"build(deps): bump minimist from 1.2.5 to 1.2.6

Bumps [minimist](https://github.com/substack/minimist) from 1.2.5 to 1.2.6.
- [Release notes](https://github.com/substack/minimist/releases)
- [Commits](https://github.com/substack/minimist/compare/1.2.5...1.2.6)

---
updated-dependencies:
- dependency-name: minimist
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>
fix(itk config): webpack defined variable typo

__itk_viewer_version__ -> __itk_vtk_viewer_version__","Bug Fixes
itk config: webpack defined variable typo (6f1d18e)"
"fix(scaleSelector): error when uiMachineOptions missing scaleSelector

If custom config does not include uiMachineOptions.images.services.scaleSelector
there is an state machine error:
Error: Unable to send event to child 'scaleSelector' from service 'images'.

This change provides default stub for the scaleSelector

closes
fix(scaleSelect): sync root itk-viewer-icons version with referenceUI

Avoids downstream packaging errors when importing referenceUI source.","Bug Fixes
scaleSelector: error when uiMachineOptions missing scaleSelector (19066d7), closes
scaleSelect: sync root itk-viewer-icons version with referenceUI (0bdbf17)"
"fix(Dependencies): Bump itk.js to 9.0.0

Supports multiple instances on a page better.
fix(createImageUI): Only display color preset selector for scalar images","Bug Fixes
createImageUI: Only display color preset selector for scalar images (9bbf496)
Dependencies: Bump itk.js to 9.0.0 (5a944af)"
"fix(workers): make worker js bundle files, not blobs

Blobs' self.location or __webpack_public_path__ is not like the document
path.  If the viewer is served off the root, with a path (ie localhost:8080/some/path/)
then the itk-wasm path would not include the path, just the origin.
fix(karma): configure to serve worker js bundles
fix(webWorkerPromiseWorkerPool): reuse existing worker
fix(tests): increase karma timeouts","Bug Fixes
karma: configure to serve worker js bundles (199d861)
tests: increase karma timeouts (7589ed6)
webWorkerPromiseWorkerPool: reuse existing worker (e2a2186)
workers: make worker js bundle files, not blobs (b990e3a)"
"chore(Dependencies): Bump vtk.js to 7.3.2
build(Webpack): Add mode flags for development and production
fix(ItkVtkViewProxy): Do not call resetOrientation

To address a conflict with another call to resetOrientation:

  macro.js:154 requester is already registered for animating
  vtkWarningMacro @ macro.js:154
  publicAPI.requestAnimation @ index.js:281
  publicAPI.setAnimation @ index.js:378
  (anonymous) @ index.js:466
  publicAPI.updateOrientation @ index.js:465
  publicAPI.resetOrientation @ index.js:496
  ItkVtkViewProxy @ ItkVtkViewProxy.js:170
  extend @ ItkVtkViewProxy.js:327
  constructor @ macro.js:985
  publicAPI.createProxy @ core.js:149
  createViewer @ createViewer.js:70
  (anonymous) @ processFiles.js:55
  Promise.then (async)
  (anonymous) @ processFiles.js:47
  processFiles @ processFiles.js:40
  handleFile @ createFileDragAndDrop.js:47
fix(ItkVtkViewProxy): Guard against duplicate setVisualizationMode

This causes multiple calls to ViewProxy.updateOrientation, which results
in duplicate calls to setAnimation(true, publicAPI).
fix(createViewer): resetCamera after rendering

Required with update to vtk.js.
fix(ItkVtkViewProxy): getRGBVolumeTransferFunction is now on VolumeProperty","Bug Fixes
createViewer: resetCamera after rendering (f38a8a7)
ItkVtkViewProxy: Do not call resetOrientation (b052874)
ItkVtkViewProxy: getRGBVolumeTransferFunction is now on VolumeProperty (1297544)
ItkVtkViewProxy: Guard against duplicate setVisualizationMode (f6155b2)"
"fix(createViewer): Fix check for uiCollapsed when config is null
fix(Downsample): Add RGB support

Closes","Bug Fixes
createViewer: Fix check for uiCollapsed when config is null (badb77d)
Downsample: Add RGB support (a5b38d4), closes"
"doc(Node): Update minimum Node, NPM versions
build(deps): bump log4js from 6.3.0 to 6.4.4

Bumps [log4js](https://github.com/log4js-node/log4js-node) from 6.3.0 to 6.4.4.
- [Release notes](https://github.com/log4js-node/log4js-node/releases)
- [Changelog](https://github.com/log4js-node/log4js-node/blob/master/CHANGELOG.md)
- [Commits](https://github.com/log4js-node/log4js-node/compare/v6.3.0...v6.4.4)

---
updated-dependencies:
- dependency-name: log4js
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>
fix(fetchBinaryContent): Support relative URLs

Addresses
build(deps): bump nanoid from 3.1.23 to 3.3.2

Bumps [nanoid](https://github.com/ai/nanoid) from 3.1.23 to 3.3.2.
- [Release notes](https://github.com/ai/nanoid/releases)
- [Changelog](https://github.com/ai/nanoid/blob/main/CHANGELOG.md)
- [Commits](https://github.com/ai/nanoid/compare/3.1.23...3.3.2)

---
updated-dependencies:
- dependency-name: nanoid
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>
build(deps): bump trim-off-newlines from 1.0.1 to 1.0.3

Bumps [trim-off-newlines](https://github.com/stevemao/trim-off-newlines) from 1.0.1 to 1.0.3.
- [Release notes](https://github.com/stevemao/trim-off-newlines/releases)
- [Commits](https://github.com/stevemao/trim-off-newlines/compare/v1.0.1...v1.0.3)

---
updated-dependencies:
- dependency-name: trim-off-newlines
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>
build(deps): bump url-parse from 1.5.1 to 1.5.10

Bumps [url-parse](https://github.com/unshiftio/url-parse) from 1.5.1 to 1.5.10.
- [Release notes](https://github.com/unshiftio/url-parse/releases)
- [Commits](https://github.com/unshiftio/url-parse/compare/1.5.1...1.5.10)

---
updated-dependencies:
- dependency-name: url-parse
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>
build(Package): Reduce size

For jsdelivr.","Bug Fixes
fetchBinaryContent: Support relative URLs (e55e25b), closes"
"fix(ui): Better UI and add preset selection
fix(UI): Improve UI and control","<a name""1.8.2"">
Bug Fixes
UI: Improve UI and control (ff9f6979)"
"fix(createViewModeButtons): Improve slicingPlanesEnabled detection
fix(ToggleUserInterfaceButton): VolumeRendering mode shows plane sliders when relevant

Closes","Bug Fixes
createViewModeButtons: Improve slicingPlanesEnabled detection (6c1429f)
ToggleUserInterfaceButton: VolumeRendering mode shows plane sliders when relevant (bbadd37), closes"
"fix(Geometries): Support direct unsigned char scalar colors

The vtk.js AbstractRepresentationProxy sets the Mapper ColorMode to
MAP_SCALARS if scalars and a lookup table proxy are present, but we always
have a lookup table proxy. Set ColorModeToDefault on the Mapper and high
lookup table GUI elements with 3-component unsigned char scalars.
fix(api): Expose transfer function gaussians and component visibilities","Bug Fixes
api: Expose transfer function gaussians and component visibilities (66e47a2)
Geometries: Support direct unsigned char scalar colors (f01275f)"
"fix(LayersUIMachine): if image loaded after labelImage, reuse actorContext
docs(ImJoy): Describe how to find the CID CDN link
fix(Slice Planes): bound slice planes min-max by cropping planes

closes","Bug Fixes
LayersUIMachine: if image loaded after labelImage, reuse actorContext (bbf8347)
Slice Planes: bound slice planes min-max by cropping planes (998e988), closes"
"fix(DownsampleLabelImage): Output ROI
perf(Downsample): Execute in parallel","Bug Fixes
DownsampleLabelImage: Output ROI (784b804)
Performance Improvements
Downsample: Execute in parallel (30a04e1)"
"feat(itk-viewer-reference-ui): Bump package version to 11.11.0
fix(reference-ui): Do not depend on the presence of all main buttons","Bug Fixes
reference-ui: Do not depend on the presence of all main buttons (aa8c19f)"
"fix(MultiscaleSpatialImage): cache only one image per scale

Before was keeping images that were not fully contained by new image.
fix(TransferFunctionEditor): bump version to fix Firefox error
fix(applyRenderedImage): synchronously set label map lookup table

Fixes having a label map and starting with slice rendering via use2D=true

closes","Bug Fixes
applyRenderedImage: synchronously set label map lookup table (d81d4e7), closes
MultiscaleSpatialImage: cache only one image per scale (eaa4e2f)
TransferFunctionEditor: bump version to fix Firefox error (42f7a49)"
"fix(webpack): cross origin loading of web workers

Bundle workers in itkVtkViewer.js bundle with worker-loader to avoid fetching
of worker.js bundles across origins, which is not allowed by the browser.
fix(ComposeImage.worker): when itkVtkViewer.js is served off origin

Pass in the itkConfig from the main thread to the worker scope
so it has the full URL path.  When the worker is bundled as a
blog, its self.location only includes the origin, not the full
URL path (ie: http://localhost:8080/, not http://localhost:8080/some/sub/path).
test(karma): setup config to match and ensure full path","Bug Fixes
ComposeImage.worker: when itkVtkViewer.js is served off origin (c12bdda)
webpack: cross origin loading of web workers (f38d745)"
"chore(build-test): bump macos version to supported
fix(ItkVtkViewProxy): grab crop handles when animating

Add subclassed WidgetManager to handle events even when interactor is
animating (like with FPS speed checks or auto rotating)
fix(ImageRenderingActor): ignore stale updateRenderedImage results

User set bounds and scale could get out of sync with rendering.  Steps:
1. Trigger slow updateRenderedImage by setting super fine scale.
2. Trigger fast updateRenderedImage by setting coarse or cached scale.
3. Fast updateRenderedImage sets rendering, then stale slow updateRenderedImage
overrides the more up to date updateRenderedImage result.

Update context and the rendering after updateRenderedImage Promise
resolves.  Promise result is ignored if loadingImage
state has been exited.","Bug Fixes
ImageRenderingActor: ignore stale updateRenderedImage results (b35ad96)
ItkVtkViewProxy: grab crop handles when animating (c3ea8d6)"
"build(deps): bump @sideway/formula in /src/IO/Downsample

Bumps [@sideway/formula](https://github.com/sideway/formula) from 3.0.0 to 3.0.1.
- [Release notes](https://github.com/sideway/formula/releases)
- [Commits](https://github.com/sideway/formula/compare/v3.0.0...v3.0.1)

---
updated-dependencies:
- dependency-name: ""@sideway/formula""
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>
build(dependencies): bump vtk.js 25.15.1->26.5.6
fix(svgrepresentation): vtk.js 26.0.0 removed SVG support, add support for SVGRepresentation back in
fix(openglrenderwindow): fix ""GL"" case in openGLRenderWindow","Bug Fixes
openglrenderwindow: fix ""GL"" case in openGLRenderWindow (68110be)
svgrepresentation: vtk.js 26.0.0 removed SVG support, add support for SVGRepresentation back in (4592573)"
"perf(blockZarrDecompress): Use a WorkerPool
perf(CoordsDecompressor): Decompress coords in parallel
fix(ZarrMultiscaleManager): Metadata parsing for non-multiscale Zarr images
perf(MultiscaleManager): Get chunks with the worker pool
fix(processFiles): Remove debug code
refactor(MultiscaleManager): add levelLargestImage()","Bug Fixes
processFiles: Remove debug code (299d901)
ZarrMultiscaleManager: Metadata parsing for non-multiscale Zarr images (eae802b)
Performance Improvements
blockZarrDecompress: Use a WorkerPool (f131864)
CoordsDecompressor: Decompress coords in parallel (7e11cdb)
MultiscaleManager: Get chunks with the worker pool (87afe09)"
"fix(createViewer): Add getBlendMode

Also, setBlendMode should use parseInt.
fix(createViewer): Fix cropping enabled toggle","Bug Fixes
createViewer: Add getBlendMode (573152d)
createViewer: Fix cropping enabled toggle (76e66a2)"
"feat(app): Application working from github.io
doc(website): Update site to point to the app
fix(download): Remove double download","<a name""1.2.1"">
Bug Fixes
download: Remove double download (509184d1)"
"test(Downsample): Use viewer
fix(DownsampleLabelImage): Support float pixel types","Bug Fixes
DownsampleLabelImage: Support float pixel types (1decbab)"
"fix(NPM): Run Webpack build during prepublishOnly

Ensure the package version is available, used as a bundle export and CDN
path, after the version has been set by semantic-release.
fix(index): Export the package version

So this is available in the ImJoy plugin, used in dist/index.html.
fix(Webpack): Use the itk-vtk-viewer Unpkg for the CDN path

To provide our Downsample pipeline.","Bug Fixes
index: Export the package version (4ac3228)
NPM: Run Webpack build during prepublishOnly (8da2391)
Webpack: Use the itk-vtk-viewer Unpkg for the CDN path (e74e54c)"
"fix(LabelMap): Sort labels numerically rather than alphabetically

Labels are assumed to be sorted numerically when the first and last
elements are used as the min and max, respectively, in a call to
setMappingRange on the color transfer function.  This fixes the
issue we have seen where picking indicated that several label
values were assigned the same color.
fix(LabelMap): Disable interpolation when we have labelmap","Bug Fixes
LabelMap: Disable interpolation when we have labelmap (0c63468)
LabelMap: Sort labels numerically rather than alphabetically (ceda9df)"
"ci(Release): Install semantic-release
doc(README): Remove TravisCI badges
ci(Release): Use Node 12 for documentation generation

Node 14 results in empty files.
doc(Index): Update subtitle
fix(updateFps): Allow sufficient time to sample the framerate","Bug Fixes
updateFps: Allow sufficient time to sample the framerate (4fd20b2)"
"fix(createViewer): Return transferFunctionWidget
style(createViewer): Run prettier
fix(createViewer): Return viewerDOMId, uiContainer

Add id's to some of the UI buttons.
fix(createMainUI): Do not enable orientation widget in the 2D viewer configuration","Bug Fixes
createMainUI: Do not enable orientation widget in the 2D viewer configuration (297a04e)
createViewer: Return transferFunctionWidget (72b52b0)
createViewer: Return viewerDOMId, uiContainer (dd921c4)"
"fix(createImageRenderingActor): handle errors making new image scale

Update scale dropdown to last successfully loaded scale on error.
fix(createImageRenderingActor): don't update histogram if no new data

After bounds are updated and they are just smaller, don't recompute
histogram.
chore(imageRenderingActor): rename to renderScale to targetScale
fix(TransferFunctionEditor): bump version

Fixes error when zooming in past head or tail control point","Bug Fixes
createImageRenderingActor: don't update histogram if no new data (aa5438c)
createImageRenderingActor: handle errors making new image scale (185843d)
TransferFunctionEditor: bump version (d0e0c26)"
"doc(README): Update scope
doc(Screenshots): Updates and refinements
fix(Dependencies): Bump vtk.js to 8.10.1

Contains ITKHelper fix for multi-component images.
doc(index): them -> it in data reference","Bug Fixes
Dependencies: Bump vtk.js to 8.10.1 (4733cb8)"
"fix(createViewer): Pass data array to transfer function widget on update
fix(setImage): Limit invocations

This appears to reduce, but not eliminate, Chrome page crashes.","Bug Fixes
createViewer: Pass data array to transfer function widget on update (f996352)
setImage: Limit invocations (9af6cf4)"
"fix(fullscreen): Support containers with fixed widths or heights
test(BaselineComparison): Do not capture images until after the lighting has been activated","Bug Fixes
fullscreen: Support containers with fixed widths or heights (27edd9a)"
"fix(applyRenderedImage): Create a copy of the color range before sending

Otherwise an Array reference is sent and all components end up with the
range of the last component.
fix(imJoyPluginAPI): Do not create viewer in run with no data","Bug Fixes
applyRenderedImage: Create a copy of the color range before sending (7a51b03)
imJoyPluginAPI: Do not create viewer in run with no data (b1450ae)"
"fix(createViewer): Do not use colorMapSelector with RGB images
fix(Dependencies): Bump vtk.js to 7.6.0

RGB cropping support","Bug Fixes
createViewer: Do not use colorMapSelector with RGB images (c4f42c2)
Dependencies: Bump vtk.js to 7.6.0 (bf4dac2)"
"fix(croppingPlanes): use signs of direction vectors

When the direction vectors of an image ""mirror"" the spacing,
the image cropping planes were outside the image.
fix(updateRenderedImage): limit fixed image scale to coarsest

Avoid trying to get a scale that exists in moving image, but not fixed.","Bug Fixes
croppingPlanes: use signs of direction vectors (e4324ca)
updateRenderedImage: limit fixed image scale to coarsest (aefac20)"
"fix(viewer): Add support for datasets with many components

When datasets have more than four components (or more than three
in the presence of a labelmap), we need to dynamically swap components
in and out of the dataset we pass to vtk.js for visualization.
fix(imageHistogram): Fix high-freq noise in initialhistogram
perf(viewer): Only copy components that have changed since last time

By keeping track of what components (including the labelmap) we visualized
last time we generated the fused image, we can avoid re-copying what has
not changed.  Also, we can skip initializing a new typed array anytime we
already have one of the appropriate length.
build(DevServer): Open browser tab with npm start

To address","Bug Fixes
imageHistogram: Fix high-freq noise in initialhistogram (b8732d0)
viewer: Add support for datasets with many components (edf2909)
Performance Improvements
viewer: Only copy components that have changed since last time (2387202)"
"chore(Dependencies): Bump vtk.js to 8.3.0
fix(ItkVtkViewProxy): Orientate camera for initial render

With the migration to vtk.js 8.3.0, the camera is no longer orientated
off axis for initial render. Orient the camera so the volume is off axis
for initial render to provide an improved 3D perspective. Axis
orientation is improved so positive axes are to the right and back.
ci(semantic-release): Use https Git URL in package.json

This helps semantic-release pick up the correct publish URL.","Bug Fixes
ItkVtkViewProxy: Orientate camera for initial render (7468f2e)"
"fix(Dependencies): Bump iconselect to 2.1.2

Improved box size
fix(createViewer): selectColorMapHandlers with no image

Avoid store.imageUI.colorMaps access when null.
fix(Dependencies): Bump vtk.js to 11.8.0

Re: https://github.com/Kitware/vtk-js/pull/1238
    https://github.com/InsightSoftwareConsortium/itkwidgets/issues/216
chore(package-lock): Rehydrate with fresh node_modules, npm v6.11.3
ci(Travis): Disable npm cache

To address the error discussed:

  https://travis-ci.community/t/npm-ci-will-fail-if-cached-dependency-includes-npm/4203
ci(Travis): Use npm install

A workaround for: https://travis-ci.community/t/npm-ci-will-fail-if-cached-dependency-includes-npm/4203","Bug Fixes
createViewer: selectColorMapHandlers with no image (7cd3c97)
Dependencies: Bump iconselect to 2.1.2 (a064e64)
Dependencies: Bump vtk.js to 11.8.0 (9c25426)"
"build(Dependencies): Update vtk.js to 19.0.2

Incorporates patches for the esm build.
fix(createRenderer): Load vtk.js rendering profiles

Required with vtk.js 18 and later.","Bug Fixes
createRenderer: Load vtk.js rendering profiles (e17aaf4)"
"11.1.4
chore: update sponsors
chore: sponsors
fix: update navigation.scss to remove SASS Deprecation Warning ()

https://github.com/nolimits4web/swiper/issues/7609
fix: improved 3d rotate fix in Safari

fixes
fix(vue): add breakpointsBase type

fixes
fix(element): fix observer to watch for slides

fixes
11.1.5","Bug Fixes
element: fix observer to watch for slides (7cffede), closes
improved 3d rotate fix in Safari (cb83879), closes
update navigation.scss to remove SASS Deprecation Warning () (a3e0bf8)
vue: add breakpointsBase type (4adb85b), closes"
"9.0.2
fix(core) *.css.min to *.min.css in copy ()
fix(navigation): allow multiple classes in navigation options ()

Allow multiple classes in `disabledClass`, `navigationDisabledClass` and `lockClass`.

fixes
fix(core): don't proceed lazy if swiper destroyed

fixes
fix(core): fix loop handling with virtual

fixes
fix(thumbs): ensure there is a slide to add a class

fixes
feat(history): allow empty string `key`

fixes
fix(element): fix converting boolean/string params to module object

fixes
9.0.3","Bug Fixes
core: don't proceed lazy if swiper destroyed
closes
core: fix loop handling with virtual
closes
element: fix converting boolean/string params to module object
closes
navigation: allow multiple classes in navigation options
closes
thumbs: ensure there is a slide to add a class
closes
Features
history: allow empty string key
closes"
"9.2.3
fix(loop): update slides grids before loop fix when spv is ""auto""

fixes
fix(virtual): fix last slide index check in virtual slides

fixes
feat(hash-navigation): new `getSlideIndex` to specify slide index by hash

fixes
fix(core): fix autoHeight in virtual slides

fixes
9.2.4","Bug Fixes
core: fix autoHeight in virtual slides
closes
loop: update slides grids before loop fix when spv is ""auto""
closes
virtual: fix last slide index check in virtual slides
closes
Features
hash-navigation: new getSlideIndex to specify slide index by hash
closes"
"11.0.4
chore: sponsors
feat(core): new `slidesUpdated` event
fix(modules/a11y): filter out falsy pagination elems ()
fix(core): swipe to last with slidesPerView: auto ()

* fix(core): swipe to last with slidesPerView: auto

* consider loop

---------

Co-authored-by: Vladimir Kharlampidi <nolimits4web@gmail.com>
11.0.5","Bug Fixes
core: swipe to last with slidesPerView: auto () (2e3f47d)
modules/a11y: filter out falsy pagination elems () (a044626)
Features
core: new slidesUpdated event (8a0c7c4)"
"8.0.1 release
fix(core): fix slider freeze with enabled observer

fixes
8.0.2 release","Bug Fixes
core: fix slider freeze with enabled observer (8ff2691), closes"
"11.0.6
chore: update sponsors
fix(core): fix initial slide index shift with centeredSlides and slidesPerView auto ()

- Originally observed issue when initialSlide was 0 but reproduced in other cases
- Investigation found activeColIndexWithShift calculation in loopFix.mjs was adding 0.5 when centeredSlides true, causing slidesPrepended to be decimal number in some cases
- Non-integer slidesPrepended value then gets rounded down in snapIndex calculation in slideTo.mjs, causing initial slide index to be less than intended
- Fix by using Math.ceil to round up the slide index variable passed to the slideTo method as argument in loopFix.mjs, ensuring an integer index value is passed to slideTo
Declare enabled option in mousewheel.d.ts ()
feat(zoom): add ability to constrain max zoom to 100% of original image size ()

* Add ability to constrain max zoom to 100% of original image size

* check for `gesture.imageEl`

---------

Co-authored-by: Vladimir Kharlampidi <nolimits4web@gmail.com>
feat: add swiper-effect-utils

fixes
fix(react): make sure the key is unique in virtual mode

fixes
fix(history): fix setting history in virtual slides

fixes
11.0.7","Bug Fixes
core: fix initial slide index shift with centeredSlides and slidesPerView auto () (cae9c2d)
history: fix setting history in virtual slides (d4de17b), closes
react: make sure the key is unique in virtual mode (829a253), closes
Features
add swiper-effect-utils (df5f873), closes
zoom: add ability to constrain max zoom to 100% of original image size () (645f266)"
"9.2.2
fix: made defineProperty configurable as it broke when minified. ()

Co-authored-by: pedropovedaq <pedro.poveda@perficient.com>
fix(autoplay): use local scope for autoplay resize timeot

fixes
fix(pagination): fix clickable pagination in loop

fixes
fixes
fixes
fixes
9.2.3","Bug Fixes
autoplay: use local scope for autoplay resize timeot
(4f665bd), closes
made defineProperty configurable as it broke when minified.
pagination: fix clickable pagination in loop
(479a7f5), closes"
"11.0.5
chore: cleanup sponsors
chore: sponsors
fix: add optional swiperElementNodeName param to allow more flexible web component usage ()
fix: SwiperOptions documentation for loopAddBlankSlides ()
fix for React strict mode double initialization errors ()
fix: fixed behavior where the combination of 'initialSlide:0' and 'slidesPerView:auto' would shift the first slide position

* fix: initialSlide
Fixed behavior where the combination of 'initialSlide:0' and
'slidesPerView:auto' would shift the first slide position

* remove debug

---------

Co-authored-by: Vladimir Kharlampidi <nolimits4web@gmail.com>
fix(scrollbar): correctly update scrollbar on changeDirection

fixes
feat(core): prevent runnding .slideTo methods when Swiper is destroyed

fixes
Update index.html
fix: Safari 3D fix for webview

fixes
11.0.6","Bug Fixes
add optional swiperElementNodeName param to allow more flexible web component usage () (178511f)
fixed behavior where the combination of 'initialSlide:0' and 'slidesPerView:auto' would shift the first slide position (e5c04c3), closes
Safari 3D fix for webview (d42ce05), closes
scrollbar: correctly update scrollbar on changeDirection (6bbb73d), closes
SwiperOptions documentation for loopAddBlankSlides () (cbc3dba)
Features
core: prevent running .slideTo methods when Swiper is destroyed (05f9c64), closes"
"8.3.0 release
update readme
update readme
Add SolidJS issue template ()
fix(solid): stop using cloneNode in sliders without loops in SolidJS ()

This allows events be assigned to the slides as usually
Add index.html page to demos ()

Co-authored-by: David Moreno <tcoldmf@gmail.com>
fix(packages): add index.js in /solid and /react ()

* Rename swiper-solid.js and swiper-react.js to index.js

This way the following code is valid:
```js
// With SolidJS
import { Swiper } from ""swiper/solid""
// With React
import { Swiper } from ""swiper/react""
```

* Allow both types of imports
fix(solid): fix reactivity

fixes
8.3.1 release","Bug Fixes
packages: add index.js in /solid and /react () (6e94701)
solid: fix reactivity (502c152), closes
solid: stop using cloneNode in sliders without loops in SolidJS () (d14c432)"
"8.1.1 release
chore(ci): add dependabot ()
fix(effects): fix slide shadows flickering in Safari for Cube and Flip effects
chore: update React playground to React 18
feat(cube-effect): set `--swiper-cube-translate-z` CSS property on swiper-wrapper
8.1.2 release","Bug Fixes
effects: fix slide shadows flickering in Safari for Cube and Flip effects
Features
cube-effect: set --swiper-cube-translate-z CSS property on swiper-wrapper"
"8.4.0 release
fix(react): fix issue with checking children

fixes
fix(core): fix swiping over nested shadow doms

fixes
8.4.1 release","Bug Fixes
core: fix swiping over nested shadow doms
closes
react: fix issue with checking children
closes"
"11.1.5
chore: update sponsors
chore: sponsors
feat(a11y): added new prop for a11y module - `scrollOnFocus` ()

* added new prop for a11y module - scrollOnFocus

* added props to handleFocus
feat(element): added support for using slots as swiper wrappers ()
fix(controller): fix 2 way control in element

fixes
11.1.6","Bug Fixes
controller: fix 2 way control in element (6eec16b), closes
Features
a11y: added new prop for a11y module - scrollOnFocus () (f4f7da0)
element: added support for using slots as swiper wrappers () (e374e06)"
"11.1.1
chore: update sponsors
chore: sponsors
chore: sponsors
fix(core): centerInsuffientSlides takes offsets into account ()
legacy: support for vue@2.7 ()
fix(types): fixed SwiperModule, slideTo, effectInit types ()

* fix(types): fixed SwiperModule, slideTo, effectInit types

* fix(types): Update shared.d.ts
perf: do not remove and re-add visibility classes for unchanged slides to prevents unnecessary style recalculations (This performance difference is mostly noticable when moving a slide with a mouse or touchmove because updateSlidesProgress is triggered for every keyboard-/touchevent) ()
fix(autoplay): keep 0 transition on touchmove with 0 timeout delay

fixes
11.1.2","Bug Fixes
autoplay: keep 0 transition on touchmove with 0 timeout delay (8ccb08e), closes
core: centerInsuffientSlides takes offsets into account () (5a271ff)
types: fixed SwiperModule, slideTo, effectInit types () (bc61bce)
Performance Improvements
do not remove and re-add visibility classes for unchanged slides to prevents unnecessary style recalculations (This performance difference is mostly noticable when moving a slide with a mouse or touchmove because updateSlidesProgress is triggered for every keyboard-/touchevent) () (2c08227)"
"11.1.0
fix(zoom): fix zoom pan not preventing slide changes using touch

fixes
11.1.1","Bug Fixes
zoom: fix zoom pan not preventing slide changes using touch (f73cc2a), closes"
"10.3.0
fix(autoplay): fix autoplay stop when disableOnInteraction is active

fixes
fixes
fix(types): detection of custom html tags ()
fix formatting
10.3.1","Bug Fixes
autoplay: fix autoplay stop when disableOnInteraction is active
(ecfb3fb), closes
types: detection of custom html tags ()"
"11.0.3
fix(effectx): fix Safari issue with rotates even to 90deg

fixes
11.0.4","Bug Fixes
effectx: fix Safari issue with rotates even to 90deg (e005b69), closes"
"8.1.0 release
chore: swapped the title and description for these two items in creating a bug for Swiper ()

* Update swiper_angular_issue.yml

* Update swiper_core_issue.yml

* Update swiper_react_issue.yml

* Update swiper_svelte_issue.yml

* Update vue_issue.yml
fix(lazy): fix lazy preloader in iOS 15
fix(virtual): fix leaked effects translate when Virtual enabled

fixes
8.1.1 release","Bug Fixes
lazy: fix lazy preloader in iOS 15
virtual: fix leaked effects translate when Virtual enabled
(a0e8dd4), closes"
"8.2.2 release
feat(angular): update to angular v14
feat(scrollbar): add directional classes to scrollbar container
feat(a11y): allow slideLabelMessage: null ()
8.2.3 release","Features
a11y: allow slideLabelMessage: null
angular: update to angular v14
scrollbar: add directional classes to scrollbar container"
"8.0.5 release
fix(angular): swiper angular event ()
fix(vue): HMR error ()

* fix HMR error in vue

this fixes `TypeError: originalSlots[slotName] is not a function` error during HMR in vue by ensuring the function exists.

* Update get-children.js
8.0.6 release","Bug Fixes
angular: swiper angular event () (adc99a5)
vue: HMR error () (0374228)"
"9.0.1
fix(core): fixed loop behavior in free mode with mousewheel

fixes
fix(types): `spaceBetween` can also be a string

fixes
fix(vue): declaration for `autoplayTimeLeft` event

fixes
9.0.2","Bug Fixes
core: fixed loop behavior in free mode with mousewheel
(336d908), closes
types: spaceBetween can also be a string
(446fb06), closes
vue: declaration for autoplayTimeLeft event
(8467397), closes"
"10.0.2
chore: fix workflow
feat: added overflow:hidden for fallback if clip is not supported in target… ()

* added overflow:hidden for fallback if clip is not supported in target browser

* swap fallbacks

---------

Co-authored-by: Cem Yılmaz <c.yilmaz@depaulisystems.com>
feat(element): use usual `<style>` tag if adopted stylesheet are not supported
10.0.3","Features
added overflow:hidden for fallback if clip is not supported in target…
element: use usual <style> tag if adopted stylesheet are not supported"
"8.0.2 release
chore: fix sponsors limit
fix(react): `useSwiper` context value ()
fix(react): add autoplay to watched modules ()
fix(svelte): add autoplay to watched modules
fix(vue): add autoplay to watched modules
8.0.3 release","Bug Fixes
react: useSwiper context value () (60cbe75)
react: add autoplay to watched modules () (16059ad)
svelte: add autoplay to watched modules (1463e05)
vue: add autoplay to watched modules (da4d3cc)
New Contributors
@jayjetley made their first contribution in"
"9.0.0
chore: update readme
fix(core): fix class removal in setBreakpoints

fixes
fix(virtual): fix undefined `document`

fixes
9.0.1","Bug Fixes
core: fix class removal in setBreakpoints
closes
virtual: fix undefined document
closes"
"11.1.6
fix(core): fix element child detection

fixes
11.1.7","Bug Fixes
core: fix element child detection (7ec975c), closes"
"8.2.3 release
fix(angular): rollback build to Angular 13

fixes
fixes
8.2.4 release","Bug Fixes
angular: rollback build to Angular 13
(3f14d67), closes"
"7.3.3 release
fix(angular): fix `nativeElement` check

ref https://github.com/nolimits4web/swiper/pull/5296#pullrequestreview-836214645
Added ""svelte"": ""./swiper.esm.js"" ()

Sometimes during a svelte kit build, an error occurs due to this entry missing. This should not impact anything else
fix(angular): `setElement` checks ()
refactor(core/slide/slideTo): remove duplicate code ()

* refactor(core/slide/slideTo): remove duplicate code

* refactor(core/slide/slideTo): remove duplicate code
7.3.4 release","fix(angular): fix nativeElement check
ref (review)
Added ""svelte"": ""./swiper.esm.js"" ()
Sometimes during a svelte kit build, an error occurs due to this entry missing. This should not impact anything else
fix(angular): setElement checks ()
refactor(core/slide/slideTo): remove duplicate code ()
refactor(core/slide/slideTo): remove duplicate code
refactor(core/slide/slideTo): remove duplicate code"
"8.1.2 release
chore: remove demo data
fix(effects): improve dynamic slide shadows re-creation for Cube and Flip effects
8.1.3 release","Bug Fixes
effects: improve dynamic slide shadows re-creation for Cube and Flip effects"
"9.3.0
chore: make lazy not optional
fix(element): correct extending of HTMLElementEventMap in types

fixes
feat(element): added all events arguments in TS declarations
9.3.1","Bug Fixes
element: correct extending of HTMLElementEventMap in types
(d6a0aca), closes
Features
element: added all events arguments in TS declarations"
"11.0.2
fix(core): prevent observer updates on loop fix

fixes
Update index.html
fix(core): fixed legacy condition preventing touch move when zoom enabled

fixes
11.0.3","Bug Fixes
core: fixed legacy condition preventing touch move when zoom enabled (2f64043), closes
core: prevent observer updates on loop fix (7a5eacc), closes"
"9.3.1
feat: add `string` type for `effect` param

fixes
feat(mousewheel): support for `swiper-no-mousewheel` ignore class ()

* Ignore scroll events based on swiper-no-mousewheel class

* Revert ""Ignore scroll events based on swiper-no-mousewheel class""

This reverts commit c34ee0198c08df73a72a08a956080807e39955cd.

* Ignore scroll events based on swiper-no-mousewheel class
feat(mousewheel): add `noMousewheelClass` param
fix(hash-navigation): handle slide to none existing hash ()

* Also do an early return on a NaN value

* Update hash-navigation.js

---------

Co-authored-by: Vladimir Kharlampidi <nolimits4web@gmail.com>
fix(element): remove/re-add navigation, pagination, scrollbar elements based on prop value

fixes
fix(element): fix not working correctly `injectStylesUrls`

fixes
fix(core): fix for `smoothScroll` check in Support module
fix(core): don't call update() on lazy loaded in css mode
feat(react): export `SwiperClass` type from 'swiper/react'

fixes
fix(core): don't call update() on lazy loaded if spv !== auto and no autoHeight
9.3.2","Bug Fixes
core: don't call update() on lazy loaded if spv !== auto and no autoHeight
core: don't call update() on lazy loaded in css mode
core: fix for smoothScroll check in Support module
element: fix not working correctly injectStylesUrls
(6a50d45), closes
element: remove/re-add navigation, pagination, scrollbar elements based on prop value
(45f8d4a), closes
hash-navigation: handle slide to none existing hash
Features
add string type for effect param
(7340629), closes
mousewheel: add noMousewheelClass param
mousewheel: support for swiper-no-mousewheel ignore class
react: export SwiperClass type from 'swiper/react'
(6768efe), closes"
"11.1.3
fix(a11y): fix slide on focus when loop mode is enabled

fixes
fix(zoom): fix issue when slide change possible during zoom out
fix(vue): avoid rendering same slide vnode twice for small amount of slides in loop + virtual mode ()

Co-authored-by: Artur <art.pipchenko@gmail.com>
fix(core): check for swiper.el in destroy queue

fixes
fix(navigation): prevent hide on click when clicking on navigation buttons

fixes
11.1.4","Bug Fixes
a11y: fix slide on focus when loop mode is enabled (fc8ed1a), closes
core: check for swiper.el in destroy queue (39a3e53), closes
navigation: prevent hide on click when clicking on navigation buttons (c0f7bb6), closes
vue: avoid rendering same slide vnode twice for small amount of slides in loop + virtual mode () (5737f03)
zoom: fix issue when slide change possible during zoom out (f67308c)"
"cue/parser: bug fix: allow embeddings on one line

Change-Id: I9567c3d059eda27c26d5aae9b2507595fc418c3e
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/2956
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
doc: updating slack invitation link

As mentioned in a github issue comment
https://github.com/cuelang/cue/issues/63#issuecomment-525383056
the slack invitation link is dead and needed to be updated.

Issue

Change-Id: Idd882123a422f758cc733366553342f63d9c5775
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/3020
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
go.mod: update proto package

The previous version breaks for 1.13.

Change-Id: I8c9c6b9244ec9a811cf980c61ac2c582929069bf
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/3021
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
cue: flx bug for len on non-concrete values

Change-Id: I7925132f01ada119a039cdec7d2a8c891f76fdc3
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/3022
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>","Changelog
f40ecd9 cue: flx bug for len on non-concrete values
7f9d026 doc: updating slack invitation link
8f3347f go.mod: update proto package"
"pkg: exclude some builtins from generation

- strings.ToValidUTF8: not compatible with go1.12
- math/bits.RotateLeft: makes no sense in CUE

Change-Id: Ia8e183f4e4ae366d977f80d2ef0c461b516d75b6
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/3787
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
cue: fail if non-optional definitions are bottom

This puts the implemenation on par with the spec.
The spec has been made slightly clearer to inidicate
that a non-optional failed definition is also a failure,
just like regular fields.

The code is copied from the previously used implementation
of walk. The old implementation just walked over
concrete values, so we needed another one to visit
all fields.

Change-Id: Ia20f83b7c1ba6299cb7372b018cf38d57038290b
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/3769
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
cue: change emit value semantics

- top-level emit structs are now embedded
  as with other structs
- for non-structs, regular and optional
   top-level fields are disallowed.

Change-Id: Id7d62b956209b6657833920d24e6f3c7b127cb39
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/3682
Reviewed-by: Jonathan Amsterdam <jba@google.com>
doc/ref/spec.md: add newline before comments

Hugo doesn't like comments hugging text, apparently.

Change-Id: Ice5789f60767d353d04a5a52a4d6e99fda03d9a9
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/3681
Reviewed-by: Jonathan Amsterdam <jba@google.com>","This release introduces two changes that may break existing configurations. One is really a bug fix relative to the spec.
These changes were not included in v0.0.12 to allow some of the bug fixes of the latter release
to be available before introducing these changes.
Top-level ""emit"" structs are embedded
Previously, a top-level embedded struct had different semantics from embedded structs within structs itself.
For instance, this configuration
a: 3
b: 3
would previously yield { a: 3 }, but will now yield { a: 3, b: 3 }.
This semantics was a leftover from before CUE supported embedding.
But keeping this around was just too confusing.
Other values, like lists or strings retain their original semantics.
However, for consistency sake, these may only be accompanied by definitions.
So previously this was allowed
""Hello \(who)!""
who: ""World""
but must now be
""Hello \(who)!""
who :: ""World""
Failing Definitions are an error
Previously a definition was, unlike a normal field, not an error.
This was not according to the spec and this has now been rectified.
To allow a definition to fail, make it optional (using a `?).
Changelog
a3c7bef cue: change emit value semantics
3022ae9 cue: fail if non-optional definitions are bottom
0d0b9ad doc/ref/spec.md: add newline before comments"
"cue: add tests for manually created builtins

fixes bug with JSON encoding

Change-Id: I3f4ed6daf0985cb90a2f5738abc74be6fdf29a57
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/2326
Reviewed-by: Marcel van Lohuizen <mpvl@google.com>
all: add initial  goreleaser config

Change-Id: Id4c504a12c38c06d9762669b40aaa9134024f156
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/2327
Reviewed-by: Marcel van Lohuizen <mpvl@google.com>
cue/scanner: improve escape modifier handling

- missing \n now detected in scanner
- fixed bug of mishandling misstarts of string closing
- different error message if newline is missing

Change-Id: Ie39463d6429d8bb4dc52f8308892ffe9102b007d
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/2328
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
cue/parser: factor out source reading into internal package

Change-Id: If592e5d2d8e5191cf8ad8d4a4bfdc5d7e91acebf
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/2340
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
internal/protobuf: record position information

for both errors and in the AST.

Removes the error type, which now implements the
standard CUE error conventions.

Change-Id: I7a4198a9cf9b38622f14f63df827f3f9730fe4b5
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/2341
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
internal/proto: move location of cue/cue.proto

This makes cuelang.org/cue/encoding/protobuf (git)
the import path and cue/cue.proto the canonical
import name.

Add google files for import, even though the types
are mapped, for better validation.

Change-Id: I8f31102baf362608c50c26f85e810b87321aab94
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/2342
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
internal/protobuf: add Parse example

Change-Id: I2c93fddbf336937681dfe9f82142fe45bb87f055
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/2343
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
encoding: add package documentation

Change-Id: Ie908b0b1eff5f61ea589ad375adec0788440f802
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/2344
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
encoding/protobuf: moved from internal dir

and updated import paths in two locations accordingly.

Change-Id: I8136d0a13c0b05e72e2e3b60236bea7cba66b396
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/2345
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
cue: add String method for Op

Change-Id: Iebe2ecdd0a62538a58cb8be47ebacf8e12c4ffa6
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/2346
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
cue: Elem should return unevaluated value

This is tested in the openapi package

Change-Id: Idaadf085626de0d5a067b02d97b8da54510aacf0
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/2347
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
encoding/openapi: record path in error

The path is added to a new openapiError type
that implements cue/errors.Error.
Even though failf panics, usage of failf is followed
by a return make clear that the function exits,
if necessary.

Change-Id: I2c8ab2ab7ff0c41221e519da48feb1b598c3a472
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/2348
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
encoding/openapi: few tweaks in the output

- use oneOf instead of anyOf, as all values are
  derived from proto anyway for now.
- don't include empty list default

Change-Id: Ifd22e6f8bbd7d168123d00cc596cd7bb83ac517f
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/2349
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
cue: precompile regular expressions

This can result in a pretty significant
performance gain.

Change-Id: Id77976eac1afb0e1ea461ae5c65a9a1785d346e3
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/2350
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>","Changelog
59018e6 all: add initial  goreleaser config
e4ce243 cue/parser: factor out source reading into internal package
5e3a5d4 cue/scanner: improve escape modifier handling
95fcc28 cue: Elem should return unevaluated value
b545d8e cue: add String method for Op
6767a01 cue: precompile regular expressions
fdd176c encoding/openapi: few tweaks in the output
ebf960e encoding/openapi: record path in error
a5286e4 encoding/protobuf: moved from internal dir
368b433 encoding: add package documentation
9fe5fed internal/proto: move location of cue/cue.proto
3074aeb internal/protobuf: add Parse example
fbcb339 internal/protobuf: record position information"
"github: fix lack of v prefix on build_args

Change-Id: I6d91e12e05d17a07f08548e8c71c7cdc9dfef82d
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/5600
Reviewed-by: Marcel van Lohuizen <mpvl@google.com>
internal: fix crash affecting eval

Change-Id: I92d854690c926dee045e866d4caf1c6922af2e36
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/5640
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
doc/tutorial/kubernetes: update to minimize diffs down the line

Change-Id: I1b257ac34b842e1e7c84015957d90f0f40df4b73
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/5641
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
cmd/cue/cmd: link commands help text

Change-Id: I63f27298fa1bdf45dfbc1fd095331a9d7210375d
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/5642
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
cmd/cue/cmd: fix regression that allowed space-separated fields again

Change-Id: I99e9343c2b227c77a525224c2adc875b4c7e3607
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/5643
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
cmd/cue/cmd: fix newline discrepancies

- spurious newline at start of file
- missing newline at end of def (non-eval CUE output)

Change-Id: I51c4023bda49cd0f8d1ae82d70f0f0245f9d7a7a
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/5644
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
internal/encoding: allow CUE as OpenAPI input

Regression.

Change-Id: I2c7b7e042da802a4f6c8017d83c494e96bbb1f6b
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/5645
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
cmd/cue/cmd: fail earlier on faulty flags

Change-Id: I2019c18969a22c12dc6e295f67776fc47019bf61
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/5646
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>","The release fixes a critical regression that affected cmd eval as well as various other minor regressions and documentation and formatting issues.
Support for space-separated labels and old-style field comprehensions is now disabled by default. The intention is to remove these entirely soon.
This release now also allows OpenAPI inputs to be expressed in CUE itself, instead of just JSON or YAML.
Changelog
6f37a71 cmd/cue/cmd: fail earlier on faulty flags
83b0996 cmd/cue/cmd: fix newline discrepancies
cd2b3ef cmd/cue/cmd: fix regression that allowed space-separated fields again
d6fc6be cmd/cue/cmd: link commands help text
c5fc236 doc/tutorial/kubernetes: update to minimize diffs down the line
8dcec3c internal/encoding: allow CUE as OpenAPI input
d6f1eec internal: fix crash affecting eval"
"cue: flx bug for len on non-concrete values

Change-Id: I7925132f01ada119a039cdec7d2a8c891f76fdc3
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/3022
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
go.mod: update xerrors to a985d3407aa7

xerrors@1f06c39b4373 is can't compile on Go devel.
Because errors.Frame and errors.Formatter were removed Go runtime.

ref:
- https://golang.org/cl/176997
- https://golang.org/cl/177379

$ go get -u -d golang.org/x/xerrors@a985d3407aa7
$ go mod tidy

Change-Id: I55502aabe2f6f384598d006ae5d20748515fa500
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/3061
Reviewed-by: Marcel van Lohuizen <mpvl@google.com>
cmd/cue/cmd: fix --dryrun flag description of import command

The '--dryrun' flag description is the same as '--force' flag and it's wrong.
Copy from `add` command's '--dryrun' flag description.

Change-Id: Ie3d77a2f2e2e45da9e513ded6636402fce276876
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/3060
Reviewed-by: Marcel van Lohuizen <mpvl@google.com>
doc: fixed small errors

Closes
https://github.com/cuelang/cue/pull/88

GitOrigin-RevId: ea72847a3a1b0314372f3eb6746688716ff0100c
Change-Id: I4093e992283d4f28aa13274f63e9dbedcb32c091
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/3047
Reviewed-by: Marcel van Lohuizen <mpvl@google.com>
cue/scanner: don't allow repeated _ in numbers

Fixes discrepency with spec.

Change-Id: Ib6f4a08dabeb26861414d03b91af7d1e62119bb1
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/3040
Reviewed-by: Marcel van Lohuizen <mpvl@google.com>
cue: closedness only applies to regular fields

Issue

Change-Id: I6f2cf753e84bc570dfe1fc91cda1eccb29f0582e
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/3042
Reviewed-by: Marcel van Lohuizen <mpvl@google.com>
cue: fix 0/0

Should be error, not NaN.

Closes

Change-Id: I061b7e32b069c1fea3123fb981a4eddf87c61910
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/3044
Reviewed-by: Marcel van Lohuizen <mpvl@google.com>
doc/tutorials/kubernetes: update comments

Change-Id: I4d872255b488c12d61779c204bc2945798ec8fee
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/3045
Reviewed-by: Marcel van Lohuizen <mpvl@google.com>
cmd/cue: update get to use definitions

This also involves updates to the Kubernetes tutorial

Closes

Change-Id: I02e52cbf21efd6ba15ac87bb5db852e2b9f115ec
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/3046
Reviewed-by: Marcel van Lohuizen <mpvl@google.com>
cue: exempt aliases and embeddings from recursive closing

See comments in spec.

Issue.

Change-Id: I7e17864c649ef3576d6992eb5a2b530c76f5496e
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/3043
Reviewed-by: Jonathan Amsterdam <jba@google.com>
cue/pkg/crypto: make return types bytes, instead of list

Note that the generated builtins indicate a bytes
or string return type. This is fine, as the actual
conversion will restrict it to bytes.

Closes

Change-Id: Ib8a92d9feebf6f298dc0c35d2831f80e5d7a76ca
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/3048
Reviewed-by: Marcel van Lohuizen <mpvl@google.com>
cmd/cue: use concrete mode for vet on data files

Closes

Change-Id: I50b14d235aed6568ff8a1a5d4ae286bead141ad5
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/3100
Reviewed-by: Marcel van Lohuizen <mpvl@google.com>
cmd/cue: give access to cue Command in run functions

This allows more control over the overall error state.

Issue
Issue

Change-Id: Icaf81bd8757bfed6522ec0aff249afa7706d8495
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/3101
Reviewed-by: Marcel van Lohuizen <mpvl@google.com>
cmd/cue: use stderr and non-zero exit for errors

Exit code is determined from returning an error or if
anything was printed to stderr.

Closes
Closes

Change-Id: I980798586d8a23d17a32c52d62da49376e7165ef
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/3102
Reviewed-by: Marcel van Lohuizen <mpvl@google.com>
doc/tutorial/basic: Unified TOC, next/prev, titles

* Added missing `""Raw"" Strings` link to TOC
* Made title on bottom.md match the title listed in TOC
* Unified interpolfield title on TOC and linked page
* Added missing TOC Cycles section and unified case of cycle
  page titles

Change-Id: Ibbbc4a8e40656de33b1117ad7f844c05ee04e167
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/3120
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
pkg/strings: fix MinRunes

Change-Id: I8d0d39dc8206dcf47f9120ab7cec52107fe928e9
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/3105
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
pkg/strings: Remove fmt.Println

Remove `fmt.Println` from `strings.MinRunes`

Closes
https://github.com/cuelang/cue/pull/105

GitOrigin-RevId: 5d249feabd4f4c3920ad2f6b96fbe6636ac2db82
Change-Id: If20bf31dce393528f2118c79311930b3ca3e64cc
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/3140
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
spec: corrections, clarifications, comments

- Tweaked to fix typos or improve readability

- Added some clarifying sentences

- Left comments with open questions

Change-Id: If2f967849859651e05696319beadfe2a2dbae0cb
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/3080
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
doc/ref: spec changes to comprehensions and identifiers

This CL has two somewhat proposals, although they can
be split:

1) Make fields with string labels non-referrable and introduce
allowing backtick for identifiers.
So
  a.`for`
would be a valid selector.
This simplifies the spec a bit as there is no explanation needed why interpolated strings cannot be referenced.
Using `` has precedence in BCL and swift.

It solves the issue of code generation, where it can be hard to
track referred values and it allows referencing keywords and other fields alike.

2) Now we have embedding there is a nicer way to write
comprehensions.  The proposed change solves many
issues.

Change-Id: I8ba25bd3a6b9a9d790dcecbd3b5954a969440396
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/2950
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
pkg/list: adding aggregation for decimal lists

this commit adds the aggregation functions avg, max, min, product, sum
on lists containing only numbers. it also adds a new type to builtin.go
and gen.go to have a direct transformation of cue.Value to
[]*internal.Decimal

Issue

Change-Id: I94640726b93f8bb23f43cf85330e2e9056cbcf70
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/3103
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>","Bug fixes and builtins
The central theme of this release is bug fixes, most notably in the cue command line utility.
It also adds and improves on some of the builtins in the pkg directory.
Backwards incompatible changes
The crypto hash builtins now return a value of type bytes, instead of a list of bytes.
Changelog
cb84024 cmd/cue/cmd: fix --dryrun flag description of import command
fe695b1 cmd/cue: give access to cue Command in run functions
9818761 cmd/cue: update get to use definitions
507d6cc cmd/cue: use concrete mode for vet on data files
f3df637 cmd/cue: use stderr and non-zero exit for errors
330999b cue/pkg/crypto: make return types bytes, instead of list
1c4d597 cue/scanner: don't allow repeated _ in numbers
18637db cue: closedness only applies to regular fields
5e8c391 cue: exempt aliases and embeddings from recursive closing
34988fa cue: fix 0/0
4017875 doc/ref: spec changes to comprehensions and identifiers
da39f0f doc/tutorial/basic: Unified TOC, next/prev, titles
980e018 doc/tutorials/kubernetes: update comments
8b4cab6 doc: fixed small errors
d2563c1 go.mod: update xerrors to a985d3407aa7
41e30c6 pkg/list: adding aggregation for decimal lists
9d5bc94 pkg/strings: Remove fmt.Println
b36c351 pkg/strings: fix MinRunes
061bde1 spec: corrections, clarifications, comments"
"cmd/cue/cmd: fail earlier on faulty flags

Change-Id: I2019c18969a22c12dc6e295f67776fc47019bf61
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/5646
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
cmd/cue/cmd: fix bug with help flag

Fixes https://github.com/cuelang/cue/issues/340

- [x] add more tests for help system
- [x] find and fix bug

Closes
https://github.com/cuelang/cue/pull/341

GitOrigin-RevId: 811ee28c1c902211e78370e63286af07b167ce34
Change-Id: I92949d544d8623f3cb90994e14685f56fd1ad708
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/5647
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
encoding/jsonschema: fix type exclusion logic

The current implementation misinterpreted the spec
that constraints from a certain type imply a value is of
that type: it does not.

This means that if, for instance, a schema contains only
constraints for a struct, one must still explicitly allow all
other types besides struct in CUE. The new logic does so,
and also addes logic to opimize

Change-Id: I69fecd9b6888b0dad89db194c17acb56841de490
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/5648
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
cmd/cue/cmd: allow lossy conversion by default and add --strict option

Applies to JSON Schema now, but generallly applicable for
other conversions.

Change-Id: Ie6abe0ea0daf2d2ede1850a16cd2c1d831fb7f13
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/5649
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
encoding/jsonschema: wrap comment lines

Change-Id: I482ab0266c66f226490cb93d385da5f34d7f48d2
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/5650
Reviewed-by: roger peppe <rogpeppe@gmail.com>
encoding/jsonschema: add several validators

- minLength
- maxLength
- additionalItems

Change-Id: I09d9e353914b0fece70a26d97db5c4665c4e5f8b
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/5651
Reviewed-by: roger peppe <rogpeppe@gmail.com>
encoding/jsonschema: encode minItems differently

list.MinItems is non-monotonic, which we don't support yet.
Expand the list until this is supported.

Also disable struct.MinFields for now.

Change-Id: I3e192a702e502f41d778ebae8dab51f493f26814
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/5652
Reviewed-by: roger peppe <rogpeppe@gmail.com>
github: fix release.on to push.tags

Change-Id: I8532b16488226d5d7903aa57030005dbf13ca646
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/5660
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
encoding/openapi: remove unused code

Change-Id: I82a97a4e0d0526c33c587aa680ce7f267e51ac3c
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/5680
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
encoding/protobuf: fix required option parsing

Fixes

Change-Id: Iaa14fee036764c7a51116483ea51897c0ef87efd
Reviewed-on: https://cue-review.googlesource.com/c/cue/+/5700
Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>","This release contains several fixes and enhancements related to CUE conversions.
It fixes several issues with the related to JSON Schema conversion, including an incorrect implementation of the JSON Schema spec. Most notably, one may not infer from a constraint for a certain type that a value must be of that type. This means that if a schema, for instance, defines a properties section, but does not specify the type to an object, the resulting CUE value will be a disjunction from this object and all non-object top-level types. This is not a bug.
Another change is that the cue tool now may silently ignore imprecise conversions, as long as the produced result does not give false negatives. The --strict option will emit the original errors.
Changelog
0059b2b cmd/cue/cmd: allow lossy conversion by default and add --strict option
a38e811 cmd/cue/cmd: fix bug with help flag
b99d364 encoding/jsonschema: add several validators
bcc19ce encoding/jsonschema: encode minItems differently
78e21c1 encoding/jsonschema: fix type exclusion logic
ed4fc4d encoding/jsonschema: wrap comment lines
904f561 encoding/openapi: remove unused code
9b62b36 encoding/protobuf: fix required option parsing
efb89b8 github: fix release.on to push.tags"
"Fixed hasGod
Update CM.Disp.FormatTime

Add years to date formatting, fixes
Create CONTRIBUTING.md
Fix in Disp.js and combine
Update CM.Disp.FormatTime

Add years to date formatting, fixes
Fix in Disp.js and combine
Fix colour settings not displaying
Fixed bug with display of missing upgrades
Single fattest wrinkler now excludes shiny
Missing upgrades no longer shows debug
Show tooltip warnings when extra info is off
Timer bar now adjusts height correctly
Fixed decimal notation
Fix building sorting
Added two options

They are options to show/hide mysterious achievements, and they dont need functions cuz CM.Disp.ReplaceCrateTooltipAchievements will check for them
Added default values for those two options
Added CM.Disp.ReplaceCrateTooltipAchievements

CM.Disp.ReplaceCrateTooltipAchievements will backup and replace Game.crate and Game.crateTooltip and edit their outputs to show mysterious achievements
Also this will check for CM.Options.ShowMysteriousAchievements and CM.Options.ShowMysteriousShadowAchievements
Added CM.Disp.ReplaceCrateTooltipAchievements() into init
Fix tooltips
Created (empty) tooltip for garden plots
rename ShowMysteriousAchievements to MissingAchievements

also moved to stats group
Merge MissingShadowAchievements and MissingAchievements
Adapt to new option MissingAchievements
Fixed the default value for MissingAchievements
Fixed typos of ReplaceCrateTooltipAchievements
Tooltip with curr/max reward for plants
Added option foor plot tooltip
Renamed ToolWrink to TooltipWrink
Fixed CM.Options.TooltipBuildUpgrade
Fixed plant tooltips
Create main.yml
Update main.yml
Update main.yml
Update main.yml
Update main.yml
Update main.yml
Update main.yml
Update main.yml
Update main.yml
Update main.yml
Update main.yml
Update main.yml
Update main.yml
Update main.yml
Update main.yml
Update main.yml
Update main.yml
Update main.yml
Delete .github/workflows directory
rename labels of MissingAchievements
Make Garden tooltip load on LoadMinigames
Made Grimoire tooltip always launch
Added data on possible effects
Tooltip for harvest all button
set Missing Achievements OFF to the first label
set Missing Achievements OFF to the first label

the switch statements make the coding much more easy to understand dont they?
Notify's don't occur when loading the mod
Update JSColor to 2.4.5
Revert ""Update JSColor to 2.4.5""
Updated jscolor to 2.4.5
Changed the settings for colours
Clean up
Hot fix for jscolor
Fixed JSColor display not updating
Added TimerBarOverlay option
Fixed TimerBarOverlay
Make overlays of timers toggleable
Semicolons and var declarations in Cache.js
Semicolons and easy fixes for all documents
Cache.js, Config.js & Data.js compy with JSHint
ESLint compliant
Installed ESLint
Fixed ESLint install
Create ESLint.yml
Update README.md
Final test ESLint Action
Final test ESLint successful
Spelling error in TimeFormat
Added BulkBuyBlock to settings
Implement blocking of Bulk buying
Added Loop to hook of modding api
Added Loop to hook of modding api
Fixed number of TODOs
Create CheckMainFile.yml
Update CheckMainFile.yml
Update CheckMainFile.yml
Update CheckMainFile.yml
Update CheckMainFile.yml
Update CheckMainFile.yml
Update CheckMainFile.yml
Update CheckMainFile.yml
Small action test
Small check 2
Update CheckMainFile.yml
Test aciton
Revert ""Added a feature to show mysterious achievements""
Fixed some debugging left overs
Make a Userscript and Refer the README to It

Tested and works with Greasemonkey, Tampermonkey, and Violentmonkey.
Update README.md with instruction for userscript
Rename cookie-monster.user.js to CookieMonster.user.js
Add Userscript variable to ESLint settings
Updated Cache to use Objects1
Annotated Header.js
Started annotating Cache.js
Small fixes here and there
Update README.md
Changed variable names
Added NPM and created Build script
Changed Header.js to use const
Updated actions
Updated README
Fix CheckMainFile action
Update name of CheckMainFile action
Make terser run from npx
Added final newline
Updated mail address of Aktanusa
Resolve conflicts
Resolved additional conflicts
Correctly build CookieMonster.js
Fixed Title option not showing
Fix
Fix sounds playing during mod initialization
Allow decoupling of base game and mod volume
Changed all ""=="" to ""===""
Fixed crash with no upgrades purchased
Fix crash with no upgrades
Fix missing upgrades display
Fix missing upgrades display on dev branch
Fixes to chain cookies stats
Annotated Cache.js and solved issues
Small naming fixes
Finished annotation of Main.js
Merged actions into one file
Big update to structure and annotation
Show in title if GC/Reindeer can spawn
Removed nearly all TODO's
Replaced var with let
Removed old code
Added 'time left' to ascend tooltip
Fixed fatal error in CM.Disp.UpdateAscendState
Added info for CCRepo
Small visual changes to stats page
Change package name to avoid conflict
Added HC per second to stats and tooltip
Allow target Heavenly Chips in stats
Make Missed GC stat toggable
Fixed rounding issues with HC per second
Fixes to Sim.js and content mod acceptance
Check for new mods and update functions
Allow pp based on ""less than x secs of CPS""
Allow ignoring 1, 2 or 3 best build with PP
Allow PP to ignore non-buyable buildings
Changed default setting of ColorPPBulkMode
Fixed TimerBar not disappearing with 0 timers
Allow user-customizable tooltip warnings
Fix small bug in Wrinkler stats
FIxed and started at
Show req. CPS for next Chain level in stats
Added a changelog to the info tab
Added pop-up notifying of new version
Added requirements for garden to stats page
Fix edifice warning showing when not relevant
Made prelimenary switch to airbnb-base
Added changelog
Updated ESLint action","Once again we are proud to present you a release packed full of new functions and bug fixes.
Please submit any bug reports or feature requests to the GitHub page!
This update implements the following functions:
Added a changelog to the info tab and notification indicating a new version ()
Warnings in tooltips are now based on the income after buying the upgrade ()
A new warning and stat for Conjure Baked Goods in combination with Frenzy has been added ()
User can now set a custom tooltip warning (""x times cps"") in the settings ()
Garden plots with plants that give cookies on harvest now display a tooltip with current and maximum reward ()
The Harvest All button in the Garden now has a tooltip displaying the current reward  ()
The Ascend button can now display additional info (this can be turned off in the settings) ()
The statistics page now displays the Heavenly Chips per second ()
The statistics page now displays the CPS needed for the next level in Chain Cookies ()
The statistics page now displays the cookies needed for optimal rewards for garden plants ()
You can now set a Heavenly Chips target in the settings which will be counted down to in the statistics page ()
The color picker in the settings has been updated to its latest version ()
The overlay of seconds/percentage of timers is now toggle able and more readable ()
You can now toggle to disable bulk-buying from buying less than the selected amount (i.e., buying 7 of a building by pressing the buy 10 when you don't have enough for 10) ()
CookieMonster now uses the Modding API provided by the base game ()
There is a new option that allows the decoupling of the base game volume setting and the volumes of sounds created by the mod ()
The tab title now displays a ""!"" if a Golden Cookie or Reindeer can spawn ()
PP calculation can now be set to: 1) Exclude the 1st, 2nd or 3rd most optimal building (if you never want to buy that it), 2) Always consider optimal buildings that cost below ""xx seconds of CPS"" (toggleable in the settings), 3) Ignore any building or upgrade that is not purchasable at the moment ()
This update fixes the following bugs:
Minigames with enhanced tooltips will now also show these if the minigames were not loaded when CookieMonster was loaded ()
Sound, Flashes and Notifications will no longer play when the mod is initializing ()
The color picker should now update its display consistently ()
Fixed some typo's ()
Fixed a game breaking bug when the player had not purchased any upgrades ()
Fixed a number of console errors thrown by CM ()
Fixed the integration with mods that provide additional content, they should now no longer break CookieMonster ()
The Timer bar will now disappear correctly when the Golden Switch has been activated ()
Fixed errors in the calculation of the Chain Cookies and Wrinkler stats ()
Fixed buy warnings showing incorrectly ()"
"Cleaned CM.Disp.FormatTime
Added annotations to CM.Disp.FormatTime
Reorgainzed src/Disp.js
Hotfix for
Hotfix v3
Enhance autosave timer refresh
Move CM.Disp.Draw out of bottom bar section
Hotfix for
Fix favicon not being reset with no GC left
First version of stats page
Fix for challenge mode
Fix favicon not being reset with no GC left
Fix sell price being displayed
Fix on dev-branch
Created CM.Disp.CreateStatsLuckySection
Fix Dragon's Fortune mult in CalculateGains sim
Fix Dragon's Fortune mult in CalculateGains sim
Final rework of Disp.js
Add config  and replace-function for AuraInfo
Added CM.Disp.AddAuraInfo()
Fixed some annotations in Sim.js
Added Aura caching and changing
Changed display of DragonAuraInfo in options
Annotated CM.Sim.CalculateChangeAura
Incorporated Game volume settings
Fixed bug with Sound of notifications
Changed Volume-options into sliders
Fixed lay-out issue
Created ScaleDecimals as option
Added CM.Config.ScaleDecimals to CM.Disp.Beautify
Added Config.ScaleSeparator
Added functionality for ScaleSeparator
Changed structure of Data.js
Update issue templates
Update README.md
Stats displays reward pop all normal wrinkler
Choc egg tooltip shows cookies to be gained
Partial rewrite of Config.js
Changed CM.Config into CM.Options
Missed some CM.Config's
Fully annotated Config.js
Fixed small numbers for Beautify
Split the options for Lucky/LuckyFrenzy warning
Added missing plant drops to stats page
Added Abbreviated short scale ()
Added cookie per click bonus to tooltip
Fixed spelling
Updated Readme
Made notation cutoff configurable
Fixed building colors not reverting ()
Added section to Cache.js
Created function CM.Cache.InitCache
Button and stat for single fattest wrinkler ()
Option to calc with single fattest wrinkler ()
Added ToolWarnEdifice option
Created warning for ToolWarnEdifice
Removed tooltip box from Sell tooltip
Added Edifice to Spells stats section
Fixed lay-out of code
Rewrote Missing Upgrades code
Incorporated Modding API
Combined CookieMonster ()
Added code to remove cookies from old save system
Add subsections for notifications settings ()
Added CM to version number in BotBar ()
Add new options section ()
Create main.yml
Update main.yml
Update main.yml
Create Lint.yml
Removed action .yml files
Fixed calculation of average and current CPS
Added timer overlays in TimerBar ()
Fixed Timers for loans ()
Fixed () and add percentage overlay to timers
Fixed
Allow saving outside of autosave-interval ()
Added tooltip with costs for Dragon Levels ()
Hotfix for dragon levelup Tooltip
Another hotfix for levelup tooltip
Option for extra wrinkler popping buttons ()
Removed a TODO
Bumped version to 2.031.3","Note: We have changed the order of number-scales and have revamped our saving of your options. This means that the first time you load the new version you will probably revert to the default settings of CookieMonster.
Once again we are proud to present you a release packed full of new functions.
Please submit any bug reports or feature requests to the GitHub page!
This update implements the following functions:
The Aura selector interface can now displays information about change in CPS and cost ()
The level-up button of the Dragon now has a tooltip that displays the cost to rebuy all ()
The tooltip of the Chocolate Egg now displays the current and maximum cookies to be gained ()
The tooltip of upgrades that improve Cookies per Click will now show this increase and if applicable a PP based on Price / Clicks ()
The warnings for going under the Lucky and Lucky Frenzy limits can now be turned on and off separately ()
Added a warning and stats-listing for going under the cookies required for Spontaneous Edifice possibly giving the most expensive building ()
Added missing plant drops to stats page like other rare drops ()
Changed the options for notifications volumes into sliders ()
Added a new selectable scale: Abbreviated short scale ()
The number of decimals is now user configurable ()
The separators used for decimals and thousands are now user configurable ()
The cut-off point at which CookieMonster starts formatting numbers is now user configurable ()
The sections for individual notifications in the options menu can now be hided and have been made less cluttered ()
The stats page now also displays the reward for popping all normal wrinklers ()
The stats page now displays the reward for popping the single fattest wrinkler and has a button to do so ()
Calculation of CPS and time to purchase can now be based upon Base CPS + Single fattest wrinkler ()
Option to display extra buttons to pop wrinklers under the big cookie, found under ""Miscellaneous"" section ()
The TimerBar section now changes size depending on number of timers ()
The timers in the TimerBar section now have an overlay with the time or percentage left ()
Added indicator when upgrades/buildings are purchasable with wrinklers in tooltips and Bottom Bar ()
CookieMonster has now started to partially use the Modding API provided by the base game. Your settings are now saved in the save-file. ()
This update fixes the following bugs:
The sound of notifications now considers the general volume setting of the game ()
Settings about collapsed headers will now be stored across sessions ()
The coloring of buildings will now revert to normal after deselecting the respective option ()
Showing Missing Upgrades will now be much less laggy on save files with many unobtained upgrades ()
The calculation of average and current cps is now correct and correctly incorporates (the single fattest) Wrinklers ()
The TimerBar will no longer break with loans 1, 2, and 3 ()"
"Fixed sorting when PP = Infinity
Added cookies to be gained/lost to conjure tooltip
Fix golden and wrath cookies multipliers ()
Handle lucky wrath cookies rewards ()
Added cookies till achievement in building tooltip
Changed CM.Sim.Has to HasAchiev
Added warning for lagginess of ""Missing Achievs""
Remove Cookes till achievement if all are got
Adjust Lucky/Chain stats for Dragon's Fortune

Add a multiplier adjustment when Dragon's Fortune aura is set
(either via Dragon's Fortune itself or via Reality Bending) and use
it to adjust CPS with 1 golden cookie even if there are no golden
cookies currently on screen
Avoid crash on double-loading
Pushed version to 2.031.2
Fix numbers Engineering notation","We are happy to announce a new release of Cookie Monster packed with new functions and fixes.
We would like to thank all collaborators that have helped to make this release as jam-packed and polished as it is!
As always, feel free to create an issue if you have a good idea for a new function or have found a bug.
The following functions have now been added:
Added support for content mods and ModHooks on 'cps' ()
Option to display a warning when buying a building or upgrade puts you below the required amount for ""Conjure Baked Goods"". ( and)
Added cookies to be gained/lost to Conjure Baked Goods tooltip ()
Added cookies till achievement in building tooltip ()
Option to play a sound whenever the Grimoire meter is full ()
Option to get a notification whenever a Golden/Fortune/Season Cookie spawns or your Magic bar is full ()
Option for Sound/Flash/Notification when 1) a new or 2) the last possible Wrinkler appears ()
Option to colour PP values based on selected bulk-buy mode ()
The Bottom Bar wil now display the values according to the selected bulk-buy mode ()
Started caching chosen dragon auras and gods, making it possible to calculate the effect of changing those in future release ()
Timers will now display on spawned and user-spawned Golden Cookies ()
Option sections are now collapsable ()
Added an option to display missing upgrades in the stats menu ()
Besides, the following fixes have been applied:
Cookies to be gained from buying Chocolate Egg now takes into consideration selling all owned stocks ()
Sorting building list on PP now correctly changes depending on selected bulk-buy mode (1, 10 or 100) ()
The Bottom Bar now has a height that fits all four rows ()
Corrected the calculation of cookies gained by selling all buildings for an optimal return on buying the chocolate egg ()
Fixed some tooltips and displayed prices ()
Fix Lucky/Chain cookies stats and PP calculation when CpS is zero ()
Fix Lucky/Chain cookies stats not considering the correct multiplier or auras ()
Fixed incorrect calculation of prestige level ()
Fixed Garden buffs to Lucky and Chain golden cookies payout not being incorporated ()
Fixed some cases where notations of really large or really small numbers would bug out ()"
"Bump dev to 2.031.6
Added prettier ()

* Added prettier

* Added prettier

* Added prettier
Added prettier to master ()

* Bump dev to 2.031.6

* Added prettier ()

* Added prettier

* Added prettier

* Added prettier
Fix
Fix
Fix
Fix display of cookies needed tk next HC
Fix and
Create tooltip for wrinkler buttons
Fixed
Actually fix
Added tooltips to Pantheon
Fix
Fix dev build
Changes according to Eslint
Removed unnecessary globals
Test button for sounds and new Audio() code
Formatting changes
Moved files into Github folder
Changed PP colour coding
Fixed formatting and flickering of bottom bar
Fix simple tooltips
Updated max length of lines
Set max length of lines
Fixed elder pledge tooltip
Renamed commands
Regenerated package lock
Toggle to display PP as time period
Buttons to hide upgrade and building sections
Updated CONTRIBUTING.md to reflect new structure
Update bug_report.md
Display chance for random drops in stats
Made description of decimal setting clearer
Pushed version number and changelog to 2.031.6","Once again we are proud to present you a release with new functions and bug fixes.
This update has revamped the way PP is colourcoded. In the previous versions this was not always correct and we had some settings that made it even more incorrect. With this update Cookie Monster compares the PP of a building to all other possibilities (also buying 10 or 100) of a building and colors the PP accordingly.
This means that if it is better to buy 10 of a building immediately rather than to buy in increments of 1 Cookie Monster will now show this! In this case the buy 1 option will be yellow, while the buy 10 option will be green.
This also means that you will see some more diverse colors. Rather than coloring according to arbitrary ""middle values"" Cookie Monster now uses a top 10, 20 and 30. While this might take some getting used to we believe the new system is much better in conveying useful information to the user while also being more correct!
This update implements the following functions:
Added a tooltip displaying the reward to the extra pop wrinkler buttons ()
Added tooltips to the Gods in the Pantheon ()
The tooltip for Elder Pledge now displays correctly, although it takes some time to load after Cookie Monster has been loaded ()
You can now test the volume and sound of notifications in the settings screen ()
The bottom bar will now flicker less and each column has received a bit of padding ()
Introduced new colour scheme for PP, see the explanation of colors in the Readme or the settings ()
Added option to show buttons that can hide the upgrade and building section ()
Added option to display PP as a time unit, note that these are only approximations. PP does not translate directly into time (the name is deceptive, we know...) ()
Statistics page now shows chance for random drops when they have not been achieved ()
This update fixes the following bugs:
Incorrect amount for ""required for max plant reward"" in statistics page ()
Fixed the tooltips of the '?' buttons in the statistics page not showing ()
Fixed some unclear settings descriptions ()
Please submit any bug reports or feature requests to the GitHub page!"
"Fixed background colours being transparant
Fixed break when Temple is not loaded
Prepared partial move to TypeScript
Fix display error with 0 cps
Additional changes to typescript
Fixed mod on Safari
Show buildings left till achievement in tooltip
Update menu after changing setting
Improved building tooltip
Changed folder structure
Changed to .json
Added testing via Mocha
Fixed small bug
Removed Beta
Added test to build command
Update to CI and incorporate tests
Reloaded packages
Changed Mocha reporter to Min
Added test directory to eslint
Added additional tests
Fixed build
Added typescript testing
Added tests for toggles
Added tests for Toggles
Remove GC timers upon ascension
Actually fix
Fix prettier installation
Additional fix to prettier
Linting changes
Linting in tests
Allow upgrades section to no longer collapse
Fix ESLint installation
Fixed error in build
Fix bug with expanded upgrade section
Update bug_report.md
Fixed linting issues
Changed CI to run on push
Revert ""Changed CI to run on push""

This reverts commit 4da9d379c549360146233e267b44db95a469debf.
Fixed build of CookieMonster.js
Fix upgrade sorting on firefox
Push version and changelog to 2.031.8
Removed CookieMonster.js in root
Removed CookieMonster.js from root
Moved and updated license
Update userscript for new repository
Create CookieMonsterDev","With this new update we have moved the location of the Cookie Monster repository.
The new link load to Cookie Monster is therefore:
This update implements the following functions:
The tooltip of buildings now shows how many buildings need to be bought before a new achievement is reached and the cost and PP of this ()
New setting to force the upgrades sections to always show all available upgrades, stopping them from collapsing and expanding ()
This update fixes the following bugs:
Settings menu now correctly updates after changing a setting ()
Fixed incorrect calculation of dates in rare cases ()
Remove golden cookie timers when you ascend ()"
"Update packages
Bump prettier from 2.3.1 to 2.3.2

Bumps [prettier](https://github.com/prettier/prettier) from 2.3.1 to 2.3.2.
- [Release notes](https://github.com/prettier/prettier/releases)
- [Changelog](https://github.com/prettier/prettier/blob/main/CHANGELOG.md)
- [Commits](https://github.com/prettier/prettier/compare/2.3.1...2.3.2)

---
updated-dependencies:
- dependency-name: prettier
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump webpack from 5.41.1 to 5.42.0

Bumps [webpack](https://github.com/webpack/webpack) from 5.41.1 to 5.42.0.
- [Release notes](https://github.com/webpack/webpack/releases)
- [Commits](https://github.com/webpack/webpack/compare/v5.41.1...v5.42.0)

---
updated-dependencies:
- dependency-name: webpack
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump eslint from 7.29.0 to 7.30.0

Bumps [eslint](https://github.com/eslint/eslint) from 7.29.0 to 7.30.0.
- [Release notes](https://github.com/eslint/eslint/releases)
- [Changelog](https://github.com/eslint/eslint/blob/master/CHANGELOG.md)
- [Commits](https://github.com/eslint/eslint/compare/v7.29.0...v7.30.0)

---
updated-dependencies:
- dependency-name: eslint
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Fix duplicate golden cookie with autoclickers
Add hotfix to release notes
Push hotfix to master file
Fixed annotation
Add option to ""lock"" buildings
Add .nprmc
Update CookieMonsterFramework to 0.1.0
Use CookieMonsterFramework for save/load, infoMenu
Add token to workflow and .npmrc
Bump webpack from 5.44.0 to 5.45.1

Bumps [webpack](https://github.com/webpack/webpack) from 5.44.0 to 5.45.1.
- [Release notes](https://github.com/webpack/webpack/releases)
- [Commits](https://github.com/webpack/webpack/compare/v5.44.0...v5.45.1)

---
updated-dependencies:
- dependency-name: webpack
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump eslint from 7.30.0 to 7.31.0

Bumps [eslint](https://github.com/eslint/eslint) from 7.30.0 to 7.31.0.
- [Release notes](https://github.com/eslint/eslint/releases)
- [Changelog](https://github.com/eslint/eslint/blob/master/CHANGELOG.md)
- [Commits](https://github.com/eslint/eslint/compare/v7.30.0...v7.31.0)

---
updated-dependencies:
- dependency-name: eslint
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump @typescript-eslint/parser from 4.28.2 to 4.28.3

Bumps [@typescript-eslint/parser](https://github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/parser) from 4.28.2 to 4.28.3.
- [Release notes](https://github.com/typescript-eslint/typescript-eslint/releases)
- [Changelog](https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/parser/CHANGELOG.md)
- [Commits](https://github.com/typescript-eslint/typescript-eslint/commits/v4.28.3/packages/parser)

---
updated-dependencies:
- dependency-name: ""@typescript-eslint/parser""
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump @typescript-eslint/eslint-plugin from 4.28.2 to 4.28.3

Bumps [@typescript-eslint/eslint-plugin](https://github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/eslint-plugin) from 4.28.2 to 4.28.3.
- [Release notes](https://github.com/typescript-eslint/typescript-eslint/releases)
- [Changelog](https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/CHANGELOG.md)
- [Commits](https://github.com/typescript-eslint/typescript-eslint/commits/v4.28.3/packages/eslint-plugin)

---
updated-dependencies:
- dependency-name: ""@typescript-eslint/eslint-plugin""
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Update packages
Change env variable name
Update README
Update CI to also run on push to main branches
Only iterate over UpgradesInStore
Fix BuildingGetPrice() and remove getSumPrice()
Small optimization to AscendButton()
Fix lag on ascencion screen
Remove PlaySound from globals
Bump CM Framework to 0.2.0
Remove functions and tests that moved to framework
Use Framework notifications
Use framework for Options menu
Fix imports after changes to folder structure
Build CM
Bump @typescript-eslint/eslint-plugin from 4.28.3 to 4.28.4

Bumps [@typescript-eslint/eslint-plugin](https://github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/eslint-plugin) from 4.28.3 to 4.28.4.
- [Release notes](https://github.com/typescript-eslint/typescript-eslint/releases)
- [Changelog](https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/CHANGELOG.md)
- [Commits](https://github.com/typescript-eslint/typescript-eslint/commits/v4.28.4/packages/eslint-plugin)

---
updated-dependencies:
- dependency-name: ""@typescript-eslint/eslint-plugin""
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Bump @typescript-eslint/parser from 4.28.3 to 4.28.4

Bumps [@typescript-eslint/parser](https://github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/parser) from 4.28.3 to 4.28.4.
- [Release notes](https://github.com/typescript-eslint/typescript-eslint/releases)
- [Changelog](https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/parser/CHANGELOG.md)
- [Commits](https://github.com/typescript-eslint/typescript-eslint/commits/v4.28.4/packages/parser)

---
updated-dependencies:
- dependency-name: ""@typescript-eslint/parser""
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Fix sounds playing at start up
Add new build commands
Bump packages
Move saveClasses to Framework
Update CI
Get latest version of Framework
Get latest version of framework
Update README.md
Update packagename
Update package name and version
Bump @types/mocha from 8.2.3 to 9.0.0

Bumps [@types/mocha](https://github.com/DefinitelyTyped/DefinitelyTyped/tree/HEAD/types/mocha) from 8.2.3 to 9.0.0.
- [Release notes](https://github.com/DefinitelyTyped/DefinitelyTyped/releases)
- [Commits](https://github.com/DefinitelyTyped/DefinitelyTyped/commits/HEAD/types/mocha)

---
updated-dependencies:
- dependency-name: ""@types/mocha""
  dependency-type: direct:development
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
Fix loading if no previous save is found
Add overlay and save to building locking
Fix upgrade bar not displaying
Fix bug with storing locked buildings
Change to ""color"" to ""colour""
Fix building tooltips not updating correctly
Add percentage to GC/Reindeer timer
Bump to 2.031.10","This update implements the following functions:
This updates adds a number of performance improvements which make CookieMonster about 33% more efficient ()
Added a button to all buildings in the middle section that can ""lock"" the building. This makes the building unclickable, which might be useful for frantic clicking during cookie storms ()
Added a percentage to the Golden Cookie timer bar ()
This update fixes the following bugs:
Fix considerable lag on the Ascension screen when using the monospace font ()
Fix sound playing at start-up ()
Fix building tooltips and warnings not updating correctly ()
Fix upgrade bar not displaying ()
Fix loading of mod when no save was found ()"
"Removed push stage from actions
Pushed dev branch to 2.031.5
Added build-test command
Fixed Disp.Beautify and tooltips of upgrades
Fixed Upgrades not sorting on PP
Fixed two issues with warning
Fixed
Fix pop fattest wrinkler
Fix issues with warning not displaying
Fixed crash on selecting sell all
Fixed selling with block buying
Fix heavenly chips per second display
Fix garden tooltip when pressing shift
Change in structure and first use of webpack
Added comments
Updated action to reflect new structure
Complete overhaul of code structure and relevant files ()
Fixed and
Update README.md
Version 2.031.5 and change to action ()

* Remove sourcemap comment

* Bumped version and updated release notes

* Updated CI to remove sourcemap comment

* Fixed faulty command in action

* Fixed fault command (again)

* Fixed action

* Update action

* Action

* Try 123512

* Try 123541

* Action?

* Action

* Better Action

* Maybe?

* Maybe

* Please...
Hotfix for version 2.051.3","It is once again time for a new update to Cookie Monster!
This update has totally revamped the backend of the mod. It does not introduce any new functions, this is planned for the next release. We believe we have fixed all bugs related to this new structure, but if you find any bugs, please report them on the GitHub!
Besides, this update fixes the following bugs:
Fixed some upgrade tooltips which did not display the full effect of buying the upgrades ()
Fixed not always being able to sell when ""blocking bulk buy"" ()
Fixed heavenly chips per second display ()
Fixed small display bug when pressing shift and hovering over garden plots ()
Fixed some bugs with the display of numbers and formatting of them ()"
"Fix upgr bar legend, wrink butt tooltip
Created RIgidel mode
Changed name of Rigidel option
Update changelog to reflect hotfixes
Fixed negative GC effect breaking mod
Fix break upon 0 wrinklers
Update commands and removed comment
Fix formatting of Cookie Counter
Changed order and reformatted settings
Fixed
Wrinkler button disappear when not active
New colour settings, changeable flash colour
Fixed incorrect mature for Garden tooltip
Increase max length to 100
Fixed edit prompts in settings
Fixed typo
Fixed notation of negative numbers
Fixed dragon tooltip
Fixed red and purple PP switched
Fixed bug in Dragon Aura cps change display
Created favourite settings functionality
Made favourite settings stars yellow
Fixed overlapping labels in settings
Reordered directory Disp/Settings
Show cookies from clicking in stats
Updated npm and dependencies
Fixed some typos
Renamed Draw hook
Show missing achievements toggle
Build CookieMonster.js
Initial fix for
Additional fixes for
Removed eslintignore file
Fixed high number of ESLint errors
Build CookieMonster.js
Fixed
Fix black flicker at loading & timers change
Update to version 2.031.7","Once again we are proud to present you a release with new functions and bug fixes.
We are still working on finding a resource-efficient way to calculate the most optimal strategy. Any help or ideas for issue would be greatly appreciated!
This update implements the following functions:
Updated the ordering and description of all settings of Cookie Monster ()
Colours of Flash notifications can now be set by the user ()
You can now select a number of settings to be your 'favourite'. They will be displayed at the top of all other settings in a new section. This functionality is toggleable and you can find it in the miscellaneous section ()
The statistics page now shows cookies earned by clicking for a selected time period ()
The statistics page can now show missing normal achievements, this can be toggled in the settings ()
This update fixes the following bugs:
Fixed some typo's
No longer show the wrinkler pop buttons when wrinklers can't spawn ()
Fixed incorrect calculation of plant maturity for relevant tooltips ()
Fixed edit prompts not working in settings ()
Fixed red and purple being switched around for PP colour coding ()
Fixed incorrect notation of numbers in Dragon tooltip and interface ()
Fixed incorrect calculation of changing Dragon aura cost ()
Fixed incorrect calculation of changing Pantheon gods effect ()
Fixed fluctuating PP values when god Cyclius was selected ()
Fixed black flickering when Golden Cookies or buffs start ()"
"Fixed current date issue (Issue)
Version changed to 2.0034.3 and changed to a faster method of getting current time
Change the default of calculate with Wrinkler to be off (Issue)
Fix heavenly chips multiplier (Issue)","Minor hotfix release!
Fixed current date issue (Issue) better
Changed the default setting to calculate with Wrinklers to be off (Issue)
Fix heavenly chips multiplier (Issue)"
"Version change
Version change/added the option to change colors (Issue)
Forgot one line to load jscolor.js","A lot of work was needed to add this feature!
Added the option to change colors (Issue) (Thanks @Yovaayova for the help!)"
"Fixed to work with Version 2.0042 (Mostly) (Issue)
Version change to 2.0042.2
Fixed max prestige not always max with fixes to tooltip description also (Issue)
Changed default for average CPS/clicks to be 1m/1s since people kept getting confused
Fixed tooltip placement in minigames
Fix reset bonus stat to sometimes show the wrong number before 100% of potential is unlocked (hopefully)
Optimize reset bonus calculation
Changed average CPS to ignore some outliers
Fix Wrinklers Typo in Description
Fix Wrinklers typo in description (forgot the source file also) (Issue)
Added timer to Grimoire spells (Issue) with the help from @Hoten pull request (Issue) and fixed a very minor tooltip bug","A semi big release!
Fixed max prestige not always max with fixes to tooltip description also (Issue)
Changed default for average CPS/clicks to be 1m/1s since people kept getting confused
Fixed tooltip placement in minigames
Fix reset bonus stat to sometimes show the wrong number before 100% of potential is unlocked
Changed average CPS to ignore some outliers
Fix Wrinklers typo in description (found by @tayrayb) (Issue)
Added timer to Grimoire spells (Issue) with the help from @hoten
Some optimizations and minor bug fixes"
"Forgot one line to load jscolor.js
Version change
Hopefully fix jscolor not loading before CM.Init is called (Thanks The_omniscent_pie)
Added Chocolate egg stat (Issue)
Added amortization stat to building tooltip (Issue)
Fixed minor bug with Chocolate Egg stat and fixed how undefined was checked (Thanks The_omniscent_pie)
Add amortization to tooltip config (Issue)
Added a pop all button for wrinklers (Issue)
Added sell and sell all amounts to the building tooltips
Chocolate egg stat now includes popping wrinklers (Issue)","Updated how undefined objects are detected (with help of The_omniscent_pie)
Added Chocolate egg stat (Issue &)
Added amortization stat to building tooltip (off by default) (Issue)
Added a pop all button for wrinklers (Issue)
Added sell and sell all amounts to the building tooltips (Suggested by Ductape821)"
"Fixed for Version 2.021 of Cookie Clicker (Issues, and)
Change to Version 2.021.2
Minor code cleanup from merge
Changed default Fortune Cookie sound effect
Added stat to show missing Fortune upgrades left to buy (Issue and)","Minor release to add Fortune ticker helper.
Added sound when a Fortune comes up in the ticker (all code from @Azmaeus, thank you!) (Issue and)
Added a stat to list missing Fortune upgrades to buy (Issue and)"
"fix tests .... bump version [skip ci]
upgrade db module to allow partial ragne, return 0 when no such metric
upgrade db module to allow partial ragne, return 0 when no such metric .... bump version [skip ci]
upgrade db module to allow partial ragne, return 0 when no such metric .... bump version [skip ci]","Full Changelog: v2.4.44...v2.4.45
What's Changed
use debugOverride to run caching with debug by @yehiyam in
update python wrapper to hkube-python-wrapper==2.4.0.dev1 by @hkube-ci in
improve debugger already connected handling by @yehiyam in
fix log redirect command by @yehiyam in
fix parentspan by @golanha in
Add graph api for pipeline by @golanha in
Upgrade node to 18 by @yehiyam in
update python wrapper to hkube-python-wrapper==2.4.0.dev2 by @hkube-ci in
update python wrapper to hkube-python-wrapper==2.4.0.dev3 by @hkube-ci in
update python wrapper to hkube-python-wrapper==2.4.0.dev6 by @hkube-ci in
update java wrapper to v2.2.2-SNAPSHOT by @hkube-ci in
update python wrapper to hkube-python-wrapper==2.4.0.dev7 by @hkube-ci in
update nodejs wrapper to 2.1.2 by @hkube-ci in
use algorithms pageing api in algorithm operator by @golanha in
update python wrapper to hkube-python-wrapper==2.4.0.dev9 by @hkube-ci in
update python wrapper to hkube-python-wrapper==2.4.0.dev10 by @hkube-ci in
update python wrapper to hkube-python-wrapper==2.4.0.dev12 by @hkube-ci in
Graphql by @maty21 in
Graph fixes by @maty21 in
adding jaeger to api server by @golanha in
fixing schema by @golanha in
batchinfo by @golanha in
add streaming metrics by @golanha in
flowInput to Object in graphql and expose flowInput in Rest by @golanha in
update python wrapper to hkube-python-wrapper==2.4.0 by @hkube-ci in
fix builds list by @zivglik in
Revert ""update versions"" by @golanha in
fix add storageInfo to jobs by @zivglik in
fix error post by @zivglik in
Full Changelog: v2.3.20...v2.4.45"
"v6.3.17.0

Changelog: https://roxy-wi.org/changelog_3_17
v6.3.18.0

Changelog: https://roxy-wi.org/changelog_3_18","The possibility to backup configs into S3 bucket
The possibility to install last versions of Apache and Node exporters
The ssl_local_path parameter has been deleted from settings"
"v7.1.1.0

Fix HA cluster installation via API
v7.1.2.0

Changelog: https://roxy-wi.org/changelog.1.2
v7.1.2.0

Refactor imports and remove redundant paths

This commit updates the sys.path.append and import statements in multiple files for better readability and maintainability. Unused or unnecessary paths were removed, and module imports were restructured for a more logical organization.","Refactoring HAProxy, NGINX, Apache, Keepalived and Node exporters installation
The possibility to add SSH keys with passphrase
SSH passwords and SSH passphrases are crypted now. Do not forget change a new option ""secret_phrase"" in the config"
"v7.2.5.0

Fix interface bugs
v7.2.6.0

https://roxy-wi.org/changelog_2_6
v7.2.5.0: Refactor execution of group changes in user settings

This commit streamlines the way user group data is handled, both in scripts and server-side logic. The group settings URL has been simplified and the logic for updating user groups also has been optimized. Eliminated unnecessary checks in the user.py module, and updated the routing logic for group data to utilize a single route with HTTP GET and PUT methods. Removed unsuccessful group changing errors.
v7.2.5.0: Refactor WAF installation process for better error handling

The code for the WAF installation process has been refactored to improve error handling. The `service_mod.generate_waf_inv` function is now called with `service` instead of hardcoded service names, and error messages are now more descriptive. Additionally, the Ansible role file for WAF has been renamed from `waf.yml` to `waf_haproxy.yml` to better represent its role.
v7.2.5.0: Update ansible_status with dynamic service name

In the install/routes.py, the 'run_ansible' method call in the 'install' function has been updated to dynamically pass the 'service' name, resulting in a more flexible and adaptable code. Previously, it was hardcoded to run only the 'waf_service', which limited its usage.
v7.2.5.0: Add exception handling and remove commented code

This commit applies exception handling for the network operations methods and removes unused/commented-out code. The added exception handling checks for incorrect input to nettools methods and raises explicit exceptions with descriptive messages. This dramatically simplifies the debugging process, providing better visibility into runtime errors.
v7.2.5.0: Refactor ansible setup script and fix typos

This commit includes a refactoring of the ansible setup script that simplifies the process of installing the python package 'passlib' by directly using pip3. Additionally, typos in the descriptors of certain tasks such as directory creation and SELINUX configuration have been corrected for better readability and understanding of the code.
v7.2.5.0: Add IP address validation and server field check

This commit primarily adds a function that validates IP addresses and a function that checks if a server field is filled in the script.js file. Also, it removes the token from several ajax requests, and improves error handling in server.py. In the users.js file, it updates the server info display functionality.","Refactoring Geo installation
Refactoring Grafana installation
Refactoring Prometheus server installation"
"v7.2.4.0: Update paths to static files in JavaScript

This commit updates the paths to several static files in various JavaScript files. The '/inc/' directory has been replaced with '/app/static/js/' to maintain consistency across the application. This change affects the ion.sound.min.js and fontawesome.min.js file locations and their corresponding references in script.js, index.html, main_head.html, and channel.js.
v7.2.5.0

https://roxy-wi.org/changelog_2_5
v7.2.5.0: Simplify SSH key handling in server module

This commit simplifies the SSH key handling functionality in the server module. Unnecessary definitions and methods for checking and handling different key types have been removed. Now, paramiko's standard load_private_key method is directly used to load the SSH keys, which has streamlined the code and made it more maintainable.
v7.2.5.0: Add middleware to get user params in create methods

This commit adjusts the 'create_user' and 'create_server' routes to include a decorator for getting user parameters. This will improve the handling of these methods, ensuring they receive any necessary user specific parameters.
v7.2.5.0

Fix interface bugs","The Settings page is AJAX page now
Metrics began to be updated in real time
The Server page has gone, only the Admin area left"
"chore(): release v0.4.0
chore(deps): update dependency @types/node to v14.17.5
chore(deps): update dependency bull to v3.22.11
chore(deps): update nest monorepo to v8.0.1
chore(deps): update dependency ts-node to v10.1.0
chore(deps): update nest monorepo to v8.0.2
chore(deps): update typescript-eslint monorepo to v4.28.3
chore(deps): update dependency lint-staged to v11.0.1
chore(deps): update dependency bull to v3.22.12
chore(deps): update dependency bull to v3.23.0
chore(deps): update nest monorepo to v8.0.3
chore(deps): update dependency bull to v3.25.0
chore(deps): update dependency bull to v3.25.1
chore(deps): update nest monorepo to v8.0.4
chore(deps): update dependency bull to v3.26.0
chore(deps): update dependency eslint to v7.31.0
chore(deps): update typescript-eslint monorepo to v4.28.4
chore(deps): update dependency ts-jest to v27.0.4
chore(deps): update dependency lint-staged to v11.1.0
chore(deps): update dependency release-it to v14.10.1
chore(deps): update commitlint monorepo to v13
chore(deps): update dependency lint-staged to v11.1.1
chore(deps): update dependency @types/node to v14.17.6
chore(deps): update typescript-eslint monorepo to v4.28.5
chore(deps): update dependency bull to v3.27.0
chore(deps): update nest monorepo to v8.0.5
chore(deps): update dependency @types/bull to v3.15.3
chore(deps): update dependency rxjs to v7.3.0
chore(deps): update dependency eslint to v7.32.0
chore(deps): update dependency @types/node to v14.17.7
chore(deps): update typescript-eslint monorepo to v4.29.0
fix(): if redis prop is a string, pass it as a second ctor arg
chore(): release v0.4.1","fix(): if redis prop is a string, pass it as a second ctor arg (8718b90)
chore(deps): update typescript-eslint monorepo to v4.29.0 (f271e54)
chore(deps): update dependency @types/node to v14.17.7 (02e6a26)
chore(deps): update dependency eslint to v7.32.0 (582764b)
chore(deps): update dependency rxjs to v7.3.0 (3d2e965)
chore(deps): update dependency @types/bull to v3.15.3 (50fb77c)
chore(deps): update nest monorepo to v8.0.5 (452f994)
chore(deps): update dependency bull to v3.27.0 (7bbc777)
chore(deps): update typescript-eslint monorepo to v4.28.5 (a0dc802)
chore(deps): update dependency @types/node to v14.17.6 (3e64b21)
chore(deps): update dependency lint-staged to v11.1.1 (70c5cd0)
chore(deps): update commitlint monorepo to v13 (e31c3cd)
chore(deps): update dependency release-it to v14.10.1 (b692100)
chore(deps): update dependency lint-staged to v11.1.0 (ed549ed)
chore(deps): update dependency ts-jest to v27.0.4 (871467b)
chore(deps): update typescript-eslint monorepo to v4.28.4 (cc3b9ac)
chore(deps): update dependency eslint to v7.31.0 (aae25d2)
chore(deps): update dependency bull to v3.26.0 (3f8d2d0)
chore(deps): update nest monorepo to v8.0.4 (a7bb967)
chore(deps): update dependency bull to v3.25.1 (ef37665)
chore(deps): update dependency bull to v3.25.0 (fd40b3e)
chore(deps): update nest monorepo to v8.0.3 (1173a98)
chore(deps): update dependency bull to v3.23.0 (9f992b4)
chore(deps): update dependency bull to v3.22.12 (eff5afd)
chore(deps): update dependency lint-staged to v11.0.1 (dbf8cc5)
chore(deps): update typescript-eslint monorepo to v4.28.3 (71873b9)
chore(deps): update nest monorepo to v8.0.2 (1de07a7)
Merge pull request from nestjs/renovate/npm-minimist-vulnerability (ac80c96)
Merge pull request from nestjs/renovate/npm-hosted-git-info-vulnerability (8d77e13)
Merge pull request from nestjs/renovate/npm-normalize-url-vulnerability (557193d)
Merge pull request from nestjs/dependabot/npm_and_yarn/trim-newlines-3.0.1 (7687cca)
chore(deps): update dependency ts-node to v10.1.0 (b166831)
chore(deps): update nest monorepo to v8.0.1 (b5ed0df)
chore(deps): update dependency bull to v3.22.11 (4d87f82)
chore(deps): update dependency @types/node to v14.17.5 (d4f62ee)
chore(deps): update dependency normalize-url to 4.5.1 [security] (be4b297)
chore(deps): update dependency minimist to 1.2.3 [security] (2b7b15c)
chore(deps): update dependency hosted-git-info to 2.8.9 [security] (0a2a51f)
chore(deps): bump trim-newlines from 3.0.0 to 3.0.1 (0a51bac)"
"v3.13.0
app - preventing hapi from parsing payloads; resolves.
v3.13.1","Bugfixes
Prevented Hapi from parsing every payload."
"v3.24.4
Small typo
Show the right waning on promise vs callback conflict.
Update lockfile
v3.24.5","Miscellaneous
Added warning when mixing async and callback in handler. See"
"v3.10.1
Include resourcePath and httpMethod fields in event.requestContext

Events sent by the real AWS API Gateway have 'resourcePath' and 'httpMethod' as properties
of 'requestContext'. They duplicate the values of 'resource' and 'httpMethod' already present
one level above. See the docs here:

http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-set-up-simple-proxy.html#api-gateway-simple-proxy-for-lambda-input-format

Some libraries for implementing Lambda functions (in our case, we use claudia-api-builder)
rely on these fields being present. This patch adds these fields to the events generated
by serverless-offline.
v3.10.2","Bugfixes
resourcePath and httpMethod are now included in event.requestContext."
"chore: Release v8.3.0
refactor: Fix log typo
chore: Mark as v3 ready
fix: Fix handling of modern logs
chore: Bump dependencies
chore: Release v8.3.1","Bug fixes:
Fix handling of modern logs (Cannot read properties of undefined (reading 'notice') error)"
"v3.13.3
Added short-circuit guard against functions that have no events
fix setting default for identitySource

fixes
add new contributor
lint
v3.13.4","Bugfixes
Default value for identitySource fixed.
Functions with no events are now supported."
"v10.3.1
refactor: private endpoint with api keys
refactor: private endpoint with api keys, Part 2
chore: order nit
perf: create api keys set only when needed
v10.3.2","Performance Improvements
create api keys set only when needed (a6df83a)
Maintenance Improvements
private endpoint with api keys (8638635)
private endpoint with api keys, Part 2 (9d57872)"
"v10.2.0
chore: destructuring order nit
refactor: create lambda only when needed
chore: add quotes to log vars
fix: usage identifier key condition
refactor: replace jsonwebtoken with jose ()
v10.2.1","Bug Fixes
usage identifier key condition (c0b8d75)
Maintenance Improvements
create lambda only when needed (5aa44ae)
replace jsonwebtoken with jose () (877463b) thank you @panva"
"v9.2.3
refactor: move colors to separate file
refactor: fix color name, import from utils
refactor: move colors to config
refactor: destructuring order nit
fix: deprecate command option
doc: deprecate option in README
fix: deprecate use child processes ()
doc: deprecate option in README (again)
v9.2.4","Note: --useChildProcesses has been deprecated and will be removed in the next major version, as it is redundant, has no advantages, and can be replaced with the better option of using worker threads, the current default. It's one less option and less code to maintain. the child process option also originated at a time when worker threads weren't yet available in node.js, and handler reloading in the in-process mode was buggy and leaking memory.
Bug Fixes
deprecate command option (6541792)
deprecate use child processes () (410d1dd)
Maintenance Improvements
destructuring order nit (b44cf07)
fix color name, import from utils (ef17e31)
move colors to config (2cd3180)
move colors to separate file (6a32f29)"
"v11.0.0
fix: checking generated api key ()
fix: add to set
perf: create api keys only when needed (again)
chore: fix plugin path in example
v11.0.1","Bug Fixes
add to set (8befa04)
checking generated api key () (5d9d769) thank you @iansu
Performance Improvements
create api keys only when needed (again) (d614fc8)"
"v9.3.0
fix: unpin luxon
test: refactor serverless-plugin-typescript to use es6 modules
refactor: remove unsupported dotnet, dotnet core runtimes
refactor: simplify ruby runner
refactor: rename time to millis
fix: millis calculation
chore: remove commented code
fix: remove package.json main field
v9.3.1","Bug Fixes
millis calculation (6666e35)
remove package.json main field (11cc039)
unpin luxon (ac2676a)
Maintenance Improvements
remove unsupported dotnet, dotnet core runtimes (b967b37)
rename time to millis (c1158b2)
simplify ruby runner (10e7e82)"
"v2.2.4
added getRemainingTimeInMs
Update README.md
Normalize request.headers capitalization
v2.2.5","Regex for choosing response on failure now ends with $ (just like APIG).
Added getRemainingTimeInMillis in Lambda context object.
Velocity context's headers are now capitalized. See"
"v3.8.2
Add travis ci conf file
edit travis config
edit travis config
edit travis config
add travis badge to README
update travis config
Fix fullPath slice

When there was a trailing slash in the path of the serveless.yml the app
crashed.
Add unit test

Check if a path with trailing '/' works
v3.8.3","Bugfixes
Paths with a trailing slash are now valid.."
"v3.15.1
Ensure path parameters are url encoded to match aws behavior
methodArn should contain request.path

When invoking a custom authorizer, supply the requested path
instead of the configured endpointPath. This matches AWS
behavior.
remove rogue console.log
remove unhandledRejection listener on process
fixes
add new contributor
lint
v3.15.2","Bugfixes
When invoking a custom authorizer, supply the requested path instead of the configured endpoint path in methodArn. See
Path parameters are now url encoded to match AWS's behavior. See
Miscellaneous
Removed rogue console.log"
"v3.15.0
edit readme
Update README.md
Add apiId to requestContext
updates protectedRoutes logic to include request method in addition to the request path
lint
v3.15.1","Bugfixes
added apiId to requestContext. See
Added the request method on API key protected routes. See"
"v9.1.1
refactor: simplify, remove else condition
refactor: use prototype.includes
refactor: use PAYLOAD_IDENTIFIER
test: move go http test to runtimes
test: move scenario test files to sub-folder
fix: remove unsupported stageVariables
refactor: make payload identifier private static
refactor: make more payload identifier private static
fix: Prevent logging `undefined`  for event schedule ()
chore(lint): remove allow no-underscore-dangle exception
chore: bump deps
v9.1.2","Note: stage variables were never supported by serverless, but support was made available by a plugin: https://github.com/svdgraaf/serverless-plugin-stage-variables. the plugin only supports stage variables for serverless v1, while serverless-offline v9 only supports serverless v3. an argument could be made that removing this is technically a BREAKING CHANGE, but given the above we decided to release this in a PATCH release.
Bug Fixes
Prevent logging undefined for event schedule () (3042bc2) thank you @dnicolson
remove unsupported stageVariables (4648d39)
Maintenance Improvements
make more payload identifier private static (07ec960)
make payload identifier private static (7d4bf76)
simplify, remove else condition (df77e14)
use Object.hasOwn (ec1210a)
use PAYLOAD_IDENTIFIER (d6eb227)
use prototype.includes (50679e1)"
"v10.0.1
perf: create instance in worker thread helper module scope
test: add chrome-aws-lambda http api scenario tests
chore"" remove .only from tests
test: remove arrow function, use object shorthand
v10.0.2","Performance Improvements
create instance in worker thread helper module scope (53a799e)"
"v10.0.0
ci: add macos ()
chore: add prettier script
chore: add .prettierignore file
ci: add matrix setup ()
ci: setup python ()
fix: Support multiple of same query string for LambdaProxyIntegrationEventV2 ()
test: nit, use function statements
test: add chrome-aws-lambda scenario tests ()
test: remove headers
fix: await promise
chore: rename test file
chore: bump deps
chore: remove outdated maintainers section from package.json
v10.0.1","Bug Fixes
await promise (335993e)
Support multiple of same query string for LambdaProxyIntegrationEventV2 () (7416c1c) thank you @woodybriggs for the initial PR and @drace-rgare for picking it up and adding tests"
"v6.1.0
Adds support for httpApi

This patch adds support for the new httpApi that aws offers
for reducing cost and latency in serverless applications. It
has been supported for a while in serverless, this just adds
support here to match.

The approach is pretty straightforward so far and may not include
all of the functionality that httpApi permits so far. Those will
come in later patches to this pull request.
fix: fixup no prepend stage changes

Also renables logging the stage path in table output.
Fix for attempt to process undefined events property
v6.1.1","Adds support for httpApi
Fix for attempt to process undefined events property
Fixup no prepend stage changes"
"v9.2.0
refactor: pass function options
chore: remove commented code
test: add serverless-express scenario test
chore: bump deps
test: add @vendia/serverless-express binary test
chore: skip vendia serverless express image test
refactor: make handler process private
fix: region + stage startup log ()
chore: bump deps
v9.2.1","Bug Fixes
region + stage startup log () (62f1e3b)
Maintenance Improvements
make handler process private (df0c474)
pass function options (c1f3c1b)"
"v3.13.2
Update README.md
Add support to forbidden access if you deny on custom rule
Changes on arn to remove spaces that can crash on grant access
v3.13.3","Bugfixes
Add support to forbidden access if you deny on custom rule."
"v9.1.5
fix: tls options ()
fix: event.resource in catch-all route gets + changed to * ()
chore: remove console.log
v9.1.6","Bug Fixes
event.resource in catch-all route gets + changed to * () (0494fdb) thank you @Ankcorn
tls options () (c76939d)"
"v2.5
lint
lint
Fixed, make sure that we wait for handler to call context.done or callback in babel runtime
v2.5.1","Your handlers using the Babel runtime might behave differently!
Merged and :)"
"v2.2.9
v2.2.10","Added support for the new Node runtime. (EDIT: I should have bumped the version to 2.3)
The plugin will be backward compatible with the old (0.10) Node runtime until October 2016."
"v9.2.4
chore: fix spelling
fix: lambda integration returning object with body ()
chore: remove incomplete commented test
v9.2.5","Bug Fixes
lambda integration returning object with body () (b053f57)"
"3.20.1
Fixes the case when policy === * ()
Adding process.env._HANDLER ()
Adds special encoding for multipart/form-data ()
3.20.2","Fix for authorizer policy resource '*'
Adding env var _HANDLER
Fix for multipart/form-data encoding"
"v5.10.0
Remove underscore [bad cherry-pick from v6], fixes
v5.10.1","Bugfixes
TypeError: Cannot destructure property version of 'undefined' or 'null'"
"v6.1.2
Add FUNDING.yml file
Fix for child process running
Fix for noPrependStageInUrl affecting event.path
Adding tests for url prepending
Fixing lint
v6.1.3
Removing comments","Fix for child process sharing the stdio of parent
noPrependStageInUrl false should have a leading slash"
"3.20.2
Add option to run handlers in separate node processes ()

* Add option to run handlers in separate node processes

* Use Object.assign instead of spread

* Handle child_process exit/error

* Use Set for inflight; lodash.omitBy for process.env workaround
Add async handler support for nodejs8.10 runtime ()
3.20.3","Add option to run handlers in separate node processes
Add async handler support for nodejs8.10 runtime"
"v9.1.2
refactor: move http server setup to separate function
refactor: move register plugins to create server
refactor: use fs/promises
fix: remove unused parameter
refactor: move create hapi handler into separate function
chore: bump deps
refactor: nit
fix: change protectedRoutes type from array to string
chore: remove commented code
refactor: replace arrow functions
refactor: remove corsAllowCredentials from default options
v9.1.3","Bug Fixes
change protectedRoutes type from array to string (38debc6)
remove unused parameter (7cd4a5a)
Maintenance Improvements
move create hapi handler into separate function (45454af)
move http server setup to separate function (6f03251)
move register plugins to create server (5e101a6)
nit (739273d)
remove corsAllowCredentials from default options (26a9567)
replace arrow functions (5e3e3d8)
use fs/promises (7019d28)"
"v11.1.0
refactor: use async function
fix: empty complete pool on cleanup
refactor: await cleanup, then empty map
fix: free memory, empty lambda function pool
fix: await cleanup in timer
v11.1.1","Bug Fixes
await cleanup in timer (f5b8c68)
empty complete pool on cleanup (3377e7a)
free memory, empty lambda function pool (b03cf79)
Maintenance Improvements
await cleanup, then empty map (f00383e)
use async function (d03194f)"
"v9.2.5
chore: organize scenario tests
fix: Log uncaught exceptions in worker thread handlers ()
refactor: move child process deprecation to the end for more visibility
fix: add handler exception logging
refactor: simplify return
refactor: rename variables
chore: re move unused variable
chore: re-organize scenario tests (again)
v9.2.6","Bug Fixes
add handler exception logging (06d348d)
Log uncaught exceptions in worker thread handlers () (498ce29) thank you @aldenquimby
Maintenance Improvements
move child process deprecation to the end for more visibility (310a535)
rename variables (26f61a4)
simplify return (04d0ae0)"
"v11.2.2
fix: prevent overwriting host.docker.internal in wsl ()
chore: bump deps
refactor: call now from Date namespace
refactor: use Date.prototype.getTime instead of valueOf
chore: import order nit
v11.2.3","Bug Fixes
prevent overwriting host.docker.internal in wsl () (c7f6f6d) thank you @frozenbonito"
"v11.1.2
test: nit, remove arrows
refactor: remove typeof operator for undefined checks
refactor: split get events for http and httpApi
refactor: create http server
chore: bump deps
v11.1.3","Maintenance Improvements
create http server (132dd7f)
remove typeof operator for undefined checks (312d4f0)
split get events for http and httpApi (51a30e9)"
"v12.0.0
chore: bump deps
fix: Lambda timeout status code ()
chore: bump examples, scenario tests deps
v12.0.1","Bug Fixes
Lambda timeout status code () (56d986b) thank you @DorianMazur"
"v13.1.0
fix: Support alb with no method conditions ()

Co-authored-by: Frode Aannevik <frodea@dintero.com>
chore: bump deps
v13.1.1","Bug Fixes
Support alb with no method conditions () (5e6514c) thank you @frodeaa"
"v11.2.1
chore: remove wrong test
chore: bump deps
chore: fix test description
fix: remove redundant and faulty condition in hapi path generation
chore: test formatting nit
fix: path access with trailing slash ()
v11.2.2","Bug Fixes
path access with trailing slash () (73b95bc)
remove redundant and faulty condition in hapi path generation (e756be6)"
"v13.3.1
refactor: use crypto web api
Revert ""refactor: use crypto web api""

This reverts commit 6ccbb809f395befa10812eda2cce00d09a83e35b.
fix: Allow string values in provider.apiGateway.apiKeys ()
chore: bump deps
v13.3.2","Bug Fixes
Allow string values in provider.apiGateway.apiKeys () (d0b7606) thank you @andersem"
"v13.1.1
fix: LambdaProxyIntegrationEventV2 authorizer context ()
chore: bump deps
v13.1.2","Bug Fixes
LambdaProxyIntegrationEventV2 authorizer context () (5b82612) thank you @rishi8094"
"v12.0.2
chore: bump deps, use npm package-lock v3 ()
refactor: use array-unflat-js ()
refactor: remove default parameter
v12.0.3","Maintenance Improvements
remove default parameter (402e11e)
use array-unflat-js () (3ee4b30)"
"v13.3.2
chore: bump deps
chore: add code quality script
refactor: remove create unique id util function
fix: Custom Authorizer Lambda Request context missing accountId and apiId fields ()
refactor: use default crypto import
chore: unpin deps
chore: use double quotes (default)
chore: bump deps
v13.3.3","Bug Fixes
Custom Authorizer Lambda Request context missing accountId and apiId fields () (3a5fca9) thank you @rfranco
Maintenance Improvements
remove create unique id util function (4fbb9bf)
use default crypto import (3d1467d)"
"Update tutorial

(cherry picked from commit 8d744edf10de775effaa1f52690b33860f8e4439)
Update gif

(cherry picked from commit 6013e3be0b88ff06210751b71b76788437d8ae0e)
Slow down gif

(cherry picked from commit 50788e5b268d58353cff0bd04e6bc5f711bd0a7a)
Reorder tensorflow and python deployment docs
Query EKS price from AWS Pricing API ()


(cherry picked from commit 06a8952f7c383c79a4f8db6ffbccc6fac3e19607)
Set locale to en_US.UTF-8 ()


(cherry picked from commit 21bd7630828347dbdd2fbdf5f3ac4ff84325d5ea)
Fix cluster update ()


(cherry picked from commit 70a09d51e32fd552c1beb2324fc2546ce02e55fc)
Cause replica to error when pip install fails

(cherry picked from commit 394862b0f9ce303f71ce9d18996c13350d47e2c5)
Assert API version before inspecting args in python ()


(cherry picked from commit 3b6358850a52d5b350f3fb8e04f752f01742a0e2)
Improve healthcheck ()


(cherry picked from commit cb95e2f37c1e0eef2808c0bddd3f0444b000b846)
Update version to 0.13.1
Update stable version to 0.13.1","Bug fixes
Fix cortex cluster update when using spot instances with no on-demand backup nodegroup (vishalbollu)
Misc
Set locale to en_US.UTF-8 (deliahu, RobertLucian)
Cause replica to error when pip install fails 394862b (deliahu)
Query EKS price from AWS Pricing API (deliahu)
Assert API version before inspecting args in python (vishalbollu)
Improve healthcheck (vishalbollu)"
"Update version to 0.7.0
Update README.md

(cherry picked from commit 8cf4d290926d1f616a670bdaf7dfb9ba0c199e36)
Remove extra whitespace in get API command

(cherry picked from commit 0e8278471d1a66d23ab23c525975581c03cf0a1c)
Check for undefined API on exception

(cherry picked from commit e02addc765e5d587de2c1a4d132f5cee59a56047)
Update README.md

(cherry picked from commit 7139509ce7977b33f219dee2afa685d47118d87e)
Update pod status logic

(cherry picked from commit d9ced094145ab95959f4366c92be8761832c2250)
Update pod status logic

(cherry picked from commit af9059fea9287a16bc89bc9dc545f7a114bcb7b2)
Update README.md

(cherry picked from commit 71e1e30bb7869e3dfb3430e0d7f3e1533604525c)
Update packaging-models.md ()


(cherry picked from commit ec7d74ecd054d24cd14c6a927149e04715138d3f)
Add retries to get_json(), use in get_resource_status() ()


(cherry picked from commit d4bbfd207879519a6cf5687bbc27d916bbb8e57b)
Update README.md

(cherry picked from commit bf6b7fb07999cba45bec6de87e1636dd22f761e7)
Increase compute unavailable timeout to 5 minutes

(cherry picked from commit 86b7541cf2fc2c821cedcc390998acb875dfe0d7)
Fix handler packages ()



(cherry picked from commit 9b3be8bacb7c0f4e73297151e8c3b75c5f611978)
Update running pod status logic

(cherry picked from commit ee4b3fc69b04e2cac2554b500e66ac61e54337c0)
Show TF Serving logs ()


(cherry picked from commit 52252ef65be8a4b4c2740840fdef58d2df86400a)
Update TensorFlow to 1.14

(cherry picked from commit ba0b541fdfa1492215beea18209cf632df2c9234)
Set AWS CNI version to 1.5.2 ()


(cherry picked from commit 900321be2e4df59b8f6d9dcba1186611fd358784)
Update version to 0.7.1
Update TF_CPP_MIN_LOG_LEVEL

(cherry picked from commit dcf8ed9d5760f5bd166d714e1eef47bc7ce2e802)
Update stable version to 0.7.1","Bug fixes:
Show TensorFlow Serving logs (vishalbollu)
Update AWS CNI version to 1.5.2 (deliahu)
Fix handler packages (vishalbollu)
Update pod status logic d9ced09 af9059f ee4b3fc (deliahu)
Add retries to metadata downloading (deliahu)
Misc
Update to TensorFlow 1.14.0 ba0b541 (deliahu)"
"Update version to 0.15.0
Update telemetry.md

(cherry picked from commit 2b62b55af0ebe05501da76fda254bec7d6fb8e21)
Update insufficient resources error message ()


(cherry picked from commit 81dcec8e816cba17cb4368615c659f2bb1fbd85d)
Increase project file count warning threshold ()


(cherry picked from commit 886bdb50d1100107addd18ce1e625f3c01b84d1d)
Relax image version check ()


(cherry picked from commit 615a498bed39f16fdad1fc96717a50732317c2b1)
Print panic stack traces ()


(cherry picked from commit d02ab001470b0d03fe9a07849a0c712332f5a8e4)
Update too many files deploy warning message ()


(cherry picked from commit a447d45e5ac48883b6179da0f25192813fe34c8e)
Update operator error messages ()


(cherry picked from commit 3f61377a4e46d1cb36b829c7a8b85f7b9e68e040)
Clarify documentation about the number of queues per replica ()


(cherry picked from commit f24725ec2b4da9f67bb7d40435a838341751bd93)
Remove quotes from API updating message

(cherry picked from commit cb25b54f9a238e4d65ea5e8dbc17305db155febf)
Remove unnecessary GetUser() in GetManagedPoliciesForUser()

(cherry picked from commit 4cee134ed70535c9833b21c83ba248b5a5f464bb)
Fix admin check for root aws users ()


(cherry picked from commit 463e8788f30aaf9059e267d043d3ec204084a264)
Update version to 0.15.1
Fix cors ()


(cherry picked from commit a012c680760f4a27910f0f8eef1bb9c210d39f96)
Address middleware compatibility issue on FastAPI
Revert ""Address middleware compatibility issue on FastAPI""

This reverts commit 3b4019c4efae6ca1471fa439548f4b5ae7221f43.
Update fastapi to 0.53.0
Update stable version to 0.15.1","Bug fixes
Fix admin check for root AWS users (deliahu)
Fix CORS (vishalbollu)
Misc
Print panic stack traces (deliahu)"
"Use tensorflow/serving Docker images
Update installation instructions

(cherry picked from commit f250d282bb9a21f30c8af3cdcb556eb48f1326d7)
Overwrite CLI installation

(cherry picked from commit 1d951e9ed573c42ad4cbc2883176f00d7fb7404e)
Add upgrade docs

(cherry picked from commit 97e92820af26d18be69e671599a61dd4d9cb69a4)
Rename apis docs directory to deployments

(cherry picked from commit bc0fdab234becb3f1cc4fc15265f8a3917bb1aa1)
Update README.md

(cherry picked from commit e74dc2ce57035d7cdcd7711b9cb44ce45c07d475)
CLI output redesign ()



(cherry picked from commit 1dd305ba9135f5f79eb51f0b019d72cd03aabd14)
Improve signature def error message

(cherry picked from commit bba5bfc64c2a1d4f2663f3015c53e0ab7be635e7)
Update iris example

(cherry picked from commit 2b9c680278e8a46043d7368f4d3f978387b9af35)
Update examples

(cherry picked from commit 1765970e8a3da59d574a7bc7a56b3041c14fa332)
Add Python Packages to VisibleTypes

(cherry picked from commit 20da0fe2e2f13cfb51c27be564a11d2f89a8957f)
Change version command output format ()


(cherry picked from commit ad815c20e612a2def025606c43c0f8a56cc12504)
Add Python Package acronyms

(cherry picked from commit 68a8057f0b3d328f6fc7f93c89a90a0cc95a3628)
Use HTTP for APIs by default ()


(cherry picked from commit 69938bc035fa3e7501f65a8c1e3b45bd45d4a79b)
Update README.md

(cherry picked from commit 38ab119301de66a3589f4bda279a4c5281fb57ca)
Increase HTTP client timeout for predictions

(cherry picked from commit 9f821e4b4624b74e784d60db7bdb627a7a44c71a)
Add pillow to default packages ()


(cherry picked from commit 81f78ec94292eeefbbf34bb9d3d68a1aef7e4d8b)
Update TensorFlow create_raw_prediction_request
Update version in upgrade.md
Update version to 0.7.3
Revert ""Increase HTTP client timeout for predictions""

This reverts commit 9f821e4b4624b74e784d60db7bdb627a7a44c71a.
Revert ""Update README.md""

This reverts commit 38ab119301de66a3589f4bda279a4c5281fb57ca.
Revert ""Use HTTP for APIs by default ()""

This reverts commit 69938bc035fa3e7501f65a8c1e3b45bd45d4a79b.
Add regex to default packages

(cherry picked from commit 962b4c2ea910cfe1b9aae7ea536138c753af3c31)
Add requests to default packages

(cherry picked from commit 9e12d0b062785f73cbbd40121ddec2288b04848b)
Update stable version to 0.7.3","Bug fixes:
Update TensorFlow create_raw_prediction_request 55f9916 bcc5401 (1vn)
Misc
CLI output redesign (vishalbollu)
Add upgrade docs 97e9282 (ospillinger)"
"Update version to 0.24.0
Update PyPI description and README

(cherry picked from commit 7db156a1f8e7c80b70f2d6f85ae3fd9c3149d602)
Add newline after endpoint in cortex get output

(cherry picked from commit 18417749fe7d4d4725b7bfe8b53aa9d3a38472a4)
Fix API stuck in updating state after API has crashed ()


(cherry picked from commit d45b8ee9596e7d699372c6eb729260c7f8755476)
Update version to 0.24.1
Update stable version to 0.24.1","Bug fixes
Propagate the exit code from the predictor's initialization so that the API status is set to ""error"" when initialization fails (RobertLucian)"
"Docs for multi-instance type clusters ()


(cherry picked from commit fce0df92a1acdffcb0d003aa7e78daf685c56a17)
AsyncAPI docs ()

(cherry picked from commit 4c1e90376f2bd184a9a75df1808de26faf152795)
Fix typo in cluster-autoscaler template ()


(cherry picked from commit 18e447ea94406f3e49f1e8bbc90b94c09b8428e3)
Fix loop pointer references ()

* Fix saving pointer reference in for/range loop

* Fix or ignore looppointer warnings

* Add looppointer to lint.sh and tools

* Fix looppointer ignores

* Update circleci config.yml

* Propagate non-zero exit code

* Remove nolint:looppointer labels

Co-authored-by: vishal <vishalbollu@users.noreply.github.com>
Co-authored-by: Vishal Bollu <vishal.bollu@gmail.com>
(cherry picked from commit 971a091faa80f3011ce650b45d17636ead0da7ae)
Make sure autoscaler crons get reinitialised regardless of provider type ()


(cherry picked from commit d1972272ec83de7a845c47694c1a31306dfd53d3)
Update version to 0.31.1
Update stable version to 0.31.1","Bug fixes
Preemptible node pools on GCP aren't autoscaling (vishalbollu)
Replica autoscaler targets incorrect deployments on operator restart (miguelvr)
Replica autoscaler is not reinitialized for running APIs on operator restart on GCP (vishalbollu)"
"Update cluster size guidelines in docs

(cherry picked from commit c7697e797b8d3bdd33122acc31e41d4cee894e1d)
Allow any CIDR range on the api/operator whitelist ()


(cherry picked from commit 8d31e852f29c34e6aafe35c313b69551294ab55c)
Update version to 0.39.1
Update stable version to 0.39.1","Bug fixes
Remove an unnecessary cluster validation which limited the IP ranges that could be used in api_load_balancer_cidr_white_list and operator_load_balancer_cidr_white_list (RobertLucian)"
"Update version to 0.17.0
Fix typo in predictors.md

(cherry picked from commit 16f01e2b12a7e2b611e5e52082214e82bc876eb5)
Pin transformers version in examples ()


(cherry picked from commit 6b0e1a93df3307a06af23861681406915680172f)
Add multi-model endpoints guide ()

(cherry picked from commit ba465bdab0e0b717b486442fe8e750182af7f9e9)
Update multi-model.md
Update docs links ()

(cherry picked from commit 5d3a6b2600547092b551618dc1b0cdca9182db0d)
Add '-y' option to conda install ()


(cherry picked from commit 804f0bf1cfd0ddd0c3f74123228cfdc7a8a462db)
Update tutorial ()


(cherry picked from commit c1f8a79a2279e672d20f43eabc443872709a16c9)
Update examples readme

(cherry picked from commit e15cc62ddf49af3d41259f56a21adc6e8dabcbc3)
Improve documentation around instance_volume_size key in cluster configuration

(cherry picked from commit 8023ff98241b85e1d05770c52981721fb8db735f)
Update version to 0.17.1
Update stable version to 0.17.1","Bug fixes
Fix bug which caused installation of packages from conda-packages.txt to get stuck when running Cortex locally (dsuess)
New guides
Multi-model endpoints using the Python predictor (deliahu)
Docs
Improve tutorial (ssami)
Misc docs improvements e15cc62 8023ff9 (deliahu, vishalbollu)"
"Update version to 0.42.0
Update async api docs

(cherry picked from commit 3b7b1fc960a7b92c7267440cd13f7915740a4485)
Add --namespace=prometheus to examples in metrics exporting guide

(cherry picked from commit 5a9ca591c19605e0acaa5d6345a9fd8f5e3c7a40)
Update remoteWrite key in the guide for configuring long-term metrics storage

(cherry picked from commit ff2891e8649f7c56d14bd2b80153c2c6d5ac35c2)
Python lints (due to new version of Black formatter)
Remove virtualservice retries for realtime and traffic splitter APIs ()
Fix istio rate discrepancy in Grafana ()
fix: ./cortex/dev/export_images.sh: line 35: build/images.sh: No such file or directory ()

resolve
Fix allAsyncAPIs envNames creation ()
Fix: cortex get ""no apis deployed"" when only async apis ()
Update licenses
Rename env_name parameter in python client constructors ()
Comment out nightly e2e tests
Update versions.md
Update logo url
Comment out test
Mention VPC endpoints in docs
fix: export_images.sh ()
Update Cortex versions (eksctl, EKS, AWS IAM, Python, etc) ()

* Update versions

* Update resource metadata

* eksctl fixes

* Discard deprecated ubuntu images

* Update k8s pkgs to match k8s version

* Revert k8s.io pkg versions

* Test commit

* Upgrade k8s.io packages

* Upgrade black and re-format

* Revert black because of dependency conflict

* Fix operator failing to create the Docker client

* Fixes

* Fix GPU examples

* Increase the no output timeout

* Lock click version

Co-authored-by: David Eliahu <deliahu@users.noreply.github.com>
Upgrade CNI version to 1.11.3 ()
Update version to 0.42.1
Send al VPC CNI logs to /dev/null by default ()
Update stable version to 0.42.1","New features
Add support for new set of EC2 instances amongst which the c6 and g5 families can be found  (RobertLucian)
Bug fixes
Esthetic fix where the VPC CNI logging functionality was triggering warn logs when running the cortex CLI (RobertLucian)
Misc
Update Cortex dependency versions; eksctl, EKS to 1.22, AWS IAM, Python, etc (RobertLucian, deliahu)"
"v4.8.0
feat: add disableContentMargin props
add 4.8.1 changelog
v4.8.1","add 4.8.1 changelog  5bae1e3
feat: add disableContentMargin props  1456cce"
"v4.9.8
bugfix: fix menu.locale do not wrok problem
feat: render menu data support locale
add 4.9.9 change log
v4.9.9","add 4.9.9 change log  e50205b
feat: render menu data support locale  c7f8ede
bugfix: fix menu.locale do not wrok problem  892983a"
"v4.7.3
bugfix:  if copyright and links falsy both, should not to render anything ()

* if copyright and links falsy both, should not to render nothing

* path-to-regexp的依赖改为react-router一致的；fix lint script;

* fix test case
style: fix fixedsidebar style error
add 4.7.4 changelog
chore: fix tsconfig warning
v4.7.4","chore: fix tsconfig warning  117fd4f
add 4.7.4 changelog  761b81b
style: fix fixedsidebar style error  8e91625
bugfix:  if copyright and links falsy both, should not to render anything ()  5cd27c4"
"v4.10.4
fix: 修复PageLoading拼写错误 ()

* fix: 修复PageLoading拼写错误

* fix: 修复icon为空字符串时控制台报错的问题
update use-json-comparison version
add 4.10.5 changelog
v4.10.5","add 4.10.5 changelog  d20930a
update use-json-comparison version  6f7077f
fix: PageLoading ()  1f3f2a8"
"v4.9.5
add 4.9.5 changelog
fix typo
fix when menuRender=false,padding have value error
bugfix: add default settings
v4.9.6","bugfix: add default settings  effd8e3
fix when menuRender=false,padding have value error  fdabceb
fix typo  19dac09"
"v4.10.7
bugfix: Prefer user configuration
please export  PageHeaderWrapperProps interface ()
feat: isMobile set Drawer visible = false

close
add 4.10.8 changelog
v4.10.8","add 4.10.8 changelog  e015477
feat: isMobile set Drawer visible = false  fb5cdd4
please export  PageHeaderWrapperProps interface ()  519f197
bugfix: Prefer user configuration  521bf7c"
"v4.10.6
doc: add 4.10.6 changelog
bugfix: fixed the issue that keys calculation would not be triggered during reload
doc: add 4.10.7 changelog
v4.10.7","doc: add 4.10.7 changelog  7db39c6
bugfix: fixed the issue that keys calculation would not be triggered during reload  a8f770f
doc: add 4.10.6 changelog  8cc17fb"
"v4.10.3
demo: update demo style
feat: use useJsonComparison
feat: Guaranteed that the generated key is the same every time
feat: sort dependencies
feat: menuProps supports overriding any menu props
feat: less component update
bugfix: fix SettingDrawer do not change url error
bugfix: remove some config
bugfix: update theme config
style: prettier all code
bugfix: first render do not change url
update snapshot
add 4.10.4 changelog
v4.10.4","add 4.10.4 changelog  ffbf8ed
update snapshot  afa2a7a
bugfix: first render do not change url  38a4190
style: prettier all code  f71d183
bugfix: update theme config  49d3ca4
bugfix: remove some config  bcfe854
bugfix: fix SettingDrawer do not change url error  db30e82
feat: less component update  cd4ddc9
feat: menuProps supports overriding any menu props  c039b4a
feat: sort dependencies  a8fd96f
feat: Guaranteed that the generated key is the same every time  7c740fb
feat: use useJsonComparison  4d46b9c
demo: update demo style  034b7ce"
"v4.10.5
doc: fix typo
code: remove unuse code
feat: WrapContent add debounce
spelling mistake ()
Update husky to version 4.0.0 ()
v4.10.6","Update husky to version 4.0.0 ()  e021658
spelling mistake ()  196fea9
feat: WrapContent add debounce  8bed9f9
code: remove unuse code  e6c6971
doc: fix typo  3398bb3"
"v4.11.2
🐛 bug: Fix wrong style when menu icon is empty
v4.11.3",bug: Fix wrong style when menu icon is empty  6f28f2d
"v4.10.15
bugfix: fix wrong height calculation

close
test: fix test
v4.10.16","test: fix test  17967fd
bugfix: fix wrong height calculation  76dcac1"
"v4.9.7
feat: add default height antd width
feat: add tabAnimated props ()

* feat: add tabAnimated props

* feat add tabProps props
dep: remove object.fromentries
bugfix: PageHeaderWrapper support disableContentMargin
feat: links menu support inlineCollapsed
update snapshot
style: add scrollbar  style
feat: pageTitleRender add info props
style: scrollbar style not mobile
refactor: better menu data formatter
:beers: : move footerDom
feat: use ResizeObserver support fold menu

ref
bigfix: validateDOMNesting error
feat: add pageLoading
refactoring: Refactoring settingDrawer
chore: remove fit
Added setting drawer Italian language support ()

* Added Italian language support

* Added Italian language support and renamed var

* code review

* fixed lint last row blank

* fix lint no-trailing-spaces
add 4.9.8 changelog
update snapshot
v4.9.8","add 4.9.8 changelog  81e4a76
Added setting drawer Italian language support ()  c58e65c
chore: remove fit  5361c01
refactoring: Refactoring settingDrawer  987aa2d
feat: add pageLoading  06f65b4
bigfix: validateDOMNesting error  bb5e2df
feat: use ResizeObserver support fold menu  69b41b0
: move footerDom  0006ea0
refactor: better menu data formatter  ff7ecac
style: scrollbar style not mobile  dd47a16
feat: pageTitleRender add info props  fbc8688
style: add scrollbar  style  4d9ec6b
update snapshot  15eb15d
feat: links menu support inlineCollapsed  9000325
bugfix: PageHeaderWrapper support disableContentMargin  7a9934d
dep: remove object.fromentries  36002d0
feat: add tabAnimated props ()  1c2a1e8
feat: add default height antd width  8064423"
"v4.10.13
feat: Optimize performance to reduce the number of renders
snapshots updated
v4.10.14","snapshots updated  23bcf40
feat: Optimize performance to reduce the number of renders  baea891"
"v4.10.8
feat: add umd verion
add 4.10.9 changelog
v4.10.9","add 4.10.9 changelog  417a951
feat: add umd verion  ecb95fa"
"v5.0.1
bugfix: Fix children  changes not refreshing
snapshots updated
v5.0.2","snapshots updated  cac1a5a
bugfix: Fix children  changes not refreshing  e2b46dd"
"v6.2.1
Update settingDrawer.ts ()

Adding in regional setting translations missing for en-US
🐛 bug: fix menuData no work error ()

* 🐛 bug: fix menuData no work error

* add test

* fix tsc

* fix ts error

* fix ts
v6.2.2","bug: fix menuData no work error ()  6c17d87
Update settingDrawer.ts ()  aa723d5"
"v5.0.3
Update np to version 6.1.0
Update jsdom to version 16.2.0
🍱 : migrate to dumi
📝: add  menu from serve demo
v5.0.4",": add  menu from serve demo  901220f
: migrate to dumi  024fb54
Update jsdom to version 16.2.0  1f23895
Update np to version 6.1.0  dfb2810"
"6.2.0
Update index.md
💄 UI: fix side fixed style error
🐛 bug: support menuContentRender==false
📦 package: remove father ()

* 📦 package: remove father

* fix ts lint

* fix tsc error
📸 snapshots: update snapshots
v6.2.1","package: remove father ()  fc09ab1
bug: support menuContentRender==false  e31e4ae
UI: fix side fixed style error  44a3597
Update index.md  9bd34f8"
"v5.0.5
build(deps-dev): bump @ant-design/compatible from 0.0.1-rc.1 to 1.0.1 ()

Bumps [@ant-design/compatible](https://github.com/ant-design/compatible) from 0.0.1-rc.1 to 1.0.1.
- [Release notes](https://github.com/ant-design/compatible/releases)
- [Commits](https://github.com/ant-design/compatible/compare/v0.0.1-rc.1...v1.0.1)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
📝 docs: update site
📌 versions: update dependencies
📌 versions: update dependencies
📝 docs: translate into English ()
📸 snapshots: snapshots updated
v5.0.6","snapshots: snapshots updated  038a327
docs: translate into English ()  4b3b833
versions: update dependencies  3e466bf
versions: update dependencies  93d0dc6
docs: update site  6f92a7b
build(deps-dev): bump @ant-design/compatible from 0.0.1-rc.1 to 1.0.1 ()  af87802"
"v4.10.10
build(deps-dev): bump stylelint from 12.0.1 to 13.0.0 ()

Bumps [stylelint](https://github.com/stylelint/stylelint) from 12.0.1 to 13.0.0.
- [Release notes](https://github.com/stylelint/stylelint/releases)
- [Changelog](https://github.com/stylelint/stylelint/blob/master/CHANGELOG.md)
- [Commits](https://github.com/stylelint/stylelint/compare/12.0.1...13.0.0)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>
feat: add remove icon warning
doc: add GitHub Button
doc: add star and issue button
feat: support theme conversion
doc: add  4.10.10 changelog
v4.10.11","doc: add  4.10.10 changelog  83c4fa4
feat: support theme conversion  87e81c5
doc: add star and issue button  eaa2cf7
doc: add GitHub Button  342eab3
feat: add remove icon warning  6642e43
build(deps-dev): bump stylelint from 12.0.1 to 13.0.0 ()  74d8b69"
"6.0.0
📝 docs: update demos
🐛 bug: Fix issues with different status
💄 UI: Adjust header spacing in mix mode
🐛 bug : Hide dark theme in mix mode
🚑 hotfix: default layout set to side
📸 snapshots: snapshot updated
6.0.1","snapshots: snapshot updated  698e16a
hotfix: default layout set to side  50f05f4
bug : Hide dark theme in mix mode  2529ee5
UI: Adjust header spacing in mix mode  f6f3b5f
bug: Fix issues with different status  995545f
docs: update demos  6271fe6"
"v5.0.10
🔥 clean: use @umijs/route-utils ()

* 🔥 clean: use @umijs/route-utils

* fix test error
📸 snapshots: snapshots updated
v5.0.11","snapshots: snapshots updated  dc5aba9
clean: use @umijs/route-utils ()  0a94657"
"v6.2.4
💄 UI: remove min height 100%
fix(typo): stop -> top ()
bug: fix error for subTitle unwork in PageContainer ()

Co-authored-by: Sergio Zhang <zhangpb@xiaoshouyi.com>
Fixed Theme Color setting drawer ()
Using intl on a few more example pages to help with internationalization ()
🐛 bug: fix menudata not using the latest version ()

* 🐛 bug: fix menudata not using the latest version

* snapshots updated
🔥 clean: remove logo ()
🐛 bug: children is null use hasChildren
📦 package: sort package.json
v6.2.5","package: sort package.json  5cd0120
bug: children is null use hasChildren  9053dad
clean: remove logo ()  d68a4b0
bug: fix menudata not using the latest version ()  850b6da
Using intl on a few more example pages to help with internationalization ()  28cfeb2
Fixed Theme Color setting drawer ()  814ba3d
bug: fix error for subTitle unwork in PageContainer ()  3c4b2b6
fix(typo): stop -> top ()  3336e3e
UI: remove min height 100%  2380cf5"
"v5.0.6
🐛 bug: Fix setState issues caused by debounce ()
🐛 bug: locales support ssr ()
📸 snapshots: snapshots update
🔥 clean: solve the update-on-async-rendering problem with react-helmet-async ()
💄 UI: the sidebar background color is always white
🍱 :  update site style
🐛 bug: fix getLanguage ts error
v5.0.7","bug: fix getLanguage ts error  537181a
:  update site style  d148289
UI: the sidebar background color is always white  a826127
clean: solve the update-on-async-rendering problem with react-helmet-async ()  40757a5
snapshots: snapshots update  05ec430
bug: locales support ssr ()  c1c4f0d
bug: Fix setState issues caused by debounce ()  bd687e7"
"v5.0.12
🐛 bugfix: Fix hideMenucrumb, bread does not work ()

* 🐛 bugfix: Fix hideMenucrumb, bread does not work

* add css export

* fix test
🐛 bug: rightContentRender default have a div ()
v5.0.13","bug: rightContentRender default have a div ()  f7dbe10
bugfix: Fix hideMenucrumb, bread does not work ()  91d3048"
"v4.10.0
site: change to father doc
demo: update demo
feat: suppor path is null
site: add search menu example
demo: demo add transition
update snapshots
site: add umi-plugin-githubpages plugin
update demo
add action badge

close
demo: update demo
bugfix: more greedy menu matching algorithms

close

add new demo
doc: add default open all menu demo
demo: add new demo that breadcrumb
demo: add icon font demo
site: open hash site js and css
bugfix: don use JSON.stringify

close
SettingDrawer""组件添加 hideCopyButton 属性 ()

* The SettingDrawer component adds the hideCopyButton property to control whether the copy configuration button is displayed and is suitable for hiding the component in a formal project.

* Add files via upload

* 删除bug录屏文件

* add SettingDrawer docs,test and example
demo: update demo
update snapshot
add 4.10.1 changelog
v4.10.1","add 4.10.1 changelog  3f688a2
update snapshot  3467c21
demo: update demo  68e9e94
SettingDrawer"" hideCopyButton  ()  b2c046d
bugfix: don use JSON.stringify  e5ad035
site: open hash site js and css  37a2848
demo: add icon font demo  1d07a1a
demo: add new demo that breadcrumb  82ea39c
doc: add default open all menu demo  2f1eefd
bugfix: more greedy menu matching algorithms  b8f6b2a
demo: update demo  8fa69f9
add action badge  97f0fb0
update demo  bceaf3b
site: add umi-plugin-githubpages plugin  e046377
update snapshots  9c7d764
demo: demo add transition  e814489
site: add search menu example  ecb0838
feat: suppor path is null  3c9b5ce
demo: update demo  4c72cbd
site: change to father doc  7cfbdcc"
"v5.0.4
🐛 bug: fix contentStyle not working
🐛 bug: fix an issue that looks like a path matching error

close
📝 docs： remove base use
💄 UI: Fix problems with top menu title spending too long

close ant-design/ant-design-pro

close  ant-design/ant-design-pro
💥 feat: add postMenuData prop

close
✨ feature: support onPageChange props ()

* ✨ feature: support onPageChange props

* ✅ tests: add onPageChange test
📝 docs: add 5.0.5 changeloh
🥅 bug: fix ts type error
v5.0.5","bug: fix ts type error  325963d
docs: add 5.0.5 changeloh  6748153
feature: support onPageChange props ()  851049a
feat: add postMenuData prop  cace4c1
UI: Fix problems with top menu title spending too long  9ad2016
docs remove base use  ab5db23
bug: fix an issue that looks like a path matching error  ed74c4b
bug: fix contentStyle not working  f87e24c"
"v5.0.9
build(deps-dev): bump @testing-library/react from 9.5.0 to 10.0.2 ()

Bumps [@testing-library/react](https://github.com/testing-library/react-testing-library) from 9.5.0 to 10.0.2.
- [Release notes](https://github.com/testing-library/react-testing-library/releases)
- [Changelog](https://github.com/testing-library/react-testing-library/blob/master/CHANGELOG.md)
- [Commits](https://github.com/testing-library/react-testing-library/compare/v9.5.0...v10.0.2)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>

Co-authored-by: dependabot-preview[bot] <27856297+dependabot-preview[bot]@users.noreply.github.com>
💄 UI:better dark theme ()
🔥 codestyle: prettier all code ()
💄 UI: Fix the wrong calculation of the content width on the right ()

* 💄 UI: Fix the wrong calculation of the content width on the right

* collapsed always false in navheader

* snapshots updated
🐛 bugfix: fix router base no work warning()

解决配置了路由base配置时，面包屑跳转prefix丢失的问题 

* fix: 解决配置了base 场景时的breadcrumb 跳转问题

* fix: 增加ssr 场景下的兼容处理

* fix: 增加ssr场景下的默认值
修改错别字 ()
📝 docs: 修改错别字 ()
Update puppeteer to version 3.0.1 ()

Co-authored-by: depfu[bot] <23717796+depfu[bot]@users.noreply.github.com>
🐛bugfix: 修复title 非string时导致的错误场景 ()

* fix: 解决title 为对象时的问题

* fix: 以用户传入的默认title 为准

* fix: 代码风格改进

* fix: 增加title 为空的判断

* support pageName

Co-authored-by: chenshuai2144 <qixian.cs@outlook.com>
v5.0.10","bugfix: title string ()  e6203de
Update puppeteer to version 3.0.1 ()  23dd1f0
docs:  ()  2f0b15a
bugfix: fix router base no work warning()  111c8c7
UI: Fix the wrong calculation of the content width on the right ()  9466054
codestyle: prettier all code ()  6c11ac6
Update @testing-library/react to version 10.0.2 ()  744183a
UI:better dark theme ()  1cbae49
build(deps-dev): bump @testing-library/react from 9.5.0 to 10.0.2 ()  b470ce0"
"v5.0.0
Update lint-staged to version 10.0.2 ()
feat add 5.0 changelog
Update @types/jest to version 25.1.0 ()
Update cross-env to version 7.0.0 ()
feat: Optimize performance to reduce the number of renders
docs: add 5.0.1 changelog
v5.0.1","docs: add 5.0.1 changelog  43dad09
feat: Optimize performance to reduce the number of renders  23b824c
Update cross-env to version 7.0.0 ()  d108916
Update @types/jest to version 25.1.0 ()  85a9b6d
feat add 5.0 changelog  2e572cb
Update lint-staged to version 10.0.2 ()  f8b8348
Update stylelint to version 13.0.0 ()  aa9d2fd"
"5.0.17
build(deps-dev): bump gh-pages from 2.2.0 to 3.1.0 ()

Bumps [gh-pages](https://github.com/tschaub/gh-pages) from 2.2.0 to 3.1.0.
- [Release notes](https://github.com/tschaub/gh-pages/releases)
- [Changelog](https://github.com/tschaub/gh-pages/blob/main/changelog.md)
- [Commits](https://github.com/tschaub/gh-pages/compare/v2.2.0...v3.1.0)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>

Co-authored-by: dependabot-preview[bot] <27856297+dependabot-preview[bot]@users.noreply.github.com>
build(deps-dev): bump puppeteer from 3.3.0 to 4.0.0 ()

Bumps [puppeteer](https://github.com/puppeteer/puppeteer) from 3.3.0 to 4.0.0.
- [Release notes](https://github.com/puppeteer/puppeteer/releases)
- [Commits](https://github.com/puppeteer/puppeteer/compare/v3.3.0...v4.0.0)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>

Co-authored-by: dependabot-preview[bot] <27856297+dependabot-preview[bot]@users.noreply.github.com>
build(deps-dev): bump @types/jest from 25.2.3 to 26.0.0 ()

Bumps [@types/jest](https://github.com/DefinitelyTyped/DefinitelyTyped/tree/HEAD/types/jest) from 25.2.3 to 26.0.0.
- [Release notes](https://github.com/DefinitelyTyped/DefinitelyTyped/releases)
- [Commits](https://github.com/DefinitelyTyped/DefinitelyTyped/commits/HEAD/types/jest)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>

Co-authored-by: dependabot-preview[bot] <27856297+dependabot-preview[bot]@users.noreply.github.com>
build(deps-dev): bump @ant-design/dark-theme from 1.0.3 to 2.0.2 ()

Bumps [@ant-design/dark-theme](https://github.com/ant-design/ant-design-dark-theme) from 1.0.3 to 2.0.2.
- [Release notes](https://github.com/ant-design/ant-design-dark-theme/releases)
- [Commits](https://github.com/ant-design/ant-design-dark-theme/commits)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>

Co-authored-by: dependabot-preview[bot] <27856297+dependabot-preview[bot]@users.noreply.github.com>
💄 feat: layout new style ()

* init

* update less

* update style

* update less var

* update style

* update style

* update less

* add menuExtraRender demo

* update code

* add headerTitleRender and headerContentRender

* add headerTitleRender and headerContentRender

* add headerTitleRender and headerContentRender

* support mix demo

* less inlineIndent

* close  props.location?.pathname === /welcome/welcome

* less config

* support prefixcls

* change box-shandow style

* remove ResizeObserver

* default style

* new demo

* less config

* use icon props

* lint style

* update demo

* 折叠按钮收缩时，不弹出标题 ()

* less BlockCheckbox render

* close title

* remove demo test

* fix test

* v6.0.0-0

* v6.0.0-1

* hide default title render in mix

ref ant-design/ant-design-pro

* snapshot update

* v6.0.0-2

* 🐛 bug: fix defaultOpenAll no work preblem

close ant-design/ant-design-pro

* ✅ tests: fix test for rc-menu

* 💄 UI :fix error font style

* 🐛 bug: update style

* update snapshot

* v6.0.0-3

* 🐛 bug: Fix menu shows dependency in phone mode

close

* update snapshot

* v6.0.0-4

* update

* update

* clear jest

* better style

* better style

* better style

* better demo

* update style

* v6.0.0-5

* demo update

* set siderWidth to 48

* fix test

* 6.0.0-6

* fix moblie style

* snapshots updated

* 6.0.0-7

* 💥 feat: support splitMenus

* 💥 feat: support splitMenus

* update demos

* snapshots updated

* fix ts error

* fix lint error

* v6.0.0-8

* 💄 UI: Optimize the style of the fixed width

* ⚡️ performance: Better performance

* less info

* ⚡️ performance: use real key for dom

* 💄 UI: alway show collapsed button

* change eslint version

* improved translation

close

* fix lint

* fix test

* fix test

* fix lint error

Co-authored-by: 海军 <35563401+gehaijun@users.noreply.github.com>
6.0.0
📝 docs: update demos
🐛 bug: Fix issues with different status
💄 UI: Adjust header spacing in mix mode
🐛 bug : Hide dark theme in mix mode
🚑 hotfix: default layout set to side
📸 snapshots: snapshot updated
6.0.1
🐲 boss :compatible layout props ()

* ?? :compatible layout props

* fix test

* bugfix
💥 feat: support footerbar ()

* 💥 feat: support footerbar

* add more export type

* fix lint error

* support renderContent

* add test

* add more test

* do not use a href

* remove default /

* remove unuse test
Update index.tsx ()

* Update index.tsx

if upgrade to the current version, the tab can't work on the 'PageContainer' component. So fix it.

* fix test error

* rebase master

* fix lint error

* fix test

Co-authored-by: chenshuai2144 <qixian.cs@outlook.com>
v6.1.0
📝 docs: add getting-started doc ()

* add doc

* change doc

* update doc

* 优化layout

* update doc

* update demo

* fix lint

* 💥 feat: add menuContentRender props

* docs: beta demos

* update demos

* fix ts error
6.2.0
Update index.md
💄 UI: fix side fixed style error
🐛 bug: support menuContentRender==false
📦 package: remove father ()

* 📦 package: remove father

* fix ts lint

* fix tsc error
📸 snapshots: update snapshots
v6.2.1
Update settingDrawer.ts ()

Adding in regional setting translations missing for en-US
🐛 bug: fix menuData no work error ()

* 🐛 bug: fix menuData no work error

* add test

* fix tsc

* fix ts error

* fix ts
v6.2.2
👷 CI: add coverage
Update README.md
fix ci
snapshots updated for antd
🎨 format: add loading
build(deps): bump omit.js from 1.0.2 to 2.0.2 ()

Bumps [omit.js](https://github.com/benjycui/omit.js) from 1.0.2 to 2.0.2.
- [Release notes](https://github.com/benjycui/omit.js/releases)
- [Commits](https://github.com/benjycui/omit.js/compare/1.0.2...v2.0.2)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>

Co-authored-by: dependabot-preview[bot] <27856297+dependabot-preview[bot]@users.noreply.github.com>","fix ci warning  5d9be6c
hideChildrenInMenu no inclubs in item render  eaf6195"
"v5.0.7
✅ tests: add tsc check ()

* ✅ tests: add tsc check

* exclude add tests
🚀 Deploy: add auto deploy ()
Update prettier to version 2.0.1 ()

Co-authored-by: depfu[bot] <23717796+depfu[bot]@users.noreply.github.com>
🐛 bug: remame variable not duplicates with antd
v5.0.8","bug: remame variable not duplicates with antd  0328e11
Update prettier to version 2.0.1 ()  eb1a9be
Deploy: add auto deploy ()  cb2d6b9
tests: add tsc check ()  652af16"
"v5.0.2
bugfix: fix wrong height calculation

close
doc up father doc version
test: snapshots updated
bugfix: fix ts lint error
v5.0.3","bugfix: fix ts lint error  47276b3
test: snapshots updated  8135f9a
doc up father doc version  226e679
bugfix: fix wrong height calculation  d3edafb"
"v5.0.14
外部链接菜单项多了一个空格 ()
correct word spell ()
update doc style ()
🐛 bug: fix menu children all hideInMenu bug ()

* 🐛 bug: fix menu children all hideInMenu bug

* add test
v5.0.15","bug: fix menu children all hideInMenu bug ()  7e8f657
update doc style ()  2f4d6c8
correct word spell ()  54c8bc5"
"Prepare for version 2.10.0
added desu filter
GOTO bandpasses ()

* Add GOTO as a builtin bandpasses
Prepare for v2.10.1 release","Add GOTO_ () and DES u_ () filters.
.. _GOTO: https://goto-observatory.org/
.. _DES u: https://noirlab.edu/science/programs/ctio/filters/Dark-Energy-Camera"
"Add `ReturnTypeWillChange` attribute
Run tests against PHP 8.3
Sync local fallback files - 2023-12-03
Sync local fallback files - 2023-12-10
Sync local fallback files - 2023-12-17
Sync local fallback files - 2023-12-24
Sync local fallback files - 2023-12-31
Sync local fallback files - 2024-01-07
Sync local fallback files - 2024-01-14
Sync local fallback files - 2024-01-28
Sync local fallback files - 2024-02-04","Changes
Improve PHP 8.3 Support by @swissspidy in
Meta
Sync local fallback files by @github-actions in
Sync local fallback files by @github-actions in
Full Changelog: 0.11.4...0.11.5"
"Sync spec test suite - 2022-04-20
Fix SSR sizer responsiveness issue
Implement SSR for amp-audio
Use boolean attribute value instead of empty string

Co-authored-by: Weston Ruter <westonruter@google.com>
Fix failing tests
Fix error when source is missing closing head tag
Remove boilerplate error for SSR amp-audio
Fix coverage issue
Use setAttributeNode instead of appendChild to set attribute

Co-authored-by: Weston Ruter <westonruter@google.com>","Changes
Implement SSR for amp-audio by @ediamin in
Bugfixes
Fix SSR sizer responsiveness issue by @ediamin in
Fix error when source is missing closing head tag by @ediamin in
Meta
Sync spec test suite by @github-actions in
Full Changelog: 0.11.1...0.11.2"
"Sync local fallback files - 2021-05-05
Skip detecting ASCII when charset is set to ""US-ASCII""
Fix comment style
Sync local fallback files - 2021-05-06","Bugfixes
Skip detecting ASCII when charset is set to ""US-ASCII"" []"
"Fixed Date Issue
fixes a date issue","What's Changed
Allow logging of Az and El (i.e. fix number format) by @phl0 in
Properly sanitize RX_PWR field when importing ADIF
Dashboard Upcoming DXpedition callsigns link to dxheat.
Clublog Uploads now remap satellite names to match what LOTW Accepts.
Fixed language bug on the advanced search table.
Full Changelog: 2.6.5...2.6.6"
"Update account_lang.php

Corrected some translation mistakes
Update adif_lang.php

Corrected translation mistakes
Update admin_lang.php

Corrected translation mistakes
Update awards_lang.php

Translated the part about WAJA
Update contesting_lang.php

Corrected translation mistakes
Update export_lang.php
Update filter_lang.php
Update general_words_lang.php
Update gridsquares_lang.php
Update lotw_lang.php
Update menu_lang.php
Update menu_lang.php
Update notes_lang.php
Update options_lang.php
Update options_lang.php

Add Simplified Chinese Translation
Update qslcard_lang.php

Add Simplified Chinese Translation for QSL operations
Update qso_lang.php
Update station_lang.php
Update statistics_lang.php
Re-add POTA menu item to awards
Trim also inner whitespace from VUCC_GRIDS
Also take care of existing VUCC_GRIDS stored with whitespace
Fix migration script (up added different comumn name)
Make it more failsafe
Mark pass times green if it is workable before timeout
Also use SIG + SIG_INFO in tweets and toots
Set migration for 2.6.3","What's Changed
WWFF Improvements by @hugosilvaparagramanet in
Retry QRZ.com for compound callsigns by @hugosilvaparagramanet in
Improve DataTables translation functionality by @Tamh in
Corrections and New Translations for Simplified Chinese by @IzumiChino in
Update the Spanish translation with the new strings by @Tamh in
Improvements on WWFF ADIF Export by @hugosilvaparagramanet in
In QSO logging, don't refresh callsign data if it's not changed by @hugosilvaparagramanet in
Re-add POTA menu item to awards by @phl0 in
Trim VUCC_GRIDS Grids by @phl0 in
Fix migration by @phl0 in
Mark pass times green if it is workable before timeout by @phl0 in
Also use SIG + SIG_INFO in tweets and toots by @phl0 in
New Contributors
@IzumiChino made their first contribution in
Full Changelog: 2.6.2...2.6.3"
"Italian Translation Updated
Italian Translation Updated
Update .gitignore

At the moment would prefer to track those directories
Little translate correction
OpenSSL signatures need a newline after base64 string
Strip full path from upload filename
Remove deprecated way of creating upload files
tag 2.6.12","What's Changed
Added support for the GMDX Summer Challenge (Under Awards) by @magicbug
Improved Italian Translations by @emics
LoTW Upload Improvements by @phl0
Full Changelog: 2.6.11...2.6.12"
"[Awards][GMDX] error in SQL
Added missing Turkish translations to date
Update footer.php
[Dashboard] Map now follows user selection for showing icon and colour

Visual decision to not show home marker or locs on the dashboard
2.6.13","What's Changed
Dashboard Logbook and Map now dynamically update without reloading the page by @magicbug
Fixed bug in LoTW Sync code that made Newfoundland QSOs fail to upload by @magicbug
Implemented Gridmaster Map for the UK and Crown Dependencies by @magicbug
WAB Reference can now be defined in Station Locations by @magicbug
Italian Grammar and translation corrections by @emics in
Added missing Turkish translations by @HakanKoseoglu in
Russian translation update by @R1BLH in
Full Changelog: 2.6.12...2.6.13"
"v0.6.2

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>
sessions: sign-out bug fixes ()

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>
v0.6.3

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>","Fixed
sessions: signout bug , fixes @desimone ()"
"v0.4.0

deployment: prepare v0.4.0 (
Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>
bug: fix forward-auth redirect ()
proxy: verify endpoint strip added callback params ()

- proxy: use distinct host route for forward-auth handlers
- proxy: have auth middleware set pomerium headers for request and response
v0.4.1

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>","UPGRADING FROM 0.4.0
Breaking
Previously, routes were verified by taking the downstream applications hostname in the form of a path (e.g. ${fwdauth}/.pomerium/verify/httpbin.some.example) variable. The new method for verifying a route using forward authentication is to pass the entire requested url in the form of a query string (e.g. ${fwdauth}/.pomerium/verify?url=https://httpbin.some.example) where the routed domain is the value of the uri key.
Note that the verification URL is no longer nested under the .pomerium endpoint.
For example, in nginx this would look like:
-    nginx.ingress.kubernetes.io/auth-url: https://fwdauth.corp.example.com/.pomerium/verify/httpbin.corp.example.com?no_redirect=true
-    nginx.ingress.kubernetes.io/auth-signin: https://fwdauth.corp.example.com/.pomerium/verify/httpbin.corp.example.com
+    nginx.ingress.kubernetes.io/auth-url: https://fwdauth.corp.example.com/verify?uri=$scheme://$host$request_uri
+    nginx.ingress.kubernetes.io/auth-signin: https://fwdauth.corp.example.com?uri=$scheme://$host$request_uri
Fixed
Fixed an issue where requests handled by forward-auth would not be redirected back to the underlying route after successful authentication and authorization. [GH-363]
Fixed an issue where requests handled by forward-auth would add an extraneous query-param following sign-in causing issues in some configurations. [GH-366]"
"add More Resources section () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Update security.md () ()

Unfortunately, it looks like all the low-effort security reports we get are coming from this list. Many times, the ""researcher"" is actually reporting a vulnerability on their own machine (foo.localhost.pomerium.io). 

https://github.com/sushiwushi/bug-bounty-dorks/blob/master/dorks.txt#L70

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
copy refresh () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
config: fix policy matching for regular expressions () ()

* config: fix policy matching for regular expressions

* compile regex in validate, add test

* fix test

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
DOCS: New page: Glossary () ()

* first draft of glossary

* Apply suggestions from code review

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* add crosslinks and external references

* Apply suggestions from code review

Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>

* adjust id-aware proxy link

* rm hyphen

* replace id-aware with context-aware proxy

* update keywords

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>","Full Changelog
Fixed
config: fix policy matching for regular expressions (@backport-actions-token[bot])
Documentation
DOCS: New page: Glossary (@backport-actions-token[bot])
Docs: code-server guide refresh (@backport-actions-token[bot])
Update security.md (@backport-actions-token[bot])"
"deps: bump envoy to v1.17.3 () ()

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
Revert ""authenticate,proxy: add same site lax to cookies ()"" () ()

This reverts commit d9cc26a2e0020db1cc9b046a596152a07609387a.

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
Update programmatic-access.md () ()

* Update programmatic-access.md

tries to give a bit more context to the curl snippet to get a token for programmatic access

include bastion host remote port forwarding and some other notes

include headers in request mention

update programmatic access

Update programmatic-access.md

Update programmatic-access.md

update programmatic access

* fumpt

Co-authored-by: Bobby DeSimone <bobbydesimone@gmail.com>

Co-authored-by: Joseph Chiocchi <input.output@gmail.com>
Co-authored-by: Bobby DeSimone <bobbydesimone@gmail.com>","Full Changelog
Fixed
Revert ""authenticate,proxy: add same site lax to cookies"" (@github-actions[bot])
Documentation
Update programmatic-access.md (@github-actions[bot])"
"Docs: Add Grafana Integration Guide () ()

* first draft

* re-arrange and clarify routes

* clarify troubleshooting resolution

* Apply suggestions from code review

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>

* consolidate variables

* post-shuffle adjustment

* Apply suggestions from code review

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>

* Update grafana.md

Made grammar/spelling changes

* Update docs/guides/grafana.md

* Update docs/guides/grafana.md

* Update docs/guides/grafana.md

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>
Docs: Update JWT Verification Guide () ()

* WIP update

* init mutual auth topic page

* WIP

* update JWT verification guide

* s/Java/Json/g

* remove Mutual Auth topic page and references

The new page will be reviewed and added as a separate PR

* fix JSON capitalization throughout

* copy edit to jwt-verification.md

Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>
Document Pomerium Policy Language () ()

* Init PPL doc

* copy edits

* Apply suggestions from code review

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>

* Apply suggestions from code review

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* Update docs/docs/topics/ppl.md

* whitespace cleanup

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
Docs: Update Securing Kubernetes Guide () ()

* Update Securing k8s for Ingress Controller (incomplete)

* enable apiProxy

* finish updated draft

* rm outdated cli install method

* Apply suggestions from code review

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>

* add skip tls verify

also rm errant indentation and break up some long commands

* Update docs/guides/kubernetes.md

Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>

* Update docs/guides/kubernetes.md

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>
Docs: Update Kubernetes Dashboard Guide () ()

* update dashboard guide...
This new version takes advantage of the RBAC options the Pomerium Helm chart now makes available

* Update docs/guides/kubernetes-dashboard.md

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>

* edit intro para

* Apply suggestions from code review

Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>

* remvove numbered list of one

* Update docs/guides/kubernetes-dashboard.md

Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>

* typo correction

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>
fix indentation () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
add Grafana to Guides index () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
authorize: fix nginx infinite redirect ()
deployment: pin release to latest go version ()","Full Changelog
Fixed
authorize: fix nginx infinite redirect (@calebdoxsey)
Documentation
DOCS: add Grafana to Guides index (@backport-actions-token[bot])
DOCS: Fix indentation in API doc (@backport-actions-token[bot])
Docs: Update Kubernetes Dashboard Guide (@backport-actions-token[bot])
Docs: Update Securing Kubernetes Guide (@backport-actions-token[bot])
Document Pomerium Policy Language (@backport-actions-token[bot])
Docs: Update JWT Verification Guide (@backport-actions-token[bot])
Dependency
deps: pin release to latest go version (@travisgroth)"
"DOCS: New page: Glossary () ()

* first draft of glossary

* Apply suggestions from code review

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* add crosslinks and external references

* Apply suggestions from code review

Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>

* adjust id-aware proxy link

* rm hyphen

* replace id-aware with context-aware proxy

* update keywords

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>
Docs: Rewrite Istio Guide for Ingress Controller () ()

* istio rewrite, 90%

* complete istio rewrite

* Apply suggestions from code review

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>

* fix indentation

* precommit

* Apply suggestions from code review

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>

* add & fix glossary links

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
clarify base path for idp_provider_url () ()
Update enterprise changelog for v0.16.0 () ()

* Update enterprise changelog for v0.16.0

* fmt

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>

* Update upgrading.md

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
Fix minor typo in gitlab.md () ()

Co-authored-by: daethnir <bri@ifokr.org>
demo git over TCP tunnel () ()

* demo git over TCP tunnel

* add tip

* Apply suggestions from code review

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
auth0: support explicit domains in the service account () ()

* auth0: support explicit domains in the service account

* also handle FromOptions

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
DOCS: Clarify renaming of claims with underscores () ()

* Clarify renaming of claims with underscores

* copy edits

One to the proposed change, one to existing language

Co-authored-by: alexfornuto <afornuto@pomerium.com>

Co-authored-by: Alex <52292902+alexrudd2@users.noreply.github.com>
Co-authored-by: alexfornuto <afornuto@pomerium.com>
Update nginx example with verify port () ()

80->8000

Co-authored-by: Yarden Shoham <hrsi88@gmail.com>
document enterprise enrollment option () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
deployment: only include pomerium binary ()
overwrite page-edit for license () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
fix metadata description () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
update timeoutes reference () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
update CA-related reference copy () ()

These changes better differentiate which settings affect upstream and downstream CAs

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
update verify port () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
update Enterprise docs for 0.16.0 () ()

* update Enterprise docs for 0.16.0

* Update docs/enterprise/upgrading.md

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>

* more docs, plus cross-links

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>","Full Changelog
Fixed
deployment: only include pomerium binary (@travisgroth)
auth0: support explicit domains in the service account (@backport-actions-token[bot])"
"envoyconfig: add virtual host domains for certificates in addition to routes ()

* envoyconfig: add virtual host domains for certificates in addition to routes

* Update pkg/cryptutil/certificates.go

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* Update pkg/cryptutil/tls.go

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* comments

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
upgrade envoy to v1.23.1 ()

upgrade envoy to v1.23.1 ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
authenticate: get/set identity provider id for all sessions ()

authenticate: get/set identity provider id for all sessions ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>","Changelog
c0a8870 authenticate: get/set identity provider id for all sessions ()
c3ef43c upgrade envoy to v1.23.1 ()
Docker images
docker pull pomerium/pomerium:v0.19.1
docker pull pomerium/pomerium:nonroot-v0.19.1
docker pull pomerium/pomerium:debug-v0.19.1
docker pull pomerium/pomerium:debug-nonroot-v0.19.1"
"docs: v0.10.1 changelog ()

* Update changelog for v0.10.1

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
autocert: fix locking issue () ()
Backport go 1.15 changes for 0-10-0 ()

* pkg/storage/redis: use SANs cert

Since go1.15, X.509 CommonName is deprecated, switch to a SANs
certificate for test redis TLS.

While at it, add instruction to genearte cert and build test image.

See: https://golang.org/doc/go1.15#commonname

* config: do not test for exact route id

Different go version can genearte different route id, due to the fact
that we are relying on xxhash.

* internal/controlplane: mocking policy name in test

We don't have to test for exact policy name, as it does not make sense
and force us to change test every new go release.

Co-authored-by: Cuong Manh Le <cuong.manhle.vn@gmail.com>
[Backport 0-10-0] internal/directory/okta: improve API requests ()

* internal/directory/okta: add limiter to query okta API

Okta only allows 100 requests per minute, so apply the default rate
limit 1 QPS for it.

Fixes

* internal/directory/okta: use okta filter to get updated groups

Okta API supports filter to get updated groups only, we can adopt that
to reduce number of requests to okta API, hence reduce chance that we
reach the rate limit.

Updates

* internal/directory/okta: fix wrong API query filter

Okta uses space "" "" instead of plus sign ""+"" in query filter.
See https://developer.okta.com/docs/reference/api-overview/#filtering

* internal/directory: use default QPS setting for backport

Co-authored-by: Cuong Manh Le <cuong.manhle.vn@gmail.com>
docs: update changelog for 0.10.2 ()","Changes
Improving okta API requests @cuonglm GH-1278
internal/directory/okta: fix wrong API query filter @cuonglm GH-1296
Rate limit for okta @cuonglm GH-1271
Fixed
autocert: fix locking issue @calebdoxsey GH-1310"
"changelog: v0.25.1 ()

* changelog: v0.25.1

* use actual PR authors
envoy: upgrade to v1.28.2 ()

* envoy: upgrade to v1.28.2
* fallback to 1.28.0 for macos","What's Changed
envoy: upgrade to v1.28.2 by @wasaga in
Full Changelog: v0.25.1...v0.25.2"
"authorize: add request id to context ()

* authorize: add request id to context

* fix context keys
publish to any-distro () ()

(cherry picked from commit bb2b114a56a03d935b217644a7f766f204570a0e)
postgres: remove not null constraint on data column of record changes table ()

postgres: remove not null constraint on data column of record changes table ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
Merge pull request from GHSA-pvrc-wvj2-f59p

* authorize: normalize URL query params

* config: enable envoy normalize_path option

* remove pomerium routes logic

---------

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>","Security
This release fixes a bug whereby specially crafted requests could result in incorrect authorization decisions made by Pomerium. CVE-2023-33189.
What's Changed
publish to any-distro () by @calebdoxsey in
postgres: remove not null constraint on data column of record changes table by @backport-actions-token in
Full Changelog: v0.18.0...v0.18.1"
"backport-3980-to-0-21-0 ()
webauthn: only return known device credentials that match the given type ()

webauthn: only return known device credentials that match the given type ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
fix webauthn url ()

fix webauthn url ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
derivecert: fix ecdsa code to be deterministic ()

derivecert: fix ecdsa code to be deterministic ()

* derivecert: fix ecdsa code to be deterministic

* lint

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
authenticate: fix authenticate_internal_service_url for all in one ()

authenticate: fix authenticate_internal_service_url for all in one ()

Co-authored-by: Denis Mishin <dmishin@pomerium.com>
authenticate: don't require a session for sign_out ()

authenticate: don't require a session for sign_out ()

authenticate: dont require a session for sign_out

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
authenticate: fix callback handler for split mode ()

authenticate: fix callback handler for split mode ()

fix auth handler for split mode

Co-authored-by: Denis Mishin <dmishin@pomerium.com>
authenticate: fix identity provider id in encrypted query string ()

authenticate: fix identity provider id in encrypted query string ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
Co-authored-by: Denis Mishin <dmishin@pomerium.com>","Changelog
Full Changelog
Changed
authenticate: fix identity provider id in encrypted query string (@backport-actions-token[bot])
authenticate: fix callback handler for split mode (@backport-actions-token[bot])
authenticate: don't require a session for sign_out (@backport-actions-token[bot])
authenticate: fix authenticate_internal_service_url for all in one (@backport-actions-token[bot])
derivecert: fix ecdsa code to be deterministic (@backport-actions-token[bot])
fix webauthn url (@backport-actions-token[bot])
webauthn: only return known device credentials that match the given type (@backport-actions-token[bot])"
"use https to download python api lib () ()

(cherry picked from commit 254e2f7ce9c6469ed09a43b7cf036fc9e36d508c)

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
update helm values file () ()

(cherry picked from commit 77911d151cdd2bd396d42436ec23b30ff4d5d1bd)

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
add device identity video () ()

(cherry picked from commit eda30cbf86c0dd7f0374759bb9f53eeee75fc0af)

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
DOCS: Update changelog () ()

* update changelog

* Update docs/docs/CHANGELOG.md

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
(cherry picked from commit a5148c3b9efa8fa5e080310d7d9516a6ae500a81)

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
authenticate: fix internal service URL dashboard redirect () ()

(cherry picked from commit 464ccdf7674bdc9e191fdcd5eff9eed7359233c9)
fix: close the ticker after opened () ()

This may cause a high cpu usage on each call

Signed-off-by: Seena Fallah <seenafallah@gmail.com>
(cherry picked from commit a2d2f34e2473293930e81a7d5cca01358bfbb563)

Co-authored-by: Seena Fallah <seenafallah@gmail.com>
httputil/reproxy: fix policy transport () ()

(cherry picked from commit 6b663ba53fcb79abdb18cc7cf3115c8b1cb82f6f)

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
Update docs for supported Ingress annotations () ()

Signed-off-by: TJ Wesolowski <wojoinc@pm.me>
(cherry picked from commit 5fff3c3a7a900ae5e4e5a146faf204a3653271e3)

Co-authored-by: Thomas John Wesolowski <wojoinc@pm.me>
authenticate: fix internal service URL CORS check () ()

(cherry picked from commit 61ffeb837d478efe13e1b787989194792b06ab87)

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>","Changes
authenticate: fix internal service URL dashboard redirect by @calebdoxsey in
fix: close the ticker after opened by @clwluvw
httputil/reproxy: fix policy transport by @calebdoxsey
authenticate: fix internal service URL CORS check by @calebdoxsey in
Docs
DOCS: update helm values file
DOCS: Add device identity video
DOCS: Update changelog
Update docs for supported Ingress annotations
Full Changelog: v0.17.2...v0.17.3"
"envoyconfig: disable validation context when no client certificates are required ()

envoyconfig: disable validation context when no client certificates are required ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
fix WillHaveCertificateForServerName check to be strict match for derived cert name ()

fix WillHaveCertificateForServerName check to be strict match for derived cert name ()

Co-authored-by: Denis Mishin <dmishin@pomerium.com>
improve certificate matching performance ()

improve certificate matching performance ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
envoy: set re2 limits very high ()

envoy: set re2 limits very high ()

* envoy: set re2 limits very high

* fix test

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
databroker: sort configs ()

databroker: sort configs ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
databroker: fix fast forward ()

databroker: fix fast forward ()

* databroker: sort configs

* databroker: fix fast-forward

* newest not oldest

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
Merge pull request from GHSA-pvrc-wvj2-f59p

* wip

* authorize: use route id from envoy for policy evaluation

* remove log

* handle error from route id

* authorize: normalize URL query params

* config: enable envoy normalize_path option

* fix tests

---------

Co-authored-by: Kenneth Jenkins <51246568+kenjenkins@users.noreply.github.com>","Security
This release fixes a bug whereby specially crafted requests could result in incorrect authorization decisions made by Pomerium. CVE-2023-33189.
What's Changed
fix WillHaveCertificateForServerName check to be strict match for derived cert name by @backport-actions-token in
improve certificate matching performance by @backport-actions-token in
envoy: set re2 limits very high by @backport-actions-token in
databroker: sort configs by @backport-actions-token in
databroker: fix fast forward by @backport-actions-token in
Full Changelog: v0.22.1...v0.22.2"
"docs: update 0.10.4 changelog ()
redis: use pubsub instead of keyspace events ()
Update changelog for v0.10.5 ()","Changes
redis: use pubsub instead of keyspace events @calebdoxsey GH-1451"
"update v0.15 changelog ()
docs: update default version to v0.15 () ()

* docs: update default version to v0.15

* Update docs/.vuepress/config.js

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
docs: update branding () ()

- add svg logos
- adjust colors
- add favicon
- remove outdated demo

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
Hack the logo to point to the marketing site () ()

Co-authored-by: Alex Fornuto <alex@fornuto.com>
specify expected audience in Console config () ()

Co-authored-by: Alex Fornuto <alex@fornuto.com>
options: remove refresh_cooldown, add allow_spdy to proto () ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
docs: update branding, concepts () ()

* Pomerium Enterprise not Pomerium Enterprise Console to be consistent.

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>

* s/The Pomerium Enterprise/Pomerium Enterprise/g

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>

* update concepts

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>

* Update docs/enterprise/about.md

Co-authored-by: Alex Fornuto <alex@fornuto.com>

* Update docs/enterprise/concepts.md

Co-authored-by: Alex Fornuto <alex@fornuto.com>

Co-authored-by: Alex Fornuto <alex@fornuto.com>

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
Co-authored-by: Alex Fornuto <alex@fornuto.com>
Update binary install doc () ()

* fix route block in example config

* Update binary install to include OS packages

* update references to policy docs

Co-authored-by: Alex Fornuto <alex@fornuto.com>
Enterprise Upgrade & Changelog Pages () ()

* update enterprise reference source

* add upgrade and changelog pages

Co-authored-by: Alex Fornuto <alex@fornuto.com>
chore(deps): bump github.com/go-redis/redis/v8 from 8.11.1 to 8.11.2 () ()

Bumps [github.com/go-redis/redis/v8](https://github.com/go-redis/redis) from 8.11.1 to 8.11.2.
- [Release notes](https://github.com/go-redis/redis/releases)
- [Changelog](https://github.com/go-redis/redis/blob/master/CHANGELOG.md)
- [Commits](https://github.com/go-redis/redis/compare/v8.11.1...v8.11.2)

---
updated-dependencies:
- dependency-name: github.com/go-redis/redis/v8
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
docs: update enterprise helm instructions to use main repo () ()

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
Document tracing sample rate in console () ()

* document tracing sample rate in console

* Update docs/enterprise/console-settings.yaml

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>

Co-authored-by: Alex Fornuto <alex@fornuto.com>
Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
Document moving routes () ()

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
docs: clarify  custom request header limitations () ()

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
wrap header example values as inline code. () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
replace bdd@pom with user@example () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Update Docker Quickstart () ()

* Implement partial files

* fix markdown link

* Update Quickstart Doc

This update simplifies the quickstart process by assuming a local test environment without a TLS solution or a FQDN

* add TLS warning

* point to local verify container

* rm empty file

* reference Certificate topic page instructions

* update mkcert instructions

* Update docs/docs/install/readme.md

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* Update docs/partials/install-mkcert.md

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* Update examples/config/config.docker.yaml

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* Update examples/config/config.docker.yaml

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* Update examples/config/config.docker.yaml

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* Update examples/config/config.docker.yaml

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* review edits

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
adjust comment blocking () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Update Okta IdP doc () ()

* update Okta idp doc

* optimize pngs
reorganize pngs
fix typos

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>

Co-authored-by: Bobby DeSimone <bobbydesimone@gmail.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: Bobby DeSimone <bobbydesimone@gmail.com>
document binding service to 443 () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Update IdP Overview Page () ()

* save dex-freeipa content in unpublished doc

* remove dex/freeIPA content, refresh IdP overview

* rm whitespace

* Update docs/docs/identity-providers/readme.md

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* Update docs/docs/identity-providers/readme.md

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* copy edits

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
update Azure IdP doc () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Auth0 Doc Refresh () ()

* update auth0 images

* update auth0 guide

* rm whitespace

* add 3rd-party warning

* Update docs/docs/identity-providers/auth0.md

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* move title to top

* table cleanup

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
docs: update codeowners () ()

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
Update Azure IdP Doc () ()

* update azure doc

* add 3d part warning

* Update docs/docs/identity-providers/azure.md

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* clarification and troubleshooting section

* adjust links to not be relative to page location

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
Update Helm Instructions () ()

* update Helm instructions

* Update docs/enterprise/upgrading.md

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
update GitHub IdP doc () ()

* update GitHub IdP doc

* Update docs/docs/identity-providers/github.md

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
ci: support darwn/arm64 aka m1 for cli () ()

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
deployment: update goreleaser syntax () ()

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
deps: update envoy to 1.19.1 () ()

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
Remove api from GitLab defaultScope () ()

* remove api from gitlab defaultScope

* rm redundant scope

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Update GitLab IdP doc () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>","Full Changelog
Security Notice
This release includes fixes to several high severity security issues in one of our dependencies, envoy.
We recommend that all users upgrade.
Fixed
options: remove refresh_cooldown, add allow_spdy to proto (@backport-actions-token[bot])
Security
deps: update envoy to 1.19.1 (@backport-actions-token[bot])
Documentation
update GitHub IdP doc (@backport-actions-token[bot])
docs: update codeowners (@backport-actions-token[bot])
Update Helm Instructions (@backport-actions-token[bot])
Update Azure IdP Doc (@backport-actions-token[bot])
Update IdP Overview Page (@backport-actions-token[bot])
Update AWS cognito IdP doc (@backport-actions-token[bot])
Auth0 Doc Refresh (@backport-actions-token[bot])
document binding service to 443 (@backport-actions-token[bot])
Update Okta IdP doc (@backport-actions-token[bot])
adjust comment blocking (@backport-actions-token[bot])
Update Docker Quickstart () (@alexfornuto)
docs: use generic email (@backport-actions-token[bot])
wrap header example values as inline code. (@backport-actions-token[bot])
docs: clarify  custom request header limitations (@backport-actions-token[bot])
Document moving routes (@backport-actions-token[bot])
Document tracing sample rate in console (@backport-actions-token[bot])
docs: update enterprise helm instructions to use main repo (@backport-actions-token[bot])
Enterprise Upgrade & Changelog Pages (@backport-actions-token[bot])
Update binary install doc (@backport-actions-token[bot])
docs: update branding, concepts (@backport-actions-token[bot])
specify expected audience in Console config (@backport-actions-token[bot])
redirect logo to the marketing site (@backport-actions-token[bot])
docs: update branding (@backport-actions-token[bot])
docs: update default version to v0.15 (@backport-actions-token[bot])
Dependency
chore(deps): bump github.com/go-redis/redis/v8 from 8.11.1 to 8.11.2 (@backport-actions-token[bot])
Deployment
deployment: update goreleaser syntax (@backport-actions-token[bot])
ci: support darwn/arm64 aka m1 for cli (@travisgroth)"
"v0.0.2
deployment: add automatic travis releases
authenticator: support groups ()

- authenticate/providers: add group support to azure
- authenticate/providers: add group support to google
- authenticate/providers: add group support to okta
- authenticate/providers: add group support to onelogin
- {authenticate/proxy}: change default cookie lifetime timeout to 14 hours
- proxy: sign group membership
- proxy: add group header
- deployment: add CHANGELOG
- deployment: fix where make release wasn’t including version
authorize: add authorization ()

* authorize: authorization module adds support for per-route access policy. In this release we support the most common forms of identity based access policy: `allowed_users`, `allowed_groups`, and `allowed_domains`. In future versions, the authorization module will also support context and device based authorization policy and decisions. See website documentation for more details.
 * docs: updated `env.example` to include a `POLICY` setting example.
 * docs:  added `IDP_SERVICE_ACCOUNT` to  `env.example` .
 * docs: removed `PROXY_ROOT_DOMAIN` settings which has been replaced by `POLICY`.
 * all: removed `ALLOWED_DOMAINS` settings which has been replaced by `POLICY`. Authorization is now handled by the authorization service and is defined in the policy configuration files.
 * proxy: `ROUTES` settings which has been replaced by `POLICY`.
* internal/log: `http.Server` and `httputil.NewSingleHostReverseProxy` now uses pomerium's logging package instead of the standard library's built in one.

Closes
Closes
Closes
Closes
authenticate: support kubernetes ()

- cmd/pomerium: made ping a toplevel route for all services.
- docs: updated kubernetes script and corresponding configuration yaml's
scripts: fix kubernetes script
docs: update changelog, documentaiton, and helm configurations. ()

- Update changelog.
- Update docs to cover authorization support.
- Updates helm to support authorization, and policy file.
proxy: add debug message for cert pool
internal/identity: use email for group identifier for gsuite ()
internal/log: fix setting log level ()

- POMERIUM_DEBUG no longer sets log level.
- LOG_LEVEL now responsible for setting global log level.
deployment: add google analytics
deployment: update helm and add quick-start docs ()

- adds quick-start documentation for using helm
- update helm deployment charts to match outstanding official charts repo.
docs: update helm_gke script and docs
docs: changelog++ v0.0.3 ()
v0.0.3","FEATURES:
Authorization : The authorization module adds support for per-route access policy. In this release we support the most common forms of identity based access policy: allowed_users, allowed_groups, and allowed_domains. In future versions, the authorization module will also support context and device based authorization policy and decisions. See website documentation for more details.
Group Support : The authenticate service now retrieves a user's group membership information during authentication and refresh. This change may require additional identity provider configuration; all of which are described in the updated docs. A brief summary of the requirements for each IdP are as follows:
Google requires the Admin SDK to enabled, a service account with properly delegated access, and IDP_SERVICE_ACCOUNT to be set to the base64 encoded value of the service account's key file.
Okta requires a groups claim to be added to both the id_token and access_token. No additional API calls are made.
Microsoft Azure Active Directory requires the application be given an additional API permission, Directory.Read.All.
Onelogin requires the groups was supplied during authentication and that groups parameter has been mapped. Group membership is validated on refresh with the user-info api endpoint.
WebSocket Support : With Go 1.12 pomerium automatically proxies WebSocket requests.
CHANGED:
Add LOG_LEVEL config setting that allows for setting the desired minimum log level for an event to be logged. [GH-74]
Changed POMERIUM_DEBUG config setting to just do console-pretty printing. No longer sets log level. [GH-74]
Updated generate_wildcard_cert.sh to generate a elliptic curve 256 cert by default.
Updated env.example to include a POLICY setting example.
Added IDP_SERVICE_ACCOUNT to env.example .
Removed PROXY_ROOT_DOMAIN settings which has been replaced by POLICY.
Removed ALLOWED_DOMAINS settings which has been replaced by POLICY. Authorization is now handled by the authorization service and is defined in the policy configuration files.
Removed ROUTES settings which has been replaced by POLICY.
Add refresh endpoint ${url}/.pomerium/refresh which forces a token refresh and responds with the json result.
Group membership added to proxy headers (x-pomerium-authenticated-user-groups) and (x-pomerium-jwt-assertion).
Default Cookie lifetime (COOKIE_EXPIRE) changed from 7 days to 14 hours ~ roughly one business day.
Moved identity (authenticate/providers) into its own internal identity package as third party identity providers are going to authorization details (group membership, user role, etc) in addition to just authentication attributes.
Removed circuit breaker package. Calls that were previously wrapped with a circuit breaker fall under gRPC timeouts; which are gated by relatively short timeouts.
Session expiration times are truncated at the second.
Removed gitlab provider. We can't support groups until this gitlab bug is fixed.
Request context is now maintained throughout request-flow via the context package enabling timeouts, request tracing, and cancellation.
FIXED:
http.Server and httputil.NewSingleHostReverseProxy now uses pomerium's logging package instead of the standard library's built in one. [GH-58]"
"Refresh and Update TCP documentation () ()

* init client app doc

* init TCP section

* add redirect for TCP client doc

* Redis and Mysql

* finish TCP exampels

* init Draft template

* cleanup whitespace

* escape markdown image in template

* add redirect and update links

* copy edit

* Update readme.md

* fmt

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>

* optimize png

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>

* header cleanup and child listing

* Update docs/docs/tcp/ssh.md

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>
Co-authored-by: Bobby DeSimone <bobbydesimone@gmail.com>
Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>
Co-authored-by: Bobby DeSimone <bobbydesimone@gmail.com>
Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
Fix typo in docs () ()

Co-authored-by: Nihaal Sangha <nihaal.git@gmail.com>
correct claim example () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
skip configuration updates to the most recent one () ()

Co-authored-by: Denis Mishin <dmishin@pomerium.com>
DOCS: CORS preflight in console () ()

* document CORS preflight for console

* rm paste error.

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Update create TLS command to quote strings. () ()

In some instances the cert and key path returned from `mkcert -CAROOT` might contain spaces. If it does the example command fails with the somewhat cryptic error `error: exactly one NAME is required, got 3`. Quoting the values resolves the issue.

Co-authored-by: FutureMatt <43476243+FutureMatt@users.noreply.github.com>
deployment: remove DST_Root_CA_X3 from docker images () ()","Full Changelog
New
skip configuration updates to the most recent one (@backport-actions-token[bot])
Documentation
Update create TLS command to quote strings. (@backport-actions-token[bot])
DOCS: CORS preflight in console (@backport-actions-token[bot])
Docs: Correct Claim Example (@backport-actions-token[bot])
Fix typo in docs (@backport-actions-token[bot])
Deployment
deployment: remove DST_Root_CA_X3 from docker images (@travisgroth)"
"authorize: use session.user_id in headers () ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
docs: add updated icon asset () ()

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
docs: rename updated icon image () ()

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
cli: update tcp log output format () ()
backport 2593 and 2594 to 0.15 ()

* tcptunnel: force the use of HTTP/1.1 during ALPN

* remove unused code

* authclient: clone TLS configuration to prevent overriding NextProtos
Document recovery token generation () ()

* document recovery token generation

* run console anywhere to generate token

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Update CODEOWNERS () ()

Dev review is still required when I update .vuepress files. This is an attempt to rectify that.

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
New Topic Page: Original Request Context () ()

* init original context doc

* copy edit

* init Service Account page

* update and expand user context article

* fix header name

* copy edit

* update response path through Pomerium

* clarify SA name is user in policy creation

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
add copy button to code snippets () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Add docs team as a code owner of packages.json () ()

* Add docs team as a code owner of packages.json

`packages.json` Is used by the docs site to manage vuepress and its plugins/dependencies.

* empty commit to bypass CLA hangup

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>","Full Changelog
New
cli: update tcp log output format (@travisgroth)
Fixed
backport 2593 and 2594 to 0.15 (@calebdoxsey)
Documentation
Add docs team as a code owner of packages.json (@backport-actions-token[bot])
New Topic Page: Original Request Context (@backport-actions-token[bot])
Document recovery token generation (@backport-actions-token[bot])
DOCS: Add copy button to code snippets (@backport-actions-token[bot])
docs: rename updated icon image (@backport-actions-token[bot])
docs: add updated icon asset (@backport-actions-token[bot])
Changed
Update CODEOWNERS (@backport-actions-token[bot])"
"docs: v0.12 upgrade notes and changelog ()
docs: update menu for v0.12 () ()

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
ci: fix deprecated command in latestTag step () ()

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
autocert: improve logging ()
google: fix nil name () ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>","Full Changelog
Fixed
[Backport 0-12-0] google: fix nil name (@github-actions[bot])
[Backport 0-12-0] autocert: improve logging (@travisgroth)
Documentation
[Backport 0-12-0] docs: update menu for v0.12 (@github-actions[bot])
Deployment
[Backport 0-12-0] ci: fix deprecated command in latestTag step (@github-actions[bot])"
"identity: infer email from mail claim () ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
authenticate: validate signature on /.pomerium, /.pomerium/sign_in and /.pomerium/sign_out () ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
proxy: restrict programmatic URLs to localhost ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>","Full Changelog
This release addresses two security issues in Pomerium:
GHSA-35vc-w93w-75c2 (CVE-2021-29651)
GHSA-fv82-r8qv-ch4v (CVE-2021-29652)
Security
proxy: restrict programmatic URLs to localhost (@travisgroth)
authenticate: validate signature on /.pomerium, /.pomerium/sign_in and /.pomerium/sign_out (@travisgroth)"
"envoy: fix usage of codec_type with alpn () ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
authorize: only redirect for HTML pages () ()

* authorize: only redirect for HTML pages

* authorize: only redirect for HTML pages","Full Changelog
Fixed
authorize: only redirect for HTML pages () (@calebdoxsey)"
"Merge pull request from GHSA-pvrc-wvj2-f59p

* wip

* authorize: use route id from envoy for policy evaluation

* remove log

* handle error from route id

* authorize: normalize URL query params

* config: enable envoy normalize_path option

* fix tests

---------

Co-authored-by: Kenneth Jenkins <51246568+kenjenkins@users.noreply.github.com>
config: simplify default set response headers ()

config: simplify default set response headers ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
authorize: populate issuer even when policy is nil ()

authorize: populate issuer even when policy is nil ()

Co-authored-by: Kenneth Jenkins <51246568+kenjenkins@users.noreply.github.com>
config: update logic for checking overlapping certificates () ()

* config: update logic for checking overlapping certificates

* add test

* go mod tidy
ci: fix lint workflow () ()

Co-authored-by: Denis Mishin <dmishin@pomerium.com>
pin to a debian:latest image for casource base image () ()

The debian 'stable' images configure apt to install from the rolling
'stable' repository, rather than a specific Debian release. Thus even
though we pin to a specific Docker image digest, the packages installed
by 'apt-get' can change when a new Debian release is promoted to stable.

Instead, pin to an image where apt is configured to install from
repositories for a specific Debian release (in this case, bullseye).
add JWT timestamp formatting workaround ()

add JWT timestamp formatting workaround ()

Rego will sometimes serialize integers to JSON with a decimal point and
exponent. I don't completely understand this behavior.

Add a workaround to headers.rego to convert the JWT ""iat"" and ""exp""
timestamps to a string and back to an integer. This appears to cause
Rego to serialize these values as plain integers.

Add a unit test to verify this behavior. Also add a unit test that will
fail if the Rego behavior changes, making this workaround unnecessary.

Co-authored-by: Kenneth Jenkins <51246568+kenjenkins@users.noreply.github.com>
backport ()
autocert: suppress OCSP stapling errors ()

autocert: suppress OCSP stapling errors ()

* autocert: suppress OCSP stapling errors

* check level, add test

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
envoy: configure upstream IP SAN match as needed ()

envoy: configure upstream IP SAN match as needed ()

When building an upstream validation context for a particular URL, check
whether the hostname is an IP address. If so, configure the SAN match to
use type IP_ADDRESS rather than DNS.

Co-authored-by: Kenneth Jenkins <51246568+kenjenkins@users.noreply.github.com>
github-actions: remove license check ()

github-actions: remove license check ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
add integration test for Pomerium JWT ()

add integration test for Pomerium JWT ()

Add an integration test case to verify properties of the Pomerium
attestation JWT:

 - The 'iat' and 'exp' timestamps should be plain integers.
 - The JWT should contain an issuer and audience claim.
 - A JWT retrieved from the /.pomerium/jwt endpoint should contain all
   the same data as a JWT from the X-Pomerium-Jwt-Assertion header.
add integration test for https IP address route ()

add integration test for https IP address route ()

Update the integration test libsonnet templates to assign a fixed IP
address to the trusted-httpdetails service. This requires also assigning
a fixed IP subnet to the docker network.

Configure a route with a 'to' URL using https and this fixed IP address.
Add a corresponding certificate with the IP address. Finally, add a test
case that makes a request to this route.","Changelog
Full Changelog
Changed
add integration test for https IP address route (@kenjenkins)
github-actions: remove license check (@kenjenkins)
add integration test for Pomerium JWT (@kenjenkins)
envoy: configure upstream IP SAN match as needed (@backport-actions-token[bot])
autocert: suppress OCSP stapling errors (@backport-actions-token[bot])
backport (@calebdoxsey)
ci: fix lint workflow () (@kenjenkins)
pin to a debian:latest image for casource base image () (@kenjenkins)
add JWT timestamp formatting workaround (@backport-actions-token[bot])
config: update logic for checking overlapping certificates () (@calebdoxsey)
authorize: populate issuer even when policy is nil (@backport-actions-token[bot])
config: simplify default set response headers (@backport-actions-token[bot])"
"adds upstream error page ()

* adds upstream error page

* help docs in new tab
envoy: upgrade to v1.30.2 ()

envoy: upgrade to v1.30.2 ()

Co-authored-by: Kenneth Jenkins <51246568+kenjenkins@users.noreply.github.com>
core/userinfo: remove excess userinfo data ()

core/userinfo: remove excess userinfo data ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
core/autocert: fix filter chain, handshake ()

core/autocert: fix filter chain, handshake ()

* core/autocert: fix filter chain, handshake

* only enable http challenges on port 80

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
envoy: upgrade to v1.30.3 ()

envoy: upgrade to v1.30.3 ()
update the pomerium/webauthn dependency () ()","Security
Pomerium v0.26.1 includes multiple security updates:
The Pomerium user info page (at /.pomerium) unintentionally included serialized OAuth2 access and ID tokens from the logged-in user's session. These tokens are not intended to be exposed to end users, and have now been removed. CVE-2024-39315
Credit to Vadim Sheydaev, aka Enr1g for reporting this issue.
This release also includes an update from Envoy 1.30.1 to Envoy 1.30.3 to address multiple security issues:
CVE-2024-34362: Crash (use-after-free) in EnvoyQuicServerStream
CVE-2024-34363: Crash due to uncaught nlohmann JSON exception
CVE-2024-34364: Envoy OOM vector from HTTP async client with unbounded response buffer for mirror response, and other components
CVE-2024-32974: Crash in EnvoyQuicServerStream::OnInitialHeadersComplete()
CVE-2024-32975: Crash in QuicheDataReader::PeekVarInt62Length()
CVE-2024-32976: Endless loop while decompressing Brotli data with extra input
CVE-2024-23326: Envoy incorrectly accepts HTTP 200 response for entering upgrade mode
CVE-2024-38525: datadog tracer does not handle trace headers with unicode characters
The release also removes a transitive dependency on the gopkg.in/square/go-jose.v2 library which is vulnerable to GHSA-c5q2-7r4c-mv6g.
What's Changed
Security
envoy: upgrade to v1.30.3 by @kenjenkins in
core/userinfo: remove excess userinfo data by @calebdoxsey  in
update the pomerium/webauthn dependency () by @kenjenkins in
Fixes
core/autocert: fix filter chain, handshake by @calebdoxsey  in
Full Changelog: v0.26.0...v0.26.1"
"authenticate: fix internal service URL CORS check () ()

(cherry picked from commit 61ffeb837d478efe13e1b787989194792b06ab87)

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
add rego example () ()

(cherry picked from commit a542a3e63fbfd9be5ef989495670e2076172bf3d)

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
link helm doc to ingress controller doc () ()

(cherry picked from commit 8708949ff10c13091d89b9bec53e23382b581a49)

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
fixing pomerium traefik sample () ()

replace policy by routes

(cherry picked from commit aa5e63656f644a7f2f4d831e90e4a0be6cc4885f)

Co-authored-by: rgrente <romain.grente@gmail.com>
avoid null reproxy handler () ()

(cherry picked from commit a15106ebe20a0f1a37b190fb3d8c93b858bfa0b0)

Co-authored-by: Denis Mishin <dmishin@pomerium.com>
DOCS: Update Annotations Table ()

DOCS: Update Annotations Table ()

* update annotations table

* clarify header overlap

(cherry picked from commit ad8915457e95e0bef450e1c7d055a937ff642e6b)

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Docs: Document TCP routes in Kubernetes ()

Docs: Document TCP routes in Kubernetes ()

documents TCP routes with Pomerium Ingress Controller

(cherry picked from commit 1bb07479db308c6d615a2519659058b1f510cbe0)

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
add x-request-id in responses ()
fix: The built binary file is missing ""ui/dist/index.js"" and ""ui/dist… ()
authorize: show plain text error page for traefik and nginx ()

authorize: show plain text error page for traefik and nginx ()

(cherry picked from commit ca8db7b6193466a53432f307743c7a67d7533d84)

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
authorize: fix x-forwarded-uri ()

authorize: fix x-forwarded-uri ()

* authorize: fix x-forwarded-uri

* fix raw path

(cherry picked from commit bc078f8bd2f2f023b36681a4555fa74787041669)

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
options: fix overlapping certificate test ()

options: fix overlapping certificate test ()

(cherry picked from commit 1afbc6e9c41066a1c2682b0894107587c4169cca)

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
Merge pull request from GHSA-pvrc-wvj2-f59p

* authorize: normalize URL query params

* config: enable envoy normalize_path option

* remove pomerium routes logic

---------

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>","Security
This release fixes a bug whereby specially crafted requests could result in incorrect authorization decisions made by Pomerium. CVE-2023-33189.
Full Changelog: v0.17.3...v0.17.4"
"Update SECURITY.md ()

Update SECURITY.md ()

Please see our security policy as described: https://www.pomerium.com/docs/internals/security

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
envoyconfig: disable validation context when no client certificates are required ()

envoyconfig: disable validation context when no client certificates are required ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>","What's Changed
envoyconfig: disable validation context when no client certificates are required by @calebdoxsey  in
Full Changelog: v0.22.0...v0.22.1"
"authenticate: fix identity provider id in encrypted query string ()

authenticate: fix identity provider id in encrypted query string ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
Co-authored-by: Denis Mishin <dmishin@pomerium.com>
authorize: allow access to /.pomerium/webauthn when policy denies access ()

authorize: allow access to /.pomerium/webauthn when policy denies access ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
hpke: move published public keys to a new endpoint ()

hpke: move published public keys to a new endpoint ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
authorize: move sign out and jwks urls to route, update issuer for JWT ()

authorize: move sign out and jwks urls to route, update issuer for JWT ()

* authorize: move sign out and jwks urls to route, update issuer for JWT

* fix test

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
ci: build version branch images ()

ci: build version branch images ()

build version branch images

Co-authored-by: Denis Mishin <dmishin@pomerium.com>","Changelog
Full Changelog
Changed
ci: build version branch images (@backport-actions-token[bot])
authorize: move sign out and jwks urls to route, update issuer for JWT (@backport-actions-token[bot])
hpke: move published public keys to a new endpoint (@backport-actions-token[bot])"
"docs: Update release notes and changelog for v0.17 ()
Docs: Update Okta Copy () ()

* update Okta copy

* Update docs/docs/identity-providers/okta.md

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* Clarifications

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
Docs: Ingress routing order () ()

* document routing order

* Update docs/docs/k8s/ingress.md

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>

* Update docs/docs/k8s/ingress.md

Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>
exclude template from sitemap () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Correct domain name () ()

* Correct domain name 

hello.localhost.pomerium.com has no dns record associated with it so won't work without hacking `/etc/hosts`
The walkthrough also issues certificates to `*.localhost.pomerium.io`

* expand and clarify use of localhost.pomerium.io

Co-authored-by: alexfornuto <afornuto@pomerium.com>

Co-authored-by: George Ornbo <george@shapeshed.com>
Co-authored-by: alexfornuto <afornuto@pomerium.com>
DOCS: Document duplicate routes in Console () ()

* document duplicate route possibility

* Add section descriptions to ""Configure"" reference docs

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
typo correction () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
docs: update changelog and upgrade notes for enterprise v0.17 () ()

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
Clarify configuration between modes () ()

* Clarify configuration between modes

* Update docs/reference/settings.yaml

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
Update metrics address copy () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
DOCS: Auth0 JWT signature algorithm () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
note assumed TCP route on all examples () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Add missing namespace creation for pomerium () ()

* Add missing namespace creation for pomerium

The namespace for pomerium is not created during the walkthrough so running the command to create the tls secret fails.

``` bash
% kubectl create secret tls pomerium-tls-ca --namespace=pomerium \
--cert=""$(mkcert -CAROOT)/rootCA.pem"" --key=""$(mkcert -CAROOT)/rootCA-key.pem""
error: failed to create secret namespaces ""pomerium"" not found
```
This PR adds the creation of the namespace before running the tls secret command.

* move namespace creation cmd to prereqs

Co-authored-by: alexfornuto <afornuto@pomerium.com>

Co-authored-by: George Ornbo <george@shapeshed.com>
Co-authored-by: alexfornuto <afornuto@pomerium.com>
expand enterprise route reference () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
DOCS: TCP route for Microsoft SQL () ()

* example TCP route for Microsoft SQL

* note pre-existing route on ms-sql example

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
docs: update default verify port to 8000 () ()

See https://github.com/pomerium/pomerium/issues/2930.  I think https://github.com/pomerium/pomerium/pull/3035 was incomplete.

Co-authored-by: Alex <52292902+alexrudd2@users.noreply.github.com>
Docs: Google IDP without Service Account () ()

* document config file keys

* document service account error

* add commented service account key

* Apply suggestions from code review

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Docs: Convert Console Config to Table () ()

* update enterprise config doc

* add anchors to key names

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Docs: document default cert annotation. () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
partial update for console 17 () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
update Desktop Client docs () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
ci: update setup-gcloud to use v0 ()
github: fix missing groups () ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
Document metrics name () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
DOCS: Securing Pomerium () ()

* init Securing Pomerium page

* Apply suggestions from code review

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>
Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>
Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
DOCS: Add New Videos to Docs Pages () ()

* limit related to our videos

* add install demo to install index

* add intro video to landing page

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
authenticate: fix internal url with webauthn () ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
DOCS: Production Deployment rewrite () ()

* sort and consolidate service url keys

* Production doc first pass

* move Production Deployment to top level

* Apply suggestions from code review

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>

* Update docs/docs/production-deployment.md

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>
ci: update release deployment location ()
DOCS: Production Deployment Index () ()

* production deployment tree

* adjust for updates to source

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
expand shared_secret troubleshooting () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
authenticate: fix debug and metrics endpoints () ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
feat(docs) Add Redis FLUSHALL doc on how and when to execute commands () ()

* feat(docs) Add Redis FLUSHALL doc on how and when to execute commands

* fix(docs) Move flushall command to troubleshooting section

* copy edits

* crosslink

Co-authored-by: alexfornuto <afornuto@pomerium.com>

Co-authored-by: Sara Jarjoura - Sensible <97973481+sarasensible@users.noreply.github.com>
Co-authored-by: alexfornuto <afornuto@pomerium.com>","Full Changelog
Security Notice
This release includes a fix to a medium severity security issue.
We recommend that all users upgrade.
Security
authenticate: fix debug and metrics endpoints (@backport-actions-token[bot])
Fixed
authenticate: fix internal url with webauthn (@backport-actions-token[bot])
github: fix missing groups (@backport-actions-token[bot])"
"docker: switch to debian ()

docker: switch to debian ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
authenticate: save the session cookie with a different name ()

authenticate: save the session cookie with a different name ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
backport-3980-to-0-21-0 ()","What's Changed
authenticate: save the session cookie with a different name by @calebdoxsey in
lua: fix rewrite response headers to handle dashes in URLs by @calebdoxsey in
Full Changelog: v0.21.0...v0.21.1"
"feat(docs) Add Redis FLUSHALL doc on how and when to execute commands () ()

* feat(docs) Add Redis FLUSHALL doc on how and when to execute commands

* fix(docs) Move flushall command to troubleshooting section

* copy edits

* crosslink

Co-authored-by: alexfornuto <afornuto@pomerium.com>

Co-authored-by: Sara Jarjoura - Sensible <97973481+sarasensible@users.noreply.github.com>
Co-authored-by: alexfornuto <afornuto@pomerium.com>
Docs: Grafana JWT & jwt_claims_headers updates () ()

* feat(docs) Update Grafana docs to have auto_sign_up

* fix(docs) Add signout url

* update jwt_claims_headers reference

* update Grafana guide

Co-authored-by: Sara Jarjoura <sara@sensibleweather.com>
(cherry picked from commit 030d50c148eec51b5a897faa823298d14e9b24dd)

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
DOCS: Define stateless () ()

* define stateless

* link to glossary

(cherry picked from commit 387c0255abbb82fab4e1f936158831251588ba60)

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
adjust config type () ()

(cherry picked from commit e1403e33b47d1e109ef6e05aaadec6aff80f2b9e)

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
DOCS: Guide for Cockpit web gui () ()

* create guide for Cockpit web gui

* precomit is a cruel overlord

(cherry picked from commit 75507e243f8d74aeadbd9b6c6811fb0e9bfb2dce)

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
hotfix cockpit config () ()

(cherry picked from commit 5e836913ae53e70c0db91693631d576ae755326f)

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
config: fix DefaultTransport so it is still a *http.Transport () ()

* config: fix DefaultTransport so it is still a *http.Transport

* remove printlns

* Update config/http.go

Co-authored-by: Denis Mishin <dmishin@pomerium.com>

* remove unnecessary check

Co-authored-by: Denis Mishin <dmishin@pomerium.com>
(cherry picked from commit c5550d28edaec1a4ab8b1fb87098b80491f0fda3)

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
add twitter meta tags () ()

(cherry picked from commit 424a7e4de8c12d482725e10a501d749825921252)

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
docs: Add UUID to docs yaml blocks () ()

(cherry picked from commit cbe90fd96d4aeeacfe000a5fa209c431f6e99d79)

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
update logo for Twitter cards () ()

(cherry picked from commit e637ff4ff3027c36b41d91df53256050d084c16e)

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
authorize: pass idp id for webauthn url, allow unauthenticated access to static files () ()

(cherry picked from commit 74310b3de37623c43a7fc0856f44f69d492430db)

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
use https to download python api lib () ()

(cherry picked from commit 254e2f7ce9c6469ed09a43b7cf036fc9e36d508c)

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>","Changelog
Full Changelog
Fixed
authorize: pass idp id for webauthn url, allow unauthenticated access to static files [] (@calebdoxsey)
config: fix DefaultTransport so it is still a *http.Transport [] (@calebdoxsey)
Dependency
chore(deps): bump actions/setup-python from 3.1.0 to 3.1.2 []
Docs
Add UUID to docs yaml blocks () [] (@alexfornuto)"
"proxy: fix bug that would allow failed refresh session to continue ()

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>
proxy/forward-auth: block expired request  prior to 302 ()

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>
state: infer user from subject ()

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>","Changes
state: infer user (user) from subject (sub) @desimone GH-772
proxy/forward-auth: block expired request prior to 302 @desimone GH-773"
"config: fix redirect routes from protobuf () ()

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
Update data-storage.md () ()

Add `databroker_storage_type` in example to make it functional.

Co-authored-by: Tanguy <tanguy.patte@gmail.com>
proxy: redirect to dashboard for logout () ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>","Full Changelog
Documentation
Update data-storage.md (@github-actions[bot])
Changed
proxy: redirect to dashboard for logout (@github-actions[bot])"
"changelog for v0.25 ()
connect: add gRPC keep-alive ()

connect: add gRPC keep-alive ()

Co-authored-by: Denis Mishin <dmishin@pomerium.com>
core/zero: fix ticker usage ()

core/zero: fix ticker usage ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
core/ci: check docker base images ()

core/ci: check docker base images ()

* check docker base images

* test bad image

* debugging

* fix missing gcr image

* restore hash

* fix docker tag

* improved check

* fix variable

* fix check

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
ci: bump Go to 1.21.8 in docker ()

* ci: bump Go to 1.21.8 in docker

* update images to be multiplatform
changelog: v0.25.1 ()

* changelog: v0.25.1

* use actual PR authors","What's Changed
Changed
connect: add gRPC keep-alive by @wasaga in
core/zero: fix ticker usage by @calebdoxsey in
core/ci: check docker base images by @calebdoxsey in
ci: bump Go to 1.21.8 in docker by @wasaga in
Full Changelog: v0.25.0...v0.25.1"
"v0.0.3
docs: add synology tutorial ()
Force requesting refresh_token from Google

Google only provide refresh_token on the first authorization from the user. If user clears cookies, re-authorization will not bring back refresh_token. A work around to this is to add prompt=consent to the OAuth redirect URL and will always return a refresh_token.
internal/identity: replace legacy approval_prompt=force with prompt=consent()

Fixes a bug where caused by setting both prompt=consent and approval_prompt=force.
authenticate: infer settings from authenticate url ()
docs: add sitemap
proxy: remove unused setting AuthorizeInternalAddr ()

- Added unit tests for policy validation.
- Removed extraneous policy validation for URLs.
- Add dependency caching to dockerfile.
cmd/pomerium: redirect http and add hsts headers ()
docs: add certificate section ()

Closes
changelog++
version++","CHANGED
HTTP Strict Transport Security is included by default and set to one year. [GH-92]
HTTP now redirects to HTTPS. [GH-92]
Removed extraneous AUTHORIZE_INTERNAL_URL config option since authorization has no publica http handlers, only a gRPC service endpoint. [GH-93]
Removed PROXY_ROOT_DOMAIN config option which is now inferred from AUTHENTICATE_SERVICE_URL. Only callback requests originating from a URL on the same sub-domain are permitted. [GH-83]
Removed REDIRECT_URL config option which is now inferred from AUTHENTICATE_SERVICE_URL (e.g. https://$AUTHENTICATE_SERVICE_URL/oauth2/callback). [GH-83]
FIXED
Fixed a bug in the Google provider implementation where the refresh_token. Updated the google implementation to use the new prompt=consent oauth2 parameters. Reported and fixed by @chemhack [GH-81]
DOCUMENTATION
Added synology tutorial. [GH-96]
Added certificates documentation. [GH-79]"
"docs: v0.14.0 ()
docs: update slack link to vanity url () ()

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
docs: add v0.14 feature highlights () ()

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
proxy / controplane: use old upstream cipher suite () ()

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
deps: bump envoy to v1.17.3 () ()

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>","Full Changelog
Fixed
proxy / controplane: use old upstream cipher suite (@github-actions[bot])
Security
deps: bump envoy to v1.17.3 (@github-actions[bot])
Documentation
docs: update slack link to vanity url (@github-actions[bot])
docs: add v0.14 feature highlights (@github-actions[bot])"
"v0.6.0

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>
docs: update helm for v3 ()

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>
cache: add option validations ()

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>
docs: various fixes ()

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>
Roll back grpc to v1.25.1 ()
v0.6.1

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>","Fixed
cache: add option validations @desimone ()
grpc: roll back grpc to v1.25.1 @travisgroth ()"
"deployment: publish with github actions and goreleaser ()

* Add release workflow
proxy: remove unused session unmarshal ()

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>
grpcutil: remove unused pkg ()

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>
site: fix site on mobile ()

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>
chore(deps): update vuepress monorepo to v1.4.0
Add configurable JWT claim headers ()","Changes
proxy: remove extra session unmarshalling @desimone ()
New
proxy: add configurable JWT claim headers @travisgroth ()
grpcutil: remove unused pkg @desimone ()
Fixed
site: fix site on mobile @desimone ()
Documentation
site: fix site on mobile @desimone ()
Dependency
chore(deps): update vuepress monorepo to v1.4.0 @renovate ()"
"authorize: only redirect for HTML pages () ()

* authorize: only redirect for HTML pages

* authorize: only redirect for HTML pages
directory/azure: add paging support to user group members call () ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>","Full Changelog
Fixed
directory/azure: add paging support to user group members call (@github-actions[bot])"
"v0.9.4

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>
ci: support rc releases () ()
Force redirect scheme to https () ()

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
authenticate: hide impersonation form from non-admin users () ()

Fixes
proxy: remove debug line ()
authorize,proxy: allow traefik forward auth without uri query () ()

In, the fix was done without aware of the context that traefik
forward auth mode did allow request without the ""?uri="". Previosuly,
this is done in proxy, and by converting the forward auth request to
actual request. The fix is prevent this conversion, to makre
authorize service aware of which is forward auth request.

But that causes traefik forward auth without ""?uri"" stop working. Fixing
it by making the authorize service also honor the forwarded uri header,
too.

Fixes
Set loopback address by ipv4 IP ()
deps: update envoy to 1.14.4 () ()

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>","Changes
proxy: remove debug line @cuonglm GH-1095
authorize,proxy: allow traefik forward auth without uri query @cuonglm GH-1103
Set loopback address by ipv4 IP @travisgroth GH-1122
Fixed
Force redirect scheme to https @travisgroth GH-1077
authenticate: hide impersonation form from non-admin users @cuonglm GH-1093
Dependency
deps: update envoy to 1.14.4 @desimone GH-1120"
"Update programmatic-access.md () ()

* Update programmatic-access.md

tries to give a bit more context to the curl snippet to get a token for programmatic access

include bastion host remote port forwarding and some other notes

include headers in request mention

update programmatic access

Update programmatic-access.md

Update programmatic-access.md

update programmatic access

* fumpt

Co-authored-by: Bobby DeSimone <bobbydesimone@gmail.com>

Co-authored-by: Joseph Chiocchi <input.output@gmail.com>
Co-authored-by: Bobby DeSimone <bobbydesimone@gmail.com>
envoy: add global response headers to local replies () ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
depedency: update /x/net

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>
authorize: fix custom rego panic ()

* fix custom rego panic

* fix type cast
fix(docs): use correct name for code-server ()

* fix: use correct name for code-server

* chore: update config.js for code-server

* chore: add redirect for code-server
add support for latest version of code-server ()

* add support for latest version of code-server

* golang version

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* golang version

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* install zip

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>","Full Changelog
Fixed
authorize: fix custom rego panic (@calebdoxsey)
Changed
envoy: add global response headers to local replies (@github-actions[bot])"
"Update changelog for v0.10.3 ()
controlplane: support P-384 / P-512 EC curves () ()

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
controplane: remove p-521 EC () ()

* controplane: remove p-521 EC

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
redirect-server: add config headers to responses () ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
proxy: always use https for application callback () ()

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
Add v0.10.4 changelog entry ()
httputil: remove retry button () ()

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
docs: update 0.10.4 changelog ()","Fixed
controlplane: support P-384 / P-512 EC curves @desimone GH-1409
controlplane: remove p-521 EC @desimone GH-1420
redirect-server: add config headers to responses @calebdoxsey GH-1416
proxy: always use https for application callback @travisgroth GH-1433
Security
httputil: remove retry button @desimone GH-1438"
"proxy: redirect to dashboard for logout () ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
identity: infer email from mail claim () ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>","Full Changelog
New
identity: infer email from mail claim (@github-actions[bot])"
"v0.7.5 ()

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>
Backport fix for panic on reload to 0.7.x ()

* Fix reload panic in Authorize code ()

* Update changelog for 0.7.6","Fixed
authorize: fix unexpected panic on reload @travisgroth [GH-652]"
"deps: update envoy to 1.14.4 () ()

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
Set ExtAuthz Cluster name to URL Host () ()

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
cherry-pick a5e8abd6af46b10149c81c53044f0f789cde8b9a
Update changelog for 0.9.6 ()

* Update changelog for 0.9.6","This is a bug fix release.
Issues addressed include Istio support and non-standard port handling.
Fixed
Set ExtAuthz Cluster name to URL Host @travisgroth GH-1133
handle example.com and example.com:443 @calebdoxsey GH-1153"
"add support for latest version of code-server ()

* add support for latest version of code-server

* golang version

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* golang version

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* install zip

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
authorize: add rego functions to custom evaluator ()","Full Changelog
Fixed
authorize: add rego functions to custom evaluator (@calebdoxsey)"
"docs: update changelog for v0.11 ()
ci: fix pomerium-cli rpm name () ()
docs: add v0.11 link to version menu () ()

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
docs: add allowed_idp_claims docs () ()

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
remove ""see policy"" phrase in settings docs () ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
don't create users when updating sessions () ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
fix concurrency race () ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>","Full Changelog
Fixed
[Backport 0-11-0] fix concurrency race (@github-actions[bot])
[Backport 0-11-0] don't create users when updating sessions (@github-actions[bot])
Documentation
[Backport 0-11-0] remove ""see policy"" phrase in settings docs (@github-actions[bot])
[Backport 0-11-0] docs: add allowed_idp_claims docs (@github-actions[bot])
[Backport 0-11-0] docs: add v0.11 link to version menu (@github-actions[bot])
Deployment
[Backport 0-11-0] ci: fix pomerium-cli rpm name (@travisgroth)"
"deployment: release v0.8.0 ()

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
docs: fixes to v0.8.0 docs ()

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>
authorize: fix nil reference () ()

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>","Fixed
authorize: fix authorization panic caused by logging a nil reference @desimone [GH-704]"
"directory/azure: add paging support to user group members call () ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
docs:  google gcp / workspace instructions () ()

Deferential to Google's own docs since they keep changing the screens.

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
Docs backporting ()

* fix Transmission sorting in sidebar

* rename VSCode Server for alphabetizing and clarity

* Transmission BitTorrent Client Guide ()

* init transmission guide

* Update docs/guides/transmission.md

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* Update docs/guides/transmission.md

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* Update docs/guides/transmission.md

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* update installation source for mkcert ()

* Docs sorting ()

* fix Transmission sorting in sidebar

* rename VSCode Server for alphabetizing and clarity

* capitalize Pomerium

* Update docs/guides/code-server.md

Co-authored-by: Joe Previte <jjprevite@gmail.com>

* fix naming and sorting for coder-server, add description

Co-authored-by: Joe Previte <jjprevite@gmail.com>

* Docs sorting ()

* fix Transmission sorting in sidebar

* rename VSCode Server for alphabetizing and clarity

* capitalize Pomerium

* Update docs/guides/code-server.md

Co-authored-by: Joe Previte <jjprevite@gmail.com>

* fix naming and sorting for coder-server, add description

Co-authored-by: Joe Previte <jjprevite@gmail.com>

* fix code-server title

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
Co-authored-by: Joe Previte <jjprevite@gmail.com>
chore(deps): upgrade kind action to v1.2.0 () ()
Docs bug fixes () ()

* close warning block, syntax highlight

* Add title, grammar-fix link

Co-authored-by: Alex Fornuto <alex@fornuto.com>
docs: only secure schemes are supported () ()

* docs: only secure schemes are supported

https://pomerium-io.slack.com/archives/CK92MUAES/p1627615869000100?thread_ts=1627567572.143500&cid=CK92MUAES

* bring update to source file

Co-authored-by: alexfornuto <alex@fornuto.com>

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
Co-authored-by: alexfornuto <alex@fornuto.com>
deps: bump envoy to v0.17.4 ()
ci: update gcloud action () ()

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>","Full Changelog
Security Notice
This release includes fixes to several high severity security issues in one of our dependencies, envoy.
We recommend that all users upgrade.
Security
deps: bump envoy to v0.17.4 (@travisgroth)
Documentation
docs: only secure schemes are supported (@backport-actions-token[bot])
Docs bug fixes (@github-actions[bot])
Docs backporting (@alexfornuto)
docs:  google gcp / workspace instructions (@github-actions[bot])
Changed
chore(deps): upgrade kind action to v1.2.0 () (@travisgroth)"
"change require_proxy_protocol to use_proxy_protocol () ()

I set `use_proxy_protocol` to be true in my yaml config. Envoy didn't use proxy protocol albeit. Both the documents and https://github.com/pomerium/pomerium/pull/1777 hint the name should be use_proxy_protocol.

Co-authored-by: contrun <uuuuuu@protonmail.com>
docs: update community slack link () ()

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
deps: upgrade envoy to 1.16.3 ()","Envoy has released an update to fix several CVEs:
CVE-2021-28682 (CVSS score 7.5, High): Envoy through 1.17.1, 1.16.2, 1.15.3, and 1.14.6 contains a remotely exploitable integer overflow via a very large grpc-timeout value causes undefined behavior.
CVE-2021-28683 (CVSS score 7.5, High): Envoy through 1.17.1 and 1.16.2 contains a remotely exploitable crash in TLS when an unknown TLS alert code is received.
CVE-2021-29258 (CVSS score 7.5, High): Envoy through 1.17.1, 1.16.2, 1.15.3, and 1.14.6 contains a remotely exploitable crash in Envoy's HTTP2 Metadata, when an empty METADATA map is sent.
This Pomerium patch updates the embedded version of envoy to 1.16.3.
Full Changelog
Security
deps: upgrade envoy to 1.16.3 (@travisgroth)
Documentation
docs: update community slack link (@github-actions[bot])"
"Add docs team as a code owner of packages.json () ()

* Add docs team as a code owner of packages.json

`packages.json` Is used by the docs site to manage vuepress and its plugins/dependencies.

* empty commit to bypass CLA hangup

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
add redirect for installation () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Document Enterprise API () ()

* init API page

* import examples from repos

* copy edits

* rm whitespace

* squash me

* additional configuration

* document full SA name

* Update docs/enterprise/api.md

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>

* Update docs/enterprise/api.md

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>

* Update docs/enterprise/api.md

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>

* Update docs/enterprise/api.md

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
Docs/batch link fixes () ()

* add redirect for installation

* batch of link fixes

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
DOCS: Update Enterprise Reference Docs () ()

* update console reference

* empty commit

* specify audience as list

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
small updates to Okta doc () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
TCP Client Doc () ()

* init client app doc

* Update docs/docs/client.md

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>

* Update docs/docs/client.md

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>

* rm whitespace

* document alternate ports

* add Desktop install instructions

* expand tcp port explanation

* convert to headers for links and update content

* loose ends

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
docs: grammar-change/link update () ()

Updated a link and made a grammar change

Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>
Docs: Batch Updates () ()

* define IdP acronym

* remove 'enable user imporsonation', which was removed

* copy edit recovery token

* integrate SA docs into reference

* rename Prometheus as Metrics

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
typo () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
adjust sidebarDepths and document Desktop Client releases () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
make IdP section collapse () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Docs: cross-reference links between concepts and reference () ()

* cross-reference links between concepts and reference

* Empty commit for CLA hangup

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
DOCS: Standardize Relative Links () ()

* standardize relative links

* make img refs very relative
protoutil: add NewAny method for deterministic serialization () ()
add service account redirects () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
add host-rewrite options to config.proto () ()
fixed typo on kubectl () ()

Co-authored-by: Tom Meadows <djw0bbl3@protonmail.com>
Refresh and Update TCP documentation () ()

* init client app doc

* init TCP section

* add redirect for TCP client doc

* Redis and Mysql

* finish TCP exampels

* init Draft template

* cleanup whitespace

* escape markdown image in template

* add redirect and update links

* copy edit

* Update readme.md

* fmt

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>

* optimize png

Signed-off-by: Bobby DeSimone <bobbydesimone@gmail.com>

* header cleanup and child listing

* Update docs/docs/tcp/ssh.md

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>
Co-authored-by: Bobby DeSimone <bobbydesimone@gmail.com>
Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>
Co-authored-by: Bobby DeSimone <bobbydesimone@gmail.com>
Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>","Full Changelog
New
protoutil: add NewAny method for deterministic serialization (@backport-actions-token[bot])
Fixed
backport: host rewrite (@wasaga)
Documentation
Fixed 'kubtctl' typo on releases page (@backport-actions-token[bot])
Refresh and Update TCP documentation (@backport-actions-token[bot])
DOCS: Standardize Relative Links () (@alexfornuto)
Docs: cross-reference links between concepts and reference (@backport-actions-token[bot])
DOCS: Collapse IDP Header (@backport-actions-token[bot])
typo (@backport-actions-token[bot])
adjust sidebarDepths and document Desktop Client releases (@backport-actions-token[bot])
Docs: Batch Updates (@backport-actions-token[bot])
docs: remove extra word / updated docs link (@backport-actions-token[bot])
TCP Client Doc (@backport-actions-token[bot])
DOC: Copy edits to Okta IdP doc. (@backport-actions-token[bot])
DOCS: Update Enterprise Reference Docs (@backport-actions-token[bot])
Docs/batch link fixes (@backport-actions-token[bot])
Add redirect for installation (@backport-actions-token[bot])
Document Enterprise API (@backport-actions-token[bot])"
"docs: v0.16 release ()
docs: update version menu for v0.16 () ()

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
Update mTLS guide () ()

* version 0.9 is old enough as to not warrant reference

* copy edits and formatting

* Consolidate 'before you begin' and warn that mkcert is for development.

* update and refresh

* add troubleshooting partial

* standardize img path for partial

* Apply suggestions from code review

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>

* clarify all route mtls config

* remove troubleshooting section

This commit requires that the PR **not** be backported, since the fix that negates this workaround will not be backported.

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
DOCS: New Guide: Upstream mTLS () ()

* rename mtls.md to be client-side specific

* init upstream mTLS guide

* Apply suggestions from code review

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>

* clarify assumed config dir

* Apply suggestions from code review

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* link to before-you-begin anchor

* Update docs/guides/upstream-mtls.md

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
Fix typo () ()

Signed-off-by: Sylvain Rabot <sylvain@abstraction.fr>

Co-authored-by: Sylvain Rabot <sylvain@abstraction.fr>
docs: fix generation of the public key () ()

Signed-off-by: Sylvain Rabot <sylvain@abstraction.fr>

Co-authored-by: Sylvain Rabot <sylvain@abstraction.fr>
DOCS: Document webauthn with device ID () ()

* init device identity topic page

* add device options to PPL

* init device enrollment guide

* adjust for and crosslink

* tooltip in PPL on finding device ID

* sort and link matchers

* adjust terminology and crosslink

* standardize new topic name

* Apply suggestions from code review

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* rewrite device identity topic page

* rebase cleanup

* Apply suggestions from code review

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* add links from review with footer refs

* Apply suggestions from code review

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* rm errant newlines

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
DOCS: Fixes to 16 release () ()

* clarify upgrade notes and certificate reference

* backport updated reference to source and sort

* Apply suggestions from code review

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* update webauthn link

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
Rephrase Discussion around Discuss () ()

* rephrase discussion around Discuss

* rm whitespace

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
DOCS: Remove duplicate configuration items () ()

Remove duplicate configuration items of route

Co-authored-by: cfanbo <haohtml@gmail.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: cfanbo <haohtml@gmail.com>
fixes broken links, adds checker workarounds () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Docs: Mutual Auth Topic page () ()

* WIP update

* init mutual auth topic page

* WIP

* update JWT verification guide

* s/Java/Json/g

* Add mTLS and update some charts

* resummarize

* get my updates in before Bobby gets here

* Apply suggestions from code review

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* finish updates

* Apply suggestions from code review

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* adjust styling for HRs and blockquotes

* mutual auth overhaul

* grammar adjustment

* Apply suggestions from code review

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* remove new blockquote style

* manual review updates

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
add link to background page () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
fix links, rm errant formatting attempt () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
DOCS:  GitLab Integration guide () ()

* WiP draft of GitLab Integration guide

* fix multiline docker command

* more steps

* complete guide

* add GitLab to Guides index

* add splash frame to video

* rewrite GitLab guide based on tech review

* Apply suggestions from code review

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>

* reduce complexity, note additional config

* rm whitespace

* Apply suggestions from code review

Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>

* fix indent for numbering

* Update docs/guides/gitlab.md

Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
Co-authored-by: cmo-pomerium <91488121+cmo-pomerium@users.noreply.github.com>
fix references to common traffic patterns () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
integration: fix default port for verify service () ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
envoy: check certificates for must-staple flag and drop them if they are missing the response () ()

* envoy: check certificates for must-staple flag and drop them if they are missing the response

* Update config/envoyconfig/tls_test.go

Co-authored-by: Denis Mishin <dmishin@pomerium.com>

Co-authored-by: Denis Mishin <dmishin@pomerium.com>

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
Co-authored-by: Denis Mishin <dmishin@pomerium.com>
update and align reference settings () ()
docs: fix argo link () ()

Co-authored-by: Jorge L. Fatta <jorge.fatta@auth0.com>
DOCS: keyword tag updates () ()

* replace ""zero-trust"" with ""zero trust""

* fix and update all keyword tags

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
handle device states in deny block, fix default device type () ()

* handle device states in deny block, fix default device type

* fix tests

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
document service_proxy_upstream ingress annotation () ()
webauthn: use absolute URL for delete redirect () ()

* authenticate: add callback endpoint

* webauthn: use absolute URL for delete redirect

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>
Update cache to databroker () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>
add More Resources section () ()

Co-authored-by: Alex Fornuto <afornuto@pomerium.com>","Full Changelog
Fixed
webauthn: use absolute URL for delete redirect (@backport-actions-token[bot])
handle device states in deny block, fix default device type (@backport-actions-token[bot])
envoy: check certificates for must-staple flag and drop them if they are missing the response (@backport-actions-token[bot])
integration: fix default port for verify service (@backport-actions-token[bot])
Documentation
Docs: Crosslinks on Upstream mTLS (@backport-actions-token[bot])
Docs: Update Cache to Databroker (@backport-actions-token[bot])
document service_proxy_upstream ingress annotation (@backport-actions-token[bot])
DOCS: keyword tag updates (@backport-actions-token[bot])
docs: fix argo link (@backport-actions-token[bot])
Docs: Manual Backport: update and align reference settings () (@alexfornuto)
Docs: Mutual Auth Hotfix (@backport-actions-token[bot])
DOCS:  GitLab Integration guide (@backport-actions-token[bot])
DOCS: Fix ToC (@backport-actions-token[bot])
DOCS: Crosslink Mutual Auth and Background pages (@backport-actions-token[bot])
Docs: Mutual Auth Topic page (@backport-actions-token[bot])
DOCS: Link Cleanup & Checker Workaround (@backport-actions-token[bot])
DOCS: Cherry-Pick from (@backport-actions-token[bot])
DOCS: Fixes to 16 release (@backport-actions-token[bot])
Rephrase Discussion around Discuss (@backport-actions-token[bot])
DOCS: Document webauthn with device ID (@backport-actions-token[bot])
docs: fix generation of the public key (@backport-actions-token[bot])
Fix typo (@backport-actions-token[bot])
DOCS: New Guide: Upstream mTLS (@backport-actions-token[bot])
Update mTLS guide (@backport-actions-token[bot])
docs: update version menu for v0.16 (@backport-actions-token[bot])"
"authorize: add rego functions to custom evaluator ()
Update _redirects () ()

Co-authored-by: bobby <1544881+desimone@users.noreply.github.com>
docs: update helm values for chart v20.0.0 () ()

Co-authored-by: Travis Groth <travisgroth@users.noreply.github.com>
jwt: round timestamps ()
envoy: fix usage of codec_type with alpn () ()

Co-authored-by: Caleb Doxsey <cdoxsey@pomerium.com>","Full Changelog
Fixed
envoy: fix usage of codec_type with alpn (@github-actions[bot])
authorize: round JWT claim timestamps (@wasaga)
Documentation
docs: update helm values for chart v20.0.0 (@github-actions[bot])
docs: update _redirects (@github-actions[bot])"
"v21.0.0
[Backport staging] Fix JSDoc ()

Co-authored-by: Michael Telatynski <7t3chguy@gmail.com>
[Backport staging] Fix authedRequest including `Authorization: Bearer undefined` for password resets ()

Co-authored-by: Michael Telatynski <7t3chguy@gmail.com>
[Backport staging] Fix default behavior of Room.getBlacklistUnverifiedDevices ()

Co-authored-by: Faye Duxovni <fayed@matrix.org>
[Backport staging] Catch server versions API call exception when starting the client ()

Co-authored-by: Germain <germains@element.io>
Prepare changelog for v21.0.1
v21.0.1","Bug Fixes
Fix default behavior of Room.getBlacklistUnverifiedDevices (). Contributed by @duxovni.
Catch server versions API call exception when starting the client (). Fixes element-hq/element-web.
Fix authedRequest including Authorization: Bearer undefined for password resets (). Fixes element-hq/element-web."
"v23.1.0
replace .at(-1) with array.length-1 () ()

(cherry picked from commit baeb4acddf718eea7e286761a5c9ee5136993a88)

Co-authored-by: Germain <germains@element.io>
Prepare changelog for v23.1.1
v23.1.1","Bug Fixes
Fix backwards compability for environment not support Array.prototype.at ()."
"v16.0.0
Resetting package fields for development
Fix threads reply count sometimes off by one ()
emit aggregate room beacon liveness ()

* emit aggregate room beacon liveness

Signed-off-by: Kerry Archibald <kerrya@element.io>

* tidy and comment

Signed-off-by: Kerry Archibald <kerrya@element.io>

* add export for models/beacon

Signed-off-by: Kerry Archibald <kerrya@element.io>

* add owner and roomId

Signed-off-by: Kerry Archibald <kerrya@element.io>

* copyright

Signed-off-by: Kerry Archibald <kerrya@element.io>
fix missed types for event emitter ()

Signed-off-by: Kerry Archibald <kerrya@element.io>
Formalise guidelines around writing tests ()
add upsert function for updating beacon events ()

* add upsert function for updating beacon events

Signed-off-by: Kerry Archibald <kerrya@element.io>

* expose event type on beacon model

Signed-off-by: Kerry Archibald <kerrya@element.io>

* allow setting timestamp in beaconinfo content helper

Signed-off-by: Kerry Archibald <kerrya@element.io>

* expose parsed beacon info

Signed-off-by: Kerry Archibald <kerrya@element.io>
reemit beacon events ()

* reemit beacon events

Signed-off-by: Kerry Archibald <kerrya@element.io>

* use specific imports

Signed-off-by: Kerry Archibald <kerrya@element.io>

* Update src/models/room-state.ts

Co-authored-by: Travis Ralston <travisr@matrix.org>

Co-authored-by: Travis Ralston <travisr@matrix.org>
Apply redaction logic to threaded events ()
Create threads event timeline set in the room model ()
Improve typing for MatrixEvent::getContent generic ()
Use beacon info event type as beacon identifier ()

* use beacon info event type as beacon identifier

Signed-off-by: Kerry Archibald <kerrya@element.io>

* test cases

Signed-off-by: Kerry Archibald <kerrya@element.io>
Lazy load thread list timeline set ()
Prepare changelog for v16.0.1-rc.1
v16.0.1-rc.1
Prepare changelog for v16.0.1
v16.0.1","Features
emit aggregate room beacon liveness ().
Live location sharing - create m.beacon_info events ().
Beacon event types from MSC3489 ().
Bug Fixes
Fix incorrect usage of unstable variant of is_falling_back ()."
"v25.1.0
Prepare changelog for v25.1.1
v25.1.1","Bug Fixes
Rebuild to fix packaging glitch in 25.1.0. Fixes"
"v15.1.0
Resetting package fields for development
Getter for last thread reply ()
Fix check supportExperimentalThreads ()
Add registration token UIA type ()
Implement TypedEventEmitter for better TS support ()

We're using stringly typed events everywhere, this is the first step for
better typescript support with our event emitters before we replace it
with something much better for React support.
Add LocalStorageErrorEventListener ()

Add a way to listen to LocalStorage error events from element-web
and matrix-react-sdk in the same manner.

Related: https://github.com/vector-im/element-web/issues/18423
Prepare changelog for v15.1.1-rc.1
v15.1.1-rc.1
Prepare changelog for v15.1.1
v15.1.1","Bug Fixes
Fix edit history being broken after editing an unencrypted event with an encrypted event (). Fixes element-hq/element-web and element-hq/element-web. Contributed by @aaronraimist.
Make events pagination responses parse threads (). Fixes element-hq/element-web and element-hq/element-web."
"v0.10.0
Log IDB errors
Fix error logging
lint
Ignore inserts of duplicate inbound group sessions

Rather than aborting the whole txn

This is causing e2e migration fails in the wild
Error message formatting
Use the name of the error, not the request
Ignore inserts of dup inbound group sessions, pt 2

Stop the error from propagating to the txn error handler and
aborting the rest of the transaction.
Name param slightly more helpfully
Prepare changelog for v0.10.1
v0.10.1","Full Changelog
Log IDB errors
Ignore inserts of duplicate inbound group sessions
Ignore inserts of dup inbound group sessions, pt 2"
"v30.0.0
[Backport staging] Ensure `setUserCreator` is called when a store is assigned ()

Co-authored-by: R Midhun Suresh <hi@midhun.dev>
Prepare changelog for v30.0.1
v30.0.1","Bug Fixes
Ensure setUserCreator is called when a store is assigned (). Fixes element-hq/element-web. Contributed by @MidhunSureshR."
"v5.0.0
add method for new /aliases endpoint
use unstable prefix
add method to check server feature flag
jsdoc
Prepare changelog for v5.0.1
v5.0.1","Full Changelog
add method for new /aliases endpoint
method for checking if other party supports verification method
add local echo state for accepting or declining a verif req
make logging compatible with rageshakes
Find existing requests when starting a new verification request
log MAC calculation during SAS"
"v6.2.1
Use existing session id for fetching flows as to not get a new session id
clean up
undo that because `{}` sux
Prepare changelog for v6.2.2
v6.2.2","Full Changelog
Use existing session id for fetching flows as to not get a new session"
"v2.4.0
Upgrade deps
Prepare changelog for v2.4.1
v2.4.1","Full Changelog
Upgrade deps
Ignore crypto events with no content"
"v0.7.8
MatrixClient: add getUserId()

... I'm amazed we got this far without it.
Run jsdoc on a custom babeling of the source

jsdoc can't read our raw source, because of our dangling commas in function
calls. On the other hand, running on /lib means that a lot of the useful
information about exports is lost and you end up having to jump through hoops
to get jsdoc to generate the right thing.

This uses a separate run of babel (with all the presets turned off) to generate
source which is almost identical to the input, but lacks trailing commas.

(https://babeljs.io/blog/2015/10/31/setting-up-babel-6 says 'Babel 6 ships
without any default transforms, so when you run Babel on a file it will just
print it back out to you without changing anything.' - however, that is,
empirically, not entirely true.)
crypto/algorithms/base.js: Convert to es6

Convert base to an es6 module with es6 classes, for clarity and to help with
jsdoccing.

Complications are:

* jsdoc gets confused by `export class`, so the exports are separated.

* turns out that extending Error is a bit difficult, so instanceof doesn't work
  on derived Error classes. This only really affects us in one place (app-side
  code shouldn't be doing instanceofs anyway), so just use `name` instead.
Initial framework for indexeddb-backed crypto store

Doesn't do anything useful yet - just demonstrates a framework for how I hope
it will fit into the sdk.
Factor out reEmit to a common module

and rewrite it to use modern JS while we're at it
Address Kegan's review comments

jsdoc mostly.
Add MatrixClient.clearStores

- to clear both sets of storage on logout
Prepare changelog for v0.7.9
v0.7.9","Full Changelog
Initial framework for indexeddb-backed crypto store
Factor out reEmit to a common module
crypto/algorithms/base.js: Convert to es6
maySendRedactionForEvent for userId
MatrixClient: add getUserId()
Run jsdoc on a custom babeling of the source
Add in a public api getStoredDevice allowing clients to get a specific
device"
"v12.4.0
Verify target device key on reshare
Changelog for 12.4.1
v12.4.1","SECURITY FIXES
Fix a security issue with message key sharing. See https://matrix.org/blog/2021/09/13/vulnerability-disclosure-key-sharing
for details."
"v26.0.0
Fix: handle `baseUrl` with trailing slash in `fetch.getUrl` ()

* tests

* tidy trailing slash in fetch.getUrl before forming url

* make sonar happy about Polynomial regular expression used on uncontrolled data

(cherry picked from commit ef1f5bf232c0b71c29e71cfa49f5e37683c4071f)
Prepare changelog for v26.0.1
v26.0.1","Bug Fixes
Fix: handle baseUrl with trailing slash in fetch.getUrl (). Fixes element-hq/element-web. Contributed by @kerryarchibald."
"v9.0.0
Await key cache check to avoid prompts

`isStoredInKeyCache` is async, so we need to await the result to know whether to
proceed. In addition, this wraps the block in a try / catch, since signing the
key backup is an optional step.

Fixes https://github.com/vector-im/element-web/issues/15530
Deduplicate key backup signing paths
Prepare changelog for v9.0.1
v9.0.1","Full Changelog
[Release] Await key cache check to avoid prompts"
"v0.8.1
Groups: Sync Stream, Accept Invite & Leave ()

* WIP support for reading groups from sync stream

Only does invites currently

* More support for parsing groups in the sync stream

* Fix jsdoc
Re-emit events from, er, Event objects

We do create Events in more places, but this is probably the only
place that matters since the only event is 'decrypted' which won't
fire for, eg. events we send.
Add MatrixEvent.isDecryptionFailure()
Handle m.call.* events which are decrypted asynchronously

Handle the case where received m.call.* events are not decrypted at the point
of the 'event' notification by adding an 'Event.decrypted' listener for them.
Prepare changelog for v0.8.2
v0.8.2","Full Changelog
Handle m.call.* events which are decrypted asynchronously
Re-emit events from, er, Event objects"
"v20.0.0
[Backport staging] Fix missing return when receiving an invitation without shared history ()

Co-authored-by: Faye Duxovni <fayed@element.io>
Prepare changelog for v20.0.1
v20.0.1","Bug Fixes
Fix missing return when receiving an invitation without shared history ()."
"v1.0.2
Rename `MatrixInMemoryStore` to `MemoryStore`

None of the other store classes use the `Matrix` prefix, and I find the mismatch
confusing (it leads me to think it might have a different purpose than the
others).

This change removes the prefix from the store for consistency. The old name is
left as an export for existing SDK consumers.
Add deprecation notice to `MatrixInMemoryStore`
make sure resolve object is defined before calling it
Add investigation notes for browser storage

This collects my notes from investigating the state of browser storage as part
of https://github.com/vector-im/riot-web/issues/9109.
Remove `sessionStore` to `cryptoStore` migration path

The code to migrate from the `sessionStore` to `cryptoStore` originally appeared
in https://github.com/matrix-org/matrix-js-sdk/pull/584 (2017-12-06). At this
point, it seems safe to assume most sessions that need migrating have already
done so. Removing this code simplifies store handling and removes the
`sessionStore` from most places in JS SDK.
Clarify the current state of each store

This moves docs about the 3 stores used next to each other and clarifies their
purpose for future readers.
Add debugging for spurious room version warnings

See https://github.com/vector-im/riot-web/issues/9225
Clarify the meaning of 'real name' for contribution

This applies the clarification already adopted by Synapse:

https://github.com/matrix-org/synapse/commit/ec766b25303b420850e6d2875f156f23109acf6a
Reformat contribution doc to 80 chars
Add functions for getting room upgrade history and leaving those rooms

Required for https://github.com/vector-im/riot-web/issues/8539
Emit sync errors for capturing by clients

For https://github.com/vector-im/riot-web/issues/9260
Add an IndexedDB existence check to the main store

This will be useful for future storage diagnostics as part of
https://github.com/vector-im/riot-web/issues/9271.
Add an IndexedDB existence check to the crypto store

This will be useful for future storage diagnostics as part of
https://github.com/vector-im/riot-web/issues/9271.
Tweak code style
Add missing word
Close the DB right away

This seems to be needed in Chrome to avoid blocking future opens.
Update matrix-mock-request
Prepare changelog for v1.0.3-rc.1
v1.0.3-rc.1
Add existence check to local storage based crypto store

This supports additional diagnostics of stores in
https://github.com/vector-im/riot-web/issues/9309.
Prepare changelog for v1.0.3
v1.0.3","Full Changelog
Add existence check to local storage based crypto store"
"v2.4.4
expand e2ee logging to better debug UISIs
lint
log keyshare ID
s/console/logger/ as per review
log outbound to_device msgs for tracking keyshares
Relax identity server discovery checks to FAIL_PROMPT

As discussed in MSC2284, this relaxes the identity server discovery to a
`FAIL_PROMPT` state so that clients can choose to warn and continue.

Part of https://github.com/vector-im/riot-web/issues/11102
Implements https://github.com/matrix-org/matrix-doc/pull/2284
Update tests
Prepare changelog for v2.4.5
v2.4.5","Full Changelog
Relax identity server discovery checks to FAIL_PROMPT
Expand E2EE debug logging to diagnose ""unable to decrypt"" errors"
"v8.4.0
Ignore invalid candidates
Catch exception from call event handler

Otherwise they leak out ot the sync loop. It's unfortunate that
exceptions from event handlers leak out to the emitter, and this
seems a bit clumsy, but having to wrap eveery event emit in a try
block seems worse.
Prepare changelog for v8.4.1
v8.4.1","Full Changelog
Catch exception from call event handler
Ignore invalid candidates"
"v2.3.1
Add matrix base API to report an event

Signed-off-by: Michael Telatynski <7t3chguy@gmail.com>
Add Synapse admin functions for deactivating a user

For https://github.com/matrix-org/matrix-react-sdk/pull/3371
Update src/client.js

Co-Authored-By: J. Ryan Stinnett <jryans@gmail.com>
Prepare changelog for v2.3.2-rc.1
v2.3.2-rc.1
Fix addPendingEvent with pending event order == chronological

When the pending event order setting was set to 'chronological'
(the default) `addPendingEvent` would NPE because Room no longer
has a `this._filter` property. It should get the filter from the
event timeline set instead, as it does in the previous line when
checking or the presence of a filter.

We should strongly consider changing the default pending event order
to 'detached' and probably removing 'chronological' or comitting to
support it properly: it's not really tested and is prone to breakage
like this.

Applies flumpt's fix from https://github.com/matrix-org/matrix-js-sdk/issues/599
Fixes https://github.com/matrix-org/matrix-js-sdk/issues/599
Prepare changelog for v2.3.2
v2.3.2","Full Changelog
[Release] Fix addPendingEvent with pending event order == chronological"
"v5.1.0
Check both cross-signing and local trust for key sharing

When sharing room keys with our own devices, this ensure we check both
cross-signing and local trust.

Fixes https://github.com/vector-im/riot-web/issues/12596
Use cross-signing trust to mark backups verified

This changes to cross-signing trust as well as local trust when we decide
whether to tell the homeserver a session of room keys is verified.

Fixes https://github.com/vector-im/riot-web/issues/12599
Fix regression in key backup request params

This converts the cross-signing trust to a boolean as required by the
homeserver.

Regressed by https://github.com/vector-im/riot-web/issues/12599
Fixes https://github.com/vector-im/riot-web/issues/12618
For self-verifications, also request keys from the other device ()

* For self-verifications, also request keys from the other device
* removed some XXX's so the editor doesn't think it's three issues
* add methods to access key cache callbacks
remove crypto.verification.start event

as it is not used anymore by the react-sdk
Fix secret sharing names to match spec

When sharing keys, we should use `m.cross_signing` prefix.

Part of https://github.com/vector-im/riot-web/issues/12661
Add logging around key change post-processing
Skip device verif upgrades when callback not present

This skips the upgrade when the upgrade callback is not present (which is
expected as no one sets it currently). This adds logging for around the upgrade
process.
Upload cross-signing key signatures in the background

At the moment, uploading cross-signing key signatures is a slow process that can
potentially take many minutes (!) for large accounts / slow servers. This
changes to do the bootstrapping related versions of this in the background.

Note that key signature uploads for interactive flows like verification are
still blocking for now.

Fixes https://github.com/vector-im/riot-web/issues/12223
use alt aliases instead of local ones for room names
fix tests
refactor megolm encryption to improve perceived speed

- allow applications to pre-send decryption keys before the message is sent
- establish new olm sessions with a shorter timeout first, and then re-try in
  the background with a longer timeout without blocking message sending
Remove v1 identity server fallbacks

Fixes https://github.com/vector-im/riot-web/issues/10443

**Review with https://github.com/matrix-org/matrix-react-sdk/pull/4191**
Appease the linter
some cleanups
Prepare changelog for v5.1.1-rc.1
v5.1.1-rc.1
Convert `trustedLocally` to a bool in all cases

This ensure we always have a boolean value, even when device is null.

Part of https://github.com/vector-im/riot-web/issues/12693
Check key backup trust for the right user ID

This corrects the key backup trust computation so that we use the user ID for
the device we're checking inside of always using the client's main user ID,
which would always resulted in false for other people.

Fixes https://github.com/vector-im/riot-web/issues/12693
check if push actions has a tweaks object
devicesByUser should be userId => array of devices
Prepare changelog for v5.1.1
v5.1.1","Full Changelog
Fix: ensureOlmSessionsForDevices parameter format
Fix: prevent error being thrown during sync in some cases
Force is_verified for key backups to bool and fix computation"
"v31.6.0
Merge pull request from matrix-org/t3chguy/fix/27173

Fix merging of default push rules

(cherry picked from commit 78a225795bb99d44f7ae04f408a9c0213d7c2c47)
v31.6.1","Bug Fixes
Fix merging of default push rules ()."
"release version 1.4.7
Updated link to data API, previous link was broken.
updates link to API reference docs
added ortho_analytic_3b to default asset list in item_asset_types.py
release v1.4.8","New: ortho_analytic_3b asset
Fix: broken links in documentation & readme
New: requests now use custom X-Planet-App client header for tracking"
"date_range improvements, handle Z suffix in strp_lenient

- handle date/datetime predicate values
- add docs
update allowed item/asset types for skysat
update the doc strings ()

* update the doc strings
release version 1.0.1
generated docs update","update the doc strings with defaults
update allowed item/asset types for skysat
date_range improvements, handle Z suffix in strp_lenient"
"Correct syntax
Revert to requiring requests-futures<1.0
Allow requests-futures<1.0
Disable requests-futures warning messages and don't raise for 302","Bug fixes:
Require requests-futures<1.0 as in version 1.4.9. Version 1.0.0 of requests-futures breaks order downloads for an unknown reason."
"release version 1.4.2
Simplified configuration of analytics client to be consistent
make sure base_url has a trailing /
removing monkey patch
updating copyright date for modified files
release version 1.4.3","Updating copyright date for modified files
Removing monkey patch
Make sure base_url has a trailing /
Simplified configuration of analytics client to be consistent"
"release 2.0.1
bump to next dev version
update contributing docs to include branch strategy
maint-2.0.x to maint-2.0
add comma

Co-authored-by: Kevin Lacaille <kevinlacaille@gmail.com>
separate data api item type validation from orders, add skysatvideo as valid data api item type
add skysatvideo to list of valid item types in data search help
minimize lines of code, update docstrings, add reference to long term fix gh ticket
release 2.0.2
fix development status classifier","Fixed:
Fixed bug where SkySatVideo was not recognized as a valid data api item type.
Fixed wheel name to indicate that only python 3 is supported and updated
build metadata to indicate that the package is now a stable release and only
supports Python 3."
"Handle a mix of dict and list-of-dict
Normalize feed types to a list in list-mosaics
Move header line to get test to pass
Factor out a mosaic list printing function
Move header output line down
feed.source is a list
GHA test workflow config

4 versions of Python: 2.7, 3.7-3.9
Fix pytest option
Escape command strings
Remove tab
Use tox to run tests
Escape cron command
Fix YAML
Reduce matrix versions of python
Rename workflow to ""CI for v1""
Add visual from psscene3band to default asset types
Rename test_download_order func in its script so pytest skips it
Remove Travis-CI config
Add missing asset type, clean up tests
Include tests in sdists

Resolves
Run doctests for filters, etc
Add GHA badge
Update README.rst
Use shutil.get_terminal_size ()

* Use shutil.get_terminal_size

click.termui.get_terminal_size is no more.

Resolves

* Add a test for the get_terminal_size import dance

* Fix branch names in workflow

* Add scheduled builds and 2 more Python versions

* Switch import order around to avoid warning","Fix: restore compatibility with click versions >= 8.1.0.
Fix: handle FeedSource array in analytics API."
"all: Enter release date of version 3.23.1 into the changelog
as: Add proto unimplemented to RPC servers
all: Add proto unimplemented to crypto services mock RPC servers
all: Add proto unimplemented to rights mock RPC servers
all: Add proto unimplemented to configuration server RPC
dcs: Add proto unimplemented to RPC servers
dr: Add proto unimplemented to RPC servers
dtc: Add proto unimplemented to RPC servers
all: Add proto unimplemented to events RPC servers
gcs: Add proto unimplemented to RPC servers
gs: Add proto unimplemented to RPC servers
is: Add proto unimplemented to RPC servers
js: Add proto unimplemented to RPC servers
ns: Add proto unimplemented to RPC servers
pba: Add proto unimplemented to mocked RPC servers
qrg: Add proto unimplemented to RPC servers
all: Add proto unimplemented to mocked RPC servers in rpcserver
all: Add proto unimplemented to mocked RPC servers in message processors
all: Fix code quality
dtc: Replace implementation with proto unimplemented in RPC servers
console: Use body instead of query params on all delete requests
console: Add unclaim before delete in device general settings
all: Add more proto unimplemented to RPC servers
all: Refactor device templates
cli: Fix gateway antenna update
dtc: Update CSV convert operation to trim BOM
dev: Update CHANGELOG
all: Remove should.EqualProto
all: Use internal should package
all: Decouple pkg/band tests
all: Decouple pkg/cluster tests
all: Decouple pkg/config/tlsconfig tests
all: Decouple pkg/crypto tests
all: Decouple pkg/errors tests
all: Decouple pkg/experimental tests
all: Decouple pkg/log tests
all: Decouple pkg/rpcmiddleware/discover tests
all: Decouple pkg/webmiddleware tests
all: Decouple pkg/util/test tests
all: Decouple pkg/util/test/assertions tests
console: Disallow removal of last collaborator
is: Add admin removal error
is: Add isLastAdmin utility method
is: Add user admin validation to user delete method
console: Handle null in webhook health status
is: Compare identifiers with same type
all: Do not copy protobuf messages
all: Use comparable error in net errors
all: Use resemblance comparison in UDP protocol tests
dev: Format proto files using gofumpt
all: Remove mage fork
is: Add user admin validation to user update method
is: Add admin validation tests
dev: Update CHANGELOG
all: Cut off changelog version 3.23.2
all: Bump to version 3.23.2
console: Fix events not appearing
all: Upgrade to pgx/v5
all: Enter release date of version 3.23.2 into the changelog","Changed
Deletion of the last admin user or removal of its admin status via an update operation now returns an error.
Do not allow to remove the collaborator of an entity if it is the last collaborator (in the Console).
Fixed
When searching for end-devices, specifying last_seen_at as the field in which the devices will be sorted by no longer returns an error.
Errors during removal of collaborators the application collaborator form not being forwarded to the user in the Console.
Importing devices via CSV no longer skips the first header column when BOM bytes are present."
"all: Enter release date of version 3.23.0 into the changelog
dev: bump classnames from 2.3.1 to 2.3.2

Bumps [classnames](https://github.com/JedWatson/classnames) from 2.3.1 to 2.3.2.
- [Release notes](https://github.com/JedWatson/classnames/releases)
- [Changelog](https://github.com/JedWatson/classnames/blob/main/HISTORY.md)
- [Commits](https://github.com/JedWatson/classnames/compare/v2.3.1...v2.3.2)

---
updated-dependencies:
- dependency-name: classnames
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump react-intl from 6.1.2 to 6.2.4

Bumps [react-intl](https://github.com/formatjs/formatjs) from 6.1.2 to 6.2.4.
- [Release notes](https://github.com/formatjs/formatjs/releases)
- [Commits](https://github.com/formatjs/formatjs/compare/react-intl@6.1.2...react-intl@6.2.4)

---
updated-dependencies:
- dependency-name: react-intl
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump babel-jest from 26.6.3 to 29.3.1

Bumps [babel-jest](https://github.com/facebook/jest/tree/HEAD/packages/babel-jest) from 26.6.3 to 29.3.1.
- [Release notes](https://github.com/facebook/jest/releases)
- [Changelog](https://github.com/facebook/jest/blob/main/CHANGELOG.md)
- [Commits](https://github.com/facebook/jest/commits/v29.3.1/packages/babel-jest)

---
updated-dependencies:
- dependency-name: babel-jest
  dependency-type: direct:development
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump react-refresh from 0.13.0 to 0.14.0

Bumps [react-refresh](https://github.com/facebook/react/tree/HEAD/packages/react) from 0.13.0 to 0.14.0.
- [Release notes](https://github.com/facebook/react/releases)
- [Changelog](https://github.com/facebook/react/blob/main/CHANGELOG.md)
- [Commits](https://github.com/facebook/react/commits/v0.14.0/packages/react)

---
updated-dependencies:
- dependency-name: react-refresh
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
all: Add dedicated error for proprietary traffic
ns: Simplify loss rate computation
api: Include 'last_seen_at' into list request message order
is: Update end device list by accepted order params
dev: Update CHANGELOG
js: Set device-table status as sortable
console: Allow dynamic frequencies and hide desired fields
all: Cut off changelog version 3.23.1
all: Bump to version 3.23.1
util: Migrate actions to IAM
util: Update aws credential action to node16
all: Take session token into account
all: Update test bucket name
dev: Format workflows
dev: Allow contents write
all: Enter release date of version 3.23.1 into the changelog","Added
List of end-devices can now be sorted by last_seen_at field. Unseen devices will be shown last.
Fixed
It is now allowed to set 0 for ping slot frequency and beacon frequency in the Network Layer Settings of the end device general settings in the Console.
MAC parameters that have the desired_ will be hidden from the end device general settings for multicast end devices in the Console."
"as: Improve plumbing error reporting
gcs: Set cups-package only if value exists
all: Upgrade Sentry dependency
all: Add Environment configuration to Sentry
is,console: Fix webui struct tag
gs: Disable UDP IP firewall by default
ci: Add CHANGELOG to S3 Releases
all: Defer context cancellation in errors test
as: Add metrics to Application Server webhooks
as: Add ABP end-devices support to session rebuilding
util: Update CayenneLPP library to better handle floating point
console: Add profile picture to header
console: Add checkbox to validate email address
account: Fix import statement spaces
console,account: Use arrow functions
all: Deprecrate TR005 draft formats
all: Support TR005 format
dev: Update changelog
console: Update LoRaCloud DAS form name
console: Update application package store logic
util: Extend application package service with delete function
console: Add deletion endpoint for default packages to API
console: Delete association on token deletion for LoRaCloud DAS
console: Extend user feature checks

add check for viewing/editing user API keys
console: Check for api keys rights in header
all: Parse TR005 QR code
util: Fix stream listeners reset
gs: Prevent UDP gateways log message floods
as: Add metrics to application packages
util: Use async for application packages delete
as: Improve metrics usage of frontends
console: Fix nwk_key handling in end device general settings
as: Add LoRaCloud GLS API
as: Add LoRaCLoud GLS API client
as: Provide raw JSON representation of response
as: Add LoRaCloud GLS application package
as: Enable the LoRaCloud GLS package
as: Change LoRACloud GLS package to version 3
as: Flatten LoRaCloud GLS API package
api: Add Application Server payload formatters testing RPCs
as: Expose payload formatters RPCs
as: Extract payload processor to messageprocessors
as: Improve payload formatters RPC testing
console: Add LoRaCloud GLS form
console,account: Tune collapse component styling
console: Extract shared messages from lora cloud forms
console: Restructure lora cloud view for multiple forms
doc: Add missing changelog line
data: Update external repositories
all: Bump to version 3.11.3
cli: Fix interactive QR code scanning","Added
sentry.environment configuration option to set the environment tag on Sentry reports.
TR005 QR code format, with ID tr005.
LoRa Cloud Geolocation Services support for TOA/RSSI end device geolocation.
Changed
Default value of gs.udp.addr-change-block is now 0, which disables the IP firewall for UDP traffic. Deployments that need to enforce the IP check should set a value greater than 0. Note that the new default value makes UDP connections less secure.
Prevent flooding logs with ""Packet Filtered"" messages when UDP gateways exceed the maximum rate limit. Only one message per minute will be printed for each gateway.
Deprecated
TR005 Draft 2 and 3 QR code formats. Use the final version of the technical recommendation, with ID tr005.
Fixed
Downlink queue operations on ABP devices not working under specific circumstances.
NwkKey handling for end devices in the Console.
Release notes
Docker images
docker pull thethingsnetwork/lorawan-stack:3.11
docker pull thethingsnetwork/lorawan-stack:3.11.3
docker pull ghcr.io/thethingsnetwork/lorawan-stack:3.11
docker pull ghcr.io/thethingsnetwork/lorawan-stack:3.11.3"
"all: Enter release date of version 3.27.1 into the changelog
dev: Update contributing
dev: bump @adobe/css-tools from 4.0.1 to 4.3.1

Bumps [@adobe/css-tools](https://github.com/adobe/css-tools) from 4.0.1 to 4.3.1.
- [Changelog](https://github.com/adobe/css-tools/blob/main/History.md)
- [Commits](https://github.com/adobe/css-tools/commits)

---
updated-dependencies:
- dependency-name: ""@adobe/css-tools""
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: Update SDK todo comment
is: Add partial mock of the user and organization registries
gs: Add gateway's admin and tech contact Connect method
pba: Allow admin|tech contacts' FieldMask on UpdateGateway route
pba: Remove contact_info FieldMask from UpdateGateway route
pba: Create interface for IS interaction in gspba
pba: Create wrapper for calling IS
pba: Add IS wrapper to pbaServer creation
pba: Update unit tests
api: Define client's DeleteCollaborator service
is: Add DeleteCollaborator implementation to client access
is: Add tests for client's collaborator deletion
api: Define gateway's DeleteCollaborator service
is: Add DeleteCollaborator implementation to gateway access
is: Update tests for gateway access
api: Define organization's DeleteCollaborator service
is: Add DeleteCollaborator implementation to organization access
is: Update tests for organization access
api: Define application's DeleteCollaborator service
is: Add DeleteCollaborator implementation to application access
is: Update tests for application access
is: Add TODO for removing delete procedure on update method
cli: Update method used in collaborator deletion
js: Update handleDelete of Collaborators in Console
is: Add err check to createLoginToken in user access
api: Create deleteUserAPIKey rpc service
api: Create deleteOrganizationAPIKey rpc service
api: Create deleteApplicationAPIKey rpc service
api: Create deleteGatewayAPIKey rpc service
is: Add DeleteAPIKey implementation to user access
is: Update user access unit tests
is: Add DeleteAPIKey implementation to organization access
is: Update organization access unit tests
is: Add DeleteAPIKey implementation to application access
is: Update application access unit tests
is: Add DeleteAPIKey implementation to gateway access
is: Update gateway access unit tests
is: Lint fix for client access
cli: Update method used in api-key deletion
cli: Fix lint warning on application access list command
js: Update handleDelete for APIKeys in console
dev: bump axios from 1.4.0 to 1.5.0 in /sdk/js

Bumps [axios](https://github.com/axios/axios) from 1.4.0 to 1.5.0.
- [Release notes](https://github.com/axios/axios/releases)
- [Changelog](https://github.com/axios/axios/blob/v1.x/CHANGELOG.md)
- [Commits](https://github.com/axios/axios/compare/v1.4.0...v1.5.0)

---
updated-dependencies:
- dependency-name: axios
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump react-redux from 8.1.1 to 8.1.2

Bumps [react-redux](https://github.com/reduxjs/react-redux) from 8.1.1 to 8.1.2.
- [Release notes](https://github.com/reduxjs/react-redux/releases)
- [Changelog](https://github.com/reduxjs/react-redux/blob/master/CHANGELOG.md)
- [Commits](https://github.com/reduxjs/react-redux/compare/v8.1.1...v8.1.2)

---
updated-dependencies:
- dependency-name: react-redux
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump @babel/plugin-transform-runtime from 7.22.6 to 7.22.10

Bumps [@babel/plugin-transform-runtime](https://github.com/babel/babel/tree/HEAD/packages/babel-plugin-transform-runtime) from 7.22.6 to 7.22.10.
- [Release notes](https://github.com/babel/babel/releases)
- [Changelog](https://github.com/babel/babel/blob/main/CHANGELOG.md)
- [Commits](https://github.com/babel/babel/commits/v7.22.10/packages/babel-plugin-transform-runtime)

---
updated-dependencies:
- dependency-name: ""@babel/plugin-transform-runtime""
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump babel-jest from 29.5.0 to 29.6.4

Bumps [babel-jest](https://github.com/jestjs/jest/tree/HEAD/packages/babel-jest) from 29.5.0 to 29.6.4.
- [Release notes](https://github.com/jestjs/jest/releases)
- [Changelog](https://github.com/jestjs/jest/blob/main/CHANGELOG.md)
- [Commits](https://github.com/jestjs/jest/commits/v29.6.4/packages/babel-jest)

---
updated-dependencies:
- dependency-name: babel-jest
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump jest from 29.6.2 to 29.6.4

Bumps [jest](https://github.com/jestjs/jest/tree/HEAD/packages/jest) from 29.6.2 to 29.6.4.
- [Release notes](https://github.com/jestjs/jest/releases)
- [Changelog](https://github.com/jestjs/jest/blob/main/CHANGELOG.md)
- [Commits](https://github.com/jestjs/jest/commits/v29.6.4/packages/jest)

---
updated-dependencies:
- dependency-name: jest
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: Account for flaky invocationDetails presence
console: Make request and dispatch success
console: Update CHANGELOG
console: Fix unhandled error
dev: Add item to changelog
console: Fix account collaborator-table delete operation
console: Remove latest
dev: Revert changelog
all: Cut off changelog version 3.27.2
all: Bump to version 3.27.2
pba: Handle contact not found gracefuly
pba: Skip nil contacts
all: Enter release date of version 3.27.2 into the changelog","Added
Locations retrieved from gateway status messages are now be displayed in the gateway map in the Console, even when they are not received through a secure connection.
Fixed
Fix gateway connection stats being stuck at Connecting until the first uplink is processed in the Console."
"all: Bump to version 3.5.2
console: Add entity title translation
console: Fix supports_class_c value display
doc: Update changelog
util: Fix field mask marshaling from patch
doc: Update changelog
console: Add data display for all event component types
console: Move message data formatting to types util
console: Add new error event to storybook
doc: Update CHANGELOG
console: Add redux primitives for pubsub update
console: Refactor pubsub edit view
use update action instead of direct api call
console: Bind methods separately in pubsub edit view
console: Add redux primitives for webhook update
console: Refactor webhook edit view
use update action instead of direct api call
console: Bind methods separately in pubsub edit view
dev: Update locales
doc: Update changelog
Revert ""console: Parse numbers to floats in input""

This reverts commit c36b38089772063e3962aa86bd620121980a231e.
console: Cast form values in location form
console: Bind methods separately in location components
console: Move validation to location form
console: Fix location form validation
util: Handle zero coordinates for gateway location
Add defaults emitter function
util: Handle zero coordinates for device location
Add defaults emitter function
doc: Update changelog
dev: Update locales
console: Add fetch device count action
console: Remove fetching on device list action in header
doc: Update CHANGELOG
util: Avoid mutating shared reference to FQDN in interop
doc: Update CHANGELOG
util: Filter device payload per component
make sure that stack components receive device fields that are necessary and not all of them
doc: Update changelog
gs: Use server context to fetch fallback frequency plan
cli: Fix ttn-lw-cli failing without a TTY
gs: Disconnect existing gateway connections
util: Use thethingsnetwork.org:443 for getting trust
all: Bump to version 3.5.3
dev: Revert ""Fix snap permissions errors for ttn-lw-cli""

This reverts commit 4151f733409104ba9e76b3649739888799300f13.
doc: Notify about snap permission errors and update changelog","Release notes
Docker images
docker pull thethingsnetwork/lorawan-stack:latest
docker pull thethingsnetwork/lorawan-stack:3
docker pull thethingsnetwork/lorawan-stack:3.5
docker pull thethingsnetwork/lorawan-stack:3.5.3"
"all: Enter release date of version 3.30.0 into the changelog
dev: bump tar from 6.2.0 to 6.2.1

Bumps [tar](https://github.com/isaacs/node-tar) from 6.2.0 to 6.2.1.
- [Release notes](https://github.com/isaacs/node-tar/releases)
- [Changelog](https://github.com/isaacs/node-tar/blob/main/CHANGELOG.md)
- [Commits](https://github.com/isaacs/node-tar/compare/v6.2.0...v6.2.1)

---
updated-dependencies:
- dependency-name: tar
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump the safe group with 10 updates

Bumps the safe group with 10 updates:

| Package | From | To |
| --- | --- | --- |
| [@sentry/browser](https://github.com/getsentry/sentry-javascript) | `7.109.0` | `7.110.1` |
| [@sentry/integrations](https://github.com/getsentry/sentry-javascript) | `7.109.0` | `7.110.1` |
| [react-focus-lock](https://github.com/theKashey/react-focus-lock) | `2.11.2` | `2.11.3` |
| [@storybook/addon-actions](https://github.com/storybookjs/storybook/tree/HEAD/code/addons/actions) | `8.0.6` | `8.0.8` |
| [@storybook/cli](https://github.com/storybookjs/storybook/tree/HEAD/code/lib/cli) | `8.0.6` | `8.0.8` |
| [@storybook/react](https://github.com/storybookjs/storybook/tree/HEAD/code/renderers/react) | `8.0.6` | `8.0.8` |
| [@storybook/react-webpack5](https://github.com/storybookjs/storybook/tree/HEAD/code/frameworks/react-webpack5) | `8.0.6` | `8.0.8` |
| [cypress](https://github.com/cypress-io/cypress) | `13.7.2` | `13.7.3` |
| [eslint-plugin-cypress](https://github.com/cypress-io/eslint-plugin-cypress) | `2.15.1` | `2.15.2` |
| [storybook](https://github.com/storybookjs/storybook/tree/HEAD/code/lib/cli) | `8.0.6` | `8.0.8` |


Updates `@sentry/browser` from 7.109.0 to 7.110.1
- [Release notes](https://github.com/getsentry/sentry-javascript/releases)
- [Changelog](https://github.com/getsentry/sentry-javascript/blob/7.110.1/CHANGELOG.md)
- [Commits](https://github.com/getsentry/sentry-javascript/compare/7.109.0...7.110.1)

Updates `@sentry/integrations` from 7.109.0 to 7.110.1
- [Release notes](https://github.com/getsentry/sentry-javascript/releases)
- [Changelog](https://github.com/getsentry/sentry-javascript/blob/7.110.1/CHANGELOG.md)
- [Commits](https://github.com/getsentry/sentry-javascript/compare/7.109.0...7.110.1)

Updates `react-focus-lock` from 2.11.2 to 2.11.3
- [Release notes](https://github.com/theKashey/react-focus-lock/releases)
- [Changelog](https://github.com/theKashey/react-focus-lock/blob/master/CHANGELOG.md)
- [Commits](https://github.com/theKashey/react-focus-lock/compare/v2.11.2...v2.11.3)

Updates `@storybook/addon-actions` from 8.0.6 to 8.0.8
- [Release notes](https://github.com/storybookjs/storybook/releases)
- [Changelog](https://github.com/storybookjs/storybook/blob/next/CHANGELOG.md)
- [Commits](https://github.com/storybookjs/storybook/commits/v8.0.8/code/addons/actions)

Updates `@storybook/cli` from 8.0.6 to 8.0.8
- [Release notes](https://github.com/storybookjs/storybook/releases)
- [Changelog](https://github.com/storybookjs/storybook/blob/next/CHANGELOG.md)
- [Commits](https://github.com/storybookjs/storybook/commits/v8.0.8/code/lib/cli)

Updates `@storybook/react` from 8.0.6 to 8.0.8
- [Release notes](https://github.com/storybookjs/storybook/releases)
- [Changelog](https://github.com/storybookjs/storybook/blob/next/CHANGELOG.md)
- [Commits](https://github.com/storybookjs/storybook/commits/v8.0.8/code/renderers/react)

Updates `@storybook/react-webpack5` from 8.0.6 to 8.0.8
- [Release notes](https://github.com/storybookjs/storybook/releases)
- [Changelog](https://github.com/storybookjs/storybook/blob/next/CHANGELOG.md)
- [Commits](https://github.com/storybookjs/storybook/commits/v8.0.8/code/frameworks/react-webpack5)

Updates `cypress` from 13.7.2 to 13.7.3
- [Release notes](https://github.com/cypress-io/cypress/releases)
- [Changelog](https://github.com/cypress-io/cypress/blob/develop/CHANGELOG.md)
- [Commits](https://github.com/cypress-io/cypress/compare/v13.7.2...v13.7.3)

Updates `eslint-plugin-cypress` from 2.15.1 to 2.15.2
- [Release notes](https://github.com/cypress-io/eslint-plugin-cypress/releases)
- [Commits](https://github.com/cypress-io/eslint-plugin-cypress/compare/v2.15.1...v2.15.2)

Updates `storybook` from 8.0.6 to 8.0.8
- [Release notes](https://github.com/storybookjs/storybook/releases)
- [Changelog](https://github.com/storybookjs/storybook/blob/next/CHANGELOG.md)
- [Commits](https://github.com/storybookjs/storybook/commits/v8.0.8/code/lib/cli)

---
updated-dependencies:
- dependency-name: ""@sentry/browser""
  dependency-type: direct:production
  update-type: version-update:semver-minor
  dependency-group: safe
- dependency-name: ""@sentry/integrations""
  dependency-type: direct:production
  update-type: version-update:semver-minor
  dependency-group: safe
- dependency-name: react-focus-lock
  dependency-type: direct:production
  update-type: version-update:semver-patch
  dependency-group: safe
- dependency-name: ""@storybook/addon-actions""
  dependency-type: direct:development
  update-type: version-update:semver-patch
  dependency-group: safe
- dependency-name: ""@storybook/cli""
  dependency-type: direct:development
  update-type: version-update:semver-patch
  dependency-group: safe
- dependency-name: ""@storybook/react""
  dependency-type: direct:development
  update-type: version-update:semver-patch
  dependency-group: safe
- dependency-name: ""@storybook/react-webpack5""
  dependency-type: direct:development
  update-type: version-update:semver-patch
  dependency-group: safe
- dependency-name: cypress
  dependency-type: direct:development
  update-type: version-update:semver-patch
  dependency-group: safe
- dependency-name: eslint-plugin-cypress
  dependency-type: direct:development
  update-type: version-update:semver-patch
  dependency-group: safe
- dependency-name: storybook
  dependency-type: direct:development
  update-type: version-update:semver-patch
  dependency-group: safe
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump traverse from 0.6.8 to 0.6.9 in /sdk/js in the safe group

Bumps the safe group in /sdk/js with 1 update: [traverse](https://github.com/ljharb/js-traverse).


Updates `traverse` from 0.6.8 to 0.6.9
- [Changelog](https://github.com/ljharb/js-traverse/blob/main/CHANGELOG.md)
- [Commits](https://github.com/ljharb/js-traverse/compare/v0.6.8...v0.6.9)

---
updated-dependencies:
- dependency-name: traverse
  dependency-type: direct:production
  update-type: version-update:semver-patch
  dependency-group: safe
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: Update issue templates
dev: Update pull request templates
dev: bump eslint-plugin-jest from 27.9.0 to 28.2.0

Bumps [eslint-plugin-jest](https://github.com/jest-community/eslint-plugin-jest) from 27.9.0 to 28.2.0.
- [Release notes](https://github.com/jest-community/eslint-plugin-jest/releases)
- [Changelog](https://github.com/jest-community/eslint-plugin-jest/blob/main/CHANGELOG.md)
- [Commits](https://github.com/jest-community/eslint-plugin-jest/compare/v27.9.0...v28.2.0)

---
updated-dependencies:
- dependency-name: eslint-plugin-jest
  dependency-type: direct:development
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
console: Show JoinEUI and DevEUI only for activation events
as: Refactor request execution
api: Add webhook queue settings
as: Refactor request creation
as: Clarify observability semantics
as: Optimize webhook context derivation
as: Extract webhook fanout fieldmask
as: Extract sinks to dedicated package
api: Add webhook durability settings to configuration service
as: Refactor configuration derivation
api: Fix queue field number
dev: bump the safe group with 10 updates

Bumps the safe group with 10 updates:

| Package | From | To |
| --- | --- | --- |
| [@sentry/browser](https://github.com/getsentry/sentry-javascript) | `7.110.1` | `7.111.0` |
| [@sentry/integrations](https://github.com/getsentry/sentry-javascript) | `7.110.1` | `7.111.0` |
| [react-focus-lock](https://github.com/theKashey/react-focus-lock) | `2.11.3` | `2.12.1` |
| [@storybook/addon-actions](https://github.com/storybookjs/storybook/tree/HEAD/code/addons/actions) | `8.0.8` | `8.0.9` |
| [@storybook/cli](https://github.com/storybookjs/storybook/tree/HEAD/code/lib/cli) | `8.0.8` | `8.0.9` |
| [@storybook/react](https://github.com/storybookjs/storybook/tree/HEAD/code/renderers/react) | `8.0.8` | `8.0.9` |
| [@storybook/react-webpack5](https://github.com/storybookjs/storybook/tree/HEAD/code/frameworks/react-webpack5) | `8.0.8` | `8.0.9` |
| [cypress](https://github.com/cypress-io/cypress) | `13.7.3` | `13.8.0` |
| [mini-css-extract-plugin](https://github.com/webpack-contrib/mini-css-extract-plugin) | `2.8.1` | `2.9.0` |
| [storybook](https://github.com/storybookjs/storybook/tree/HEAD/code/lib/cli) | `8.0.8` | `8.0.9` |


Updates `@sentry/browser` from 7.110.1 to 7.111.0
- [Release notes](https://github.com/getsentry/sentry-javascript/releases)
- [Changelog](https://github.com/getsentry/sentry-javascript/blob/7.111.0/CHANGELOG.md)
- [Commits](https://github.com/getsentry/sentry-javascript/compare/7.110.1...7.111.0)

Updates `@sentry/integrations` from 7.110.1 to 7.111.0
- [Release notes](https://github.com/getsentry/sentry-javascript/releases)
- [Changelog](https://github.com/getsentry/sentry-javascript/blob/7.111.0/CHANGELOG.md)
- [Commits](https://github.com/getsentry/sentry-javascript/compare/7.110.1...7.111.0)

Updates `react-focus-lock` from 2.11.3 to 2.12.1
- [Release notes](https://github.com/theKashey/react-focus-lock/releases)
- [Changelog](https://github.com/theKashey/react-focus-lock/blob/master/CHANGELOG.md)
- [Commits](https://github.com/theKashey/react-focus-lock/commits)

Updates `@storybook/addon-actions` from 8.0.8 to 8.0.9
- [Release notes](https://github.com/storybookjs/storybook/releases)
- [Changelog](https://github.com/storybookjs/storybook/blob/next/CHANGELOG.md)
- [Commits](https://github.com/storybookjs/storybook/commits/v8.0.9/code/addons/actions)

Updates `@storybook/cli` from 8.0.8 to 8.0.9
- [Release notes](https://github.com/storybookjs/storybook/releases)
- [Changelog](https://github.com/storybookjs/storybook/blob/next/CHANGELOG.md)
- [Commits](https://github.com/storybookjs/storybook/commits/v8.0.9/code/lib/cli)

Updates `@storybook/react` from 8.0.8 to 8.0.9
- [Release notes](https://github.com/storybookjs/storybook/releases)
- [Changelog](https://github.com/storybookjs/storybook/blob/next/CHANGELOG.md)
- [Commits](https://github.com/storybookjs/storybook/commits/v8.0.9/code/renderers/react)

Updates `@storybook/react-webpack5` from 8.0.8 to 8.0.9
- [Release notes](https://github.com/storybookjs/storybook/releases)
- [Changelog](https://github.com/storybookjs/storybook/blob/next/CHANGELOG.md)
- [Commits](https://github.com/storybookjs/storybook/commits/v8.0.9/code/frameworks/react-webpack5)

Updates `cypress` from 13.7.3 to 13.8.0
- [Release notes](https://github.com/cypress-io/cypress/releases)
- [Changelog](https://github.com/cypress-io/cypress/blob/develop/CHANGELOG.md)
- [Commits](https://github.com/cypress-io/cypress/compare/v13.7.3...v13.8.0)

Updates `mini-css-extract-plugin` from 2.8.1 to 2.9.0
- [Release notes](https://github.com/webpack-contrib/mini-css-extract-plugin/releases)
- [Changelog](https://github.com/webpack-contrib/mini-css-extract-plugin/blob/master/CHANGELOG.md)
- [Commits](https://github.com/webpack-contrib/mini-css-extract-plugin/compare/v2.8.1...v2.9.0)

Updates `storybook` from 8.0.8 to 8.0.9
- [Release notes](https://github.com/storybookjs/storybook/releases)
- [Changelog](https://github.com/storybookjs/storybook/blob/next/CHANGELOG.md)
- [Commits](https://github.com/storybookjs/storybook/commits/v8.0.9/code/lib/cli)

---
updated-dependencies:
- dependency-name: ""@sentry/browser""
  dependency-type: direct:production
  update-type: version-update:semver-minor
  dependency-group: safe
- dependency-name: ""@sentry/integrations""
  dependency-type: direct:production
  update-type: version-update:semver-minor
  dependency-group: safe
- dependency-name: react-focus-lock
  dependency-type: direct:production
  update-type: version-update:semver-minor
  dependency-group: safe
- dependency-name: ""@storybook/addon-actions""
  dependency-type: direct:development
  update-type: version-update:semver-patch
  dependency-group: safe
- dependency-name: ""@storybook/cli""
  dependency-type: direct:development
  update-type: version-update:semver-patch
  dependency-group: safe
- dependency-name: ""@storybook/react""
  dependency-type: direct:development
  update-type: version-update:semver-patch
  dependency-group: safe
- dependency-name: ""@storybook/react-webpack5""
  dependency-type: direct:development
  update-type: version-update:semver-patch
  dependency-group: safe
- dependency-name: cypress
  dependency-type: direct:development
  update-type: version-update:semver-minor
  dependency-group: safe
- dependency-name: mini-css-extract-plugin
  dependency-type: direct:development
  update-type: version-update:semver-minor
  dependency-group: safe
- dependency-name: storybook
  dependency-type: direct:development
  update-type: version-update:semver-patch
  dependency-group: safe
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump eslint-plugin-cypress from 2.15.2 to 3.0.0

Bumps [eslint-plugin-cypress](https://github.com/cypress-io/eslint-plugin-cypress) from 2.15.2 to 3.0.0.
- [Release notes](https://github.com/cypress-io/eslint-plugin-cypress/releases)
- [Commits](https://github.com/cypress-io/eslint-plugin-cypress/compare/v2.15.2...v3.0.0)

---
updated-dependencies:
- dependency-name: eslint-plugin-cypress
  dependency-type: direct:development
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
console: Remove JoinEUI and DevEUI from normalized uplink
console: Remove comma
dev: bump the safe group with 7 updates

Bumps the safe group with 7 updates:

| Package | From | To |
| --- | --- | --- |
| [github.com/KimMachineGun/automemlimit](https://github.com/KimMachineGun/automemlimit) | `0.5.0` | `0.6.0` |
| [github.com/aws/aws-sdk-go](https://github.com/aws/aws-sdk-go) | `1.51.17` | `1.51.26` |
| [github.com/emersion/go-smtp](https://github.com/emersion/go-smtp) | `0.21.0` | `0.21.1` |
| [github.com/klauspost/compress](https://github.com/klauspost/compress) | `1.17.7` | `1.17.8` |
| [github.com/nats-io/nats-server/v2](https://github.com/nats-io/nats-server) | `2.10.12` | `2.10.14` |
| [golang.org/x/net](https://github.com/golang/net) | `0.23.0` | `0.24.0` |
| [google.golang.org/grpc](https://github.com/grpc/grpc-go) | `1.63.0` | `1.63.2` |

Updates `github.com/KimMachineGun/automemlimit` from 0.5.0 to 0.6.0
- [Release notes](https://github.com/KimMachineGun/automemlimit/releases)
- [Commits](https://github.com/KimMachineGun/automemlimit/compare/v0.5.0...v0.6.0)

Updates `github.com/aws/aws-sdk-go` from 1.51.17 to 1.51.26
- [Release notes](https://github.com/aws/aws-sdk-go/releases)
- [Commits](https://github.com/aws/aws-sdk-go/compare/v1.51.17...v1.51.26)

Updates `github.com/emersion/go-smtp` from 0.21.0 to 0.21.1
- [Release notes](https://github.com/emersion/go-smtp/releases)
- [Commits](https://github.com/emersion/go-smtp/compare/v0.21.0...v0.21.1)

Updates `github.com/klauspost/compress` from 1.17.7 to 1.17.8
- [Release notes](https://github.com/klauspost/compress/releases)
- [Changelog](https://github.com/klauspost/compress/blob/master/.goreleaser.yml)
- [Commits](https://github.com/klauspost/compress/compare/v1.17.7...v1.17.8)

Updates `github.com/nats-io/nats-server/v2` from 2.10.12 to 2.10.14
- [Release notes](https://github.com/nats-io/nats-server/releases)
- [Changelog](https://github.com/nats-io/nats-server/blob/main/.goreleaser.yml)
- [Commits](https://github.com/nats-io/nats-server/compare/v2.10.12...v2.10.14)

Updates `golang.org/x/net` from 0.23.0 to 0.24.0
- [Commits](https://github.com/golang/net/compare/v0.23.0...v0.24.0)

Updates `google.golang.org/grpc` from 1.63.0 to 1.63.2
- [Release notes](https://github.com/grpc/grpc-go/releases)
- [Commits](https://github.com/grpc/grpc-go/compare/v1.63.0...v1.63.2)

---
updated-dependencies:
- dependency-name: github.com/KimMachineGun/automemlimit
  dependency-type: direct:production
  update-type: version-update:semver-minor
  dependency-group: safe
- dependency-name: github.com/aws/aws-sdk-go
  dependency-type: direct:production
  update-type: version-update:semver-patch
  dependency-group: safe
- dependency-name: github.com/emersion/go-smtp
  dependency-type: direct:production
  update-type: version-update:semver-patch
  dependency-group: safe
- dependency-name: github.com/klauspost/compress
  dependency-type: direct:production
  update-type: version-update:semver-patch
  dependency-group: safe
- dependency-name: github.com/nats-io/nats-server/v2
  dependency-type: direct:production
  update-type: version-update:semver-patch
  dependency-group: safe
- dependency-name: golang.org/x/net
  dependency-type: direct:production
  update-type: version-update:semver-minor
  dependency-group: safe
- dependency-name: google.golang.org/grpc
  dependency-type: direct:production
  update-type: version-update:semver-patch
  dependency-group: safe
...

Signed-off-by: dependabot[bot] <support@github.com>
api: Update ListUserBookmarksRequest message
is: Update UserBookmarkStore interface
is: Update UserBookmarkStore FindBoomarks implementation
is: Update UserBookmarkStore FindBoomarks test case
is: Update user bookmark registry
is: Update user bookmark registry tests
dev: Update CHANGELOG
all: Cut off changelog version 3.30.1
all: Bump to version 3.30.1
console: Fix choosing different adr
console: Fix condition
console: Add back devAddr
console: Fix repetition
console: Fix linting
gs: Do not reject proprietary frames in Basics Station
all: Enter release date of version 3.30.1 into the changelog","Added
Support fine-grained NbTrans controls while using Dynamic ADR mode in the Console.
User bookmark listing now supports filtering bookmarks by entity type.
This can be specified by setting entity_types field in ListUserBookmarksRequest.
Fixed
Show both AFcntDown and NFcntDown in the Device overview in the Console.
Fixes the keys displayed in the session information section of overview tab of an End Device in the Console - for LW 1.1.x, replaces NwkSKey with FNwkSIntKey. For LX 1.0.x display only the NwkSKey and AppSKey."
"all: Enter release date of version 3.24.1 into the changelog
all: Add Redis connection maximum lifetime configuration
dev: Fix changelog
api: Add note for unclaiming devices on delete
cli: Print error but continue deleting devices on unclaim error
console: Fix TR005 QR code parsing
all: Update golang.org/x/net to v0.7.0
all: Update golang.org/x/image to v0.5.0
all: Update golang.org/x/crypto to v0.6.0
all: Update golang.org/x/exp
all: Update golang.org/x/oauth2 to v0.5.0
all: Update golang.org/x/sync to v0.1.0
gs: Update error public attributes
all: Extract stream time utility
all: Trim old stream elements
is: Update membershipchains to validate directMembership account type
dev: Update CHANGELOG
all: Do not use jitter for stream triming
all: Cut off changelog version 3.24.2
all: Bump to version 3.24.2
all: Enter release date of version 3.24.2 into the changelog","Deprecated
Device claiming that transfer devices between applications is now deprecated and will be removed in a future version of The Things Stack. Device claiming on Join Servers, including The Things Join Server, remains functional. This deprecates the following components:
API for managing application claim authorization (EndDeviceClaimingServer.AuthorizeApplication and EndDeviceClaimingServer.UnauthorizeApplication)
CLI commands to manage application claim settings (ttn-lw-cli application claim [authorize|unauthorize])
Fixed
The CLI now continues deleting devices when unclaiming from the Join Server fails. This resembles the behavior in the Console. This no longer stops devices from being deleted if the Join Server is unavailable or the claim is not held.
Organization API Keys' rights no longer are considered invalid during fetch operations. If the proper right is attached to said API key it is possible to fetch all fields of an entity, previous to this fix only public safe fields were fetchable."
"console,oauth: Add media-queries to stepper component
console,oauth: Fix stepper styling
console,oauth: Fix stepper step prop-types
all: Add metrics to pkg/log
console: Fix stepper step displayName
console,oauth: Allow passing custom children to button
util: Extend button storybook

add custom content example
util: Allow suppressing success logs for URLs
console,oauth: Share sentry config between console and oauth
dev: Add redux-sentry-middleware, upgrade sentry
pba: Use cluster ID as subscription group
doc: Update changelog
console,oauth: Add error reporting to redux store
console,oauth: Enable sourcemaps in production
doc: Add development config note
doc: Update CHANGELOG
doc: Fix shortcode typo
console,oauth: Add render-callback util
console,oauth: Add useCombinedRefs hook
console,oauth: Add wizard context
console,oauth: Add wizard steps component
console,oauth: Add wizard form component
console,oauth: Add wizard stepper component
console,oauth: Add wizard component
util: Add wizard component to storybook
console,oauth: Fix submit-button prop-types

do not require 'message' since it can be passed as 'children'
dev: Update locales
util,ns: Fix ChMask cntl 6,7 meaning when parsing
doc: Update CHANGELOG
all: Update Redis library to v7
all: Delete Redis consumers on exit
console,oauth: Add workaround for toast css module issue
util: Add mutex lock to Redis
cli: Initialize Redis mutex scripts
ns: Adapt to Redis package changes
ns,cli: Lock device on SetByID
util: Ensure expiration is always set on deduplicator lists
all: Add and use randutil.LockedRand
gs: Allow unmarshaling integer BasicStation EUIs
console: Fix application create form

Fix validations schema. Make sure 'link' is included.
as,gs,util: Suppress unexpected EOF errors during connection setup
as: Do not count non-data uplink and join-accepts in uplink metrics
ns: Refactor uplink metrics

- Remove `uplink_unique_total`
- Introduce `uplink_duplicates_total`
- Introduce `uplink_processed_total`
doc: Add LBS guide
doc: Update CHANGELOG
all: Bump to version 3.8.4","Release notes
Added
Metrics for log messages, counted per level and namespace.
Allow suppressing logs on HTTP requests for user-defined paths (see --http.log-ignore-paths option).
Redux state and actions reporting to Sentry
Serving frontend sourcemaps in production
Frequency plan documentation.
LoRa Basics Station documentation.
Changed
Suppress a few unexpected EOF errors, in order to reduce noise in the logs for health checks.
Fixed
Packet Broker Agent cluster ID is used as subscription group.
LinkADR handling in 72-channel bands.
Data uplink metrics reported by Application Server.
Docker images
docker pull thethingsnetwork/lorawan-stack:3.8
docker pull thethingsnetwork/lorawan-stack:3.8.4"
"all: Enter release date of version 3.29.0 into the changelog
dev: Remove space manipulations
dev: Remove stylint
all: Fix error initialization
js: Update isResctrictedUser conditional in CollaboratorSelect
is: Add collaboratorIsContact error
is: Add collaboratorIsContact to entities_access
dev: bump webpack-dev-server from 4.15.1 to 5.0.0

Bumps [webpack-dev-server](https://github.com/webpack/webpack-dev-server) from 4.15.1 to 5.0.0.
- [Release notes](https://github.com/webpack/webpack-dev-server/releases)
- [Changelog](https://github.com/webpack/webpack-dev-server/blob/master/CHANGELOG.md)
- [Commits](https://github.com/webpack/webpack-dev-server/compare/v4.15.1...v5.0.0)

---
updated-dependencies:
- dependency-name: webpack-dev-server
  dependency-type: direct:development
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
console,account: Fix table fetching overlay
dev: bump the safe group with 13 updates

Bumps the safe group with 13 updates:

| Package | From | To |
| --- | --- | --- |
| [github.com/aws/aws-sdk-go](https://github.com/aws/aws-sdk-go) | `1.50.11` | `1.50.16` |
| [github.com/getsentry/sentry-go](https://github.com/getsentry/sentry-go) | `0.26.0` | `0.27.0` |
| [go.opentelemetry.io/contrib/instrumentation/github.com/gorilla/mux/otelmux](https://github.com/open-telemetry/opentelemetry-go-contrib) | `0.47.0` | `0.48.0` |
| [go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc](https://github.com/open-telemetry/opentelemetry-go-contrib) | `0.47.0` | `0.48.0` |
| [go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp](https://github.com/open-telemetry/opentelemetry-go-contrib) | `0.47.0` | `0.48.0` |
| [go.opentelemetry.io/otel](https://github.com/open-telemetry/opentelemetry-go) | `1.22.0` | `1.23.0` |
| [go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc](https://github.com/open-telemetry/opentelemetry-go) | `1.22.0` | `1.23.1` |
| [go.opentelemetry.io/otel/exporters/stdout/stdouttrace](https://github.com/open-telemetry/opentelemetry-go) | `1.22.0` | `1.23.1` |
| [go.opentelemetry.io/otel/sdk](https://github.com/open-telemetry/opentelemetry-go) | `1.22.0` | `1.23.1` |
| [go.opentelemetry.io/otel/trace](https://github.com/open-telemetry/opentelemetry-go) | `1.22.0` | `1.23.1` |
| [golang.org/x/crypto](https://github.com/golang/crypto) | `0.18.0` | `0.19.0` |
| [golang.org/x/net](https://github.com/golang/net) | `0.20.0` | `0.21.0` |
| [golang.org/x/oauth2](https://github.com/golang/oauth2) | `0.16.0` | `0.17.0` |

Updates `github.com/aws/aws-sdk-go` from 1.50.11 to 1.50.16
- [Release notes](https://github.com/aws/aws-sdk-go/releases)
- [Commits](https://github.com/aws/aws-sdk-go/compare/v1.50.11...v1.50.16)

Updates `github.com/getsentry/sentry-go` from 0.26.0 to 0.27.0
- [Release notes](https://github.com/getsentry/sentry-go/releases)
- [Changelog](https://github.com/getsentry/sentry-go/blob/master/CHANGELOG.md)
- [Commits](https://github.com/getsentry/sentry-go/compare/v0.26.0...v0.27.0)

Updates `go.opentelemetry.io/contrib/instrumentation/github.com/gorilla/mux/otelmux` from 0.47.0 to 0.48.0
- [Release notes](https://github.com/open-telemetry/opentelemetry-go-contrib/releases)
- [Changelog](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/main/CHANGELOG.md)
- [Commits](https://github.com/open-telemetry/opentelemetry-go-contrib/compare/zpages/v0.47.0...zpages/v0.48.0)

Updates `go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc` from 0.47.0 to 0.48.0
- [Release notes](https://github.com/open-telemetry/opentelemetry-go-contrib/releases)
- [Changelog](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/main/CHANGELOG.md)
- [Commits](https://github.com/open-telemetry/opentelemetry-go-contrib/compare/zpages/v0.47.0...zpages/v0.48.0)

Updates `go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp` from 0.47.0 to 0.48.0
- [Release notes](https://github.com/open-telemetry/opentelemetry-go-contrib/releases)
- [Changelog](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/main/CHANGELOG.md)
- [Commits](https://github.com/open-telemetry/opentelemetry-go-contrib/compare/zpages/v0.47.0...zpages/v0.48.0)

Updates `go.opentelemetry.io/otel` from 1.22.0 to 1.23.0
- [Release notes](https://github.com/open-telemetry/opentelemetry-go/releases)
- [Changelog](https://github.com/open-telemetry/opentelemetry-go/blob/main/CHANGELOG.md)
- [Commits](https://github.com/open-telemetry/opentelemetry-go/compare/v1.22.0...v1.23.0)

Updates `go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc` from 1.22.0 to 1.23.1
- [Release notes](https://github.com/open-telemetry/opentelemetry-go/releases)
- [Changelog](https://github.com/open-telemetry/opentelemetry-go/blob/main/CHANGELOG.md)
- [Commits](https://github.com/open-telemetry/opentelemetry-go/compare/v1.22.0...v1.23.1)

Updates `go.opentelemetry.io/otel/exporters/stdout/stdouttrace` from 1.22.0 to 1.23.1
- [Release notes](https://github.com/open-telemetry/opentelemetry-go/releases)
- [Changelog](https://github.com/open-telemetry/opentelemetry-go/blob/main/CHANGELOG.md)
- [Commits](https://github.com/open-telemetry/opentelemetry-go/compare/v1.22.0...v1.23.1)

Updates `go.opentelemetry.io/otel/sdk` from 1.22.0 to 1.23.1
- [Release notes](https://github.com/open-telemetry/opentelemetry-go/releases)
- [Changelog](https://github.com/open-telemetry/opentelemetry-go/blob/main/CHANGELOG.md)
- [Commits](https://github.com/open-telemetry/opentelemetry-go/compare/v1.22.0...v1.23.1)

Updates `go.opentelemetry.io/otel/trace` from 1.22.0 to 1.23.1
- [Release notes](https://github.com/open-telemetry/opentelemetry-go/releases)
- [Changelog](https://github.com/open-telemetry/opentelemetry-go/blob/main/CHANGELOG.md)
- [Commits](https://github.com/open-telemetry/opentelemetry-go/compare/v1.22.0...v1.23.1)

Updates `golang.org/x/crypto` from 0.18.0 to 0.19.0
- [Commits](https://github.com/golang/crypto/compare/v0.18.0...v0.19.0)

Updates `golang.org/x/net` from 0.20.0 to 0.21.0
- [Commits](https://github.com/golang/net/compare/v0.20.0...v0.21.0)

Updates `golang.org/x/oauth2` from 0.16.0 to 0.17.0
- [Commits](https://github.com/golang/oauth2/compare/v0.16.0...v0.17.0)

---
updated-dependencies:
- dependency-name: github.com/aws/aws-sdk-go
  dependency-type: direct:production
  update-type: version-update:semver-patch
  dependency-group: safe
- dependency-name: github.com/getsentry/sentry-go
  dependency-type: direct:production
  update-type: version-update:semver-minor
  dependency-group: safe
- dependency-name: go.opentelemetry.io/contrib/instrumentation/github.com/gorilla/mux/otelmux
  dependency-type: direct:production
  update-type: version-update:semver-minor
  dependency-group: safe
- dependency-name: go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc
  dependency-type: direct:production
  update-type: version-update:semver-minor
  dependency-group: safe
- dependency-name: go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp
  dependency-type: direct:production
  update-type: version-update:semver-minor
  dependency-group: safe
- dependency-name: go.opentelemetry.io/otel
  dependency-type: direct:production
  update-type: version-update:semver-minor
  dependency-group: safe
- dependency-name: go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc
  dependency-type: direct:production
  update-type: version-update:semver-minor
  dependency-group: safe
- dependency-name: go.opentelemetry.io/otel/exporters/stdout/stdouttrace
  dependency-type: direct:production
  update-type: version-update:semver-minor
  dependency-group: safe
- dependency-name: go.opentelemetry.io/otel/sdk
  dependency-type: direct:production
  update-type: version-update:semver-minor
  dependency-group: safe
- dependency-name: go.opentelemetry.io/otel/trace
  dependency-type: direct:production
  update-type: version-update:semver-minor
  dependency-group: safe
- dependency-name: golang.org/x/crypto
  dependency-type: direct:production
  update-type: version-update:semver-minor
  dependency-group: safe
- dependency-name: golang.org/x/net
  dependency-type: direct:production
  update-type: version-update:semver-minor
  dependency-group: safe
- dependency-name: golang.org/x/oauth2
  dependency-type: direct:production
  update-type: version-update:semver-minor
  dependency-group: safe
...

Signed-off-by: dependabot[bot] <support@github.com>
console: Fix copyright message
api: Add exclude_from field to SearchAccountsRequest message definition
is: Update SearchAccounts methods in bunstore
is: Update SearchAccounts tests
is: Add collaboratorIsContact tests to entities_access
js: Format removeCollaborator method
js: Update sdk's payloadSingleResponse static method
dev: Upgrade `throttled`
dev: Add Redis rate limiting store
dev: Update changelog
dev: Use Redis client instead of Config
dev: Update CHANGELOG
all: Cut off changelog version 3.29.1
all: Bump to version 3.29.1
all: Fix redirect loop when explicit ports are used
all: Add maximize build space
all: Enter release date of version 3.29.1 into the changelog","Added
Option to store rate limits in Redis. When used, the rate limits are applied over the entire cluster instead of per-instance.
Field complement_collaborators was added to SearchAccounts. Allows an user to request the accounts that are not already attached to the entity's collaborator list."
"all: Enter release date of version 3.22.1 into the changelog
gs, gcs: Backport tabshubs fixes
dev: Generate messages
gs: Update linter comments
console: Do not require AppKey when skipping JS
console: Fix device ID generation
dev: Update changelog
dev: Update cypress tests
console: Fix device onboarding when using ABP and/or multicast
dev: Update cypress tests
dev: Update changelog
ns: Fail network initiated downlinks if downlink paths are not available
as: Propagate the location solved and service data events
gs: Fix errors assertion
api: Add ZeroableFrequencyValue
all: Add ZeroableFrequencyValue
ns: Provide default beacon frequency value
gs: Fix double gateway connection stats emission
gs: Do not mutate frequency plan time off air
console: Do not show gateway EUI in gateway events
all: Block event streams with jitter
all: Limit the number of events read from historical subscriptions
all: Add jitter to event storage TTL
dev: Update changelog
all: Use PExpire instead of Expire
as: Adapt LoRa Cloud integration
console: Fix LoRa Cloud fPort ranges
dev: bump traverse from 0.6.6 to 0.6.7 in /sdk/js

Bumps [traverse](https://github.com/ljharb/js-traverse) from 0.6.6 to 0.6.7.
- [Release notes](https://github.com/ljharb/js-traverse/releases)
- [Changelog](https://github.com/ljharb/js-traverse/blob/main/CHANGELOG.md)
- [Commits](https://github.com/ljharb/js-traverse/compare/v0.6.6...v0.6.7)

---
updated-dependencies:
- dependency-name: traverse
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump stylus from 0.55.0 to 0.59.0

Bumps [stylus](https://github.com/stylus/stylus) from 0.55.0 to 0.59.0.
- [Release notes](https://github.com/stylus/stylus/releases)
- [Changelog](https://github.com/stylus/stylus/blob/dev/Changelog.md)
- [Commits](https://github.com/stylus/stylus/compare/0.55.0...0.59.0)

---
updated-dependencies:
- dependency-name: stylus
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump react-text-mask from 5.4.3 to 5.5.0

Bumps [react-text-mask](https://github.com/text-mask/text-mask) from 5.4.3 to 5.5.0.
- [Release notes](https://github.com/text-mask/text-mask/releases)
- [Commits](https://github.com/text-mask/text-mask/commits)

---
updated-dependencies:
- dependency-name: react-text-mask
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump unicode-properties from 1.3.1 to 1.4.1

Bumps [unicode-properties](https://github.com/devongovett/unicode-properties) from 1.3.1 to 1.4.1.
- [Release notes](https://github.com/devongovett/unicode-properties/releases)
- [Commits](https://github.com/devongovett/unicode-properties/compare/v1.3.1...v1.4.1)

---
updated-dependencies:
- dependency-name: unicode-properties
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump @babel/runtime-corejs2 from 7.18.9 to 7.20.1

Bumps [@babel/runtime-corejs2](https://github.com/babel/babel/tree/HEAD/packages/babel-runtime-corejs2) from 7.18.9 to 7.20.1.
- [Release notes](https://github.com/babel/babel/releases)
- [Changelog](https://github.com/babel/babel/blob/main/CHANGELOG.md)
- [Commits](https://github.com/babel/babel/commits/v7.20.1/packages/babel-runtime-corejs2)

---
updated-dependencies:
- dependency-name: ""@babel/runtime-corejs2""
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
console: Refactor organization form
console: Streamline wording for adding entities
console: Fix documentation link in end device onboarding
console: Streamline application add form
console: Streamline entity add forms
console,account: Update locales
dev: Update cypress tests
console,account: Fix paste behavior of byte input
console,account: Discard errors originating from firewall blocks
console: Fix lint issue
is: Make bunstore the default DB setup
cli: Update is command to use bunstore
console: Add input type tooltip
console: Remove autofocus
is: Update oauth store to delete auths of deleted entities
dev: Update CHANGELOG
all: Cut off changelog version 3.22.2
all: Bump to version 3.22.2
console: Fix byte input clipboard issues
console: Remove required from server_url in LoRa Cloud integration
console: Set empty server url to existing LoRa Cloud integration entries
all: Enter release date of version 3.22.2 into the changelog","Added
The is.gormstore experimental flag has been added. Swaps the underlying Identity Server store implementation if set to true.
Changed
Class B and C downlinks will no longer be automatically retried indefinitely if none of the gateways are available at the scheduling moment, and the downlink paths come from the last uplink.
This was already the behavior for downlinks which had their downlink path provided explicitly using the class_b_c.gateways field.
The downlinks will be evicted from the downlink queue and a downlink failure event will be generated. The failure event can be observed by the application using the downlink_failed message, which is available in all integrations.
Event history and payload storage TTL has now 1% jitter.
The underlying store implementation has been changed to be by default based on bun instead of gorm. The previous store implementation can be reactivated using the is.gormstore experimental flag.
Removed
The is.bunstore experimental flag has been removed.
Fixed
Do not require AppKey when skipping Join Server registration in end device onboarding in the Console.
Fix auto generation of device ID when using DevEUI generator in the Console.
Fix several device onboarding issues with ABP in the Console.
Do not ask for a JoinEUI.
Reinitialize form properly when switching between ABP and OTAA.
Issue with pasting values into byte input at the wrong position in the Console."
"gs: Standardize io metrics subsystem
is: Fix RedirectURIs->RedirectUris rename in client_requested email
all: Remove embed from UserIdentifiers in user.proto
all: Remove nullable from User.Ids
all: Remove nullable from GetUserRequest.UserIds
all: Remove nullable from CreateTemporaryPasswordRequest.UserIds
all: Remove nullable from UpdateUserPasswordRequest.UserIds
all: Remove nullable from ListUserAPIKeysRequest.UserIds
all: Remove nullable from GetUserAPIKeyRequest.UserIds
all: Remove nullable from CreateUserAPIKeyRequest.UserIds
all: Remove nullable from UpdateUserAPIKeyRequest.UserIds
all: Remove nullable from UserSessionIdentifiers.UserIds
all: Remove nullable from ListUserSessionsRequest.UserIds
all: Remove nullable from CreateLoginTokenRequest.UserIds
all: Remove nullable from UserSession.UserIds
all: Remove nullable from LoginToken.UserIds
console,account: Add deduplicator integration to sentry config
console,account: Allow to pass details to error notifications
console,account: Avoid unhandled promise rejections in fetch table
console,account: Avoid ingesting fetch table errors twice
dev: bump tmpl from 1.0.4 to 1.0.5

Bumps [tmpl](https://github.com/daaku/nodejs-tmpl) from 1.0.4 to 1.0.5.
- [Release notes](https://github.com/daaku/nodejs-tmpl/releases)
- [Commits](https://github.com/daaku/nodejs-tmpl/commits/v1.0.5)

---
updated-dependencies:
- dependency-name: tmpl
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>
as: Validate EUIs on AppSKey fetch
console,account: Improve sentry error title extraction
ns: Remove uplink queue invalidations optimization
pba: Do not include uplink token if the constraint restricts it
gs: Validate uplink token after parsing it
all: Remove embed from OrganizationIdentifiers in organization.proto
all: Remove nullable from OrganizationIdentifiers in organization.proto
all: Remove embed from ClientIdentifiers in client.proto
all: Remove nullable from ClientIdentifiers in client.proto
all: Remove embed from ApplicationIdentifiers in application.proto
gs: Use workerpool in the UDP frontend
all: Remove nullable from ApplicationIdentifiers in application.proto
all: Allow worker pools to disable queuing
all: Allow worker pools to be waited
console: Hide freq plan input when ns disabled
console: Hide mac settings fields when ns disabled
console: Hide device class field when ns disabled
console: Dont fetch application link if when disabled
console: Fix class b handling in device create form
console: Dont fetch eui prefixes when js disabled
console: Fix frequency plan handling when gs disabled
console: Adjust device repository form submission
console: Fix sessin handling for joined otaa end devices
all: Use worker pools for upstream handlers
gs: Expect TxAck when tests demand it
all: Remove worker pool handler factory
all: Spawn replacement worker on panic
all: Add worker pool tests
all: Add worker pool basic benchmark
api: Add default Packet Broker gateway visibility control
pba: Implement default gateway visibility management
cli: Add Packet Broker default gateway visibility management
dev: Update changelog
cli: Add Packet Broker default gateway visibility management
dev: Update changelog
as: Do not decode FPort 0 uplink messages
ns: Do not provide frame payload for FPort 0 uplink messages
dev: Update changelog
all: Add band package ground truth
all: Separate band package definitions
all: Update bands RPC to use the new storage format
all: Expose latest band versions on demand
all: Add AS_923 band definition
all: Add AU_915_928 band definition
all: Add CN_470_510 band definition
all: Add CN_779_787 band defition
all: Add EU_433 band definition
all: Add EU_863_870 band definition
all: Add IN_865_867 band definition
all: Add ISM_2400 band definition
all: Add KR_920_923 band definition
all: Add RU_864_870 band definition
all: Add US_902_928 band definition
all: Remove embed from GatewayIdentifiers in gateway.proto
all: Remove nullable from GatewayIdentifiers in gateway.proto
ns: Report resource exhausted errors using warnings
ns: Report cancelled errors using warnings
gs: Do not log cancelled errors
all: Make named error usage consistent
pba: Use workerpool for forwarder uplink publish
pba: Use workerpool for homenetwork downlink publish
pba: Use workerpool for forwarder downlink subscribe
pba: Use workerpool for homenetwork uplink subscribe
pba: Use multiple streams for forwarder subscribe
pba: Use multiple streams for homenetwork subscribe
api: Remove gogoproto embed/nullable in DCS
cli: Adapt claiming commands
api: Implement IDStringer in DCS messages
all: Revert gogoproto option for custom type
all: Wrap entire blocks with jsonplugin feature flag
api: Return from MarshalProtoJSON after writing nil
console,account: Fix error prop extraction utility
dev: Update error util tests
console: Fix empty join server address handling
pba: Use original context while reporting status
pba: Remove unused constants
api: Add fully described data rates to TxRequest
gs: Use fully described data rates
ns: Use fully described data rates
as: Make local distributor broadcast call blocking
pba: Use fully described data rates
dev: Regenerate messages
ns: Generate RX2 data rate from FP
all: Range over map when checking data rate for bands
dev: Update changelog
console: Convert backticks for event errors
console,account: Enable extracting message props from error paths
console: Fix not displaying value type events
all: Set index directly
data: Update external repositories
all: Bump to version 3.15.0","Added
Packet Broker gateway visibility management (default settings only). See ttn-lw-cli packetbroker home-networks gateway-visibilities --help for more information.
Changed
The Gateway Server worker pools may now drop workers if they are idle for too long.
FPort = 0 uplinks are no longer decoded by the Application Server, and the Network Server no longer provides the frame payload to the Application Server for these messages.
Fixed
Emails to admins about requested OAuth clients.
session handling for joined OTAA end devices in the Console.
Empty Join Server address handling in end device creation form in the Console.
Data Rate to data rate index matching for uplinks and downlinks.
Docker images
docker pull thethingsnetwork/lorawan-stack:3.15
docker pull thethingsnetwork/lorawan-stack:3.15.1
docker pull ghcr.io/thethingsnetwork/lorawan-stack:3.15
docker pull ghcr.io/thethingsnetwork/lorawan-stack:3.15.1"
"all: Bump to version 3.3.1
doc: Prefix APIs with /api/v3
doc: Add End Device Claiming API reference
doc: Regenerate API data
console: Add info for application payload formatters
console: Add device payload formatter info
dev: Add translation
cli: Add flag for API key for gateway linking in simulation
all: Remove v prefix from development versions
doc: Fix API addresses in docker-compose
doc: Fix API addresses in getting started guide
doc: Add reference to config step in CLI getting started

and add missing config
cli: Refactor flag decoding
api: Make class-b-c.gateways non-nullable
ns: Adapt to API changes
cli: Add support for class-b-c.gateways
doc: Update changelog
console,oauth: Add branding root path config to web templates
console,oauth: Add env selector for branding root path
console,oauth: Move TTS logo to static assets
console,oauth: Refactor logo component to hold secondary logo
console,oauth: Add logo container
console,oauth: Replace logo component with container
doc: Update documentation for custom branding
doc: Update changelog
js: Support wildcard client certificate CN
util: Make getting host from address context-aware
doc: Clarify TTKG WiFi AP connection
gcs: Fix derived MQTT scheme and port for TTKG
gcs: Fix derived HTTP scheme and port for TTKG
util: Harmonize test case
doc: Clarify TTKG Account Server
util: Register Microchip signing keys per part number
js: Remove ineffective fallback to unknown application ID
ns: Fix race condition in test
gcs: Handle review comments
util: Only allow Redis options defined by the package
util,ns,js: Allow errors in keyCmd of redis.FindProto
util,as: Do not sort protos by default
util: Allow skipping protos in range
util: Add redis.FindProtosWithKeys
console,oauth: Fix logo alt text
all: Add contextual end device
js: Make device registry context aware
js: Use JoinEUI in session key registry storage key
doc: Add step for user registration
api: Allow getting and setting NS KEK label on JS
all: Add error to email registry setup
is: Make email templates fetcher config consistent
doc: Update reference for email template fetcher options
all: Use partial email customizations
all: Return unexpected email template fetch errors
doc: Remove config from email templates reference
doc: Add email template bucket to changelog
all: Add context filler middleware to interop server
ns: Fix application downlink validation when scheduling
api: Record last uplinks/downlinks per-session
ns: Use MACState.Recent{Down,Up}links
ns: Use pld.FCnt when constructing ApplicationUplink
ns: Fix application downlink validation when enqueueing
is: Refactor membership query
is: Consider membership in search
is: Use Postgres full text search if possible
api: Add pagination to search
cli: Add pagination to search commands
is: Don't count results if already counted
is: Restrict user search to admins
is: Paginate search results
doc: Add pagination fields to Hugo API data
doc: Add search requests to Application and Gateway API docs
doc: Describe search additions in CHANGELOG
is: Implement searching for end devices in store
is: Implement EndDeviceRegistrySearch service
cli: Implement end device search
doc: Describe end device search in CHANGELOG
ns: Add and use lastUplink
ns: Use MACState.RecentUplinks in utilities
ns: Check all downlinks in needsClassADataDownlink
fixup! ns: Fix application downlink validation when enqueueing
is,oauth: Change inappropriate Unauthenticated errors
console,oauth: Add util to retrieve backend error name
console: Account for api errors in logout logic
console: Properly throw api requests
console: Simplify access token logic
console: Add info for unapproved user login
doc: Update changelog
console: Account for unapproved users in init logic
dev: Update locales
doc: Fix broken console image reference
console: Add missing PageTitle import
doc: Update changelog
all: Adjust AU_915_928 maximum EIRP value

- Set maximum EIRP to 30 dBm in 915.0 - 928.0 MHz
all: Adjust US_902_928 maximum EIRP values

- Set maximum EIRP to 23.15 in 902.3 - 914.9 MHz
- Set maximum EIRP to 28.15 in 923.3 - 927.5 MHz
all: Support sub-band overrides in frequency plans
all: Adjust AS_923 maximum EIRP value
gs: Use maximum EIRP from frequency plan sub-band if available
gs: Use duty-cycle from frequency plan sub-band if available
all: Fix find sub-band test
console: Fix alignment of message counts
console: Make frequency plan column larger
all: Bump to version 3.3.2","Added
Support for selecting gateways when queueing downlinks via CLI (see class-b-c.gateways option).
Options is.oauth.ui.branding-base-url and console.ui.branding-base-url that can be used to customize the branding (logos) of the web UI.
Email templates can now also be loaded from blob buckets.
Support for pagination in search APIs.
Search is now also available to non-admin users.
Support for searching end devices within an application.
Notification during login informing users of unapproved user accounts.
Support maximum EIRP value from frequency plans sub-bands.
Support duty-cycle value from frequency plans sub-bands.
Changed
Allow enqueuing class B/C downlinks regardless of active device class.
Fixed
Fix crashing of organization collaborator edit page.
Avoid validating existing queue on application downlink pushes.
Correct AU_915_928 maximum EIRP value to 30 dBm in 915.0 – 928.0 MHz (was 16.15 dBm).
Correct US_902_928 maximum EIRP value to 23.15 dBm in 902.3 – 914.9 MHz (was 32.15 dBm) and 28.15 dBm in 923.3 – 927.5 MHz (was 32.15 dBm). This aligns with US915 Hybrid Mode.
Correct AS_923 maximum EIRP value to 16 dBm in 923.0 – 923.5 MHz (was 16.15 dBm).
Security
Keep session keys separate by JoinEUI to avoid conditions where session keys are retrieved only by DevEUI and the session key identifier. This breaks retrieving session keys of devices that have been activated on a deployment running a previous version. Since the Application Server instances are currently in-cluster, there is no need for an Application Server to retrieve the AppSKey from the Join Server, making this breaking change ineffective.
Changelog
Docker images
docker pull thethingsnetwork/lorawan-stack:latest
docker pull thethingsnetwork/lorawan-stack:3
docker pull thethingsnetwork/lorawan-stack:3.3
docker pull thethingsnetwork/lorawan-stack:3.3.2"
"all: Enter release date of version 3.19.1 into the changelog
all: Rename flag getters
all: Implement missing ProtoJSON marshalers on AES128Key
all: Prepare types for gogoproto.customtype removal
api: Remove customtype from dev_eui in IssueDevEUIResponse
api: Remove customtype from dev_addr in JoinRequest
api: Remove customtype from net_id in JoinRequest
api: Remove customtype from dev_eui in SessionKeyRequest
api: Remove customtype from join_eui in SessionKeyRequest
api: Remove customtype from net_id in JoinRequest
api,js: Remove customtype from joinserver.proto
ci: Merge Go build steps into composite action
ci: Merge Mage build steps into composite action
ci: Merge Node install steps into composite action
ci: Use default Go version
ci: Merge Frontend build steps into composite action
util: Fix lint warning
api: Define EntityStateChangedNotification
is: Add email to Notification Service
api: Test existence of enum translation messages
is: Do not send email for collaborator changes
is: Add ""dir"" email provider for development
dev: Add cypress plugin for searching in email files
dev: Update stack configuration for e2es
dev: Update development documentation with new email configs
util: Fix lint warning
is: Include entity IDs in API key query if available
cli: Add NormalizedFlagSet
cli: Use NormalizedFlagSet for user commands
cli: Use NormalizedFlagSet for referenced flagsets
cli: Hide unused dev flags
dev: Update changelog
is: Fix application lookup on device validation
account: Allow contact info validation when logged in
console: Add export button to device overview
console: Fix condition
console: Update CHANGELOG
console: Show button on condition
console: Fix messages and add modal button
console: Add getDeviceById
console: Update locales
console: Fix linting
console: Update cypress tests
console: Recognize <b>
console: Update cypress tests
console: Fix test
console: Add expiry date to api key forms
console: Allow unsetting api key
console: Update CHANGELOG
console: Use encode/decode and don't allow past dates
console: Allow empty date
console: Move decode/encode to separate module
console: Add less verbose
console: Update CHANGELOG
console: Remove import
console: Add last_seen_at support
console: Refactor lastSeen in reducer, add selector
console: Update session on 'as.up.join.forward'
console: Remove derived last seen
console,account: Allow custom empty messages in data sheets
console: Update console overview with relevant info
dev: Add null values for device sessions
dev: Update changelog
console,account: Update locales
console: Show success toast when deleting application
console: Fix default prop for band id
gs: Add schedule attempt and failure events
dev: Regenerate messages
gs: Use minimum interval to update connection stats
all: Upgrade Go to 1.18
dcs: Get NS address from config
dcs: Update interface
dev: Generate messages
dev: Update changelog
dcs: Move Network Server settings to EDCS
dcs: Use EUI64 HomeNSID
console: Use help cursor for tooltip icon
console,account: Improve styling of toggled inputs
console,account: Impove link styling
console: Update webhook forms
console: Update pubsub forms
console: Add missing pubsub feature check
console: Pass classnames to page title header
console: Update webhook views
console: Update pubsub views
console: Hide pubsub integration when disabled
console: Add field descriptions for events
console,account: Update shared messages
console,account: Update locales
dev: Update webhook cypress tests
dev: Update changelog
cli: Update collaborator flag prefix for create commands
dev: Upgrade protoc-gen-go-flags
dev: Update CHANGELOG
cli: Use cache for version check
is: Make EntityAccess test parallel and isolated
is: Make InteropServer test parallel and isolated
is: Make Invitations tests parallel and isolated
is: Make OAuthRegistry tests parallel and isolated
is: Make organization nesting test parallel and isolated
api: Remove gogoproto custom type option
is: Make RegistrySearch tests parallel and isolated
is: Make user registry tests parallel and isolated
is: Make UserSession test parallel and isolated
is: Remove unused store populator and test utilities
all: Adapt codebase
api: Generate using v1.0.2 of protoc-gen-go-flags
cli: Make version check cache access failures silent
cli: Copy flag value before use
is: Address lint issues in IS store package
is: Rename package blacklist to blocklist and fix lint issues
is: Address lint issues in IS gormstore package
ns: Do not start downlink task dispatcher
all: Refactor MAC version comparisons
console: Require DevEUI for LoRaWAN 1.1 ABP devices
dev: Update minimum Node version requirement ()
all: Fix event channel drop metric
all: Use larger event channels on long tail streams
all: Cut off changelog version 3.19.2
all: Bump to version 3.19.2
all: Enter release date of version 3.19.2 into the changelog","Added
Allow setting an expiry date for API keys in the Console
New event type gs.gateway.connection.stats with connection statistics. A new event is sent at most every gs.update-connection-stats-debounce-time time and at least every gs.update-connection-stats-interval time.
Button to export as JSON end device mac-settings and mac-state in the Console.
Support for the FOpts encryption, usage of FCntDwn LoRaWAN 1.1 erratum.
Changed
Event type for gs.up.receive event to GatewayUplinkMessage.
Default debounce time for updating connection stats in de Gateway Server (configuration setting gs.update-connection-stats-debounce-time) is now 30 seconds.
Error code when importing CSV file with invalid LoRaWAN or Regional Parameters version.
Emails sent by the Identity Server now also contain HTML versions.
For the images in these emails to work, an absolute is.email.network.assets-base-url (and optionally is.email.network.branding-base-url) needs to be set in configuration.
Notification emails are now sent through the Notification Service of the Identity Server.
""Last activity""-information in the Console is now sourced as a single aggregate from the Identity Server.
End device overview in the Console.
Showing MAC/PHY versions and used frequency plan.
Hiding the entity description if not set.
Showing information of pending sessions.
Automatically updating session info (no refresh necessary to schedule downlinks after a device has joined).
Showing session start time.
The Things Stack is now built with Go 1.18.
Layout of webhook and Pub/Sub forms to improve UX.
The Network Server Address used for End Device Claiming is fetched from the configuration instead of client input.
Removed
The ability to create custom email templates.
Fixed
Support app_eui as alias for join_eui in CSV file import, per documentation.
End devices frame counts being displayed as n/a when event stream contained historical data message events.
Gateway general settings (Basic settings) not saving changes in some cases.
Contact info validation not possible when user is already logged in.
CLI not allowing devices to be created or updated.
End device creation no longer errors on missing application info rights.
Missing success notification when successfully deleting an application in the Console.
CLI create commands for applications, gateways and clients no longer have their decoded ID emptied when using the --user-id flag.
Metric ttn_lw_events_channel_dropped_total not getting updated.
Dropped events when calling the Stream RPC with a long tail.
Security
Security fix for an issue where the description and list of rights of arbitrary API keys could be retrieved by any logged-in user if the 24-bit random API key ID was known."
"api: Add explicit validators for request messages with embedded messages
dev: Use dev protoc image
api: Skip validation of some empty fields
as: Add required uplink message to tests
ns: Set FPort in tests
is: Fix CUPS URI in Gateway test
console: Add required fields to simulateUplink message
data: Update external repositories
all: Bump to version 3.11.4","Security
This release fixes an issue that prevented some request messages from being validated correctly, allowing invalid values in certain fields.
Release notes
Docker images
docker pull thethingsnetwork/lorawan-stack:3.11
docker pull thethingsnetwork/lorawan-stack:3.11.4
docker pull ghcr.io/thethingsnetwork/lorawan-stack:3.11
docker pull ghcr.io/thethingsnetwork/lorawan-stack:3.11.4"
"dev: Update actions to Ubuntu 20.04
gs: Support ftime and foff for SX1303 using V1 UDP protocol
dev: Update changelog
gs: Remove obsolete errors
as: Revert to Redis PubSub channel
as: Remove peer identifier stickiness
gcs: Remove peer identifier stickiness
gs: Remove peer identifier stickiness
js: Remove peer identifier stickiness
ns: Remove peer identifier stickiness
pba: Remove peer identifier stickiness
all: Increase amount of elements scanned
account: Fix swapped error message for aborted logins
console: Fix resolution of last activity value for end devices
api,gs: Clarify meaning of downlink_utilization
is: Consider universal (admin) rights in List and Search requests
all: Add RP2-1.0.0 initial definition
all: Update AS923 RP2-1.0.0 RX1DataRate
all: Update IN865-867 RP2-1.0.0 RX1DataRate
all: Respect event request tail if after is unspecified
console: Prevent historical events from being loaded after clear
dev: Update changelog
all: Add CN_470_510_* band definitions for RP2-1.0.0
all: Add TODO for missing band mappings
util,console: Add api for resetting end device
console: Add end device reset to NS section
console,account: Add tooltip to info field
all: Add missing band versions to RPC tests
gs: Use singular context for MQTT session
as: Use singular context for MQTT session
gs: Remove custom panic recovery
as,gs: Move common MQTT components to pkg/mqtt
as,gs: Wait for connection tasks to finish on disconnect
gs: Allow frontends to manually synchronize gateway clocks
gs: Transfer only MuxTime
dev: Ensure correct NODE_ENV in CI
dev: Update dll cache key
dev: Simplify tag release workflow
console: Use most recent timestamp for gateway activity
dev: Update changelog
all: Move from io/ioutil to io and os packages

The io/ioutil package has been deprecated as of Go 1.16, see
https://golang.org/doc/go1.16#ioutil. This commit replaces the existing
io/ioutil functions with their new definitions in io and os packages.

Signed-off-by: Eng Zer Jun <engzerjun@gmail.com>
gs: Improve naming
dev: Ensure proper cleaning of public folder
gcs: Remove Echo usage in CUPS
gs: Remove Echo usage in websockets frontend
gs: Improve TLS context detection
gs: Use atomics for ping pong
gs: Remove WriteMessage mutex
all: Remove gogoproto.stdtime options
all: Remove gogoproto.stdduration options
cli: Add support for gogo time and duration types
all: Remove CSP feature flag
all: Add NoCache web middleware
all: Overwrite cache headers for hashed static files
gs: Account for implementation errors while parsing GPS timestamps
gcs: Remove Echo headers reference
all: Remove JSONPlugin feature flag
gs: Expose disconnect reason in gateway disconnect event
api, as, ns: Remove gogoproto options from ApplicationDownlinkFailed
api, as, ns: Remove gogoproto options from ApplicationUp
api: Implement ID.Stringer for ApplicationUp
api, as: Remove gogoproto options on ApplicationLocation
api, as, ns: Remove gogoproto options for DownlinkQueueRequest
api: Implement IDStringer interfaces for DownlinkQueueRequest
api, as, ns: Remove gogoproto option from ApplicationJoinAccept
api, gs, pba: Remove embed from GatewayUplink
api, as, ns: Remove gogoproto options from ApplicationUplink
all: Remove gogoproto options from UplinkMessage
dev: Update messages
pba: Update tests
api: Add ExtractRequestFields interface
as: Panic on no NS timestamp
api, gs: Validate upstream messages in IO
as: Fix tests
api: Update comment
api, gs, pba: Revert field name in GatewayUplinkMessage
api: Make receiver consistent
api: Regenerate protos
gs: Adjust usage of prototime
gs: Increase ping pong test timeouts
dev: Fix initStack API key serialization
gs,dev: Add depreciation notice
cli: Add force flag to as-db
gs: Extract TTKG version info from platform
gs: Add LBS model to the stats message
gs: Add UpdateAttributes method to registry
gs: Write version info on first status message
gs: Add tests
gs: Update comments
gs: Add jitter to update function
gs: Update version info only when changed
dev: Update changelog
gs: Use existing attributes
gs: Update comments
gs: Fix styling comments
all: Upgrade protojson dependency
api: Use json.Decoder instead of shared io.Reader
console,account: Adjust field container styles
console: Add desired fields to device general settings
console,account: Set test id for collapse section
console,account: Add isLoginRequired prop
console,account: Implement modal, change status prop instead of reload
console,account: Write e2e test for log back in modal
console: Write e2e test, update status correctly
console: Address small remarks, make separate container component
console: Add a more fitting refresh icon

Co-authored-by: Kevin Schiffer <kevin.schiffer@thethingsnetwork.org>
console: Change quotes
dev: Update CODEOWNERS
console,account: Remove unused vars

Add eslint configuration to error on unused variables
api: Allow upto 32 metrics in GatewayStatus
is: Allow updating attributes with link gateway rights
data: Update external repositories
all: Bump to version 3.16.1","Added
Support for fine timestamps and frequency offsets sent by gateways with SX1303 concentrator using the legacy UDP protocol.
Support for resetting end device session context and MAC state in the Console.
The Content-Security-Policy header (that was previously behind the webui.csp feature flag) is now enabled by default.
Default Cache-Control: no-store headers.
Cache-Control: public, max-age=604800, immutable headers for hashed static files.
Experimental support for BasicStation GPS timestamps which use the wrong precision (milliseconds instead of microseconds).
The Gateway Server will attempt to determine the correct GPS timestamp from the provided gpstime based on the time at which the upstream message has been received.
This workaround will be available until the related gateway vendors will release patches for this issue.
Firmware version of The Things Kickstarter Gateway are written to the gateway attributes upon receiving a valid status message.
Desired mac settings to end device general settings in the Console.
Changed
Gateway server disconnects LoRa Basics Station gateways that stop sending pongs to server pings. This does not apply to gateways that don't support pongs.
The new plugin for reading/writing JSON in our API (that was previously behind the jsonpb.jsonplugin feature flag) is now enabled by default. All API responses should be equivalent, but in some cases object fields may be in a different order.
Fixed
The reported sub-band's downlink_utilization in gateway connection stats now represents the utilization of the available duty-cycle time.
Missing fields when admins list non-owned entities.
Using the correct timestamp when retreiving the ""Last activity"" data point for Gateways on initial page loads in the Console.
Events reappearing in the end device data view after clearing them when navigating back and forth.
Docker images
docker pull thethingsnetwork/lorawan-stack:3.16
docker pull thethingsnetwork/lorawan-stack:3.16.1
docker pull ghcr.io/thethingsnetwork/lorawan-stack:3.16
docker pull ghcr.io/thethingsnetwork/lorawan-stack:3.16.1"
"util: Use AbortController to close network connection

this makes sure that the persistent http connection is closed. calling reader.cancel() is not enough in firefox
all: Use pointer to initialize ServiceBase
cli: Fix panic in enumerating data rates
gs: Add recovery to handler workers
gs: Add defer/recover to UDP and MQTT frontends
gs: Use lowercase errors
gs: Propagate panic to returned error
gs: Check if TX_ACK has payload
gs: Do not block on busy upstream handlers
all: Bump to version 3.6.3","Fixed
Limited throughput in upstream handlers in Gateway Server when one gateway's upstream handler is busy.
Changelog
Docker images
docker pull thethingsnetwork/lorawan-stack:latest
docker pull thethingsnetwork/lorawan-stack:3
docker pull thethingsnetwork/lorawan-stack:3.6
docker pull thethingsnetwork/lorawan-stack:3.6.3"
"all: Bump to version 3.2.3
console: Add onKeyDown listener to table rows
ns: Support channel deletion
doc: Document interop repository in docker-compose.yml
doc: Document Join Server interoperability
all: Use .yml extension in interop configuration
util: Add mqtt connection info to application service
console,oauth: Update shared messages
console: Add mqtt connection info to api tree
console: Add mqtt integrations view
console: Add mqtt integrations route
doc: Update changelog
console: Extend collaborators selectors
console: Extend organization selectors
add collaborators selectors
console: Fix org collaborators table fetching state
console: Extend application selectors
add collaborators selectors
console: Fix app collaborators table fetching state
console: Bind methods separately in app collaborators list
console: Add prop-types to app collaborators list
console: Extend gateway selectors
add collaborators selectors
console: Fix gtw collaborators table fetching state
console: Bind methods separately in gtw collaborators list
console: Add prop-types to gtw collaborators list
util: Improve determination of join server availability
util: Refactor route param resposibility for device creation
util: Ignore not found registries in join and dev eui retrieval
console: Ensure prefilled component addresses
console: Bind methods separately in gateways table
console: Adjust styling for status component
console: Extend gateways list logic
add fetching stats
console: Extend gateways table
show gateway status
dev: Update locales
console: Make stats fetching optional
console: Add edtc stack component config to console
console: Pass edtc config to sdk
util: Add edtc component to stack component stack constants
all: Reorganize TR005 draft 2 QR code files
all: Support TR005 draft 3 QR code format
console: Add qrg stack component to config
console: Pass qrg config to sdk
console: Add qrg to component constants
util: Add qrg component to stack component constants
console: Add ErrorNotification component
console: Add error details component
console: Adapt Notification component
console: Change ErrorMessage component
util: Add toMessageProp function
dev: Add translations
console: Update existing Notification instances
console: Add tls checkbox to app link form
console: Add prop-types to app link page
console: Bind methods separately in app link page
dev: Update locales
doc: Restructure CONTRIBUTING and DEVELOPMENT
doc: Add Pull Request Checklist
dev: Update protoc image version
api: Regenerate
ns: Ensure Settings are set in uplink tests
gs: Ensure Settings are set in grpc tests
doc: Update changelog
console: Disable tls when ns address not present
util: Improve logic for handling errors in makeRequest util
util: Only rollback device entries that have actually been created
doc: Update changelog
doc: Document CLI component and configuration
doc: Add high level IS component documentation
all: Update tag casing
cli,doc: Align descriptions
dev: Build docs into public/doc
doc: Omit canonical link on root-relative builds
all: Don't apply redirect middleware to global server
doc: Mention embedded documentation in changelog
doc: Document Network Server options
doc: Document Join Server options
doc: Fix AS documentation typo
console: Extend validation schema to handle unexposed root keys
console: Extend placeholder and disabled state for root key fields
dev: Update locales
ci: Move docs build to after_success
as: Provide credentials using discover package
all: Bump to version 3.2.4","Release notes
Docker images
docker pull thethingsnetwork/lorawan-stack:latest
docker pull thethingsnetwork/lorawan-stack:3
docker pull thethingsnetwork/lorawan-stack:3.2
docker pull thethingsnetwork/lorawan-stack:3.2.4"
"all: Enter release date of version 3.19.0 into the changelog
console: Fix gateway general settings submit
dev: Improve gateway edit tests
api: Add cluster address
ns: Add cluster address to network identifiers
console,account: Ingest unhandled exceptions during form submit
console: Apply styling fixes to device onboarding
as: Remove downlink queued event handling

Network Server does not emit this event to Application Server
as: Decode downlink when scheduling binary payload
dev: Update changelog
api: Add QRCodeParser
qrg: Refactor files
qrg: Refactor qrcode package
qrg: Fix enddevice tests
qrg: Fix QRcode tests
qrg: Fix component tests
api: Update onboarding entity type
qrg: Remove AuthenticatedIdentifiers interface
api: Restructure messages
qrg: Implement GetEntityOnboardingData interface
qrg: Implement the ID method
api: Allow empty format_id
qrg: Add tests
dev: Generate messages
dev: Update changelog
qrg: Update comments
dev: Update api definitions
dcs: Adapt parse QR code
api: Return EndDeviceTemplate
qrg: Use EndDeviceTemplate
dev: Generate JS messages
dev: Update changelog
api: Move end device QR parsing service
dcs: Update to use new API
dev: Update changelog
dcs: Update commments
qrg: Use sync.Map
dcs: Fix merge conflicts
qrg: Use end device specific format
dcs: Refactor QRcode flow
dcs, qrg: Update interfaces
dcs: Update test with QR Code
qrg: Use EndDeviceVersionIdentifiers
dcs: Decouple EndDeviceClaimer from QRCode parsing
dev: Update messages
dcs, qrg: Use forwarded auth
dev: Generate messages
qrg: Update tests
dcs: Update log comment
api: Add fields to FieldIsZero implementation
api: Update validation
dev: Generate definitions
qrg: Use options to configure server
api,dcs,qrg: Fix typo
qrg: Expand variables
dcs: Update error message
qrg: Make format selection deterministic
dcs: Update method input types
cli: Add generated flags
cli: Update cli
util: Update protos
util: Update go mod
util: Bump protoc-gen-go-flags to v1
util: Add protoc-gen-go-flags to mage proto cmd
dev: Pin Redis to 6.2
all: Cut off changelog version 3.19.1
all: Bump to version 3.19.1
all: Enter release date of version 3.19.1 into the changelog","Changed
Application Server now decodes downlink if a downlink decoder is present and binary payload is scheduled.
Fixed
End devices frame counts being displayed as n/a when event stream contained historical data message events.
Gateway general settings (Basic settings) not saving changes in some cases."
"api: Fix field option syntax
api: Regenerate
dev: Update protoc image version
dev: Update dependencies
util: Add test.New and related utilities
util: Fix Redis test log statement
util: Print the error stack in test.Must{,Multiple}
Remove links to `latest` docs
util: Allow overriding component.StartTask
util: Refactor component package
ns: Store downlink task name as const
all: Refactor task configuration
util: Extract NewTaskConfig
ns: Fix downlink logging statement
ns: Add registry utilities
dev: Regenerate messages
as: Fix session keys nil dereference
ns: Only publish MAC-related events on successful scheduling
doc: Update CHANGELOG
ns: Add downlink metrics
console,oauth: Pass error title to error notification
console,oauth: Improve notification styling
console,oauth: Pass frontend error title to message props
console: Refit validation view logic and style
dev: Update locales
console,oauth: Fix error views
as,gs: Do not block on control channel if the context is done
gs: Do not block on upstream if the connection is over
all: Bind read and writes to channels to the associated context
as: Propagate context to MQTT driver in order to avoid write deadlock
all: Propagate context for wait in pkg/auth
all: Make Redis events pub/sub Close context aware
gs: Sync MQTT frontend cancellation strategy with the one in the AS
console,oauth: Account for empty nodes in side navigation items
console,oauth: Improve spinner styling
util: Add application package service to JS SDK
console: Add application package services to api tree
console: Refactor feature requirement utils for functional components
console: Add feature check for application packages
console,oauth: Add application packages to store
console,oauth: Add hook utils for requests
console: Add lora cloud form container
console: Add lora cloud integration view
dev: Update locales
console: Fix lint warning
console: Source out lora cloud config into constant module
doc: Update changelog
dev: Update cancelable promise package
console,oauth: Use cancelable promises in attach request middleware
dev: Add protoc-gen-hugodata
doc: Regenerate Hugo data for API
util: Add auth metadata to CRUD and downlink push events
is: Expose configuration service on grpc-gateway
console: Improve wording of event messages
api: Add UserAgent field to events
all: Add UserAgent metadata to events
api,util: Move remote_ip out of authentication metadata
util: Refactor client info as WithClientInfoFromContext() option
as,ns,is,js,gs: Include client info in event metadata
cli: Do not assume supports_join is true when importing devices
util: Fix tests for events package
doc: Add gateway API key req for LNS
doc: Fix basic station connection description
doc: Document using Bearer in CUPS token
doc: Update lbs doc
console: Rename data view to live data
doc: Adding instructions for webhook integration with InfluxDB Cloud 2.0 ()
api: Regenerate protos
all: Add option to override server name in cluster TLS handshake
all: Add definition options to events package
api,doc: Add documentation for Events API
doc: Add list of defined events
is,ns,as,js: Add registry event data types
gs,ns,as,js: Add data types to events
doc: Add details for HTTP APIs of streaming RPCs
doc: Add hugo aliases for broken links
gs: Make sure RxMetadata location is nil if location is not public
oauth: Make server configuration context aware
oauth: Allow custom OAuth2 configuration formats
doc: Add CRLF to basics station guide
cli: Allow setting temporary password expiry
cli: Warn about updating user passwords in the wrong command
doc: Describe password update changes in changelog
dev: Add javascript format match to editorconfig

Respect C-style block comments used in prettier for javascript files.
dev: Add .editorconfig excludes
all: Fix EditorConfig issues
dev: Update .editorconfig
doc: Fix spacing
doc: Remove newlines from shortcodes
all: Remove unused git-specific files
dev: Remove line length limit from .editorconfig
ci: Use RELEASE_TOKEN secret for Goreleaser
doc: Style event descriptions
ns: Add event data types
ns: Add data types for MAC command events
all: Bump to version 3.9.1","Added
LoRaCloud DAS integration page in the Console.
User Agent metadata on published events (when available).
Option to override server name used in TLS handshake with cluster peers (cluster.tls-server-name).
Changed
Network Server now only publishes payload-related downlink events if scheduling succeeds.
Moved remote IP event metadata outside authentication.
Admins can now set the expiration time of temporary passwords of users.
Fixed
Authentication metadata missing from published events.
Under some circumstances, CLI would mistakenly import ABP devices as OTAA.
Gateway Server could include the gateway antenna location on messages forwarded to the Network Server even if the gateway location was not public.
Release notes
Docker images
docker pull thethingsnetwork/lorawan-stack:3.9
docker pull thethingsnetwork/lorawan-stack:3.9.1"
"all: Enter release date of version 3.20.1 into the changelog
all: Remove repeater compatible payload size buffer
as: Fix happens-before relation in location cache test
dev: Update SECURITY.md
dev: bump @sentry/integrations from 6.16.1 to 7.4.1

Bumps [@sentry/integrations](https://github.com/getsentry/sentry-javascript) from 6.16.1 to 7.4.1.
- [Release notes](https://github.com/getsentry/sentry-javascript/releases)
- [Changelog](https://github.com/getsentry/sentry-javascript/blob/master/CHANGELOG.md)
- [Commits](https://github.com/getsentry/sentry-javascript/compare/6.16.1...7.4.1)

---
updated-dependencies:
- dependency-name: ""@sentry/integrations""
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump @babel/plugin-proposal-decorators from 7.16.4 to 7.18.6

Bumps [@babel/plugin-proposal-decorators](https://github.com/babel/babel/tree/HEAD/packages/babel-plugin-proposal-decorators) from 7.16.4 to 7.18.6.
- [Release notes](https://github.com/babel/babel/releases)
- [Changelog](https://github.com/babel/babel/blob/main/CHANGELOG.md)
- [Commits](https://github.com/babel/babel/commits/v7.18.6/packages/babel-plugin-proposal-decorators)

---
updated-dependencies:
- dependency-name: ""@babel/plugin-proposal-decorators""
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump @babel/plugin-transform-strict-mode from 7.16.7 to 7.18.6

Bumps [@babel/plugin-transform-strict-mode](https://github.com/babel/babel/tree/HEAD/packages/babel-plugin-transform-strict-mode) from 7.16.7 to 7.18.6.
- [Release notes](https://github.com/babel/babel/releases)
- [Changelog](https://github.com/babel/babel/blob/main/CHANGELOG.md)
- [Commits](https://github.com/babel/babel/commits/v7.18.6/packages/babel-plugin-transform-strict-mode)

---
updated-dependencies:
- dependency-name: ""@babel/plugin-transform-strict-mode""
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump prettier from 2.5.1 to 2.7.1

Bumps [prettier](https://github.com/prettier/prettier) from 2.5.1 to 2.7.1.
- [Release notes](https://github.com/prettier/prettier/releases)
- [Changelog](https://github.com/prettier/prettier/blob/main/CHANGELOG.md)
- [Commits](https://github.com/prettier/prettier/compare/2.5.1...2.7.1)

---
updated-dependencies:
- dependency-name: prettier
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
is: Add pagination to invitation listing
util: Add more fields to csv converter
util: Add test cases for extra fields in csv converter
dev: Update CHANGELOG
is: Fix proto pointers in store test population
is: Refactor store rights type to not include proto message
is: Refactor gateway antenna setters to use pointer to proto
is: Refactor UserSession store to use proto.Clone
api: Add Gateway IP Address to GatewayConnectionStats
gs: Fetch gateway IP on connect
gs: Add payload to gs.gateways.connect
api: Remove transport from stats
gs: Update tests
gs: Fill gateway IP address for UDP Connections
gs: Fill gateway IP address for gRPC Connections
gs: Fill gateway IP address for WS Connections
gs: Fill gateway IP address for MQTT Connections
dev: Generate messages
dev: Update changelog
dev: Update lint errors
gs: Update review comments
dev: Generate messages
gs: Check if gRPC address is pipe
api, gs: Use GatewayRemoteAddress message
gs: Update comments
gs: Pass remote address as a parameter
api: Fix reading base64-encoded (formerly) custom types from JSON
api: Fix JSON marshaling in streaming RPCs
gs: Update function styling
account: Create authorization store logics
account: Add new tab
console: Add authorizations table
account: Add authorizations list routes and views
account: Add authorization overview and settings
account: Add tokens table
dev: Update cypress tests
account: Update locales
dev: Update CHANGELOG
console: Fix variables
account: Separate concerns
account: Change de-authorize to revoke
account: Add breadcrumbs
account: Update welcome message
account: Update locales
dev: Update cypress tests
console: Remove import
account: Add delete modal
console: Update locales
console: Fix field masks
all: Remove false leap second
account: Add isBytes prop
api: Upgrade protoc-gen-go-json
api: Use pointer to Rights proto when sorting
api: Remove value method OrganizationOrUserIdentifiers
api: Use pointers to proto messages in identifier tests
api: Refactor all identifiers methods to pointer receivers
api: Refactor enum wrapper methods to pointer receivers
all: Fix some lint issues
dev: Update sentry browser package
api: Upgrade protoc-gen-go-json
dev: Fix broken link

Found a broken link while browsing through the documentation.
all: Cut off changelog version 3.20.2
all: Bump to version 3.20.2
dev: Fix CHANGELOG.md
all: Enter release date of version 3.20.2 into the changelog","Added
More fields were added to the csv end-device migration procedure. The details on which fields were added can be found here.
Authorization management in the Account app.
Gateway remote address to gateway connection statistics.
Fixed
Encoding of DevAddr, EUI and similar fields in text/event-stream responses.
GPS time leap second calculations taking a new leap second into consideration for 6th of July 2022."
"all: Enter release date of version 3.21.1 into the changelog
dev: Fix snapshot release workflow
console: Add new ADR fields
console: Add new adr fields
dev: Update locales
as: Remove lint warnings
api: Add normalized_payload
dev: Update goja
as: Consolidate formatters initialization
util: Use object destructuring
as: Publish event on normalize payload warnings
util: Support normalized payload
as: Validate normalized payload
as: Detect if decoded payload is already normalized
as: Add normalized fields
dev: Add changelog
api: Add application uplink normalized
as: Publish uplink normalized message
as: Use location from normalized payload
as: Improve code quality
api,as: Add and fix validation
as: Use AS received timestamp for location solved event
as: Publish uplink normalized message
dev: Regenerate messages
as: Set received_at only on messages that are received
console: Show normalized uplink event
console: Configure normalized uplink payload messages
as: Parse time as RFC3339 with nanosecond support
as: Instantiate uplink normalized path from webhook template
dev: Fix test
as: Remove lint warnings and update schema
console: Update locales
console: Add deleted users handling
dev: Update CHANGELOG
gs: Remove TOA adjustment
gs: Simplify WS downlink interface
gs: Remove unused logs
gs: Support absolute time downlinks natively in LBS
gs: Do not fill uplink token with uplink time
dev: Update changelog
api: Fix formatting
all: Refactor beacon frequency computations
api: Support beacon frequencies in band description
all: Fix gpstime code quality
ns: Support dynamic ping slot frequency
ns: Avoid panic on ping slot channel
all: Support LBS beaconing
all: Improve periodic equation readability
dev: Update changelog
all: Fix AU915 RP2-1.0.2/3 max data rate index
cli: Add `net-id` and `dev-addr-prefixes` to `dev`
all: Fix US15 RP2-1.0.2/3 max data rate index
all: Fix CN470-510 min data rate indices
is: Add request validation for notify internal methods
cli: Add list-bands and list-phy-versions to dev
is: Update notify internals usage to include receivers
as: Treat normalized payload validation errors as warnings
console: Show simulated normalized payload output
as: Omit empty objects in normalized payload
ci: Re-enable parallelism during release
gs: Don't disconnect gateway on deep validation failure
as: Support returning no normalized payload
gs: Don't disconnect in all cases
gs: Fix message
console: Add min and max
dev: bump @formatjs/intl-relativetimeformat from 10.0.0 to 11.1.3

Bumps [@formatjs/intl-relativetimeformat](https://github.com/formatjs/formatjs) from 10.0.0 to 11.1.3.
- [Release notes](https://github.com/formatjs/formatjs/releases)
- [Commits](https://github.com/formatjs/formatjs/compare/@formatjs/intl-relativetimeformat@10.0.0...@formatjs/intl-relativetimeformat@11.1.3)

---
updated-dependencies:
- dependency-name: ""@formatjs/intl-relativetimeformat""
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump eslint-plugin-jest from 25.3.0 to 27.0.1

Bumps [eslint-plugin-jest](https://github.com/jest-community/eslint-plugin-jest) from 25.3.0 to 27.0.1.
- [Release notes](https://github.com/jest-community/eslint-plugin-jest/releases)
- [Changelog](https://github.com/jest-community/eslint-plugin-jest/blob/main/CHANGELOG.md)
- [Commits](https://github.com/jest-community/eslint-plugin-jest/compare/v25.3.0...v27.0.1)

---
updated-dependencies:
- dependency-name: eslint-plugin-jest
  dependency-type: direct:development
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump @babel/runtime-corejs2 from 7.16.3 to 7.18.9

Bumps [@babel/runtime-corejs2](https://github.com/babel/babel/tree/HEAD/packages/babel-runtime-corejs2) from 7.16.3 to 7.18.9.
- [Release notes](https://github.com/babel/babel/releases)
- [Changelog](https://github.com/babel/babel/blob/main/CHANGELOG.md)
- [Commits](https://github.com/babel/babel/commits/v7.18.9/packages/babel-runtime-corejs2)

---
updated-dependencies:
- dependency-name: ""@babel/runtime-corejs2""
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump @formatjs/intl-locale from 3.0.2 to 3.0.6

Bumps [@formatjs/intl-locale](https://github.com/formatjs/formatjs) from 3.0.2 to 3.0.6.
- [Release notes](https://github.com/formatjs/formatjs/releases)
- [Commits](https://github.com/formatjs/formatjs/compare/@formatjs/intl-locale@3.0.2...@formatjs/intl-locale@3.0.6)

---
updated-dependencies:
- dependency-name: ""@formatjs/intl-locale""
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump scroll-into-view-if-needed from 2.2.28 to 2.2.29

Bumps [scroll-into-view-if-needed](https://github.com/stipsan/scroll-into-view-if-needed) from 2.2.28 to 2.2.29.
- [Release notes](https://github.com/stipsan/scroll-into-view-if-needed/releases)
- [Changelog](https://github.com/stipsan/scroll-into-view-if-needed/blob/master/CHANGELOG.md)
- [Commits](https://github.com/stipsan/scroll-into-view-if-needed/compare/v2.2.28...v2.2.29)

---
updated-dependencies:
- dependency-name: scroll-into-view-if-needed
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
gs: Revert GPS timestamp workaround
dev: Upgrade dependencies
dev: Upgrade tools dependencies
is: Enable pgdriver connection check
console: Fix frequency plan display
console: Fix crashing network layer form
dev: Update changelog
console,account: Update sentry filter to exclude entity limit errors
dev: Update changelog
is: Encrypt CAC only if value is not empty
is: Add gorm implementation
is: Add bun store implementation
is: Add store tests
dev: Update linter warnings
is: Truncate test time to second
cli: Remove TargetNSAddress for TTJS Claiming flow
console: Fix device import on JS only configs
dev: Update cypress tests
console: Respect allowed field mask paths for device operations
console: Improve MAC settings download
dev: Update changelog
console: Fix pubsub checkbox
dev: Fix check for allowed field masks
dev: Promote Michael to webui/sdk codeowner
console: Add gateway api keys modal
console: Update locales
console: Fix messages
dev: Fix locales
console: Fix state
console: Encode keys
dev: Update locales
ns: Extract adjusted LoRa RSSI to pkg/util/lora
console: Conditionally launch success
console: Return onSuccess
dev: Add modal test case
console,account: Improve handling of invalid state errors during login
dev: Update changelog
console,account: Open error details in a modal
console: Fix network layer
console: Add button group
dev: Update locales
console: Restore classname
console: Remove unnecessary styling
dev: Update cypress message
gs: Assert rights in parallel
all: Cut off changelog version 3.21.2
all: Bump to version 3.21.2
as: Ensure simulated uplinks have received at timestamp
console: Fix MAC data download
console: Fix form bugs
console: Add items to _emitDefaults
console: Go back to using values instead of cleaned values
ns: Avoid counting the same error twice
as: Do not emit measurements for empty objects
all: Enter release date of version 3.21.2 into the changelog","Added
New ListBands RPC on the Configuration service.
Added support to CLI. Available via the end-devices list-bands command.
CLI support for listing PHY versions via the end-devices list-phy-versions CLI command.
New NetID and DeviceAddressPrefixes RPC on the NS service.
Added support on CLI. Available via the end-devices get-net-id and end-devices get-dev-addr-prefixes commands.
Support for loading end device template from Device Repository when importing devices using a CSV file.
Experimental support for normalized payload.
Support management of deleted users in the Console.
Decoded payloads are now visible for downlinks in the Console.
Support for dynamic ping slot frequencies, as used by the US915 and AU915 bands.
Support for LoRa Basics Station beaconing.
Changed
Deprecated attributes from GatewayAntenna definition. While it was present in the API it was never stored in the database.
Absolute time downlinks (such as class B ping slots or class C absolute time downlinks) are now using the native class B downlink API of LoRa Basics Station.
Only gateways which are guaranteed to be GPS capable may now be used for absolute time downlinks. This ensures that gateways that have an unknown time source are not used for absolute time scheduling.
The static ADR mode may now steer the end device to use custom data rates such as SF7BW250, FSK and LR-FHSS.
The Console will try to resolve invalid state errors during login with an automatic refresh.
Error details are now displayed in a modal instead of within the notification element in the Console.
Removed
Experimental support for LoRa Basics Station gateway GPS timestamps which use the wrong precision (milliseconds instead of microseconds). Please ensure that your gateway has been updated to the latest firmware.
Fixed
The Gateway Server scheduler no longer considers the absolute time of a downlink to be the time of arrival.
The Network Server now correctly handles the command that may succeed a LinkADRAns response.
LR-FHSS data rate matching.
Console data rate rendering of non-LoRa modulations.
End device network layer form crashing in some situations in the Console device general settings.
End device overview crashing in some situations in the Console.
Device import when using Join Server-only deployments.
QRG can generate QR Codes without the claim authentication code."
"dev: bump babel-loader from 8.2.2 to 8.2.3

Bumps [babel-loader](https://github.com/babel/babel-loader) from 8.2.2 to 8.2.3.
- [Release notes](https://github.com/babel/babel-loader/releases)
- [Changelog](https://github.com/babel/babel-loader/blob/main/CHANGELOG.md)
- [Commits](https://github.com/babel/babel-loader/compare/v8.2.2...v8.2.3)

---
updated-dependencies:
- dependency-name: babel-loader
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump react-router-dom from 5.2.0 to 5.3.0

Bumps [react-router-dom](https://github.com/ReactTraining/react-router) from 5.2.0 to 5.3.0.
- [Release notes](https://github.com/ReactTraining/react-router/releases)
- [Commits](https://github.com/ReactTraining/react-router/compare/v5.2.0...v5.3.0)

---
updated-dependencies:
- dependency-name: react-router-dom
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump @sentry/browser from 6.12.0 to 6.13.3

Bumps [@sentry/browser](https://github.com/getsentry/sentry-javascript) from 6.12.0 to 6.13.3.
- [Release notes](https://github.com/getsentry/sentry-javascript/releases)
- [Changelog](https://github.com/getsentry/sentry-javascript/blob/master/CHANGELOG.md)
- [Commits](https://github.com/getsentry/sentry-javascript/compare/6.12.0...6.13.3)

---
updated-dependencies:
- dependency-name: ""@sentry/browser""
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump @babel/preset-env from 7.15.6 to 7.15.8

Bumps [@babel/preset-env](https://github.com/babel/babel/tree/HEAD/packages/babel-preset-env) from 7.15.6 to 7.15.8.
- [Release notes](https://github.com/babel/babel/releases)
- [Changelog](https://github.com/babel/babel/blob/main/CHANGELOG.md)
- [Commits](https://github.com/babel/babel/commits/v7.15.8/packages/babel-preset-env)

---
updated-dependencies:
- dependency-name: ""@babel/preset-env""
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
gs: Fix antenna comparison
gs: Fix location comparison
gs: Always create antenna
data: Update external repositories
all: Bump to version 3.15.3","Fixed
Gateway disconnection when location updates from status messages are enabled.
Docker images
docker pull thethingsnetwork/lorawan-stack:3.15
docker pull thethingsnetwork/lorawan-stack:3.15.3
docker pull ghcr.io/thethingsnetwork/lorawan-stack:3.15
docker pull ghcr.io/thethingsnetwork/lorawan-stack:3.15.3"
"all: Fix Basic Authentication
all: Bump to version 3.9.5","Security
Fixed an issue with authentication on the /debug/pprof, /healthz and /metrics endpoints.
Release notes
Docker images
docker pull thethingsnetwork/lorawan-stack:3.9
docker pull thethingsnetwork/lorawan-stack:3.9.5"
"dev: Support multiple proto directories in fix-grpc-gateway-names
ns: Sleep before retrying uplink sending in flow test
console: Fix claim auth code page conditional rendering
console: Check for AS for payload formatters page
dev: Remove latest and major Docker tags
doc: Add instructions to manually tag latest Docker image
gs: Add locking for writing websocket messages
is: Only grant admin rights when state is approved
dev: Update vulnerable packages
console,oauth: Use unambiguous datetime format
doc: Update changelog
Merge pull request from TheThingsNetwork/fix/date-time-format

Use unambiguous datetime format
dev: Change URL to URI in IS DB config
ns: Exclude MIC when counting transmissions
ns: Fix handling of FCntUp>0xffff
ns: Avoid panic when pending join request missing
ns: Avoid pointer reference errors when matching device
ns: Refactor uplink tests
doc: Update CHANGELOG
util: Fix flaky Redis TTL test
console: Fix gateway events stream release
doc: Update changelog
is: Handle error in db.Begin
is: Do not wrap context errors from DB
ci: Add test delay to rpcserver
ns: Only one of the queues in invalidation
doc: Document releasing backports
ns: Fix metrics
ns: Improve uplink test coverage
util: Add test.EventDefinitionDataClosureEqual
util: Fix BeaconTiming MAC definition
ns: Use device FCnt when decrypting uplink
ns: Fix RekeyInd handling for 1.1 devices
doc: Update CHANGELOG
gs: Initialize UDP data regardless of payload
all: Bump to version 3.6.2","Fixed
Entity events subscription release in the Console (Firefox).
RekeyInd handling for LoRaWAN 1.1 devices.
Network server deduplication Redis configuration.
Change the date format in the Console to be unambiguous (17 Mar, 2020).
Handling of uplink frame counters exceeding 65535.
Gateway events subscription release in the Console.
Panic when receiving a UDP PUSH_DATA frame from a gateway without payload.
Security
Admin users that are suspended can no longer create, view or delete other users.
Known Bugs
Errors like {""namespace"":""pkg/redis"",""name"":""store""} coming from the Gateway Server can be fixed by upgrading to v3.6.3 or later.
Changelog
Docker images
docker pull thethingsnetwork/lorawan-stack:latest
docker pull thethingsnetwork/lorawan-stack:3
docker pull thethingsnetwork/lorawan-stack:3.6
docker pull thethingsnetwork/lorawan-stack:3.6.2"
"all: Bump to version 3.6.0
dev: Configure databases using env variables on Docker
dev: Do not use DEV_DATABASE_NAME
console: Fix disabled link tab display
console: Fix narrow tabs styling
console: Extend tabs storybook
gs: Add timestamp to TxSettings of mqttv2 uplinks
api: Add session.queued_application_downlinks
api: Regenerate
ns: Support per-session application downlink queue
doc: Update CHANGELOG
all: Move cluster logic to funcs on cluster struct
all: Fix cluster error handling
cli: Add contact-info list commands
cli: Add contact-info request-validation commands
is: Validate rights in RPC for requesting contact info validation
is: Add expiry time to validation email
is: Refactor user contact info handling
doc: Add new contact-info CLI subcommands to Changelog
util: Add default value for claim_authentication_code in sdk
console: Add device authentication code page
console: Add route for device authentication code page
console: Disable auth code page for abp/external js devices
dev: Update locales
doc: Update changelog
util: Convert Redis transaction errors
dev: Regenerate messages
gs: Skip forward entry if prefixes are empty
is: Do not convert context errors
all: Move Redis config to Redis package
all: Move cluster config to cluster package
dev: Add imports to fix populators
gs: Store gateway connection stats on Redis
api: Add validation to identifiers oneofs
console: Bind methods separately in input component
console: Bind methods separately in button component
console: Add generate input component
console: Add generate input to storybook
dev: Update locales
dev: Update react-text-mask dependency
console: Remove placeholder from byte input
use the showMask prop instead. it generates the bytes placeholder automatically.
console: Bind methods separately in byte input component
gs: Use filled context in logging functions when available
console: Add logic for use credentials option in pubsub form
dev: Add translations
doc: Update CHANGELOG
console: Add regex check for mqtt password
console: Update shared messages
is: Fix missing total count header for list authorizations
is: Fix missing total count header for list access tokens
gs,as: Do not warn about EOF errors in MQTT
dev: Avoid installing doc on Homebrew
doc: Added  MultiTech Conduit AEP gateway documentation
console: Add new error component
console: Revert error logic in other components
console: Add logic for recognizing error events
doc: Add version next to logo
console: Check device keys rights in device view
do not include root_keys and session selectors if the user doesnt have appropriate right. without such check the js request fails
console: Add device keys edit feature check
console: Check rights for root_keys in device gs page
console: Check rights for session keys in device gs page
console: Allow using js section without keys read right
console: Remove dev_addr field from AS form
console: Add rights notification to AS form
do not disable the AS form in the device general settings page, but show notification to the users
console: Add rights notification to JS form
do not disable the JS form in the device general settings page, but show notification to the users
console: Add rights notification to NS form
do not disable the NS form in the device general settings page, but show notification to the users
console: Add generate input to AS form
console: Add generate input to JS form
console: Add generate input to NS form
console: Fix external js check in IS form
dev: Update locales
console: Fix form info prop type
gs: Do not use cache if no cache is set

# Conflicts:
#	pkg/gatewayserver/gatewayserver.go
doc: Update changelog
gs: Implement timestamps circular buffer
gs: Implement rate limiting firewall
gs: Add rate limiting configuration options
gs: Test rate limiting on different ports as well
console: Fix f_nwk_s_int_key title in device overview
doc: Update kerlink-wirnet-firmware version
console: Fix byte input value in onBlur
gs: Refactor MQTT topics
util: Test FCtrl encoding
util: Fix downlink FCnt encoding
doc: Update CHANGELOG
console: Fix hasExternalJs utility
consider an end device provisioned on an external join server iff its join_server_address is not the same as the join server address in cluster. previously, we checked whether the device has root_keys to devide whether its registered in the local js, however externally provisioned device keys is a separate case
console: Use shared url utility in device gs view
all: Setup Redis configuration on initialization
ns: Include pending downlink queue in invalidation
console: Cleanup device data form
remove update related logic
console: Add rights check to device data form
Check if the user has the right to edit keys and adapt UI/validation schema accordingly. Note, we still want to allow the users without the right to edit keys to create devices, however this is limited to creating only OTAA devices, since session keys are required fields for ABP/multicast devices
console: Add generate input to device create form
console: Fix device overview view
conditionally render app_key since it can be missing
console: Fix disabled JS section description
console: Fix disabled AS section description
console: Include dev_eui for all types of devices
enforce dev_eui when lw1.0.4 selected
console: Adjust device overview for abp with dev_eui
doc: Update changelog
console: Use browser offline status as default state
as: Return unwrapped AppSKey from device registry setter
util: Extract useful event utilities
dev: Update unconvert
gs: Test rate limiting firewall recovers
util: Add redis.DeduplicateProtos and redis.ListProtos
util: Add proto testing utilities
util: Use default dial options in test.NewGRPCServerPeer
util: Match lowest data rate index
util: Fix ShouldEqualErrorOrDefinition with nil values
ns: Add Redis uplink deduplicator
ns: Reimplement uplink deduplication

- Deduplicate uplinks after matching to a device.
- Use UplinkDeduplicator interface for dedulication.
- Avoid wrapping the deduplication and cooldown windows into functions.
- Rewrite uplink tests.
util: Add test.MockTime
ns: Consider frequency and data rate when deduplicating uplink
ns: Define an error for rejoin-requests
ns: Fix data drop event handling
ns: Remove redundant logging statements
ns: Only publish data forward event if uplink is actually sent
ns: Improve RPC naming consistency
ns: Fix ADR uplink handling
cli: Initialize Network Server with the uplink deduplicator
doc: Update CHANGELOG
dev: Regenerate messages
util: Log at ERROR level in test logger
gs: Fix synchronizing Basic Station concentrator time
all: Bump to version 3.6.1","Added
New list and request-validation subcommands for the CLI's contact-info commands.
Device Claim Authentication Code page in the Console.
Gateway Server rate limiting support for the UDP frontend, see (--gs.udp.rate-limiting options).
Uplink deduplication via Redis in Network Server.
Changed
Network and Application Servers now maintain application downlink queue per-session.
Gateway Server skips setting up an upstream if the DevAddr prefixes to forward are empty.
Gateway connection stats are now cached in Redis (see --cache.service and --gs.update-connections-stats-debounce-time options).
Fixed
Telemetry and events for gateway statuses.
Handling of downlink frame counters exceeding 65535.
Creating 1.0.4 ABP end devices via the Console.
ADR uplink handling.
Uplink retransmission handling.
Synchronizing Basic Station concentrator time after reconnect or initial connect after long inactivity.
Security
Changing username and password to be not required in pubsub integration.
Changelog
Docker images
docker pull thethingsnetwork/lorawan-stack:latest
docker pull thethingsnetwork/lorawan-stack:3
docker pull thethingsnetwork/lorawan-stack:3.6
docker pull thethingsnetwork/lorawan-stack:3.6.1"
"console: Fix join_eui field descriptions
console: Fix join_eui title/description in device gs
console: Fix join_eui title in device overview
console: Fix join_eui title in device create form
dev: Update locales
doc: Migration guide from PCN
doc: Migrating and v2 + v3 shortcodes
doc: Improve migrating from v2 guide
doc: Add favicon
doc, console: Update favicon
doc: Add draft template
doc: Update favicon with svg
util: Skip nil entries in Redis Range
gs: Get round-trip times from downlink stats
gs: Store connection stats fields only
gs: Use RTT p90 for determining whether schedule at time is too late
all: Bump to version 3.8.3","Release notes
Added
Favicon to documentation pages.
Draft template for documentation.
Changed
Late scheduling algorithm; Gateway Server now takes the 90th percentile of at least the last 5 round-trip times of the last 30 minutes into account to determine whether there's enough time to send the downlink to the gateway. This was the highest round-trip time received while the gateway was connected.
Fixed
Downlink scheduling to gateways which had one observed round-trip time that was higher than the available time to schedule. In some occassions, this broke downlink at some point while the gateway was connected.
Docker images
docker pull thethingsnetwork/lorawan-stack:3.8
docker pull thethingsnetwork/lorawan-stack:3.8.3"
"all: Enter release date of version 3.30.1 into the changelog
dev: bump golangci/golangci-lint-action from 5 to 6 in the all group

Bumps the all group with 1 update: [golangci/golangci-lint-action](https://github.com/golangci/golangci-lint-action).


Updates `golangci/golangci-lint-action` from 5 to 6
- [Release notes](https://github.com/golangci/golangci-lint-action/releases)
- [Commits](https://github.com/golangci/golangci-lint-action/compare/v5...v6)

---
updated-dependencies:
- dependency-name: golangci/golangci-lint-action
  dependency-type: direct:production
  update-type: version-update:semver-major
  dependency-group: all
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump @sentry/browser from 7.113.0 to 8.0.0

Bumps [@sentry/browser](https://github.com/getsentry/sentry-javascript) from 7.113.0 to 8.0.0.
- [Release notes](https://github.com/getsentry/sentry-javascript/releases)
- [Changelog](https://github.com/getsentry/sentry-javascript/blob/develop/CHANGELOG.md)
- [Commits](https://github.com/getsentry/sentry-javascript/compare/7.113.0...8.0.0)

---
updated-dependencies:
- dependency-name: ""@sentry/browser""
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump the safe group with 4 updates

Bumps the safe group with 4 updates: [github.com/aws/aws-sdk-go](https://github.com/aws/aws-sdk-go), [github.com/emersion/go-smtp](https://github.com/emersion/go-smtp), [github.com/prometheus/client_golang](https://github.com/prometheus/client_golang) and [github.com/smarty/assertions](https://github.com/smarty/assertions).

Updates `github.com/aws/aws-sdk-go` from 1.52.3 to 1.53.1
- [Release notes](https://github.com/aws/aws-sdk-go/releases)
- [Commits](https://github.com/aws/aws-sdk-go/compare/v1.52.3...v1.53.1)

Updates `github.com/emersion/go-smtp` from 0.21.1 to 0.21.2
- [Release notes](https://github.com/emersion/go-smtp/releases)
- [Commits](https://github.com/emersion/go-smtp/compare/v0.21.1...v0.21.2)

Updates `github.com/prometheus/client_golang` from 1.19.0 to 1.19.1
- [Release notes](https://github.com/prometheus/client_golang/releases)
- [Changelog](https://github.com/prometheus/client_golang/blob/main/CHANGELOG.md)
- [Commits](https://github.com/prometheus/client_golang/compare/v1.19.0...v1.19.1)

Updates `github.com/smarty/assertions` from 1.15.1 to 1.16.0
- [Commits](https://github.com/smarty/assertions/compare/v1.15.1...v1.16.0)

---
updated-dependencies:
- dependency-name: github.com/aws/aws-sdk-go
  dependency-type: direct:production
  update-type: version-update:semver-minor
  dependency-group: safe
- dependency-name: github.com/emersion/go-smtp
  dependency-type: direct:production
  update-type: version-update:semver-patch
  dependency-group: safe
- dependency-name: github.com/prometheus/client_golang
  dependency-type: direct:production
  update-type: version-update:semver-patch
  dependency-group: safe
- dependency-name: github.com/smarty/assertions
  dependency-type: direct:production
  update-type: version-update:semver-minor
  dependency-group: safe
...

Signed-off-by: dependabot[bot] <support@github.com>
gs: Make source address firewall concurrency safe
gs: Ensure logging rate limiting is always in memory
gs: Fix UDP metrics name
gs: Make UDP marshaling and packet filtering parallel
dev: bump the safe group across 1 directory with 9 updates

Bumps the safe group with 9 updates in the / directory:

| Package | From | To |
| --- | --- | --- |
| [@sentry/integrations](https://github.com/getsentry/sentry-javascript) | `7.113.0` | `7.114.0` |
| [react-remove-scroll](https://github.com/theKashey/react-remove-scroll) | `2.5.9` | `2.5.10` |
| [@storybook/addon-actions](https://github.com/storybookjs/storybook/tree/HEAD/code/addons/actions) | `8.0.10` | `8.1.0` |
| [@storybook/cli](https://github.com/storybookjs/storybook/tree/HEAD/code/lib/cli) | `8.0.10` | `8.1.0` |
| [@storybook/react](https://github.com/storybookjs/storybook/tree/HEAD/code/renderers/react) | `8.0.10` | `8.1.0` |
| [@storybook/react-webpack5](https://github.com/storybookjs/storybook/tree/HEAD/code/frameworks/react-webpack5) | `8.0.10` | `8.1.0` |
| [cypress](https://github.com/cypress-io/cypress) | `13.8.1` | `13.9.0` |
| [eslint-plugin-jsdoc](https://github.com/gajus/eslint-plugin-jsdoc) | `48.2.3` | `48.2.4` |
| [storybook](https://github.com/storybookjs/storybook/tree/HEAD/code/lib/cli) | `8.0.10` | `8.1.0` |



Updates `@sentry/integrations` from 7.113.0 to 7.114.0
- [Release notes](https://github.com/getsentry/sentry-javascript/releases)
- [Changelog](https://github.com/getsentry/sentry-javascript/blob/7.114.0/CHANGELOG.md)
- [Commits](https://github.com/getsentry/sentry-javascript/compare/7.113.0...7.114.0)

Updates `react-remove-scroll` from 2.5.9 to 2.5.10
- [Release notes](https://github.com/theKashey/react-remove-scroll/releases)
- [Changelog](https://github.com/theKashey/react-remove-scroll/blob/master/CHANGELOG.md)
- [Commits](https://github.com/theKashey/react-remove-scroll/compare/v2.5.9...v2.5.10)

Updates `@storybook/addon-actions` from 8.0.10 to 8.1.0
- [Release notes](https://github.com/storybookjs/storybook/releases)
- [Changelog](https://github.com/storybookjs/storybook/blob/next/CHANGELOG.md)
- [Commits](https://github.com/storybookjs/storybook/commits/v8.1.0/code/addons/actions)

Updates `@storybook/cli` from 8.0.10 to 8.1.0
- [Release notes](https://github.com/storybookjs/storybook/releases)
- [Changelog](https://github.com/storybookjs/storybook/blob/next/CHANGELOG.md)
- [Commits](https://github.com/storybookjs/storybook/commits/v8.1.0/code/lib/cli)

Updates `@storybook/react` from 8.0.10 to 8.1.0
- [Release notes](https://github.com/storybookjs/storybook/releases)
- [Changelog](https://github.com/storybookjs/storybook/blob/next/CHANGELOG.md)
- [Commits](https://github.com/storybookjs/storybook/commits/v8.1.0/code/renderers/react)

Updates `@storybook/react-webpack5` from 8.0.10 to 8.1.0
- [Release notes](https://github.com/storybookjs/storybook/releases)
- [Changelog](https://github.com/storybookjs/storybook/blob/next/CHANGELOG.md)
- [Commits](https://github.com/storybookjs/storybook/commits/v8.1.0/code/frameworks/react-webpack5)

Updates `cypress` from 13.8.1 to 13.9.0
- [Release notes](https://github.com/cypress-io/cypress/releases)
- [Changelog](https://github.com/cypress-io/cypress/blob/develop/CHANGELOG.md)
- [Commits](https://github.com/cypress-io/cypress/compare/v13.8.1...v13.9.0)

Updates `eslint-plugin-jsdoc` from 48.2.3 to 48.2.4
- [Release notes](https://github.com/gajus/eslint-plugin-jsdoc/releases)
- [Changelog](https://github.com/gajus/eslint-plugin-jsdoc/blob/main/.releaserc)
- [Commits](https://github.com/gajus/eslint-plugin-jsdoc/compare/v48.2.3...v48.2.4)

Updates `storybook` from 8.0.10 to 8.1.0
- [Release notes](https://github.com/storybookjs/storybook/releases)
- [Changelog](https://github.com/storybookjs/storybook/blob/next/CHANGELOG.md)
- [Commits](https://github.com/storybookjs/storybook/commits/v8.1.0/code/lib/cli)

---
updated-dependencies:
- dependency-name: ""@sentry/integrations""
  dependency-type: direct:production
  update-type: version-update:semver-minor
  dependency-group: safe
- dependency-name: react-remove-scroll
  dependency-type: direct:production
  update-type: version-update:semver-patch
  dependency-group: safe
- dependency-name: ""@storybook/addon-actions""
  dependency-type: direct:development
  update-type: version-update:semver-minor
  dependency-group: safe
- dependency-name: ""@storybook/cli""
  dependency-type: direct:development
  update-type: version-update:semver-minor
  dependency-group: safe
- dependency-name: ""@storybook/react""
  dependency-type: direct:development
  update-type: version-update:semver-minor
  dependency-group: safe
- dependency-name: ""@storybook/react-webpack5""
  dependency-type: direct:development
  update-type: version-update:semver-minor
  dependency-group: safe
- dependency-name: cypress
  dependency-type: direct:development
  update-type: version-update:semver-minor
  dependency-group: safe
- dependency-name: eslint-plugin-jsdoc
  dependency-type: direct:development
  update-type: version-update:semver-patch
  dependency-group: safe
- dependency-name: storybook
  dependency-type: direct:development
  update-type: version-update:semver-minor
  dependency-group: safe
...

Signed-off-by: dependabot[bot] <support@github.com>
all: Log error when rate limiting fails
all: Rename resource key
all: Log error and resource on failure
as: Fix gateway to Application Server latency timestamp
gs: Rate limit by UDP address and port number
all: Fix ListEndDevicesRequest rate limiting key
gs: Apply firewall during filtering
gs: Linearize the filtering of packets
gs: Remove unused rate limiting parameters
gs: Skip tests if location updates are not supported
dev: Update unmarshalNBytes to return nil when len of value is zero
dev: Update CHANGELOG
---
updated-dependencies:
- dependency-name: axios
  dependency-type: direct:production
  update-type: version-update:semver-minor
  dependency-group: safe
...

Signed-off-by: dependabot[bot] <support@github.com>
---
updated-dependencies:
- dependency-name: ""@formatjs/intl-locale""
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
---
updated-dependencies:
- dependency-name: github.com/KimMachineGun/automemlimit
  dependency-type: direct:production
  update-type: version-update:semver-patch
  dependency-group: safe
- dependency-name: github.com/aws/aws-sdk-go
  dependency-type: direct:production
  update-type: version-update:semver-patch
  dependency-group: safe
- dependency-name: github.com/grpc-ecosystem/grpc-gateway/v2
  dependency-type: direct:production
  update-type: version-update:semver-minor
  dependency-group: safe
- dependency-name: github.com/nats-io/nats-server/v2
  dependency-type: direct:production
  update-type: version-update:semver-patch
  dependency-group: safe
- dependency-name: github.com/nats-io/nats.go
  dependency-type: direct:production
  update-type: version-update:semver-minor
  dependency-group: safe
- dependency-name: google.golang.org/genproto/googleapis/api
  dependency-type: direct:production
  update-type: version-update:semver-patch
  dependency-group: safe
- dependency-name: google.golang.org/genproto/googleapis/rpc
  dependency-type: direct:production
  update-type: version-update:semver-patch
  dependency-group: safe
- dependency-name: google.golang.org/grpc
  dependency-type: direct:production
  update-type: version-update:semver-minor
  dependency-group: safe
...

Signed-off-by: dependabot[bot] <support@github.com>
console,account: Update store setup
dev: Update CHANGELOG
all: Cut off changelog version 3.30.2
all: Bump to version 3.30.2
all: Enter release date of version 3.30.2 into the changelog","Fixed
Increased the timeout for Basic Station gateways sending HTTP headers. There should now be enough time for embedded devices with little to no hardware acceleration to perform a TLS handshake. In particular, The Things Indoor Gateway can now connect to The Things Stack presenting a ECDSA certificate.
Reconnect a gateway when the antenna gain is adjusted.
Fixed length bytes fields, such as EUIs, device addresses or device keys, are no longer considered as being all zero when provided as null values in JSON requests."
"account: Add validation exception for CLI
api: Declare join-request type separately for MIC calculation
as: Do not retrieve AppSKey unless it changed
as: Store only metadata for integrations
data: Update external repositories
all: Bump to version 3.12.3","Release notes
Changed
Optimized storage of recent application uplinks in Application Server.
Fixed
Validation of OAuth token exchange requests from the CLI.
Validation of join-request types when using the Crypto Server backend.
Fetching AppSKey when the session is rebuilt but the identifier did not change.
Docker images
docker pull thethingsnetwork/lorawan-stack:3.12
docker pull thethingsnetwork/lorawan-stack:3.12.3
docker pull ghcr.io/thethingsnetwork/lorawan-stack:3.12
docker pull ghcr.io/thethingsnetwork/lorawan-stack:3.12.3"
"ci: Update goreleaser timeout to 120m
ci: Set goreleaser snapshot timeout to 60m
pba: Use packetbroker.net addresses
dtc: Handle non-UTF8 payloads
console: Extend event filter constant module
console: Show last seen info for applications
console: Fix device payload formatter view
console: Fix device overview fetching state
console: Update locales
dev: Update device reducer tests
dev: Update changelog
ns: Evict invalidated downlink queue
console: Use event time as fallback for last seen
gs: Do not return nil downlink token
dev: Update changelog
gs: Check for zero time in dl token
all: Do not print rate limiting error logs
util: Fix task invocation counter
console: Add error boundary to datetime component
dev: Remove @asmulko as codeowner
ns: Lower log level of missing downlink log
all: Enhance log message metric
all: Suppress duplicate logs from gRPC loopback
console: Add contextual help tooltips
is: Allow access to gateway status and location when public
console: Inform users about changing/revoking their own access
gs: Add new entity registry interface
gs: Refactor entity registry handling
console: Reduce gateway general settings diff on submit
all: Do not allow cookies in cross-origin requests
all: Add Secure and SameSite properties to cookies
account,console: Make CSRF settings consistent
account: Use SameSite=Lax in session cookies
all: Move CSRF check skip to middleware package
data: Update external repositories
all: Bump to version 3.13.1","Added
More contextual tooltips to end device and gateway form fields in the Console.
Warnings in the Console when changing or revoking your own access to an entity.
Changed
Do not print error line logs for rate limited gRPC and HTTP API requests.
The ttn_lw_log_log_messages_total metric was renamed to ttn_lw_log_messages_total and has an additional error_name label.
Authenticated users now have access to gateway status and location when those are set to public.
Cookies are no longer allowed in cross-origin requests to the HTTP API. Applications must instead use Bearer tokens in the Authorization header.
Fixed
Downlink queue eviction on FCnt mismatch.
End device payload formatter view crashing in the Console.
End device overview frequently crashing in the Console.
Panic on empty downlink in zero indexed downlink token.
Docker images
docker pull thethingsnetwork/lorawan-stack:3.13
docker pull thethingsnetwork/lorawan-stack:3.13.1
docker pull ghcr.io/thethingsnetwork/lorawan-stack:3.13
docker pull ghcr.io/thethingsnetwork/lorawan-stack:3.13.1"
"all: Do not handle template execution errors using error handlers
cli: Check updated_at value for end device before using it
dev: Update changelog
as: Do not lock on the hot path
cli: Fix panic when determining latest updated at
cli: Fix panic in simulation
console: Fix empty fields templates
data: Update external repositories
all: Bump to version 3.16.3","Fixed
CLI panic when getting devices.
Application uplink processing serialization behavior in the Application Server.
Docker images
docker pull thethingsnetwork/lorawan-stack:3.16
docker pull thethingsnetwork/lorawan-stack:3.16.3
docker pull ghcr.io/thethingsnetwork/lorawan-stack:3.16
docker pull ghcr.io/thethingsnetwork/lorawan-stack:3.16.3"
"doc: Add payload formatters
console: Harmonize pub/sub provider mappings and support multiple
console: Harmonize Pub/Sub naming
console: Add doc link text as shared message
console: Add time units to shared messages
console: Make UnitInput disabled-aware
console: Harmonize webhook inputs order with pub/sub
console: Use new SubTitle in pub/sub form
console: Prefix meta key use_credentials with underscore
console: Switch on provider
cli: Support setting payload formatter parameters from local file
doc: Update CLI instructions for payload formatters
doc: Fix changelog
Merge pull request from rvolosatovs/fix/fcnt-limit
doc: Update CHANGELOG
doc: Update CHANGELOG
all: Bump to version 3.8.6","Release notes
Docker images
docker pull thethingsnetwork/lorawan-stack:3.8
docker pull thethingsnetwork/lorawan-stack:3.8.6"
"all: Enter release date of version 3.21.0 into the changelog
dev: Fix linter warnings
is: Fix table alias
all: Fix AS923 max payload size with no dwell time
all: Fix AU915 RP2 downlink payload size constraints
all: Fix LR-FHSS downlink data rate tables
ns: Enable LR-FHSS downlinks
ns: Skip nil channels on zero frequency
all: Fix AS923-1 RP2-1.0.3 reference
all: Pass frequency plan as pointer
ns: Fix minimal uplink data rate
ns: Centralize RX parameter generation
ns: Avoid generating unschedulable JoinAccept messages
ns: Emit event on RX parameters generation failure
all: Remove deepcopy.Copy usage for protobufs
cli: Fix template create command
dev: Update CHANGELOG
api: Update device repository request paths

In this commit it is introduced the fix regarding the usage of the
applicationID on the request routes, the field has deprecated but the
paths were not updated. With this the main route declared to a grpc
service no longer contains `{application_ids.application_id}` but it was
added additional bindings that accept the usage of the applicationID.
dev: Update CHANGELOG
api: Add `field_mask` to webhook template
as: Add `field-mask` field in yaml template
api: Add `field_mask` to webhook entity
as: Apply `field_mask` to uplink message
dev: Add `IncludeFields` func to `fieldmask_utils`
as: Fix when `field_mask` contains oneof
as: Add `field_mask` related unit test cases
console: Fill `field_mask` from template
console,account: Allow using custom input elements in value map
console: Add field mask option to webhook form
dev: Update cypress tests
dev: Update changelog
console: Fix toggled input styling
as: Sort masked values in `handleUp()`
console: Regenerate messages and translations with mage
util: Add subpage end-to-end tests
dev: Update ttscsv sessions keys setters
dev: Update CHANGELOG
dev: Update cypress tests
util: Add new gateway onboarding
dev: Update cypress tests
dev: Update changelog
all: Add MA_869_870_DRAFT band
gs: Do not update gateway with unauthenticated connection
all: Add missing CUPS error codes
api: Disable NbTrans=0 for static ADR configuration
ns: Preallocate FOpts correctly
all: Cut off changelog version 3.21.1
all: Bump to version 3.21.1
all: Enter release date of version 3.21.1 into the changelog","Added
New SearchAccounts RPC on the EntityRegistrySearch service.
Prompt user to confirm navigation when changes have not been saved in the payload formatter form to prevent big change-drafts from getting lost.
Event data pushed by webhooks can now be filtered with field masks.
Support for the field mask setup was added for both CLI and Console.
Changed
Gateway registration in the Console has been updated to simplify the onboarding experience.
Fixed
CLI command end-device template create no longer breaks when providing field mask values.
Device repository services no longer require ApplicationID in its request URL.
Importing ABP devices via the CSV format now correctly handles the missing session key ID."
"gs: Clone UplinkMessage explicitly
ns: Fix 32-bit downlink FCnt
all: Use our fork of paho.mqtt.golang
ns: Ensure sufficient data before adjusting NbTrans
doc: Update HTTP API instructions
console: Fix feature requirement components
dev: Add feature toggle smoke test
dev: Update snapshots
doc: Update changelog
dev: Add stack configuration to cypress
dev: Add config assertions to e2e tests
console: Fix fetch table styles
ns: Fix MAC setting validation
ns: Fix panic when RX2 parameters cannot be computed
doc: Fix tabs
util: Add panic recovery to tasks
ns: Recover panics in downlink tasks
doc: Add HiveMQ integration doc ()
doc: Add the MQTT integration guide for Eclipse Paho client ()
all: Refactor task execution
dev: Regenerate messages
console: Reorganize hardcoded icons
console: Extract mobile side menu height to variable
console,oauth: Add root cause error utils
console,oauth: Add option to display error root cause to error message
console,oauth: Fix message styling for uppercasing
console: Add synthetic event utils
dev: Add react-window and autosizer package
console: Add event component
console,oauth: Remove unused list component
console,oauth: Remove legacy event components
console: Use new event component in entity containers
dev: Update locales
doc: Update changelog
all: Bump to version 3.9.4","Changed
Detail view of events in the Console moved to the side.
Display the full event object when expanded in the Console (used to be event.data only).
Fixed
Performance issues of event views in the Console (freezing after some time).
Gateway Server panic on upstream message handling.
Incorrect redirects for restricted routes in the Console.
Validation of MAC settings in the Network Server.
Network Server panic when RX2 parameters cannot be computed.
Release notes
Docker images
docker pull thethingsnetwork/lorawan-stack:3.9
docker pull thethingsnetwork/lorawan-stack:3.9.4"
"console: Display warning if file is larger than 3mb
console: Change if position
console: Refactor organization views

Move from class components to functional components
dev: Fix lint warnings and errors
dev: Fix cypress lint issues
console: Set isLarger to false is file is smaller than 3mb
dev: Fix lint warnings and errors
console: Refactor application api keys views

Move from class components to functional components
console: Refactor gateway api keys views

Move from class components to functional components
console: Refactor organization api keys views

Move from class components to functional components
console: Change warning to notification
console: Adapt css to container style
console: Fix variable
console: Fix app payload formatters feature check
console: Fix language
console: Add a flex-basis
ns: Increase the buffer time used for absolute time scheduling
console: Pass warning threshold and the warning message as props
gs: Add min scheduling time to error attributes
dev: Remove Echo from pkg/webui
dev: Remove Echo from pkg/account
dev: Remove Echo from pkg/oauth
console: Remove Echo usage
all: Remove Echo
all: Inject CSRF token into WebUI template
all: Render errors using template
gs: Wrap JSON unmarshaling error
api: Validate location bounds
gs: Lower log level for clock synchronization messages
all: Wrap request body parsing errors
all: Redirect to slash
all: Fix OAuth client cookie error code
dev: Update Gorilla CSRF
dev: Remove code-ownership of CHANGELOG.md
dev: Add docker ps to db start target
dev: Autobind SDK class instances
console: Replace API tree with direct SDK instance
dev: Update eslint plugins
console: Fix rights check for app payload formatters
as: Fix DMS panic
console: Fix network layer form submission

Delete empty session and session keys
console: Extend event filters
console,account: Prevent crashes within message component
console: Fix join settings handling

Check if NS is available before fetching 'supports_join' value when updating join settings
all: Remove custom random utilities
console: Fix insufficient rights notification for device keys
console: Fix validation context in join settings form
console: Correct wrong description message
all: Remove gogoproto from some proto files
console,account: Fix discarding consecutive toasts
util: Add antenna gain to LBS RFCONF
gs: Add Antenna Gain to lbs router_config
cli: Fix setting antenna field
dev: Update changelog
console: Write smoke test for collapsing fields
console: Keep file input component as generic as possible
console: Fix state
ns: Validate MAC settings data rate indices
dev: bump @formatjs/intl-datetimeformat from 4.2.3 to 4.2.6

Bumps [@formatjs/intl-datetimeformat](https://github.com/formatjs/formatjs) from 4.2.3 to 4.2.6.
- [Release notes](https://github.com/formatjs/formatjs/releases)
- [Commits](https://github.com/formatjs/formatjs/compare/@formatjs/intl-datetimeformat@4.2.3...@formatjs/intl-datetimeformat@4.2.6)

---
updated-dependencies:
- dependency-name: ""@formatjs/intl-datetimeformat""
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump @babel/preset-react from 7.13.13 to 7.16.0

Bumps [@babel/preset-react](https://github.com/babel/babel/tree/HEAD/packages/babel-preset-react) from 7.13.13 to 7.16.0.
- [Release notes](https://github.com/babel/babel/releases)
- [Changelog](https://github.com/babel/babel/blob/main/CHANGELOG.md)
- [Commits](https://github.com/babel/babel/commits/v7.16.0/packages/babel-preset-react)

---
updated-dependencies:
- dependency-name: ""@babel/preset-react""
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump @testing-library/cypress from 7.0.6 to 8.0.2

Bumps [@testing-library/cypress](https://github.com/kentcdodds/cypress-testing-library) from 7.0.6 to 8.0.2.
- [Release notes](https://github.com/kentcdodds/cypress-testing-library/releases)
- [Changelog](https://github.com/testing-library/cypress-testing-library/blob/main/CHANGELOG.md)
- [Commits](https://github.com/kentcdodds/cypress-testing-library/compare/v7.0.6...v8.0.2)

---
updated-dependencies:
- dependency-name: ""@testing-library/cypress""
  dependency-type: direct:development
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
Add @ryaplots as CODEOWNER
all: Adjust error codes
gs: Claim using decoupled context
ns: Use getter for channels
console: Write e2e test for creating webhooks
console: Add a type check for warning size

Co-authored-by: Kevin Schiffer <kevin.schiffer@thethingsnetwork.org>
console: Export humanFileSize to lib/util and warning size not required
console: Refactor webhook intergations views

Move from class components to functional components
console: Fix webhook form prop types
console: Refactor webhook add form

Move from class components to functional components
console,account: Fix message props warning
dev: bump lottie-web from 5.7.11 to 5.8.1

Bumps [lottie-web](https://github.com/airbnb/lottie-web) from 5.7.11 to 5.8.1.
- [Release notes](https://github.com/airbnb/lottie-web/releases)
- [Changelog](https://github.com/airbnb/lottie-web/blob/master/CHANGELOG.md)
- [Commits](https://github.com/airbnb/lottie-web/compare/v5.7.11...v5.8.1)

---
updated-dependencies:
- dependency-name: lottie-web
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Add @ryaplots as codeowner for node modules
all: Remove random.Read
gs: Disconnect gateway on delete
gs: Account for unauthenticated connection
dev: Update changelog
dev: Update comments
gs: Update comments
pba: Update tenant DevAddr blocks only when authenticated as host NetID
dev: Update changelog
console: Add end device on all components
ns: Do not store correlation IDs for recent messages
ns: Store only the latest 5 recent downlinks
ns: Use worker pool in order to submit uplinks
ns: Report transmission failures to application layer
console: Simplify reading files logic

Co-authored-by: Kevin Schiffer <kevin.schiffer@thethingsnetwork.org>
all: Increase maximum request body size to 16MB
console: Fix parenthesis
console: Implement default body overwrite
console: Move collapsing fields tst
console: Fix comitted suggestion
console: Use overwrite mechnism for all components
console: Fix linting
api: Remove gogoproto options from EndDeviceIdentifiers
cli: Adapt interfaces
util: Adapt new EndDeviceIdentifiers message
util: Update pkg/auth and pkg/errors
qrg: Update interfaces
gs: Update EndDeviceIDs usage
is: Update EndDeviceIdentifier usage
js: Update usage of EndDeviceIdentifiers
ns: Update usage of EndDeviceIdentifiers
as: Update EndDeviceIds usage
api: Update spacing
ns: Fix redis test
is: Fix populator
is: Update enddevice store
util: Update goproto tests
util: Update gogoproto tests
util: Update error tests
dev: Update usage of ApplicationIds
all: Use method to fetch application ID
all: Use getters in more places
all: Do not attempt to write error if Write failed
dev: Generate js source maps when tagging release
gs: Remove FSK bandwidth from configuration message
util: Do not marshal BasicStation debug options if absent
dev: Update Validate protos
account: Update contact info tests
util: Add parameters to sdk Validate method
all: Extract task package
all: Omit empty antenna gains
as: Use worker pool to mark end devices as activated
as: Use worker pool to process application uplinks
as: Deprecate obsolete end device fetchers
as: Retrieve end device identifiers from local registry
as: Replicate end device locations asynchronously
as: Do not evict items after hard TTL
as: Clarify TTL descriptions
as: Respect cache configuration
as: Avoid dropping LocationSolved messages on Merge error
util: Add generic error template
dev: Add html error handler to web routers
dev: Update CHANGELOG
api: Introduce webhook header validation
api: Add webhook health status
as: Add webhook health status support
as: Remove pre queueing support
api: Use ErrorDetails for error details
as: Use ErrorDetails for error details
as: Add health sink tests
api: Add webhooks configuration
as: Add webhooks configuration to API response
console: Render webhook health status
api: Validate webhook templates headers
dev: Update changelog
console: Delete two lines
console: Fix messages
is: Add non-TLS interop listener
console: Add activate webhook button, add status to component
console: Fix exists to should, add logo uri
console: Use placeholder name
ci: Add GitHub Actions Workflow for checking Enterprise mergeability
all: Remove outdated warning about old logger
as: Use counters instead of gauges
all: Add RP2-1.0.1 band definitions
all: Update CN470-510 data rates
ci: Add arm64 images to snapshot release workflow
all: Add AS923 groups
all: Increase max payload size for AS923
all: Update latest band version
api: Add 'disconnected_at' field to gateway.proto
gs: Add ConnectionStatsDisconnectTTL to config
gs: Update registry interface
gs: Store current time when a gateway disconnects
gs: Create testcase in redis registry
is: Fixes
console: Include reactivate button as notification
console: Remove unnecessary navigate back

Co-authored-by: Kevin Schiffer <kevin.schiffer@thethingsnetwork.org>
console: Use small notification

Co-authored-by: Kevin Schiffer <kevin.schiffer@thethingsnetwork.org>
all: Add latest version lookup table
all: Add RP2-1.0.2 band definitions
all: Add LRFHSS data rates
ci: Use global git config in mergeability workflow
api: Remove nullable from oauth.proto
all: Remove nullable from oauth.proto
all: Remove nullable from application.proto
api: Remove embed and nullable from ResetAndGetEndDeviceRequest
all: Remove embed and nullable from ResetAndGetEndDeviceRequest
console: Add Pending info, move messages
all: Remove nullable and embed from GetEndDeviceRequest
all: Remove embed and nullable from EndDeviceVersion
api: Remove embed and nullable from SessionKeys
all: Remove embed and nullable from SessionKeys
dev: Fix SQL databases used in unit tests
dev: Update storybook and related modules
dev: Update storybook config
console,account: Update story format
dev: Use compatible react-leaflet version
dev: Update eslint
dev,console: Resolve linter warnings after update
console: Fix linting
all: Add experimental support for Azure Blob storage
dev: Update module resolutions
dev: Fix storybook mage target
console: Add comma
console: Fix definitions and translations
ns: Allow partial key updates
all: Allow unknown keys in schema decoder
all: Decouple worker pool tests
all: Revert back to switch instead of map for error conversion
as: Increase test timeout
console,account: Fix message styles
console: Update date

Co-authored-by: Kevin Schiffer <kevin.schiffer@thethingsnetwork.org>
console: Update date

Co-authored-by: Kevin Schiffer <kevin.schiffer@thethingsnetwork.org>
console: Fix use test names
console: Fix linting
console: Take into account disconnection status of a gateway
as: Do not disable webhooks by default
console: Add webhook message path validation
console: Fix webhook base url field type
console: Write edit webhook e2e test
all: Update github.com/lib/pq dependency
data: Update external repositories
all: Bump to version 3.16.2
dev: Remove line about webhook health defaults from CHANGELOG","Added
User defined antenna gain for LBS gateways.
Webhooks now have a health status associated with them. Webhooks that fail successively are now disabled for a period of time.
Failure in this context means that the HTTP endpoint returned a non-2xx status code.
A successful HTTP request will reset the failure counter.
The number of allowed successive failures and cooldown period can be configured using the --as.webhooks.unhealthy-attempts-threshold and --as.webhooks.unhealthy-retry-interval configuration options.
Webhook enabled path validation in the Console.
Changed
Increased the maximum gRPC message size to 16MB.
Gateways which have been deleted are now automatically disconnected by the Gateway Server.
Fixed
Access to application payload formatters for users with RIGHT_APPLICATION_SETTINGS_BASIC right.
End device mac settings handling in the Console.
Uplink and downlink counters display on end device activity in the Console.
Join settings handling in JS-only deployments in the Console.
Configuring Packet Broker listed option when Packet Broker Agent is configured with a Packet Broker tenant API key.
Contact info validation through the Account app.
Docker images
docker pull thethingsnetwork/lorawan-stack:3.16
docker pull thethingsnetwork/lorawan-stack:3.16.2
docker pull ghcr.io/thethingsnetwork/lorawan-stack:3.16
docker pull ghcr.io/thethingsnetwork/lorawan-stack:3.16.2"
"all: Move ratelimit middleware after validation
ns: Allow LinkADRReq commands to lower the datarate
ci: Revert uploading protos to S3
api: Remove CombinedIdentifiers
all: Use EntityIdentifiers in pkg/cluster
all: Use EntityIdentifiers in pkg/events
all: Use *ttnpb.EntityIdentifiers in pkg/auth/rights
is: Use *ttnpb.EntityIdentifiers in MembershipStore
is: Use *ttnpb.EntityIdentifiers in APIKeyStore
cli: Stop using CombinedIdentifiers
cli: Use GetEntityIdentifiers() instead of EntityIdentifiers()
all: Stop using Identifiers()
is: Use ttnpb.IDStringer in emails
is: Remove use of EntityIdentifiers()
all: Remove ttnpb.Identifiers from pkg/unique
all: Remove ttnpb.Identifiers
dev: Update ssri dependency
console: Add uint32 notation for device address
console: Add insufficient rights placeholder for root keysÑys
dev: Add tippy dependency
console,account: Add tooltip component
console: Add form field tooltips
dev: Update locales
all: Add GCS to cluster config
dev: Update Changelog
gcs: Handle requests with zero EUI
dev: Update changelog
as: Add multi frame location requests API support
as: Add multi frame location queries support
as: Do not leak gateway identifiers to external services
console: Expose multiframe configuration
dev: Update messages
account: Trim username on login page
all: Add validation to Echo forms
console: Fix state updates
as: Fix serialization time unit
as: Add LoRaCloud GLS GNSS API
as: Add LoRaCloud GLS GNSS queries support
console: Add LoRaCloud GLS GNSS support
console: Add GLS WiFi support
as: Add LoRaCloud GLS WiFi API support
as: Add LoRaCloud GLS WiFi support
as,console: Make naming convention consistent
console: Reset form on token deletion
api,dr: Return codec examples
api,dr: Fix nested maps in codec examples
api: Add codec ID and field mask paths for device repository codecs
dr: Add field mask paths to Device Repository codec API
dev: Regenerate JS SDK definitions
api: Use struct for formatter example inputs
dr: Unit tests for payload formatter examples
api: Device Repository codec examples
dr: Parse device repository codec examples
dr: Unit tests for codec examples
dr: Update device repository message processor
api: Add validation to Device Repository examples
dr: Refactor GetCodecRequest to an interface
console: Fix gateway downlink event display
dev: Update event data for storybook
dev: Update changelog
dr: Fix incorrect handling of RX frequencies
dr: Configure MaxEIRP for ABP devices only
console: Do not set empty current parameters in device MAC state
util: Tooling to update allowed field mask paths for JS SDK
util: Update fixtures of device templates for E2E tests
util: Update CHANGELOG
dev: Fix missing/incorrect CHANGELOG lines
data: Update external repositories
all: Bump to version 3.12.2","Known Issues
The OAuth login flow of ttn-lw-cli does not work with v3.12.2. Instead, you can use ttn-lw-cli login --api-key NNSXS.etc.etc to login with an API key.
Added
Contextual tooltips to form fields in the Console.
C-Style uint32_t representation for end device address field.
Gateway Configuration Server to the cluster package.
This introduces a new config option cluster.gateway-configuration-server that needs to be set in multi-instance deployments.
Uplink storage for integrations in the Application Server. The number of uplinks stored per end device may be configured via the config option as.uplink-storage.limit.
LoRaCloud GLS multi frame request support.
LoRaCloud GNSS request support.
LoRaCloud WiFi request support.
Changed
Allow the LinkADRReq commands to lower the data rate used by the end devices.
Fixed
Occasional crashes in the ratelimit middleware.
Handling of zero EUI CUPS update-info requests.
Backend validation messages for some forms.
Gateway downlink message previews not displaying correctly in the event view of the Console.
Importing end devices from the Console would occasionally ignore some device MAC settings fields.
Release notes
Docker images
docker pull thethingsnetwork/lorawan-stack:3.12
docker pull thethingsnetwork/lorawan-stack:3.12.2
docker pull ghcr.io/thethingsnetwork/lorawan-stack:3.12
docker pull ghcr.io/thethingsnetwork/lorawan-stack:3.12.2"
"all: Check cluster calls based authentication token
gs: Unset gateway location in Packet Broker when it isn't public
dev: Update changelog
cli: Check for nil UpdatedAt
dev: Update changelog
all: Bump to version 3.17.1","Docker images
docker pull thethingsnetwork/lorawan-stack:3.17
docker pull thethingsnetwork/lorawan-stack:3.17.1
docker pull ghcr.io/thethingsnetwork/lorawan-stack:3.17
docker pull ghcr.io/thethingsnetwork/lorawan-stack:3.17.1"
"all: Enter release date of version 3.28.1 into the changelog
console: Removed and refactored withFeatureRequirement HOC
console: Removed and refactored withConnectionReactor HOC
console: Refactor connect in owners select
console: Refactor connect in organization events and device title section
console: Refactor connect in application events
console: Refactor connect in uplink form
console: Refactor connect in fw version select
console: Refactor connect in hw version select
console: Change useParams with props
console: Refactor connect in device card
console: Refactor connect in downlink form
console: Refactor connect in model select
console: Refactor connect in brand select
console: Refactor connect in gateway connection form
console: Refactor connect in full view error
console: Refactor connect in gateway connection reactor
console: Refactor connect in gateway events
console: Refactor connect in device events
console: Refactor connect in collaborators table
console: Fix locale issues
is: Fix multiple chain rights assertions
gs: Disconnect gateway on Gateway Server address change
console: Removed commented code
console: Fix missing header
gs: Allow individual right checks
gs: Assert gateway rights on discovery
dev: bump eslint-config-prettier from 8.8.0 to 9.0.0

Bumps [eslint-config-prettier](https://github.com/prettier/eslint-config-prettier) from 8.8.0 to 9.0.0.
- [Changelog](https://github.com/prettier/eslint-config-prettier/blob/main/CHANGELOG.md)
- [Commits](https://github.com/prettier/eslint-config-prettier/compare/v8.8.0...v9.0.0)

---
updated-dependencies:
- dependency-name: eslint-config-prettier
  dependency-type: direct:development
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump wait-on from 7.0.1 to 7.2.0

Bumps [wait-on](https://github.com/jeffbski/wait-on) from 7.0.1 to 7.2.0.
- [Release notes](https://github.com/jeffbski/wait-on/releases)
- [Commits](https://github.com/jeffbski/wait-on/compare/v7.0.1...v7.2.0)

---
updated-dependencies:
- dependency-name: wait-on
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump @formatjs/intl-listformat from 7.4.1 to 7.5.3

Bumps [@formatjs/intl-listformat](https://github.com/formatjs/formatjs) from 7.4.1 to 7.5.3.
- [Release notes](https://github.com/formatjs/formatjs/releases)
- [Commits](https://github.com/formatjs/formatjs/compare/@formatjs/intl-listformat@7.4.1...@formatjs/intl-listformat@7.5.3)

---
updated-dependencies:
- dependency-name: ""@formatjs/intl-listformat""
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump @babel/runtime-corejs2 from 7.23.2 to 7.23.5

Bumps [@babel/runtime-corejs2](https://github.com/babel/babel/tree/HEAD/packages/babel-runtime-corejs2) from 7.23.2 to 7.23.5.
- [Release notes](https://github.com/babel/babel/releases)
- [Changelog](https://github.com/babel/babel/blob/main/CHANGELOG.md)
- [Commits](https://github.com/babel/babel/commits/v7.23.5/packages/babel-runtime-corejs2)

---
updated-dependencies:
- dependency-name: ""@babel/runtime-corejs2""
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump axios from 1.6.0 to 1.6.2 in /sdk/js

Bumps [axios](https://github.com/axios/axios) from 1.6.0 to 1.6.2.
- [Release notes](https://github.com/axios/axios/releases)
- [Changelog](https://github.com/axios/axios/blob/v1.x/CHANGELOG.md)
- [Commits](https://github.com/axios/axios/compare/v1.6.0...v1.6.2)

---
updated-dependencies:
- dependency-name: axios
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump @adobe/css-tools from 4.3.1 to 4.3.2

Bumps [@adobe/css-tools](https://github.com/adobe/css-tools) from 4.3.1 to 4.3.2.
- [Changelog](https://github.com/adobe/css-tools/blob/main/History.md)
- [Commits](https://github.com/adobe/css-tools/commits)

---
updated-dependencies:
- dependency-name: ""@adobe/css-tools""
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>
console: Allow to only set frequency plans within the same band
console: Update CHANGELOG
dev: Add timeout and better error handling to streams
console: Adapt event logic to websocket stream
console: Update e2e tests
console: Fix e2e test
console: Fix e2e tests
all: Extract serving relay forwarding limits message
all: Extract relay uplink forwarding rule message
all: Add band served relay backoff
console: Fix stream reconnection
console: Fix documentation links
console: Check if action/event exist before checking the name
dev: Fix race condition in event stream opening logic
dev: Fix verbose stream closure
all: Cut off changelog version 3.28.2
all: Bump to version 3.28.2
console: Fix WebSocket request detection
dev,console: Fix event stream concurrency and state machine
console: Refactor subscription state
console: Use static listeners
console: Make combined and individual streams semantically equivalent
console: Unify subscription closure promise
console: Make event errors informational
console: Periodically ping event clients
console: Keep connections alive with no subscriptions
console: Close unauthenticated connections
console: Clarify reconnection logic
console: Address review comments
console: Disable WebSocket compression for Safari
all: Enter release date of version 3.28.2 into the changelog","Added
Rate limiting classes for individual HTTP paths.
Rate limiting keys for HTTP endpoints now contain the caller API key ID when available. The caller IP is still available as a fallback.
Allow users to set multiple frequency plans only in the same band in the Console.
Changed
Server side events replaced with single socket connection using the native WebSocket API.
Gateways now disconnect if the Gateway Server address has changed.
This enables CUPS-enabled gateways to change their LNS before the periodic CUPS lookup occurs.
The LoRa Basics Station discovery endpoint now verifies the authorization credentials of the caller.
This enables the gateways to migrate to another instance gracefully while using CUPS.
Fixed
Batch gateway rights assertions when multiple membership chains are available (for example, both via a user and an organization)."
"gs: Fix TxAck exit condition
gs: Fix sending downlink message that failed to marshal
gs: Cleanup breaking from switch statement
ns: Fix FCnt resets
dev: Update CHANGELOG
ns: Fix raw payload usage in NS
dev: Update CHANGELOG
util: Adapt NwkID length in DevAddr to errata
dev: Update changelog
ci: Use separate config for GoReleaser release builds
ci: Add GoReleaser snapshot builds
dev: Use builder for Docker images
cli: Add --dry-run flag for simulation
dev: Use yarn cache
console: Clean up gateway views

Use arrow functions in 'react-redux' connect
console: Clean up application views

Use arrow functions in 'react-redux' connect
util: Set toa variables as error attributes
all: Make request ID header consistent between gRPC and HTTP
all: Make logging consistent between gRPC and HTTP
all: Use gRPC field extractor from tags library
pba: Improve logging
pba: Move contextual message operations to rpcs
pba: Rename test tenant to foo-tenant
all: Implement field extraction on identifier types
all: Propagate proxy headers to grpc-gateway
all: Add support for proxy headers to gRPC server
all: Make default proxy header config for HTTP consistent with gRPC
all: Reorder gRPC error middleware
all: Write gRPC tags to Sentry without prefix
all: Use same logic for Request IDs and Request Correlation IDs
all: Move gRPC recovery middleware up the chain
all: Bump to version 3.10.2","Release Notes
Added
gRPC middleware to extract proxy headers from trusted proxies. This adds a configuration grpc.trusted-proxies that is similar to the existing http.trusted-proxies option.
Changed
Log field consistency for HTTP and gRPC request logs.
Fixed
Uplink frame counter reset handling.
Uplink retransmission handling in Network Server.
DevAddr generation for NetID Type 3 and 4, according to errata.
HTTP header propagation (such as Request ID) to gRPC services.
Docker images
The 3.10.2 Docker images pushed on 27 November contained an incorrect ttn-lw-stack binary. We have updated the images with the correct binaries on 30 November.
docker pull thethingsnetwork/lorawan-stack:3.10
docker pull thethingsnetwork/lorawan-stack:3.10.2
docker pull ghcr.io/thethingsnetwork/lorawan-stack:3.10
docker pull ghcr.io/thethingsnetwork/lorawan-stack:3.10.2"
"oauth: Propagate OAuth2 configuration provider errors
console: Add warning to frequency_plan_id field
console, dev: Add simple markdown to backend error messages
is: Make GenerateAPIKey exported
is: Add create API key for admin is-db command
cli: Make io shared between ttn-lw-stack and ttn-lw-cli
dev: Update CHANGELOG
dev: Add pre-push git hook
console: Show relevant errors of default package request
console: Add documentation and support links
api: Add home_network_cluster_id to Packet Broker metadata
pba: Update to routing/v1 API and OAuth 2.0 authentication
pba: Add configuration for a specific Home Network Cluster ID
pba: Set coding rate

References https://github.com/packetbroker/api/issues/21
pba: Use explicit Insecure configuration setting

The component's AllowInsecureForCredentials isn't applicable to dialing
external services.
dev: Update changelog
pba: Fetch tenant from context
util: Fix typo
pba: Use component TLS configuration
dev: Regenerate messages
dev: Fix dependencies
pba: Format DevAddr prefix filter
pba: Include originating identifiers in testing
is: Make contact info validation TTL configurable
is: Add friendly link expiry info to emails
is: Return error when creating validation while old one still valid
pba: Configure dial options when dialing
is: Skip pending validations and error if nothing to validate
dev: Update axios dependency
dev,util: Update axios dependency
as: Skip payload encryption using link level overrides in RPCs
as: Simulate linked applications in device registry tests
dev: Adapt git hooks to WSL
api: Adjust NS registry GET fieldmasks
as: Return correct HTTP status codes on AS webhook downlink
dev: Regenerate messages
dev: Regenerate API definitions
all: Bump to version 3.10.6","Known Bugs
The v3.10.6 release contains a bug in the Console that prevents device views from loading.
Added
Configuration option is.admin-rights.all to grant admins all rights, including _KEYS and _ALL.
Configuration option is.user-registration.contact-info-validation.token-ttl to customize the validity of contact information validation tokens.
ttn-lw-stack CLI command for creating an API Key with full rights on a user.
Changed
Packet Broker API version to v3.2.0-tts and routing API to v1.0.2-tts.
Emails with temporary tokens now also show when these tokens expire. Custom email templates can use {{ .TTL }} and {{ .FormatTTL }} to render the expiry durations.
Deprecated
Packet Broker mutual TLS authentication: use OAuth 2.0 client credentials instead; set pba.authentication-mode to oauth2 and configure pba.oauth2.
Packet Broker forwarder blacklist setting pba.home-network.blacklist-forwarder has become ineffective.
Release notes
Docker images
docker pull thethingsnetwork/lorawan-stack:3.10
docker pull thethingsnetwork/lorawan-stack:3.10.6
docker pull ghcr.io/thethingsnetwork/lorawan-stack:3.10
docker pull ghcr.io/thethingsnetwork/lorawan-stack:3.10.6"
"all: Bump to version 3.5.1
all: Load system CAs even if custom CA file used
util: Fix LinkADRReq ChMask endianness

per lorawan spec, the channel mask is LSB:
0xFF00 (LSB) = 0b00000000 11111111 (MSB) = ChMask = channels 1 thru 8

with the current code, channels 1-8 are encoded as 0x00FF (channels
9-16)

LinkADRReq are therefore rejected with pld.ChannelMaskAck = false, and
all other ADR settings (DR) are discarded.

Co-authored-by: Roman Volosatovs <roman@thethingsnetwork.org>
util: Refactor CFList encoding
doc: Update CHANGELOG
ns: Consider GS schedule window when enqueueing join-accept
gs: Use Gateway ID from registry for BS Auth
dev,console,oauth: Resolve browserslist warning in console,oauth
ns: Fix frequency plan validation
doc: Update CHANGELOG
gs: Use request context in Basic Station frontend
gs: Check authorization value prefix on Bearer
gs: Fix error reporting and clarify logging
gs: Add Basic Station authentication fix to changelog
all: Bump to version 3.5.2","Release notes
Docker images
docker pull thethingsnetwork/lorawan-stack:latest
docker pull thethingsnetwork/lorawan-stack:3
docker pull thethingsnetwork/lorawan-stack:3.5
docker pull thethingsnetwork/lorawan-stack:3.5.2"
"all: Enter release date of version 3.22.0 into the changelog
dev: Update code owners
gs: Simplify duty cycle checks
gs: Isolate window checks
gs: Add blocking window duty cycle style
all: Use ulid.Now always
dev: Upgrade to Go 1.19
dev: Update actions to Ubuntu 22.04
dev: Update golangci to v1.50.0
dev: Update to Firefox 102.3.0
dev: Adapt E2E tests
dev: Upgrade to checkout v3
dev: Update changelog
all: Use code function everywhere
ns: Use common error for join request lookup
dev: Fix spelling
dev: bump react-string-replace from 0.4.4 to 1.1.0

Bumps [react-string-replace](https://github.com/iansinnott/react-string-replace) from 0.4.4 to 1.1.0.
- [Release notes](https://github.com/iansinnott/react-string-replace/releases)
- [Commits](https://github.com/iansinnott/react-string-replace/compare/v0.4.4...v1.1.0)

---
updated-dependencies:
- dependency-name: react-string-replace
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
util: Check if current version matches cached version
cli: Increase version check timeout
all: Cut off changelog version 3.22.1
all: Bump to version 3.22.1
all: Enter release date of version 3.22.1 into the changelog","Changed
Option to ignore logs from selected gRPC methods now supports ignoring logs for selected errors on method.
Examples:
--grpc.log-ignore-methods=""/ttn.lorawan.v3.GsNs/HandleUplink"": log is skipped when no error occurs.
--grpc.log-ignore-methods=""/ttn.lorawan.v3.GsNs/HandleUplink:pkg/networkserver:duplicate_uplink;pkg/networkserver:device_not_found"": log is skipped when either pkg/networkserver:duplicate_uplink or pkg/networkserver:device_not_found error occurs (but not on success).
--grpc.log-ignore-methods=""/ttn.lorawan.v3.GsNs/HandleUplink:;pkg/networkserver:duplicate_uplink"": log is skipped on success or when pkg/networkserver:duplicate_uplink error occurs.
The Gateway Server now takes into consideration the extra duty cycle checks present in the LoRa Basics Station forwarder. Previously the Gateway Server may accept the scheduling of downlinks which the packet forwarder would silently drop.
Note that in some rare cases in which the LoRa Basics Station duty cycle is stricter than the windowed approach used by The Things Stack, the scheduling will fail and this will be visible via ns.down.data.schedule.fail events. Note that this is actually a positive outcome - it allows the Network Server to schedule the downlink via another gateway, while previously the downlink would be scheduled but get silently dropped on the gateway."
"ci: Hardcode S3 bucket
util: Add supports_join to converted template
util: Set serial number as root key ID
console,oauth: Get config from context in middleware
doc: Add Network Server to H1 title
util: Update device entity map
console,oauth: Checkbox styling fix
console: Move device bulk creation up in routing hierarchy
console: Rename bulk creation to device import
console,oauth: Add form info field component
console: Show template format description under select
console: Make byte strings uppercase
console: Add claim authentication code option to device import
console: Add component uris to imported devices
console: Remove unnecessary error state
console: Add prop-types to device import form
dev: Update locales
doc: Update changelog
oauth: Parse invitation token in user registration
cli: Add invitation token flag on users create command
is: Send user invitation emails
doc: Add user invitations to changelog
doc: Add user invitation email to reference
is: Send entity state change emails
doc: Add entity state change emails to changelog
is: Use lowercase non-prefixed state value in emails
doc: Add entity state change email to reference
console,oauth: Add component constants module'
console,oauth: Fix checkbox wrapping
console,oauth: Update proptypes
console: Add option to choose targeted component in bulk creation
doc: Make code blocks consistent
doc: Make heading spacing consistent
doc: Make unordered lists consistent
doc: Use double quotes in bash
doc: Increase heading level for API reference
dev: Update locales
doc: Move config documentation to reference and rewrite
doc: Add server options
doc: Add code block highlighting
doc: Add Identity Server configuration reference
all: Add cache config to service base
console: Add redux primitives for org api keys list
console: Add organization api keys list page
util: Extend organizations service
add api keys methods
console: Extend organization api definition
add api keys methods
console: Extend organization api definition
add method to fetch rights
util: Extend organizations service
add the getRightsById  method
console: Add redux primitives for org rights handling
console: Add organization api key create page
console: Add redux primitives for org api key handling
console: Add organization api key edit page
console: Fix props in api key edit form
pass entityTypeMessage to rights-group
doc: Update changelog
console: Adjust rights-group to org collaborators
doc: Adjust anchor location for navbar
doc: Enhance console component documentation
console: Fix rights group prop types
console: Fix device event container prop types
console: Fix device table prop types
console,oauth: Add right prop-type to lib
util: Extend organizations service
add collaborators methods
console: Extend organization api definition
add collaborators methods
console: Add redux primitives for org collaborators list
console: Add organization collaborators list page
console: Add redux primitives for org rights handling
console: Add organization collaborator create page
console: Add redux primitives for org collaborator handling
console: Add organization collaborator edit page
doc: Update changelog
console: Fix default value for derivedPseudoRight
doc: Add Network Server to H1 title on download page
gs: Use server context BS write error function
gs: Add option to force WSS in traffic endpoint
gs: Make config consistent
ns: Optimize downlink task starting times
ns: Allow confirmed class C downlinks after uplinks
ns: Move nextConfirmedClassCDownlinkAt to utils.go
ns: Rename handleUplinkGetPaths -> handleDataUplinkGetPaths
doc: Update changelog
util: Fix device template formats marshaling
util: Fix device update
all: Allow read-only fields in update mask if they don't change
ns: Fix NewChannelReq scheduling condition
ns: Prefix needs.*Req with device
ns: Fix MAC event scheduling
ns: Only set required fields on downlinks
ns: Refactor ADRParamSetupReq utilities
cli: Add qrg to stack start use command
console: Fix loading template converters
all: Bump to version 3.2.3","Release notes
Docker images
docker pull thethingsnetwork/lorawan-stack:latest
docker pull thethingsnetwork/lorawan-stack:3
docker pull thethingsnetwork/lorawan-stack:3.2
docker pull thethingsnetwork/lorawan-stack:3.2.3"
"is: Move store to gormstore
is: Move shared store functionality out of gormstore
is: Refactor entity store tests into storetest package
is: Test for error types in store tests
is: Replace EndDeviceStore test
is: Add population to storetest
is: Replace MembershipStore test
is: Replace APIKeyStore test
is: Replace ContactInfoStore test
is: Replace InvitationStore test
is: Replace LoginTokenStore test
is: Close database when test is done
is: Remove UpdateSession from UserSession store interface
is: Replace UserSessionStore test
is: Update OAuthStore interface to return entities after create
is: Replace OAuthStore test
is: Replace EUIStore test
is: Move backwards compatibility of API Key update out of store
is: Make tests with attributes more DRY
is: Refactor implementation and tests for deleted entity queries
is: Rename EntitySearch methods to prevent conflicts
is: Remove member argument from SearchUsers
is: Replace EntitySearch test
is: Keep test database for debugging after failure
is: Link TODOs to issues
is: Add entity contacts to store tests
cli: Fix completion and Documentation commands
api: Remove gogoproto.equal_all option from protos
all: Always use NwkKey for network layer operations
js: Use NwkKey when set, regardless of session version
dev: Update changelog
dev: bump follow-redirects from 1.14.6 to 1.14.7

Bumps [follow-redirects](https://github.com/follow-redirects/follow-redirects) from 1.14.6 to 1.14.7.
- [Release notes](https://github.com/follow-redirects/follow-redirects/releases)
- [Commits](https://github.com/follow-redirects/follow-redirects/compare/v1.14.6...v1.14.7)

---
updated-dependencies:
- dependency-name: follow-redirects
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump follow-redirects from 1.14.4 to 1.14.7 in /sdk/js

Bumps [follow-redirects](https://github.com/follow-redirects/follow-redirects) from 1.14.4 to 1.14.7.
- [Release notes](https://github.com/follow-redirects/follow-redirects/releases)
- [Commits](https://github.com/follow-redirects/follow-redirects/compare/v1.14.4...v1.14.7)

---
updated-dependencies:
- dependency-name: follow-redirects
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>
gs: Add disconnected_at field to io connection stats
dev: Update changelog
console: Add faulty location handling
api: Remove gogoproto.stringer_all option from protos
api: Remove gogoproto.goproto_unrecognized_all option from protos
api, as: Support 4096 character webhook header values
dev: Update changelog
api: Remove nullable from default formatters
all: Remove nullable from DLSettings
ns: Remove nullable from DLSettings
api: Remove nullable from JoinRequest
ns: Remove nullable from JoinRequest
api: Remove nullable from SessionKeys
ns: Remove nullable from SessionKeys
api: Remove nullable from EntityIdentifiers
is: Remove nullable from EntityIdentifiers
api: Remove nullable from class B timeout
all: Remove nullable from class B timeout
api: Remove nullable from class C timeout
all: Remove nullable from class C timeout
api: Remove nullable from status time periodicity
ns: Remove nullable from status time periodicity
api: Remove nullable from class B/C downlink interval
ns: Remove nullable from class B/C downlink interval
ns: Add missing JoinRequest settings to test
api: Make join request required
dev: Update protos to add admin rights field
console,account: Styling updates
console,account: Add functionality to set field widths
console,account: Convert backticks in tooltip messages
dev: Update protos for user login
dev: Enable setting cypress base URL via environment
console,account: Retain unit when deleting value in UnitInput
dev: Reduce cypress diff
console,account: Fix target attribute
api: Bump protoc-gen-go-json to 1.3.0
api: Replace handwritten marshalers in ttnpb with generated ones
api: Remove gogoproto.enum_stringer options and custom Stringers
api: Keep PHYVersion rendering as compatible as possible
all: Rename pkg/band/testdata files
api: Remove device state nullability
all: Remove device state nullability
ns: Add missing current and desired parameters to tests
api: Remove gogoproto.goproto_enum_prefix from GrantType
api: Remove gogoproto.goproto_enum_prefix from ContactType
api: Remove gogoproto.goproto_enum_prefix from ContactMethod
api: Remove gogoproto.goproto_enum_prefix from DownlinkPathConstraint
api: Remove gogoproto.goproto_enum_prefix from State
api: Remove gogoproto.goproto_enum_prefix from LocationSource
api: Remove gogoproto.goproto_enum_prefix from Right
api: Remove gogoproto.goproto_enum_prefix from Minor
api: Remove gogoproto.goproto_enum_prefix from RxDelay
api: Remove gogoproto.goproto_enum_prefix from ADRAckDelayExponent
api: Remove gogoproto.goproto_enum_prefix from ADRAckLimitExponent
api: Remove gogoproto.goproto_enum_prefix from DeviceEIRP
api: Remove gogoproto.goproto_enum_prefix from RejoinPeriodExponent
api: Remove gogoproto.goproto_enum_prefix from RejoinTimeExponent
api: Remove gogoproto.goproto_enum_prefix from RejoinCountExponent
api: Remove gogoproto.goproto_enum_prefix from PingSlotPeriod
api: Remove gogoproto.goproto_enum_prefix from AggregatedDutyCycle
api: Remove gogoproto.goproto_enum_prefix from MACCommandIdentifier
api: Remove gogoproto.goproto_enum_prefix from Class
api: Remove gogoproto.goproto_enum_prefix from DataRateIndex
api: Remove gogoproto.goproto_enum_prefix from PHYVersion
api: Remove gogoproto.goproto_enum_prefix from MACVersion
api: Remove embed and nullable from CreateEndDeviceRequest
api: Remove embed and nullable from UpdateEndDeviceRequest
all: Remove embed and nullable from UpdateEndDeviceRequest
api: Remove nullable from SetEndDeviceRequest
ns: Remove nullable from SetEndDeviceRequest
api: Remove nullable from EndDeviceTemplate
all: Remove nullable from EndDeviceTemplate
api: Remove gogoproto sizer option
js: Add limit to amount of devNonces stored
js: Add testcase for dev nonce limit
dev: Update changelog
js: Add devNonce metrics
ns: Add uplink matching histograms
as: Lower granularity of metadata metrics
all: Update key vault initialization
as: Update end device transaction store
all: Export certificate using request context
as: Allow application packages to register web routes
as: Allow frontends to retrieve end device from registry
api: Bump protoc-gen-go-json to 1.3.1
dcs: Add initial structure
dev: Update Codeowners
dev: Update changelog
dev: Update messages
dev: Update CONTRIBUTING.md
dev: Update changelog and codeowners
is: Improve ""already taken"" errors
is: Include gateway contact in ""eui taken"" error
api: Make administrative and technical contacts public
console,account: Fix safe-inspector copy when using focus lock
console: Allow copying byte values in the event stream
dev: Update changelog
ns: Remove event and error for dropping uplink duplicates
all: Select end device events that propagate to applications
console: Source live frame counts from end device stream
console: Refactor application view

Move from class components to functional components
console: Refactor application add view

Move from class components to functional components
console: Refactor applications view

Move from class components to functional components
console: Refactor applications list view

Move from class components to functional components
console: Refactor applications data view

Move from class components to functional components
console: Refactor applications general settings view

Move from class components to functional components
console: Refactor applications overview view

Move from class components to functional components
console: Refactor applications payload formatters view

Move from class components to functional components
all: Fix dcs startup
console: Integrate Ent diff into OS
console: Integrate notification refactor
console: Integrate notification refactor
console,account: Resolve prop type warning
ns: Remove event and error for dropping uplink duplicates
all: Select end device events that propagate to applications
console: Source live frame counts from end device stream
console: Remove unnecessary link
console: Add iconAlt prop
dev: Update lorawan-application-payload
as: Use payload inference for LoRa Cloud
ns: Fix proto equality
util: Add grpc retry with custom unary interceptor
util: Add test cases for rpcretry unary interceptor
cli: Add cli retry configuration
dev: Update changelog
console: Fix sidebar icon
Fix gateway antenna nil value
data: Update external repositories
all: Bump to version 3.17.2","Added
Add configurable storage limit to device's DevNonce in the JoinServer. Can be configured using the option js.dev-nonce-limit.
Fix copy button in API key modal in the Console.
Enable copying and format transformations of byte values in the event previews in the Console.
Attribute administrative_contact on ""gateway eui taken"" error to help users resolve gateway EUI conflicts.
Add retry capability for cli requests. Can be configured with the options found in retry-config, some of the configuration options are retry-config.max and retry-config.default-timeout.
Changed
Webhook maximum header value length extended to 4096 characters.
Limited the end device event types that are included in application event streams to only application layer events, errors and warnings. Other end device events can still be received when subscribing to end device device events.
Fixed
CLI Completion and Documentation commands no longer try to make a server connection.
When an end device has both NwkKey and AppKey provisioned in the Join Server, NwkKey is used for MIC and session key derivation when activating the device in LoRaWAN 1.0.x. This is per LoRaWAN 1.1 specification.
Gateway Server will no longer report the gateways as being both connected and disconnected at the same time."
"all: Enter release date of version 3.29.1 into the changelog
all: Disable OpenTelemetry metrics
all: Cut off changelog version 3.29.2
all: Bump to version 3.29.2
all: Enter release date of version 3.29.2 into the changelog","Fixed
Memory leak in components which heavily use HTTP clients, such as the Application Server."
"console,oauth: Fix wizard next button title
dev: Update changelog
util: Add identity-server service
console: Add is configuration to api
console: Add is redux primitives
console: Add password validation to user management
js: Fix unsetting KEKs and validation
Revert ""dev: Update formik dependency""

This reverts commit b4924771074fc4b8a27b62acae1b7bb376ba6dbc.
console: Added hint to user entries
as: Avoid using request context in asynchronous processing
as: Do not fill non-request context
gs: Avoid using connection context on disconnect
gs: Fix tests
console: Fix CI
console: Remove unnecessary props
all: Add support for standard library error wrapping
dev: Add DeviceFieldMasks target for js sdk
dev: Use allowedFieldMaskPaths and deviceFieldMasks to js workflow
as: Allow setting websocket read and write buffer sizes
dev: Improve e2e documentation

Reference sections for building assets and starting the stack. Add a note for 'dev:sqlDump'.
util: Remove cookie depedency on Echo
all: Migrate cookie package usage from Echo
console,oauth: Add glossary link component
console: Add glossary id constant module
console,oauth: Add glossary link props to field component
console: Add glossary props to form fields
console: Clean up prop structure for select containers
dev: Update locales
dev: Update snapshots
console,oauth: Fix form styling
console: Add glossary terms for keys
console: Update sdk api definitions
dev: Use `start-single-node` command for CockroachDB image
dev: Run end to end tests when docker-compose.yml changes
util: Check for error type in js sdk

Do not augment the error with request details if it is not of type object
dev: Extend eslint with rule to prefer arrow functions
console,oauth: Disable arrow functions rule for yup
console: Fix navigation to user edit view in user-management
console: Refactor application collaborator add view

Move redux to 'connect.js' file
console: Refactor application collaborator edit view

Remove 'api' usage in the component
dev: Add base collaborators e2e tests
console: Remove snapshot
all: Do not redirect to port 443 if a redirect port is configured
dev: Upgrade Alpine to 3.12
console: Clean up error view
console: Pass application status to full-error-view
console: Revert doc link merge commit

This reverts commit 7034f5bcd3feaa3b5c36eb68d3d7000d68815132, reversing
changes made to e8f8b73675a2fc59c221cbf96e3ade96807a6862.
console: Add truncate functionality to event component
console: Connect event containers to truncate state
console: Limit event entries in the redux store
console,oauth: Update locales
dev: Update changelog
as: Refactor LoRaCloud DAS request parsing
as: Add HTTP client timeout to LoRaCloud DAS
as: Skip payload crypto only if AppSKey is unknown to AS
dev: Update changelog
as: Check status code of LoRaCloud DAS responses before parsing
console: Fix preview of downlink attempt events
console: Improve preview description labels
dev: Update locales
console: Fix imprecise proptype
dev: Update changelog
gcs: Trim extra newlines in LNS credentials
dev: Add public folder cache to js,e2e CI workflows
console: Clean up app payload formatters view

Use arrow functions where possible
oauth: Clean up organization view

Use arrow functions where possible
all: Set cluster namespace on cluster logging
all: Allow logging internal errors
console,oauth: Add password utilities
console: Add password validation to user management
oauth: Clean up create-account view

Use arrow functions where possible
as: Improve webhooks log context
as: Improve MQTT error handling
gs: Improve MQTT error handling
all: Add task finished callback
gs: Wait for upstream tasks to finish
gs: Ensure downlink handler is awaited on connection closure
ns: Fix NACK handling
dev: Update CHANGELOG
ns: Nillify PendingApplicationDownlink on NACK
all: Make TLS server name a func of the cluster
ns: Avoid sending NACK on timeouts
dev: Fix mage
console,oauth: Add glossary link component
console,oauth: Add styling fixes for field labels
console: Add glossary links to form fields
dev: Update locales
dev: Update changelog
ns: Fix application uplink queue
dev: Update CHANGELOG
all: Bump to version 3.10.1","Added
More password validation rules in the user management form in the Console.
Changed
Limitation of displayed and stored events in the Console to 2000.
Application Server will unwrap the AppSKey if it can, even if skipping payload crypto is enabled. This is to avoid upstream applications to receive wrapped keys they cannot unwrap. For end-to-end encryption, configure Join Servers with wrap keys unknown to the Application Server.
More precise payload labels for event previews in the Console.
Fixed
Next button title in the end device wizard in the Console.
Navigation to the user edit page after creation in the Console.
The port number of the http.redirect-to-host option was ignored when http.redirect-to-tls was used. This could lead to situations where the HTTPS server would always redirect to port 443, even if a different one was specified.
If the HTTPS server is available on https://thethings.example.com:8443, the following flags (or equivalent environment variables or configuration options) are required: --http.redirect-to-tls --http.redirect-to-host=thethings.example.com:8443.
Status display on the error view in the Console.
Event views in the Console freezing after receiving thousands of events.
Wrong FPort value displayed for downlink attempt events in the Console.
Network Server sending duplicate application downlink NACKs.
Network Server now sends downlink NACK when it assumes confirmed downlink is lost.
Network Server application uplink drainage.
Release notes
Docker images
docker pull thethingsnetwork/lorawan-stack:3.10
docker pull thethingsnetwork/lorawan-stack:3.10.1"
"all: Add auth token type and id to logs
api: Add collaborator log fields
is: Add user ID to request logs
console: Add registration types to device creation
console: Fix progress hint in device repo form
console: Fix manual device form breadcrumb link
console: Add breacrumb to device repo form
console: Fix device repository mentions
dev: Extend device creation tests
console: Fix device creation toast message
console: Fix device repository hint message
console: Persist join_eui between multiple device creation
dev: Update locales
dev: Disable video for e2e runs
oauth: Add modal container to account scaffold
oauth: Add new overview and routing
dev: Extend webpack dev server proxies for blob assets
console,oauth: Add profile picture component
oauth: Add profile picture container
oauth: Add profile card container
oauth: Add profile settings form container
oauth: Update redux primitives for updating users
oauth,console: Extend file input component for image uploads
console,oauth: Add check for null values to field component
console,oauth: Add profile picture prop type
oauth,console: Add selector utility for profile pictures
oauth: Add profile settings view
console,oauth: Update shared messages
dev: Add md5 package
account: Remove session cookies associated with unknown sessions
is: Delete user session when deleting a user
account: Make user store logic more consistent
console,account: Fix handling of null values for fields
util: Extend get user function to retrieve new profile picture
dev: Add cypress-file-upload package
console,account: Add test id to collapse component
account: Fix change password messages
dev: Add test image to cypress fixtures
dev: Update end-to-end tests
account: Add account deletion notification to login view
dev: Change dev user email address
console,account: Improve email validation message
dev: Update locales
dev: Update changelog
gs: Set value in instantiation
dev: Add UplinkToken to Redis codec util
gs: Lock scheduler state for writing in schedule routines
dev: Update changelog
console: Add RSSI value to message events
console: Update footer link
console: Fix device repository form submission
console: Clean up device repo validation schema
dev: Fix profile picture filename assertion
console: Update side navigation hover styling
console: Add highlight for frame counter
console: Fix possible token request duplication
console: Add dynamic style for byte input
all: Bump to version 3.11.1","Added
Profile settings view to the Account App.
Functionality to change basic profile information, such as name, email address and profile picture.
Functionality to update the account password.
Functionality to delete the account.
Changed
Improved logging.
Fixed
Synchronization in Gateway Server scheduler that caused race conditions in scheduling downlink traffic.
Release notes
Docker images
docker pull thethingsnetwork/lorawan-stack:3.11
docker pull thethingsnetwork/lorawan-stack:3.11.1
docker pull ghcr.io/thethingsnetwork/lorawan-stack:3.11
docker pull ghcr.io/thethingsnetwork/lorawan-stack:3.11.1"
"console: Fix Network Server field mask validation
all: Bump to version 3.10.6","Fixed
The inability to see individual end devices in the Console due to field mask errors.
Release notes
Docker images
docker pull thethingsnetwork/lorawan-stack:3.10
docker pull thethingsnetwork/lorawan-stack:3.10.7
docker pull ghcr.io/thethingsnetwork/lorawan-stack:3.10
docker pull ghcr.io/thethingsnetwork/lorawan-stack:3.10.7"
"all: Bump to version 3.0.1
dev: Get rid of custom test logger
dev: Upgrade to Go 1.12
all: Temporarily replace echo dependency with fork
dev: Remove Println
ns: Use modulo for downlink channels
api: Implement explicit enum marshalers and unmarshalers
ci: Add filesystem and network plugs to our snap
all: Bump to version 3.0.2","Upgraded Go to 1.12
Fixed streaming events over HTTP with Gzip enabled
Fixed resetting downlink channels for US, AU and CN end devices
Fixed rendering of enums in JSON
Fixed the permissions of our Snap package
Docker images
docker pull thethingsnetwork/lorawan-stack:latest
docker pull thethingsnetwork/lorawan-stack:3
docker pull thethingsnetwork/lorawan-stack:3.0
docker pull thethingsnetwork/lorawan-stack:3.0.2"
"console: Rename grpc field description variable
util: Fix device merge for empty objects
dev: Update locales
console: Add default option for device payload formatters
doc: Update changelog
console: Fix resetting payload formatters value after submit
util: Set default value for device formatters
console: Change default label for device payload formatters
console: Update warning message
console: Improve resilience of logout operation
dev: Update vulnerable websocket-extensions module
console: Prevent auth flow loops due to invalid access tokens
doc: Update changelog
is: Fix application api key deletion event
is: Fix gateway api key deletion event
is: Fix organization api key deletion event
is: Fix user api key deletion event
doc: Update changelog
console: Fix organization api key deletion
doc: Update changelog
doc: Update glossary terms and css
dev: Use separate configuration for docker
doc: Update references to stack config using docker
dev: Add guide to start development build of the stack
cli: Only initialize Redis Mutex for components that use it
doc: Clarify instructions on GOPATH
dev: Update goreleaser to v0.138.0
console: Fix application description validation
console: Adjust owners-select warning message
dev: Update locales
dev: Fix flaky error test
doc: Update CHANGELOG
cli: Support setting end device location
util: Fix AU915 1.0.2-a max ADR data rate
doc: Update CHANGELOG
console: Fix timezones issue in claim auth code form
console: Add component translations
all: Support service discovery via SRV records
doc: Add search
doc: Add config for gh pages
cli: Default to SNAP_USER_COMMON for config in snap
all: Remove obsolete logger option errors
dev: Update attribute field description
console: Set device attributes in general settings
util: Fix broken stories
doc: Update CHANGELOG
console: Fix device events stream restart
doc: Update changelog
cli: Fix reading stdin from pipes
console: Add tooltip to event
doc: Update changelog
doc: Fix changelog
all: Use gRPC resolver for service discovery
as: Use discovery via resolver
util: Defer subscribing to events until first subscriber
console: Adjust fetch-table

Add support for custom tabs
console: Add admin tab to the applications table
console: Add admin tab to the gateways table
dev: Update locales
doc: Update changelog
doc: Fix device template section
doc: Add guide to connect Ursalink UG8X
doc: Fix figure css
console: Add configuration form
console: Add basic settings form
console: Add application settings form
console: Add network settings form
console: Add join settings form
console: Add device wizard
util: Add skip_payload_crypto to device map
console: Add device wizard prompt component
console: Adjust prompt component

Make sure that approve/cancel callbacks are called during the next render
console,oauth: Add useBeforeUnload hook
console: Fix device description field text
console: Remove device-data-form
doc: Update changelog
console,oauth: Fix stepper styling

increase top/bottom padding
console: Fix device wizard

strip NS values when not setting activation mode
dev: Remove unused mac version description
console,oauth: Fix stepper styling
console: Add skip_payload_crypto to device general settings
dev: Update locales
doc: Add intercom
doc: Add google analytics
doc: Add intercom and google analytics to Changelog
doc: Update gh pages config
console: Allow creating gateways without frequency plan
doc: Update changelog
doc: Fix changelog
doc: Fix changelog
doc: Add Azure integration guide ()

* doc: Add Azure integration guide

* fixup! doc: Add Azure integration guide

* fixup! doc: Add Azure integration guide
js: Use NetID in join_accepted_total metric
is,console: Fix redirects for Echo groups without trailing slashes
util: Fix handling of X-Forwarded-For header
util: Log real IP address
doc: Add emojicom feedback
doc: Update webhooks
all: Add observability to Redis package
console,oauth: Add autoComplete prop to input component
console,oauth: Set autoComplete prop in forms
console: Use user name in profile dropdown
console: Use user name in overview greeting
console: Fix comment typo
dev: Update locales
doc: Update changelog
util: Update profile dropdown test
doc: Add LORIX One gateway guide
fixup! doc: Add LORIX One gateway guide
console: Set default js and grpc values in formatter form
console,oauth: Extend icons list

add expand icons
console,oauth: Add form section component
console: Hide advanced settings in join step
console,oauth: Add form sub-title component
console,oauth: Extend form storybook
dev: Update locales
doc: Update changelog
doc: Document MQTT version
console: Fix user form validation

make primary_email_address required in validation schema
is: Give more information about conflicting EUIs on create
console: Fix join settings form validation

make root_keys required in validation schema
console,oauth: Extend error utils

add isConflictError function
console: Fix application link fetching

handle link result on 409 responses when fetching link stats
all: Bump to version 3.8.5","Added
Option to reset end device payload formatters in the Console.
Service discovery using DNS SRV records for external Application Server linking.
Functionality to set end device attributes in the Console.
Event description tooltip to events in the Console.
CLI support for setting and unsetting end device location (see --location.latitude, --location.longitude, --location.altitude and --location.accuracy options).
Functionality to allow admin users to list all applications and gateways in the Console.
Ursalink UG8X gateway documentation.
Intercom, Google Analytics, and Emojicom feedback in documentation.
LORIX One gateway documentation.
Display own user name instead of ID in Console if possible.
Option to hide rarely used fields in the Join Settings step (end device wizard) in the Console.
Changed
JSON uplink message doc edited for clarity.
The CLI snap version uses the $SNAP_USER_COMMON directory for config by default, so that it is preserved between revisions.
Defer events subscriptions until there is actual interest for events.
End device creation form with wizard in the Console.
Removed
Requirement to specify frequency_plan_id when creating gateways in the Console.
Fixed
Endless authentication refresh loop in the Console in some rare situations.
Logout operation not working properly in the Console in some rare situations.
Handling API key deletion event for applications, gateways, organizations and users.
Organization API key deletion in the Console.
CLI now only sends relevant end device fields to Identity Server on create.
Maximum ADR data rate index used in 1.0.2a and earlier versions of AU915 band.
End device events stream restart in the Console.
CLI was unable to read input from pipes.
Timezones issue in claim authentication code form, causing time to reverse on submission.
Release notes
Docker images
docker pull thethingsnetwork/lorawan-stack:3.8
docker pull thethingsnetwork/lorawan-stack:3.8.5"
"all: Enter release date of version 3.25.1 into the changelog
console: Add Soil object to event view.

In the new Soil object from the normalized payload schema was
added to the Application Server. This commit shows that new object in
the event view of the Console.
console: Clean event preview UI of normalized uplink messages

Remove FPort, data rate, SNR and RSSI from the preview of normalized
uplink messages. This info clutters the UI and is redundant here since
these values don't change between the normal uplink message and the
normalized uplink. The user can continue to view this info at a glance
in the correspondent uplink event or in the event details.
gs: Fix linting issues
gs: Remove variable shadowing
gs: Use payload hash for repeated uplinks
gs: Make repeated uplinks handling atomic
gs: Use atomic.Pointer
gs: Reorder connection fields
gs: Do not override timestamps on periodic update
api: Add transmission acknowledgment counters
gs: Add transmission acknowledgment counters
gs: Use data rate for repeated uplink detection
gs: Add stream states
gs: Fix rate limit firewall race condition
gs: Provide stream state in the UDP frontend
gs: Increase connection timeouts in tests
console: Show reactivation warning only on unhealthy
ns: Remove unused invalidation key
ns: Update LinkADRReq coding style
ns: Unify no change indices in macspec
ns: Fix SF12BW500 demodulation floor
ns: Fix linting errors
ns: Use desired channels data rate range in ADR
ns: Move tests out of the mac package
console: Improve DateTime error logging in Sentry
console: Update documentation links
util: Add HTTP tracing middleware
console: Format code
gs: Use iota in message stream definition
ns: Always validate ADR parameters on command generation
ns: Decompose ADR algorithm
console: Fix rendering of DateTime component to fix formatting issues
ns: Add ADR uplinks test
ns: Add ADR data range test
ns: Add ADR Tx power range test
ns: Add ADR margin test
ns: Fix ADR uplinks frame counter comparison
ns: Add ADR instability test
ns: Stabilize transmission power in unoptimal conditions
ns: Add ADR adapt data rate test
ns: Support lowering the transmission power index to zero
ns: Add ADR adapt transmission power index test
ns: Add ADR adapt number of transmissions test
dev: Update changelog
all: Fix LoRa standard channel data rate
ns: Enable standard channel in fixed channel plans
all: Generate CFList from desired channels
ns: Simplify desired channels generation
ns: Enable standard channel by default in fixed channel plans
ns: Fix linting warning
util: Add `rpcserver` interceptors
util: Add `rpcclient` interceptors
util: Tidy go mod after removing `grpc_opentracing`
dev: bump @sideway/formula from 3.0.0 to 3.0.1

Bumps [@sideway/formula](https://github.com/sideway/formula) from 3.0.0 to 3.0.1.
- [Release notes](https://github.com/sideway/formula/releases)
- [Commits](https://github.com/sideway/formula/compare/v3.0.0...v3.0.1)

---
updated-dependencies:
- dependency-name: ""@sideway/formula""
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>
util: Add mux tracing middleware
dev: bump axios from 1.1.2 to 1.4.0

Bumps [axios](https://github.com/axios/axios) from 1.1.2 to 1.4.0.
- [Release notes](https://github.com/axios/axios/releases)
- [Changelog](https://github.com/axios/axios/blob/v1.x/CHANGELOG.md)
- [Commits](https://github.com/axios/axios/compare/v1.1.2...v1.4.0)

---
updated-dependencies:
- dependency-name: axios
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump eslint-plugin-jsdoc from 39.3.2 to 43.1.1

Bumps [eslint-plugin-jsdoc](https://github.com/gajus/eslint-plugin-jsdoc) from 39.3.2 to 43.1.1.
- [Release notes](https://github.com/gajus/eslint-plugin-jsdoc/releases)
- [Changelog](https://github.com/gajus/eslint-plugin-jsdoc/blob/main/.releaserc)
- [Commits](https://github.com/gajus/eslint-plugin-jsdoc/compare/v39.3.2...v43.1.1)

---
updated-dependencies:
- dependency-name: eslint-plugin-jsdoc
  dependency-type: direct:development
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: Fix jsdoc comments
dev: bump @formatjs/intl-listformat from 6.3.6 to 7.2.2

Bumps [@formatjs/intl-listformat](https://github.com/formatjs/formatjs) from 6.3.6 to 7.2.2.
- [Release notes](https://github.com/formatjs/formatjs/releases)
- [Commits](https://github.com/formatjs/formatjs/compare/@formatjs/intl-listformat@6.3.6...@formatjs/intl-listformat@7.2.2)

---
updated-dependencies:
- dependency-name: ""@formatjs/intl-listformat""
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: Address cypress ambiguity
api: Add dynamic ADR channel steering settings
api: Support FieldIsZero for the channel steering settings
ns: Ensure dynamic ADR limits are based on the narrow channel limits
ns: Add channel steering settings to API validation
ns: Add note regarding transmission power margin adaptations
ns: Use allowed data rate indices instead of rejected indices
ns: Add narrow channel steering
ns: Move minimum data rate clamping to data rate adaptation function
ns: Steer device channels using min and max data rate indices
dev: Update changelog
dev: bump redux from 4.2.0 to 4.2.1

Bumps [redux](https://github.com/reduxjs/redux) from 4.2.0 to 4.2.1.
- [Release notes](https://github.com/reduxjs/redux/releases)
- [Changelog](https://github.com/reduxjs/redux/blob/master/CHANGELOG.md)
- [Commits](https://github.com/reduxjs/redux/compare/v4.2.0...v4.2.1)

---
updated-dependencies:
- dependency-name: redux
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump @babel/plugin-proposal-decorators from 7.18.6 to 7.21.0

Bumps [@babel/plugin-proposal-decorators](https://github.com/babel/babel/tree/HEAD/packages/babel-plugin-proposal-decorators) from 7.18.6 to 7.21.0.
- [Release notes](https://github.com/babel/babel/releases)
- [Changelog](https://github.com/babel/babel/blob/main/CHANGELOG.md)
- [Commits](https://github.com/babel/babel/commits/v7.21.0/packages/babel-plugin-proposal-decorators)

---
updated-dependencies:
- dependency-name: ""@babel/plugin-proposal-decorators""
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: bump yargs from 17.7.1 to 17.7.2

Bumps [yargs](https://github.com/yargs/yargs) from 17.7.1 to 17.7.2.
- [Release notes](https://github.com/yargs/yargs/releases)
- [Changelog](https://github.com/yargs/yargs/blob/main/CHANGELOG.md)
- [Commits](https://github.com/yargs/yargs/compare/v17.7.1...v17.7.2)

---
updated-dependencies:
- dependency-name: yargs
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: Bump axios from 0.26.1 to 1.4.0 in /sdk/js

Bumps [axios](https://github.com/axios/axios) from 0.26.1 to 1.4.0.
- [Release notes](https://github.com/axios/axios/releases)
- [Changelog](https://github.com/axios/axios/blob/v1.x/CHANGELOG.md)
- [Commits](https://github.com/axios/axios/compare/v0.26.1...v1.4.0)

---
updated-dependencies:
- dependency-name: axios
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: Bump mkdirp from 1.0.4 to 3.0.1

Bumps [mkdirp](https://github.com/isaacs/node-mkdirp) from 1.0.4 to 3.0.1.
- [Release notes](https://github.com/isaacs/node-mkdirp/releases)
- [Changelog](https://github.com/isaacs/node-mkdirp/blob/main/CHANGELOG.md)
- [Commits](https://github.com/isaacs/node-mkdirp/compare/v1.0.4...v3.0.1)

---
updated-dependencies:
- dependency-name: mkdirp
  dependency-type: direct:development
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
dev: Bump url-template from 2.0.8 to 3.1.0

Bumps [url-template](https://github.com/bramstein/url-template) from 2.0.8 to 3.1.0.
- [Release notes](https://github.com/bramstein/url-template/releases)
- [Commits](https://github.com/bramstein/url-template/compare/v2.0.8...v3.1.0)

---
updated-dependencies:
- dependency-name: url-template
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
all: Rename narrow mode to LoRa narrow mode
all: Cut off changelog version 3.25.2
all: Bump to version 3.25.2
gs: Allow compare-and-swap semantics for gateway connection stats
gs: Always store the earliest connection time
all: Enter release date of version 3.25.2 into the changelog","Added
Experimental channel steering API, which allows steering end devices from the wide (250kHz or 500kHz) channels towards the narrow (125kHz) channels.
This API is mainly relevant for end devices operating in the US915 and AU915 regions, as they may join via a wide channel, but users may want to steer them towards the narrow channels.
The new settings can be found under mac-settings.adr.mode.dynamic.channel-steering.
mac-settings.adr.mode.dynamic.channel-steering.mode.lora-narrow steers the end devices towards the LoRa modulated narrow channels.
mac-settings.adr.mode.dynamic.channel-steering.mode.disabled does not steer the end devices - end devices are left to operate in their currently active channels, wide or narrow.
The default behavior is to avoid steering the end devices, but this is subject to change in future versions. Consider explicitly specifying a certain behavior (lora-narrow or disabled) if you depend on not steering the end devices.
Changed
Uplink and downlink message frequencies are now validated and zero values are dropped.
Such traffic would have always been dropped by the Network Server, but it is now dropped in the Gateway Server.
Simulated uplink traffic now requires a frequency value as well.
Fixed
Multiple ADR algorithm bugs:
An off-by-one error which caused the ADR algorithm to not take into consideration the signal qualities of the uplink which confirmed a parameter change. In effect, this fix improves the quality of the link budget estimation.
A flip-flop condition which caused the algorithm to swap back and forth between a higher and a lower transmission power index every 20 uplinks. In effect, this fix will cause the algorithm to change the transmission power index less often.
A condition mistake which caused the algorithm to avoid increasing the transmission power if it would not completely fix the missing link budget. In effect, this will cause the algorithm to increase the transmission power in situations in which the link budget deteriorates rapidly.
In fixed channel plans such as US915 and AU915, the the associated wide (500kHz) channel is now enabled by default."
"all: Bump to version 3.5.0
console: Add step param to input fields
dev: Update react-router-dom
console,oauth: Refactor breadcrumbs to use portals
console: Make sidebar navigation responsive
console,oauth: Fix sidebar item expand limitation
console: Scroll to top on route change
console,oauth: Prevent scrolling when mobile side nav is open
dev: Update changelog
console: Parse numbers to floats in input
console,oauth: Remove icons from breadcrumb component
console: Remove icon props from breadcrumbs
ns: Clarify logging statements
dev: Fix dev data directory in dbErase target
as: Improve MQTT error handling
gs: Refactor upstream handling
api: Add GsPba service
gs: Move gc goroutine from sub-band to scheduler
gs: Adapt to new API
as: Use canceled code when reseting links
as: Skip unsubscribe channel on link shutdown
gs: Load frequency plan on downlink if not configured for gateway
console,oauth: Improve logo display logic and styles
doc: Fix mixed blockquotes
gs,as: Fix MQTT error handling in tests
ns: Return device context as part of transaction
gs,as: Update MQTT connection for Paho 1.2.0

This can be reverted when the next version of Paho is released.
gs: Add gateway identifiers to HandleUplink
console: Fix initial expanding of sidebar items for non-exact routes
is: Add packetbroker to blacklisted identifiers
api: Add Packet Broker Agent cluster role
dev: Add pba as commit prefix
all: Add NetID numeric (un)marshaling
util: Decouple unmarshal uplink identifiers from ttnpb
as: Use default task backoff for dialing
dev: Ignore ca.pem
all: Add DevNonce marshaling to number
gs: Use cluster as default handler name
gs: Fix using right handler when there are multiple
cli: Set ChannelRSSI to RSSI per API spec
gs: Fix busy upstream handler logging
all: Suppress task failure on context cancellation
gs: Start listeners in tasks to avoid races
as: Start listeners in tasks to avoid races
console,oauth: Extend styling mixins
console,oauth: Add responsive styling to breadcrumbs
console,oauth: Add responsive styles to datasheet
console,oauth: Add responsive styles to events component
console,oauth: Add responsive styles to footer component
console,oauth: Extend responsive styles of modal component
console,oauth: Fix sidebar responsive styles
console: Fix responsive styling of radio button group
console,oauth: Add responsive styles to table component
console,oauth: Add responsive styling to tab component
console: Add responsive styling to entity title section
console: Add responsive styles to key value tag component
console: Add responsive styles to fetch table container
console: Improve gateway table column distribution
console: Prevent sticky header in landscape mobile views
console: Add repsonsive styles to mqtt integrations view
console: Add responsive styling to application link view
console: Add responsive styling to application overview
console: Add responsive styling to device general settings view
console: Add responsive styling to device overview
console: Add responsive styles to device payload formatter view
console: Add general bottom padding to main view
console: Improve respnsive styling of login view
console: Remove unnecessary styling from organization data view
console: Add responsive styling to overview view
oauth: Add responsive styling to login view
console,oauth: Fix scrollbar height
console: Fix mobile menu logout issue
console: Improve tab scroll shadow
console: Improve z-index variables
console: Improve responsive styling of fetch table
console: Remove unnecessary styles from add form views
console: Fix scrollbar issue in firefox
console: Add missing exact props to side navigation items
console: Fix scrolling issue of mobile sidebar menu
doc: Update changelog
ns: Retrieve matched device context from registry
as: Use NS timestamp in LoRaCloud DAS

NS UTC time is should be used instead of gateway counter
oauth: Fix responsive styling of views
doc: Fix markdown rendering of HTML
all: Generate session key ID in interop when Join Server doesn't
as: Do not try to get AppSKey when it is generated by interop
all: Add support for Redis custom pool size
all: Ensure shared TCP listeners do not race
all: Close HTTP servers on component closure
all: Bump to version 3.5.1","Release notes
Docker images
docker pull thethingsnetwork/lorawan-stack:latest
docker pull thethingsnetwork/lorawan-stack:3
docker pull thethingsnetwork/lorawan-stack:3.5
docker pull thethingsnetwork/lorawan-stack:3.5.1"
"all: Enter release date of version 3.24.0 into the changelog
dcs: Support mTLS with The Things Join Server
dev: Update changelog
dev: Regenerate messages
dcs: Fix error messages
dcs: Handle bad request from TTJS gracefully
dcs: Deprecate dcs.edcs.network-server.hostname config option
dcs: Configure AS-ID and set on claim
util: Support getting client certificates by label
ns: Add ns.interop.id for use as NSID
dcs: Replace dcs.edcs.network-server.home-ns-id by dcs.edcs.ns-id
account: Prevent open redirects after login
all: Cut off changelog version 3.24.1
util: Support key vault cache TTL for errors
util: Fix key unwrap caching
dev: Fix CHANGELOG
dev: Fix CHANGELOG
all: Bump to version 3.24.1
console: Fix desired rx1 settings
all: Enter release date of version 3.24.1 into the changelog","Added
Network Server ID (NSID) used for Backend Interfaces interoperability via the ns.interop.id and dcs.edcs.ns-id configuration options.
In the Network Server, ns.interop.id acts as a fallback value for sender-ns-id in Join Server interoperability configuration.
Key vault cache time-to-live for errors configuration option key-vault.cache.error-ttl. This defaults to key-vault.cache.ttl.
Deprecated
Device Claiming Server configuration option dcs.edcs.network-server.home-ns-id. Use dcs.edcs.ns-id instead.
Fixed
Key unwrap caching.
Desired RX1 delay and desired beacon frequency not being possible to set for OTAA devices.
Security
Fix open redirect vulnerability for Console/Account App logins."
"all: Enter release date of version 3.26.1 into the changelog
dcs: Fix EUI ordering
util,console: Fix claiming issues
Update CHANGELOG.md
all: Update gRPC metrics dependency
as: Do not use the NS peer as a label
all: Cut off changelog version 3.26.2
all: Bump to version 3.26.2
all: Enter release date of version 3.26.2 into the changelog","Added
New Admin Panel in the Console.
Fixed
Removing user invitations not working in the user management panel for administrators.
Fix payload formatter page launching malformed requests in the Console.
Fix end device claiming issues in the Console and improve error messaging.
HTTP API routes for parsing QR codes for the QR Generator service. We exercise our right to break compatibility with third party HTTP clients since this is a bug.
/qr-code/end-devices/parse is changed to /qr-codes/end-devices/parse.
/qr-code/end-devices/{format_id}/parse is changed to /qr-codes/end-devices/{format_id}/parse."
"Autorelease 0.154.3
Use ThreadLocalRandom correctly. ()

* Use ThreadLocalRandom correctly.

* Add generated changelog entries

* Switch to Random.
[Timelock Partitioning] Part 25: Wire up batch timestamp paxos ()

* Wire in everything.

* checkstyle.

* Fix up order.

* Split out the factories.
[Timelock Partitioning] Part 26: Timestamp paxos test suite. ()

* Add dependency on parameterized suites.

* Parameter injector class that allows us to run via the suite and via the idea.

* batch paxos configs

* PaxosSuite which runs batched and non batched paxos.

* More intuitive logging for the server.

* Introduce suite test set.

* Separate test library and suite implementations.

* Better logging/debug experience.

* Checkstyle.

* better names

* new line.

* Clearer parameter injection usage.

* inline previous impl

* Checkstyle.

* fix up the build.
Revert ""A quick hack to see the viability of table level conflict han… ()

* Revert ""A quick hack to see the viability of table level conflict handling ()""

This reverts commit 5013cc7f5ea15e7d3e0c4fccfb4aff2947273c04.

* Add generated changelog entries

* Add generated changelog entries
Autorelease 0.154.4","Type
Description
Link
Improvement
Use ThreadLocalRandom correctly in TransactionRetryStrategy.
Fix
Revert ""A quick hack to see the viability of table level conflict handling."
"Autorelease 0.155.0
[Conjure Java Runtime] Part 4: Server-Side 308 Construction ()

* Retry targeter

* Redirect Retry Targeter

* Set up exception mapper

* prut

* checkstyle

* Only return base URLs now

* Remove unused logger

* Checkstyle

* Remove static initializer block

* Changelog
Fix changelogs on develop ()

* Fix changelog

* blaargh

* Rename
Autorelease 0.155.1","Type
Description
Link
Improvement
NotCurrentLeaderExceptionMapper now returns 308s correctly if dealing with v2 AtlasDB remoting clients."
"Autorelease 0.158.1
[Conjure Java Runtime] Part 13: SSL in Testing ()

* Docker updates

* TManagers Test

* Protocol game-changing?

* Ete setup

* var security

* Keystores

* Jepsen keystore/truststores

* Typo

* CR comments
Refactorings for old user agent form to new user agent form. ()

* Add generated changelog entries

* Refactorings for old user agent form to new user agent form.

* Fix compile, and address comments.

* Fix more compile errors...

* dependency orderings

* make sure the refactorings runs on the errorprone container

* actually do the exclude

* eurgh
Autorelease 0.158.2","Type
Description
Link
Improvement
Add support to do automatic refactorings from old String user agent to typed UserAgent."
"Autorelease 0.156.1
[Conjure Java Runtime] Part 11: Transformable Polling Refreshables ()

* PollingRefreshable transforms

* Add generated changelog entries

* Revert ""PollingRefreshable transforms""

This reverts commit 53bad854fe3a9b6f346959c9e50ad51d924f7213.

* Cached Transforming Supplier

* Delete pr-4265.v2.yml

* Update Javadoc
[Timelock Partitioning] Part 33: Clearer `LeadershipObserver` ()

* createInstrumentedService -> instrumentService

* Simplify LeadershipObserver creation/lifecycle.

* Fix compile error.
Move LocalPingableLeader out of PaxosLeaderElectionServiceBuilder ()
Create .changelog.yml ()
Additional config to allow allSafeForLogging on transaction manager level ()

* Additional config to allow allSafeForLogging on transaction manager level

* test set up

* better api

* changelog

*  address comments
Autorelease 0.156.2","Type
Description
Link
Improvement
An additional config allSafeForLogging is now added during TransactionManager creation time. If all the initialized transaction managers all have this allSafeForLogging field set to true, all the tableReferences, columnNames and rowNames defined in this transactionManager will be considered safe. Otherwise the newest initialized transaction manager will determine what components are safe and/or unsafe like the current behavior."
"Add generateMapToFullTableNames in TableMappingService

This should fix issue, which was causing
excessive reads from the DB during initialization
of the SweepStrategyManager.
Use ImmutableMap.Builder in AbstractTableMappingService.generateMapToFullTableNames()
Fix-up scripts so that external builds pass ()

* Fix-up scripts so that external builds pass

* [no release notes]

* Fix changelog status message

* Switch to -ne and substitute in MIN_VERSION_WANTED

(cherry picked from commit 362885a1579903d571b0e6a493cd7315e8f05c20)
Update moreutils to 0.60

Also, use a snapshot link to avoid a future version bump breaking all
the builds.

(cherry picked from commit c6d3ce9f4bf4cbb6b2fdcffcbd80f7ab5246df00)","Hotfix release of AtlasDB for an internal product's LTS branch.
Contains:"
"allow clis to set a default path for yaml

also allow cli users to specify the path inside their config file to the
atlas configuration root
use airline for clis
setup gradle to build command line script
rename abstract command helper class
removed extra dependency
Fix range request edge cases
Bring back support for empty range requests

Would rather not support this at all, but we've apparently had this in the API so it's safer to leave them in for now.
Fix empty range support on CQL too
fix silly log message
add tracing support to CassKVS.putUnlessExists
make lock server flickery test flicker less often
fix bad merge that results in dropTables bug
minor javadoc tweak
Upgrade gradle to 2.11
timestamp-impl does not export jmock and junit as compile dependency
Clean up paxos tests better

Make sure none of the threads any of the paxos pieces may
have spawned are still running before considering the test
""cleaned up.""
Fixing CQL port for CQL Tests
doing 90% of the work anyways, might as well update the query optimizer stats
QA-93170 Manage CassandraDaemon and avoid System.exit(0) on deactivation
Restore DEFAULT_JVM_OPTS pre-gradle upgrade
QA-93169 Moving internalTable translation metod to AbstractKeyValueService
QA-93169 CQL nametable translation
CQLKeyValueService Create table if not exists
Removing SimpleStrategy for single datacenter due to incompatibility with EACH_QUORUM default write strategy
Remove unused import
QA-93170 Looking for local dc to determine keyspace topology
QA-93170 CQLSH throw on INSERT IF NOT EXISTS failure
QA-93170 Return internalTableName for getAllTables()
Require keyspace be specified for cassandra config
KeyService teardown invoking close on subclasses
Closing longRunningQuerySession/longRunningQueryCluster
CQLKeyValueServices needs to be instantiated to use threadpool
Limit number of workers for gradle resources
Explicitly set heap size for Cassandra tests
No max worker limit
Gradle max-workers = 2
Travis checking memory
Heap to 1024
add atlas timestamp cli
add license header
Fixing CQLKeyValueService formats
transaction cleanup cli
upgrade source level to java 8
update travis.yml for java 8
Actually clean when not deleting and remove interaction
upgrade to newer version of travis java8

old versions of java8 have backcompat problems with generics
https://github.com/travis-ci/travis-ci/issues/5487
basic titan cli testing setup
Tuning test Cassandra timeouts
cleanup services
Fix option description, refactor cli name, plus nits
fix tab and spacing
QA-93202 Generating warning if row component is of type VAR_LONG, VAR_SIGNED_LONG, SIZED_BLOB
remove unused executor
remove unused import as well
update intellij config

in particular, use javac over ecj
add dagger dependency
renamed old service code to avoid conflicts
stub out basic component/module setup
create module static initializer
implemented module
use injection code for clis
remove old service code
reorg cli packages
allow using non-production services modules
simplified existing test using DI
add licenses
nit fixes
QA-93202 Generating error for bad first row components
Rename AllTests to AllLeaderElectionTests

We need to do this for reasons.
atlasdb-exec project for Generate from Schema Cli
Adding logging sytem to atlasdb-exec
refactor to fit new CLI stuff
Fixing licence violation for RegenerateCodeForSchemas
RegenerateCodeForSchema: changing to System call to logger calls
add fast forwarding to PersistentTimestampService
seperate into modules
seperate modules
rename to config module
nit fix
made a config immutable builder
renamed services factory and deleted old code
added test runner infrastructure
add licenses
Test delegating by table
added in-memory cli test runner
Check namespace matching
Prioritises tables over namespaces when splitting
Table splitting defaults to the first kvs in the list
Early return when finding delegate
Move around delegate generating code
Extract out common table metadata insertion code
Use optionals to do fallthrough
Clean up tests
Update license
QA-93202 More detailed error log
Correct formatting
Fix checkstyle
add test plus unneccesitate allocating more after a fast forward
fix persistenttimestampservice tests
fast forward and fix validation
Remove unused class
update gitignore
renamed lock to lockWithFullLockResponse

Change-Id: Iad66b77a8cfe8e53d7303574e29c6597df9f839f
remove redundant api in remote lock server

Change-Id: Icdca076d7acc10cba23a18d220fa1b102eab2d37
change the internal representation of LockClient

Change-Id: Ia4e741e746fdbbc186cc6027e5f6da10373562df
remove ambiguous methods

Change-Id: Idff996c666f3f9fdfcc3cab82df379e211bbc4d0
allow more lock test wiggle room to prevent flakes
minor refactor
move table splitting test to test directory
Update sweep job to record minimum sweep timestamp
Partial refactor of sweeper test to reduce code replication, this setup code should probably be abstracted away for use else were, not specific to sweeping
Further refactoring tests to just return the keystore and do any clean up necessary
Fix checkstyle complaint
Fix table deletion logic now all Cassandra sweeper tests are passing
Add sweeper test for CQL driver and CQL get method
add ability to fetch datetime from punch given a timestamp
allow advisory locking on lightweight locks
basic atlas console for querying atlas from groovysh
add sweep cli
avoid copy bytes for printing
fixed failing unit test
do not sleep while running the sweep cli
configurable batching and sleeping
make HeldLockToken work with jackson
update PuncherStore interface and TimestampCommand
added licenses
Only write sweep time stamp to priority table a single time per run
nits and such
improved truncate that better matches cassandra internals
more time less flakes

if there are still lock flakes we will need to control the lock server
  time
Switched logic to hold minimum timestamp in the progress table as well and added tests
fix tests by adding a cleaner, thereby adding a puncher","Release beta version of Atlas Console (atlas querying from groovy shell)
Release beta version of Atlas CLIs (running common tasks from command line)
Bug Fixes"
"Autorelease 0.154.1
Remove some AtlasDB allocations ()

* Remove some AtlasDB allocations

Looking at a profile for an internal service, I noticed that there were
many allocations near the top of the profile.

Over 5 minutes, AtlasDB methods allocated about 25GB of StringBuilders,
for example :) - inside the metrics thing.

* CassandraClientFactory does not create a new SSLContext for each
connection

Right now CassandraClientFactory creates a new SSLContext for each
connection. This takes a very long time - internally, we see over 2
minutes dedicated to this task.

* Fix tiny bug

* Checkstyle

* Add generated changelog entries

* Add escape valve comment
Autorelease 0.154.2","Type
Description
Link
Improvement
AtlasDB now allocates considerably fewer objects and less memory. In particular, metrics registry and lock lease implementations have been streamlined."
"rename FileUtils to TempFileUtils
use guava utility method naming convention
move up LongTermSerialized annotation for Pair
improve getRangeWithPageCreator

- fixes off by one errors
- simplifies the code","Fixed an off by one error in CassandraKeyValueService
FileUtil's was renamed to TempFileUtils and other utilities were renamed to use guava naming conventions"
"Autorelease 0.154.2
Mark node as not eligible for leadership on shutdown. ()
Autorelease 0.154.3","Type
Description
Link
Improvement
Improve graceful shutdown logic by marking the node as not eligible for leadership."
"Update docs to use submodules for the build
revert to original json serializer for atlas console ()
Modify circle to push docs with each successful build
Having tests run in serial
Update publish script to handle case where there are no changes to publish
ignore test that stinks on slow CI
Move spammy logging down to DEBUG from INFO

Every pool acquisition / release should not be at INFO level -- this should be at most DEBUG and more likely at TRACE level given the very frequency of use.
Update run-circle-tests.sh
unwrap ClientCreationFailedException in CassandraClientPool to check for connection exception
consider ClientCreationFailedException as a connection exception
fixed test with isRetriableException
add opt-in stream store block compression
(internal ticket QA-91866)

Contains an implicit assumption (via compression block size setting)
that despite using the stream store users will very often have
stored streams of less than a single block in size.

This block size is meant to be an adequate balance between overfetching
beyond a stream block, being able to build up an adequate dictionary
for a good compression ratio, and the expected long tail of many-block
large stream fetches.

We could open this up for more direct user configurability,
but in all cases I could think of except laziness, the user who
would most benefit from messing with the compression block size
should actually not use this feature and instead implement compression
on their value level themselves.
Lower log level from INFO to DEBUG

This log line is hit every time an Atlas instance is shut down and is below the bar for logging during normal operations
Rebasing change to docs onto develop
add license generation to eclipse
Revert ""revert to original json serializer for atlas console""

This reverts commit ad735528fc412b3e42c8cd3910bdc81742ea64de.
factor out and ignore CQL tests; wait for test cass to start before running tests
factor out test cass configs
add pool refresh interval to key value service config
fix incorrect logging in CassandraClientPool
add banned host backoff time to kvs config
Update docs to point directly to source in github for editing
Removed unnecessary Cassandra test services
Fix checkstyle errors
Avoid removing containers after scripts/ete.sh because docker does not have permissions https://discuss.circleci.com/t/docker-error-removing-intermediate-container/70
Set x on run-circle-tests.sh to display what is being run in each container
Added build skip to docs commits issued by circle
stream table cleanup
Output the AtlasDB Version to stdout when the library is initialized

* Writes the version to META-INF/atlasdb.version, which is then
  read by AtlasDbVersion in all of the supported AtlasDbFactory's.
* Add server distribution building capability

Unfortunately, there was no other seemingly clean way of print this
information to the console which would easily affect all instantiations.

See for a follow on issue to make this initialization path less
scattered.
fix console range iteration edge case ()
adjust lock test waiting to avoid timeouts
move to running CI only on circle
Increase docker cassandra test timeout
InMemoryKVS no longer violates ACID

At present, IMKVS does not copy arrays that are written to it. This means that
you are liable to see bad behaviour by doing expected safe things like
modifying an array that you used in a transaction (after the transaction
is committed?!)

InMemoryKVS. As much as the InMemoryKVS is designed for testing only,
it's still pretty rubbish. For example, it meant that was exhibited
on the streamstore method that wrote in multiple transactions when using
an in-memory kvs.
Increase docker cassandra test timeout to 10 seconds
Fix check for cassandra container java minor version
Cassandra container image 2.6
Updating contributing docs using the mechanism described
Fix docker nodetool address to work internally
Update contributing.rst
atlas fixes from findbugs

notable actual important fixes to:
- sweeping
- cassandra compaction after sweeping

Change-Id: Ida321ffa423774909cbc3631f07c9cd6adb6bc84
allow users to start up with degraded cassandra clusters
cassandra pool verify partitioner on node entrance
Lower log level for Cassandra pool open/close
disallow multiple tables in C* with different casing ()

* disallow multiple tables in C* with different casing

* added test for casing on C*

* use dockerized C* for test","Disallow multiple capitalizations of C* tables -
Fix memory leaks in InMemory KVS store -
AtlasDB now outputs it's version on start up -
Cassandra start up checks improved -
Add opt-in stream store block compression (QA 91866 internal) -"
"Autorelease 0.153.1
CachingTransaction correctly handles cache misses in #getRows. ()

* CachingTransaction correctly handles cache misses.

* Add generated changelog entries

* Fixup changelog

* Add generated changelog entries
Autorelease 0.153.2","Type
Description
Link
Improvement
CachingTransaction correctly handles cache misses in #getRows invocations with a known set of columns."
"Autorelease 0.153.4
Upgrade to Gradle 5 ()

* Upgrade AtlasDB gradle to 5.6.1

* Upgrade AtlasDB to gradle 5

* Fix some gradle

* Removed autoservice versions

* upgrade auto-service
Expose TimeLockAgent#shutdown for graceful shutdown. ()

* Expose TimeLockAgent#shutdown for graceful shutdown.

* Add generated changelog entries
Autorelease 0.153.5","Type
Description
Link
Improvement
Expose TimeLockAgent#shutdown for graceful shutdown."
"Autorelease 0.153.5
AgnosticLightResultSetImpl protect against double close ()

* Add generated changelog entries

* [no release note] AgnosticLightResultSetImpl protect against double close
Do not log CassandraClients. ()

* Do not log CassandraClients.

* Changelog.
Autorelease 0.153.6","Type
Description
Link
Improvement
AgnosticLightResultSetImpl is now resilient to being closed multiple times; previously, we would close the most recent span (whatever that was) when this was closed, leading to unexpected traces.
Improvement
Do not log CassandraClients."
"Allow overriding JDBC URL for Oracle () ()

* Allow overriding JDBC URL for Oracle

Also remove getDefaultUrl() from DBType

* Fix release note syntax

(cherry picked from commit e5c1e8ca3b6dda5408e9c2c9139ec6c6dca3879f)
Fix/sweep results cells examined () ()

* Fix/sweep results cells examined ()

* Add test demonstrating SweepResults.getCellTsPairsExamined incorrect

* Fix SweepResults.getCellTsPairsExamined

* Fix CellsToSweepPartitioningIteratorTest use of cellsExaminedSoFar

* update BatchOfCellsToSweep.numCellTsPairsExamined javadoc

* Add release notes

* Fix checkstyle

* Release note: explain the issue that was fixed

* Cassandra getCandidateCellsForSweeping ()

* revert cassandra sweep changes ()

* revert cassandra sweep changes

* add back some tests

* move tests to cassandra

* fix batchsize

* newline

* delete tests

* release notes

* Nziebart/cassandra sweep batch size ()

* cassandra default sweep candidate batch size

* docs

* checkpoint

* checkpoint

* finish up

* restore tests

* fix build

* checkstyle

* unused classes

* fix getRangeOfTimestamps

* push row grouping into getCandidateCellsForSweeping

* Revert ""push row grouping into getCandidateCellsForSweeping""

This reverts commit 898b7763e96b0aa8abeca38facb30bc4ffc647db.

* rename

* batch sizes

* javadocs

* fix build

* fix build

* extra tests

* PR comments

* minor stuff

* Fix compile

* Maintain order when grouping cells into rows

Collectors.groupingBy uses a HashMap by default, which does not
preserve the order of elements.

Using a LinkedHashMap retains the ordering (which we already rely on
earlier in the pipeline, right after fetching stuff from CQL).
If we need to add ordering here, one way would be to use a TreeMap, but
this would hurt performance - as the list is already sorted, insertion
would become O(log n) rather than O(1) as it is now.

* valuesBatchSize must be > 0

* fix nits

* Fix test setup

* Actually take a peek at the PeekingIterator

* Catch UnavailableException and put it on ICE

We say we throw InsufficientConsistencyException on the KVS API, so
we'd best stick to it.

* checkstyle
backport postgres vacuum interval ()

* backport postgres vacuum interval

* generated locks

* updating certs
change owner ()","This release backports support for running compaction with a minimum duration separating compacts. See for more detail.
Release Notes
Download
CLI Distribution
Console Distribution"
"allow namespace pattern matching
table mapping services handle getting table references
table factories now generate unchecked namespaces

The namespaces are already validated when you instantiate them in a schema.
Also regenerated table code (this was not a noop due to a previous commit)
remove unused import","TableMappingServices handle getting TableReferences from string table names
Namespace creation now allows for pattern matching to validate string names to prevent incompatibility with underlying data stores"
"Autorelease 0.156.0
Fix caching of config hostnames in cassandra client pool ()

* Fix caching of config hostnames in cassandra client pool

* Add generated changelog entries

* Remove unused imports

* Fix
Autorelease 0.156.1","Type
Description
Link
Fix
Fix caching of config hostnames in cassandra client pool"
"Autorelease 0.154.0
Block the 'examples' project by itself ()

The project is just called examples
Improve Throwables documentation ()

* Reinterrupt current thread if operations result in an InterruptedException

* Revert ""Reinterrupt current thread if operations result in an InterruptedException""

This reverts commit cdce68102a76670d3d8339005c52f85981e58aad.

* Throwables docs
Magic words ()
Excavator: Upgrades gradle wrapper to the latest version ()
Update publish-jars.gradle ()
Excavator: Migrate annotation processors to native gradle imple… ()

* Excavator: Migrate annotation processors to native gradle implementation

* add test annotation processor dependencies
Improve AbstractPoolingContainer log levels to reduce noise ()

* Improve AbstractPoolingContainer log levels

See:
https://github.com/palantir/gradle-baseline/tree/develop/docs/best-practices/java-coding-guidelines#log-levels

* Add generated changelog entries
Fix LockRefresher log message ()
PTExecutors provides reasonable operation names ()

* PTExecutors provides reasonable operation names

Previously every PTExecutor wrapped executor created tracing
spans with name `DeferredTracer(unnamed operation)`.
Now the executor name is used based on the ThreadFactory.

* Add generated changelog entries
A quick hack to see the viability of table level conflict handling ()

* A quick hack to see the viability of table level conflict handling

This should represent ~= 0 overhead for our current users, and won't use
a huge amount of memory for anyone. That said, the code is kind of
crappy so I will probably refactor it.

Anyway, it's a try-out to get metrics as to the viability of:

What if timelock were able to do some very simple conflict checking
(e.g. check conflicts on tables or other very high level concepts only
(e.g. topics)). Would we be able to significantly reduce the number of
serializable transactions that get rolled back?

Obviously it's incomplete - if enabling serializable txns were lower
overhead, people would do it more. But it covers a good chunk of ground.

* Suppress checkstyle warnings

* More baseline
Autorelease 0.154.1","Type
Description
Link
Improvement
Improve AbstractPoolingContainer log levels to reduce noise
Improvement
PTExecutors provides reasonable tracing operation names
Improvement
Improve logging when lock refreshing fails."
"change partitioner name in OSS atlas

required for Datastax CQL driver to support token aware policy correctly (uses the String of the partitioner name, yuck)
Further scrub improvements

Squash of a bunch of commits:

Option for scrub thread count
Background scrub banned hours and separate batch size from sweep
Fix scrub query batching
Move scrub concurrency out of per timestamp section
Parallelize scrub reads
Configurable scrub read thread count
catch user configuration error in Cassandra setup
better rocksdb lock file test
better error message for no-connect case
bump rocksdb to current release
Scrub settings

Change-Id: Idb96f9b725f1723bedf711561f6c3e5f444fc8ef
remove atlas shell

- atlas shell has issues with the open sourced setup
- planning to open source a cleaner more open source friend system for
interacting with atlas
- for now removing this to eliminate the unecessary internal fork
better message on namespace mismatch
Fix unused import

Change-Id: I5b288be78341800780b115f7cceda5e2c7023726
Updated metadata test for debugging
Several small Cassandra/CQL KVS fixes

- have to use a different timestamp to update metadata (TODO to switch it to CAS though it's not important for our usecases)
- CQL needs to invert timestamps
- The addCallable stuff wasn't actually being run.
- CQL had the same bug thrift KVS had with only getting one timestamp for getAllTimestamps.
retry rather than block forever on pool checkout for unresponsive nodes
fix simple schema updater

an empty namespace can be used to indicate a cross namespace change so
the precondition check needs to be more lenient
Sweeper skips tables if the table doesn't exist.
Use SerializableTransactionManager instead of Snapshot

This lets us actually use serializable transactions and should not affect
transactions on tables that don't have serializable conflict handling.
Fix license
Fix test
refactor cassandra jmx code to make compaction work with C* 2.2

1. remove the dependency through bean factory
2. use C* 2.2 compaction interface, since LCS major compaction does not work on C* 1.2
3. use truncateAllHints() instead of deleteHintsForEndpoint()
refactor cassandra jmx code to make compaction work with C* 2.2
mange ExecutorService life-cycle explicitly instead of using daemon
handle UndeclaredThrowableException in one places instead of individual tasks
add more logs for tracing
fix the format of msg
log in error level and remove one unnecessary condition check
Revert ""Use SerializableTransactionManager instead of Snapshot""

This isn't a problem by itself, but I'm no longer going to go with using
serializable transactions as I previously wanted to. Reverting as this affects
some upstream code.

This reverts commits:
e43392c2b8f09555d38c1eefdc8a7d8d018dc89d
9849ad4467726f9a6788f033602bca7c1976cc9f
2c7ad022dc030a530f5cfde4a278bdbf77ecf59f
Update Scrub INFO logging

Update Scrub INFO logging to correctly refer to number of timestamps
rather than number of cells.
upgrade feign-http to fix library bug

Version of feign-http before 8.10.0 require POST
requests to have a body. This breaks clustered
atlas setups when they call
TimestampService.getFreshTimestamp()

see https://github.com/Netflix/feign/blob/master/CHANGELOG.md","Upgraded feign-okhttp fixing a bug preventing use of clustered lock/timestamp
Fixes and Improvements to (CQL & Thrift) Cassandra KVS
Updated compaction code to work with Cassandra 2.2
Deleted old Postgres endpoint implementation"
"fix AIOOB exception in sweep stats kvs

- Need to handle the case where the sweep priority cells exist, but have
  been deleted
Update license year range to 2016
reorganize project structure and add internal tests
added jmx stuff (preparing to remove cassandra-all)
add import for @Generated annotation
expose ValidatingQueryRewritingKeyValueService constructor
update to use postgres format
use autoservice
clean up sample configs
RangeVisitor should be lock aware
add generic jdbc impl of a key value store
fix version conflicts
downgrade jooq to be java 7 compatible
add gitignores to force existence of var/data dir
name mangle the _timestamp table in jdbc ts bound store
actually use the timestamp bound store I wanted","This new key value service supports running atlas on top of any sql store supported by jooq. To use this new key value service you'll need to depend on
atlasdb-jdbc
atlasdb-hikari
whatever supplies the driver for the database you want to connect to
To configure, setup your key value service configuration as follows
keyValueService:
type: jdbc
dataSourceConfig:
type: hikari
sqlDialect: anything in org.jooq.SQLDialect (e.g., H2, POSTGRES, MYSQL)
properties:
All the stuff used to configure a HikariConfig object (e.g., jdbcUrl, username, password)"
"add cross-transaction commit timestamp caching

fixes , partially helps with
Update documentation in TimestampCache
refactor variable name and package location as per CR nits
update inline comments and add release notes ammendment (skip relase notes on cherry-pick)
make cassandra idle timeout parameters configurable
mock out config.timeBetweenConnectionEvictionRunsSeconds in CassandraClientPoolTest
add cassandra connection burst size config and validate eviction check proportion in config","Contains cherry picks of:
And is otherwise vanilla 0.22.0"
"[0.39.x] Backport ""Allow overriding JDBC URL for Oracle"" ()

* Allow overriding JDBC URL for Oracle ()

* Allow overriding JDBC URL for Oracle

Also remove getDefaultUrl() from DBType

* Fix release note syntax

(cherry picked from commit e5c1e8ca3b6dda5408e9c2c9139ec6c6dca3879f)

* Remove unused imports
Revert ""Wait if previous shrink operation fails, increase the socket timeouts ()""

This reverts commit 3694a1dc8ccba0fcd4fe2cf3a4220788eba06bca.
[Oracle Compaction][Part 1] Background Compactor ()

* Background Compactor

* finish barebones compactor

* HA-safe BackgroundCompactor

* SimpleLocks -> SingleLockService

* light refactors

* Add Compact tables

* checkstyle

* Sleep when we don't get the compaction lock

* Fix copy-paste error in comment

* [no release notes]
[Oracle Compaction][Part 2] Refactor `kvs.compactInternally` ()

* Make Cassandra compactInternally a no-op

* Make CompactorConfig public

* Add BackgroundCompactor to TMs

* Special casing CKVS for Compactor and adding inSafeHours param

* Remove compactInternally from sweep code

* Make BackgroundCompactor use Supplier of inSafeHours

* Wire TMs with background compactor

* checkstyle

* Add SafeArg to Oracle compaction

* Remove even more unused code

* Log when we call compactInternally

This should never actually be logged...

* Fix checkstyle/warnings

* Set shouldManuallyCompact to false by default; true for DbKvs

* Remove out-of-date tests

* not an override

* In safe hours true by default

* fix docs build

* Reset interrupt flag for interrupted background threads

* shouldManuallyCompact -> shouldTriggerCompactions

Conflicts:
atlasdb-api/src/main/java/com/palantir/atlasdb/keyvalue/api/KeyValueService.java
	atlasdb-cassandra/src/main/java/com/palantir/atlasdb/keyvalue/cassandra/CQLKeyValueService.java
	atlasdb-cassandra/src/main/java/com/palantir/atlasdb/keyvalue/cassandra/CassandraKeyValueServiceImpl.java
	atlasdb-cassandra/src/main/java/com/palantir/atlasdb/keyvalue/cassandra/jmx/CassandraJmxBeanFactory.java
	atlasdb-cassandra/src/main/java/com/palantir/atlasdb/keyvalue/cassandra/jmx/CassandraJmxCompaction.java
	atlasdb-cassandra/src/main/java/com/palantir/atlasdb/keyvalue/cassandra/jmx/CassandraJmxCompactionClient.java
	atlasdb-cassandra/src/main/java/com/palantir/atlasdb/keyvalue/cassandra/jmx/CassandraJmxCompactionManager.java
	atlasdb-cassandra/src/main/java/com/palantir/atlasdb/keyvalue/cassandra/jmx/CassandraJmxConnectorFactory.java
	atlasdb-cassandra/src/main/java/com/palantir/atlasdb/keyvalue/cassandra/jmx/HintedHandOffDeletionTask.java
	atlasdb-cassandra/src/main/java/com/palantir/atlasdb/keyvalue/cassandra/jmx/TombstoneCompactionTask.java
	atlasdb-cassandra/src/main/java/org/apache/cassandra/db/HintedHandOffManagerMBean.java
	atlasdb-cassandra/src/main/java/org/apache/cassandra/db/compaction/CompactionManagerMBean.java
	atlasdb-cassandra/src/main/java/org/apache/cassandra/service/StorageServiceMBean.java
	atlasdb-cassandra/src/test/java/com/palantir/atlasdb/keyvalue/cassandra/CassandraJmxCompactionClientTest.java
	atlasdb-cassandra/src/test/java/com/palantir/atlasdb/keyvalue/cassandra/CassandraJmxCompactionManagerTest.java
	atlasdb-config/src/main/java/com/palantir/atlasdb/config/AtlasDbRuntimeConfig.java
	atlasdb-config/src/main/java/com/palantir/atlasdb/factory/TransactionManagers.java
	atlasdb-dbkvs/src/main/java/com/palantir/atlasdb/keyvalue/dbkvs/impl/DbKvs.java
	atlasdb-dbkvs/src/main/java/com/palantir/atlasdb/keyvalue/dbkvs/impl/postgres/PostgresDdlTable.java
	atlasdb-dbkvs/src/test/java/com/palantir/atlasdb/keyvalue/dbkvs/impl/postgres/PostgresDdlTableTest.java
	atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/sweep/SpecificTableSweeper.java
	atlasdb-impl-shared/src/test/java/com/palantir/atlasdb/sweep/BackgroundSweeperFastTest.java
	docs/source/release_notes/release-notes.rst
[Oracle Compaction][Part 3] Final refactors and tests ()

* Extract CompactPriorityCalculator to a separate class

* more checktyle

* Increase network timeout on compactions

* java.lang.String --> String

* Add logging for CompactPriorityCalculator

* Fix compile and checkstyle

* BackgroundCompactor: metrics and exception handling

We don't sleep after success, so that compactions will be faster.

* [no release notes]

* use safeInternalTableName

* Refactor: pull out recordOutcomeAndSleep logic

* Refactor: reduce nesting

* Minor fixes after CR

- Ints.saturatedCast
- Add ""millis"" to log params
- Log which table we randomly chose

* Extract methods for behaviours we want to mock

* Extract method objects

* Fix copypasta

* Test CompactPriorityCalculator

* Tests for BackgroundCompactor outcomes

* Actually create the CompactSchema tables

* Sidestep metric reregistration warnings

* Add sanity check for metrics

Ensures that metrics are registered and recorded correctly

* Minor CR fixes

- SafeArgs for timings
- Clever clever alternating supplier

* Warn instead of throwing when we misuse our metrics

This indicates a product bug, but not one that we want to be woken up
for, so don't stop the world.

Conflicts:
	atlasdb-client/src/main/java/com/palantir/atlasdb/util/MetricsManager.java
atlasdb-dagger/src/main/java/com/palantir/atlasdb/services/KeyValueServiceModule.java
	atlasdb-dbkvs/src/main/java/com/palantir/atlasdb/keyvalue/dbkvs/impl/oracle/OracleDdlTable.java
	atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/compact/BackgroundCompactor.java
	atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/sweep/BackgroundSweeperImpl.java
[Oracle Compaction][Part 4] Bug Bash ()

* dependency problem

* more logging

* Delegating kvses need to delegate

* Delegates need to delegate (part 2)

* sweeper should not compact

* aggressive logging

* Cannot assume tables are FQNs

* Revert ""aggressive logging""

This reverts commit 02b34d26a4386bb5011ad4594d3d502d1475aa97.

* lock/lock
[Oracle Compaction][Part 5] Last Preflights","This version of AtlasDB introduces a Background Compactor. This can be run separately from Background Sweep, and can be used to run compaction operations on your key-value service. For example, this would be VACUUM in Postgres or SHRINK in Oracle. Users may provide a boolean indicating whether their database is in maintenance hours (meaning that more intensive DB operations such as table locking operations can be run).
Release Notes
Download
CLI Distribution
Console Distribution"
"Autorelease 0.153.2
[Conjure Java Runtime] AtlasDB HTTP Schema Version Headers ()

* Protocol version classes

* Add fast lookup

* Parse headers if needed

* Restore normality

* Baseline

* refactor

* Switch to user-agents

* Refactor framework

* CR comments

* CR comment
CommitTsCache for targeted sweep expires entries after 5 minutes ()

* Add generated changelog entries

* CommitTsCache for targeted sweep expires entries after 5 minutes

Right now, if you have e.g. 50 AtlasDB txn managers, the sweep commit
ts cache will hold onto 1MM start timestamps each, at a cost of about
40GB ram.

This code is also not instantiated in a dependency-injection friendly
fashion, and so it's not particularly fun to configure this.

I modify to use Caffeine (because Caffeine is better in every case than
Guava) and have a 5 minute expiry, to ensure that unused entries get
evicted and hopefully using much less ram in the long term.
Autorelease 0.153.3","Type
Description
Link
Improvement
CommitTsCache for targeted sweep expires entries after 5 minutes"
"Autorelease 0.154.4
[Timelock Partioning] Part 28: Move timestamp paxos to runtime config. ()

* Move timestamp paxos to runtime config.

* Fix up compile error.

* separate ports for batch services

* safer null pointer exception checks with nullables
Use our own jackson decoder/encoder ()

* Use our own jackson decoder/encoder

The feign ones use Java BufferedReaders/String classes - in practice
this causes very many unnecessary allocations, which Jackson would pool
internally (it's about 90% of the allocations of a cassandra request
thread, which for a single connection might represent 1.2GB in 5 minutes)

* Changelog

* Checkstyle
Autorelease 0.154.5","Type
Description
Link
Improvement
AtlasDB makes fewer allocations when making HTTP calls"
"Release notes 0.56 ()

* Update notes

* Sort out comments
fix ordering ConcurrentStreams () ()

* fix ordering ConcurrentStreams

* handle duplicates and update tests

* add more info in changelog

* address himangi comments

* use immutables for ConcurrentStreams.StreamElement

* Add new lines that help readability

* Resolve minor test comments","Includes to fix ordering in getRanges output.
Release Notes
Download
CLI Distribution"
"[Oracle Compaction][Part 7] Configurable Compactions ()

* Switch to modelling based on CompactorConfigs rather than on bools

* Actually respect disabled

* Test compact intervals

* Nonnegative intervals

* greater than 0 -> nonnegative
Backport spaced vacuums to 0.39.x ()

* Backport spaced vacuums to 0.39.x

* need http remoting

* lock/lock

* fix api break

* baseline

* CR comments

* Add a bit more logging

* Bugfix: Add compactor schema","This release backports support for running compaction with a minimum duration separating compacts. See for more detail.
Release Notes
Download
CLI Distribution
Console Distribution"
"Improve leader election logging ()

* Log getFreshTimestamp failure at warn

* Improve leader election logging

Add more granular leader election logging to facilitate debugging of
failed or unexpected leadership transitions.

* Code review markups.

* Code review markups to reduce performance impact

* Fix NPE in PaxosAcceptor.prepare

Fix bug where new logging assumes a previously-accepted value exists at
the point that prepare is called.

* Fix another logging NPE

* Tidy up log line

Report (none) instead of null for the last accepted leader's UUID, if no leader has yet been accepted.
Fix-up scripts so that external builds pass () ()

* Fix-up scripts so that external builds pass

* [no release notes]

* Fix changelog status message

* Switch to -ne and substitute in MIN_VERSION_WANTED

(cherry picked from commit 362885a1579903d571b0e6a493cd7315e8f05c20)
Add generateMapToFullTableNames in TableMappingService ()

This should fix issue, which was causing
excessive reads from the DB during initialization
of the SweepStrategyManager.

(cherry picked from commit 7f586015f1b4bbe9a35d9c6fa9f5755277c061f1)

Use ImmutableMap.Builder in AbstractTableMappingService.generateMapToFullTableNames()

(cherry picked from commit 7594ccd5c4a53020156cb42dcc05fcb890aee214)
Log held and outstanding locks in YAML for further processing () ()

Backport from 0.39.3 to 0.4.x

* Log held and outstanding locks in YAML for further processing

* Change info to warn as by default we shouldn't log anything. It can be very noisy

* Add JsonPoperty to requestingThread

* Use Immutables to generate immutable classes. Remove logging configs and move HeldLocks back in LockServiceImpl

* Change the way outstanging lock requests are logged

* Add lock descriptor encryption

* Dump state in a separate Yaml file with a key for descriptors

* Clean up logging directory after tests

* Clean up logged folder for all tests calling logCurrentState

* Remove descriptor encrypting and add mapping

* Add release notes for log locking change

* Remove old state dumping, which was not full and using ERROR level logging

* Make lock descriptors in logger tests more descriptive

* Add map sizes in logging + make unknown thread names better

* Clean up LockServiceStateLogger

* Push more logic into YamlWriter class

* Further clean up and deduplicaiton of logic
(cherry picked from commit 4299035c358e69b5ccc038debcc0920ba9a59ad9)
fix file descriptor leak in lock state logging ()

* fix file descriptor leak in lock state logging

The YAML dumping for lock state logging did not ever close
the FileWriter it was using. Also refactored and added some javadocs
to improve readability.

[no release notes]

* make yaml writer buffered

(cherry picked from commit be77343f6117785ce533ee77acb36f4be7dc72d5)","Add generateMapToFullTableNames in TableMappingService
Backport Log held and outstanding locks in YAML for further processing"
"use InetSocketAddress
don't bother truncating tables that are already empty

This is to reduce schema mutations further, mostly because of
people still using Cassandra 1.2, which has a terribly overly coarse
lock that makes truncates while compactions are happening trivial to
wait forever and timeout.

There is a fringe legitimate use case that this infringes upon, which is
people aware of tombstoned or TTL-expired data in their tables below
the atlas transaction/timestamp layer and who want this garbage cleaned
up before the next compaction by calling truncate manually.
make cassandra schema timeout configurable
add basic cli framework
allow hidden table access to clis
add licenses
move from jewelcli to arg4j

- less boilerplate code
- actively developed

- also removed slf4j dependency which was causing issues with
  logback-classic
[lock] Printable ASCII lock descriptors

Print lock descriptors that contain only printable ASCII characters
between space ' ' (0x20) and '~' (0x7E).
Hooking up serializable transactions again

We've got another potential user of these, so I may as well bring it back and leave it in this time.
This is the same diff as the previous change.
Fixes to bring this back up to date
remove dead/unused code
nit fix on cassandra config validator
Use AbstractInvocationHandler as base class for Proxies
Add unit tests for proxying object methods
Add license header
Add UUID as a value type
Modify profile schema example to test UUID type","UUID is now a first-class support schema ValueType
AwaitingLeadershipProxy no longer request leadership on hashCode, equals, and toString"
"Autorelease 0.151.2
[TLS] TimeLock Slow Logger ()

* ProfilingTimelockService

* Profiling service

* test

* changelog

* Add edge case

* Add stacktrace

* Actually use this guy

* whoops

* Fix incorrect test naming

* baseline

* Fix compile break

* Change logging disable to explicit

* Update release-notes.rst

* Change tests to accumulate/flush

* Remove stacktrace

* Manual changelog
Tag TS outcome metrics with sweep strategy ()

* Tag TS outcome metrics with sweep strategy

* Add generated changelog entries

* Add static
Require Users to Explicitly Specify <3 Node TimeLock ()

* Illegal forbidden config

* Fix resultant broken test

* Remove unused variables

* Technicalities

* checkArgument can be private

* Add generated changelog entries

* remove comment
[Timelock Partitionining] Part 10: Paxos network client ()

* add immutables

* New network clients apis.

* Current implementations.

* Latest round verifier used network client.

* More general constructor.

* Everything in terms of network clients.

* Comments.
[Timelock Partitioning] Part 11: Paxos quorum checker coalescin… ()

* A CoalescingRequestFunction which delegates to other functions via PaxosQuorumChecker.

* Fix up comments.
Replace java plugin with java-library plugin ()
getRowsColumnRangeIterator ()
Fix changelog ()
Autorelease 0.151.3","Type
Description
Link
Improvement
AtlasDB clients using TimeLock now output logs indicating the slowest operation they encountered in the last 10 seconds, if said operation took at least 1 second.
Improvement
Users must now declare that their configuration is non-standard and that they accept the attendant risks if running with fewer than three nodes. Specifically, they must set the enableNonstandardAndPossiblyDangerousTopology flag in their ClusterConfiguration to true.
Improvement
We now tag Targeted Sweep outcome metrics with the appropriate sweep strategy. Previously, the outcomes for both strategies were aggregated, resulting in metrics that were difficult to interpret.
Improvement
Added a new method to generated table schemas, getRowsColumnRangeIterator, that returns an iterator for each row rather than a BatchingVisitable."
"Autorelease 0.159.0
More flexible config ()

* More flexible config.

* Preconditions check messages.

* Added a missing newline at the end of config.

* Refactorings in test.

* Added missing things from rebasing.

* Add generated changelog entries

* Fixed a wrong if.

* Updated changelog

* Updated changelog
Autorelease 0.159.1","Type
Description
Link
Fix
CQL capable config format change to give users more flexibility when configuring their service. Also provides a soft transition to the new client with less risk."
"disallow multiple tables in C* with different casing ()

* disallow multiple tables in C* with different casing

* added test for casing on C*

* use dockerized C* for test
Bump docker and docker-compose-rule dependencies
Cassandra ETE tests running externally with Docker Compose Rule
Use host networking rather than routing
Update circle tests
Fix build failures from rebase
Update circle.yml to publish on tag on develop
Remove branch as it doesn't allow nesting branch and tag","Do not allocate timestamp batch on initialization -
Fix end to end tests to run against docker -"
"[Oracle Compaction][Part 5] Last Preflights
[Oracle Compaction][Part 6] Protect from Thread Death ()

* [Oracle Compaction][Part 6] Protect from Thread Death

* fix logging

* Prefer Math.abs() for readability","This version of AtlasDB includes a hot-fix to the Background Compactor introduced in 0.38.18; specifically, in the event that trying to select a table for compaction and/or acquiring the compactor lock threw an Exception, the background compactor thread would die completely (rather than sleep and retry later).
Release Notes
Download
CLI Distribution
Console Distribution"
"Adds atlasdb-cli/var/data/ to .gitignore
Remove unnecessary remapping of lock and timestamp services during creation
Move constant value to be a constant
Centralise creation of RefreshingLock service
New KVS factories can be discovered via Service Discovery
Clean up internals
Delegate to services for timestamp creation
Name things better to clarify intent
Sensible error message when finding a valid AtlasDBFactory cannot be found.
Use new ServiceDiscoveringAtlasFactory in place of the references to static methods
Use Supplier rather than Factory
Bump down Datastax driver version
Move to creating a timestampService without passing it an underlying KVS
Change method reference from factory -> supplier
Remove unused field
Clarify intent of tests by renaming
remove unused imports
Revert ""allow advisory locking on lightweight locks""

This reverts commit 82551992b1391e9b2fbb46cc702fa865a184a27b.
Remove unused code
renamed from clis from titan to atlas-cli

titan is already another database thing and we can probably get away
without adding another confusing name here
Refactored AbstractSweeperTest
Modify sweep schema to handle negative timestamps
Revert ""Bump down Datastax driver version""

This reverts commit 669009d95de82f8994e9494a0f518ab115242c87.
fix atlas console import
implement simple batching for paxos requests

this edits the old broken batching system that allowed
people to join in-flight batches after they had checked (or partially
checked) for leadership
Remove aggressive table removal from test which caused problems in PG
ignore static field in LockClient

fix jackson serialization
Fix LockClient and HeldLocksToken serialization/deserialization","** Do NOT use, contains broken timestamp/lock service logic **
Fix Jackson serialization of LockClient
Fix Stream issue with byte array reuse
Test Refactor"
"Autorelease 0.158.0
Implement weighting by local rack when selecting cassandra hosts ()

* Implement weighting for random host by datacentre

* Move host weighting by datacentre to CassandraService

* Refactor and improve local host weighting

* Add test for filterHostsByDataCentre

* Write integration test to test refreshLocalHosts

* improve structure in CassandraService

* Add metrics to CassandraService local host weighting

* Restyle use of supplier in config and other style changes

* Change localhosts to be initialised at start

* Refactor exception handling and add unit tests for HostLocationSupplier

* Small exception changes and remove deviation logic

* Fix style

* Fix up
Autorelease 0.158.1","Type
Description
Link
Improvement
Experimental functionality to route Cassandra calls to the same AZ"
"Fix/develop is broken ()

* Make develop not broken

* [no release notes]
Cross-Partitioning TS, Part 4: More Tests, Part 1 ()

* Sweep batch accumulator test

* accept/reject tests

* Partitions

* Make targeted sweep integ tests read 8 at a shot

* [no release notes]

* Fix dedicated rows -> partitions bug

* Add merged test
[Timelock Partitioning] Part 9: Map `PaxosResponses` ()

* Tease apart repsonses from the accumulator, so we can map with immutable objects.

* [no release notes] Make successes a function of responses
Cross-Partitioning TS, Part 5: Parameterized Integration Tests ()

* Parameters are painful

* Parameterize all needed targeted sweeper tests

* There's a limit to the parameterization sadly

* [no release notes]

* CR comments

* Null possibly resource-intensive classes

* Circle hacking

* Restrain the number of writes
[Timelock Partitioning] Part 7: Acceptor cache ()

* AcceptorCache

* Fix up develop

* [no release notes] Tidy up

* Address comments.
Ensure correct rate limiting for bad clients. ()

* Ensure correct rate limiting for bad clients.

* checkstyle

* Add generated changelog entries

* checkstyle again...

* PR comments.

* Fix up.

* Add generated changelog entries

* Add generated changelog entries
Do no run the old changelog check ()
changelog.rst, the (hopefully) Final Volume: 145-151.1 ()

* Changelog

* The next version COULD be 0.151.2...

* add link to releases page

* AAaaAAAAaaaaaaaaaaaaaaaaaA
Make Targeted Sweep rate limiting tests more resilient ()

* Resilience..

* eurgh
Autorelease 0.151.2","Type
Description
Link
Improvement
For bad targeted sweep clients on 0.145.0 to 0.147.x, they are rate limited by timelock to the old behaviour i.e. each thread has an effective pause time of 500ms."
"[Oracle Compaction][Part 6] Protect from Thread Death ()

* [Oracle Compaction][Part 6] Protect from Thread Death

* fix logging

* Prefer Math.abs() for readability
[Oracle Compaction][Part 7] Configurable Compactions ()

* Switch to modelling based on CompactorConfigs rather than on bools

* Actually respect disabled

* Test compact intervals

* Nonnegative intervals

* greater than 0 -> nonnegative","This version of AtlasDB exposes additional configurability for the Background Compactor introduced in 0.39.18. In particular, sleep intervals have been made tunable.
Release Notes
Download
CLI Distribution
Console Distribution"
"Autorelease 0.153.3
Factor out timestamp cache ()

* Add generated changelog entries

* Factor out timestamp cache

Internally, we have many AtlasDBs, each with their own timestamp cache.
We'd like to have one big one, with a single expiry policy - basically
because we think that it'll lead us to a more stable situation with less
GC-ing and OOMing.

Factor out an interface, and make it be pluggable.

* Delete pointless test
Autorelease 0.153.4","Type
Description
Link
Improvement
Timestamp cache is now pluggable, for an internal use case."
"Autorelease 0.158.2
Do not log a warning if attempting a try-lock and it fails ()

* Do not log a warning if attempting a try-lock and it fails

It should not be too surprising if we fail to grab the lock in this scenario.

* do not bother retrying if not blocking

* Add generated changelog entries
[_transactions2] Part 49: ADR Chapter 2 ()

* tx2 adr outline

* intro to transactions table

* explanation of how cassandra tx table works

* Principles

* tickets encoding explanation

* waffles

* physical tickets

* choosing np/pq

* add inflight clause

* Streamlining putUnlessExists

* Add sectioning

* Add Thrift examples

* Comment on order preservation

* Fix stray punctuation

* Clarify multinode contention and paxos section

* Add tickets encoding diagram

* Bloom filter FP chance

* checkpoint

* Compression chunk length

* Make tables flashier, 1

* Make tables flashier, 2

* Make tables flashier, 3

* ADR tables

* Paste the right table

* Cell Loader v2

* Multiget Multislice

* Selective Batching

* Finish up selective batching section

* Fix broken javadoc

* CL2 Benchmarking

* Fix indentation

* [no release notes]

* Clarify the benchmark table

* Justify the choice of the three workloads in Benchmarking

* Add charts

* Example, symbols, units

* chAAAAAAAAAAAAAAAArts

* Update ADR

* Download MoreUtils
Rename EC2 to Ec2 as per the docs ()

* Rename EC2 to Ec2 as per the docs

* Remove wrongly cased Ec2HostLocationSupplier

* Add generated changelog entries
Autorelease 0.158.3","Type
Description
Link
Improvement
Attempting to acquire advisory locks with locking mode DO_NOT_BLOCK will now log at DEBUG instead of WARN. In this mode we are generally trying the lock, so failure is by no means indicative of a problem.
Fix
Rename EC2 to Ec2 as per the docs"
"Autorelease 0.158.5
fix aborted transaction deletes retrying forever on dead tables ()

* Add generated changelog entries

* fix aborted transaction deletes retrying forever on dead tables

* More robust error handling for targeted sweep aborting transactions

* Checkstyle
Async Puncher To Grab Fresh Timestamp If None Known At Punch Time ()

* Async puncher to grab a fresh timestamp if none known, but safely

* Add generated changelog entries
Autorelease 0.158.6","Type
Description
Link
Fix
Fix an issue where targeted sweep could retry forever to delete aborted transactions from tables that were already dropped (and cause a bunch of logspam in the process).
Improvement
Improved tracking of the unreadable timestamp, and thus accuracy of Sweep and timestamp metrics, on stacks where reads are sparse. The AsyncPuncher now grabs a fresh timestamp when punching if there were no explicit punches since the last time the underlying puncher was invoked."
"Convert client to memoized supplier ()
Async get API entry point ()

* Bumped tracing library

* Get async entry point and parametrized test with delegates

* Cleaner batch query processing

* Added bind to GetQuerySpec

* Add getAsync entry point and async logging

* Fixed rebasing issues

* Limited get

* Fixed tests.

* Collapsed builder and query

* Thread safe accumulator (no guarantees on which thread will futures be executed)

* Using an async cell loader

* Added tracing for async

* Initial tracing refactor.

* Moved to direct executor, updated docs and refactored accumulator.

* Using Tracer wrapped executor service.

* Fixed tests and style.

* Added changelog.

* Removed a whitespace.

* Refactorings based on comments.

* Refactored again.

* Consistency is the same always.

* Final fixes.

* Fixed tests.
[Timelock Partitioning] Part 35: Learn should not be a quorum c… ()

* close autobatchers in PTBST

* Learn should not be a paxos quorum check, as a result we may not read
our own proposals as they may never get delivered (this is wrong!)

* Fix up bound store test

* remove random extra space

* Use a `Closer` to more cleanly manage closing of resources.
Route 25% of queries to the same AZ for all services that use AtlasDB ()

* Ammend doc and update value in CKVSC

* Add generated changelog entries
Autorelease 0.161.1","Type
Description
Link
Feature
Key/value services can now support asynchronous get operations. This has been implemented for the Cassandra key value service.
Improvement
Update value in CKVSCIncrease the local host routing probability from 0 to 25% for all services that use AtlasDB. Also correct specific term in the docs for localHostWeighting."
"Autorelease 0.162.1
Async get on transactions ()

* Prerequisite

* Initial getAsync on transaction implementation

* Initial transactions test

* Caching transaction getAsync.

* Retrofitted tests.

* Fixed tests.

* Rebase fixes

* Self review fixes

* Using Throwables.

* Add generated changelog entries

* Style fix

* Snapshot get async refactor.

* Extracted delegates.

* Remove unused.

* Refactorings based on comments.

* Final fixes.
Autorelease 0.162.2","Type
Description
Link
Feature
Transactions can now support asynchronous get operations. This feature is designed for direct users of the Transaction API."
"Autorelease 0.162.5
Track total number of errors in version selecting clients ()

* Add a metric that tracks the total number of errors in version selecting clients

* Accept API break

* Revapi is acting up

* Important stuff

* Add generated changelog entries

* Uptade changelog

Make changelog message reasonable
Autorelease 0.162.6","Type
Description
Link
Improvement
Added a new metric com.palantir.common.proxy.ExperimentRunningProxy.experimentErrors that counts the number of errorsencountered by all clients created using VersionSelectingClients.createVersionSelectingClient, i.e., errors occuringwhile using the experimental CJR AtlasDB client."
"Autorelease 0.162.2
[Timelock Partitioning] Part 36: Introduce a new LeaderElection… ()

* Introduce a new LeaderElectionServiceBuilder that closely resembles
the parameters required to create a `PaxosLeaderElectionService`.

* Fix condition.

* Fix silly bug regarding creating executors.

* checkstyle

* More checkstyle...

* Expose a proposer decorator

* Get rid of quorum size

* Revert removing accept

* Get rid of duplicate checks

* Port everything to use the new builder plus just delete the old one.

* Add non-negativity checks to duration parameters

* Fix compile error

* generate pingables break

* more revapi breaks
RevAPI breaks fix ()
Refactored tests. ()
[Timelock Partitioning] Part 37: Leadership components ()

* add paxosUseCase to metric name constants

* LeadershipComponents encapsulates all that's needed to create a proxy backed by a leader election service.

* Add client back.

* LeadershipComponents exposes the healthcheck.

* Checkstyle.

* nit

* prevent semantic merge conflict
Gzip compression ()

* adding gzip compression support to the schema

* bugfix in stream renderer.

Gzip input may throw an exception if it can not find the gzip magic chars.

* bugfix in stream renderer.

Gzip input may throw an exception if it can not find the gzip magic chars.

* refactor gzip logic

* adding changelog

* adding automatic compressor detection

* review fix

* Refactors for GZIP compression

* Update codegen

* IOException

* Some extra tests

* No magic public arrays - mutable

* Tounsignedint

* Fix loading to a file
Autorelease 0.162.3","Type
Description
Link
Improvement
Added gzip compression support to the stream store. To use specify .compressStreamInClient(StreamCompression.GZIP) on your StreamStoreDefinitionBuilder in your schema.The following limitations must be considered when using or changing compression on a pre-existing stream store:- You cannot add any form of compression to a stream store that is currently not compressed- You can freely switch between compression types of stream stores that are already compressed"
"Autorelease 0.171.2
improve postgres and oracle range-read perf ()

* improve postgres range-read perf

Reduce round-trips by piping batch hints all the way down to the JDBC driver layer fetchSize.

* improve oracle get range perf

less round trips from correctly pushing a batch hint all the way into
the JDBC driver fetchSize (and calculating based on approx number of
cells, which the underlying jdbc driver considers rows)
Table creation metadata tests ()

* Added tests for table creation metadata and removed obsolete assertion library.

* Fixed style.

* Refactored based on comments.

* Some simple style changes.

* Removed a test.

* Better constants.

* Simple style fixes.
[Transaction Async get] Part 6: Catch unintentional switches between blocking and non-blocking calls during tests. ()

* Async path tests.

* Wrong check fix.

* Renamed tracking interface.

* Style fix.

* Missed style consistency.

* Ignore indentation for lambda.

* Style fixes.
[Conjure Java Runtime] Part 20: The Beginning of the End / Force CJR for Inter-Node Communications ()

* Bla

* Fixes

* Use Conjure for TimeLock, Default for Embedded

* Default -> Always Use Legacy

* Add generated changelog entries

* CR comments

* Oops

* finality

* RevAPI
Autorelease 0.171.3","Type
Description
Link
Improvement
Improved Oracle and Postgres range-read perf.
Feature
AtlasDB now uses Conjure Java Runtime for inter-node communications. In particular, this affects TimeLock Servers using this version of AtlasDB."
"Autorelease 0.171.1
[Transaction Async get] Part 5: Async path on getWithPostFilteringFuture and getFromKeyValueSevice ()

* Get with post filtering async.

* Style fixes and refactoring.

* Removed builder and made it more readable.

* First round with Jeremy.

* Fixed spelling.

* Refactoring based on comments.

* Apply suggestions from code review by Felix.

Co-Authored-By: Felix de Souza <fdesouza@palantir.com>

* Final changes.
Fix deadlock in static class initialization ()

* Fix deadlock in static class initialization

* Add generated changelog entries
Autorelease 0.171.2","Type
Description
Link
Fix
Fix deadlock in static class initialization"
"Autorelease 0.173.0
[LW] (Real) Part 1: Registration and Deregistration APIs ()

* Lock Watching APIs

* Add missing file

* Small fixes

* Fix some nits

* Modify TM interface for more context

* CR and offline discussion
[LW] Part 2: Transaction Related LW APIs ()

* Lock Watching APIs

* Add missing file

* Small fixes

* Fix some nits

* Modify TM interface for more context

* Transaction related LW APIs

* Fix bad mock

* CR
Use supported CachingOptions for Cassandra CQL ()

* Use supported Cassandra caching options

* Add generated changelog entries
Force native protocol v3 for CqlClient ()

* Force native protocol v3 for CqlClient

* Add generated changelog entries
Remove references to populate_io_cache_on_flush ()

* Remove references to populate_io_cache_on_flush

* Add generated changelog entries

* Add generated changelog entries
Do not delegate for new API with default implementations ()
Autorelease 0.173.1","Type
Description
Link
Improvement
Remove all references to the Cassandra table property populate_io_cache_on_flush, which is supported or used in Cassandra.
Improvement
Force native protocol v3 for CqlClient
Improvement
Switch the CassandraTableCreator to use supported caching options."
"Autorelease 0.152.0
Use a simple Caffeine cache around MetricName construction. ()

* Use a simple Caffeine cache around MetricName construction.

We look up the same metrics a lot, and string concatenation is
relatively expensive. MetricName values are already stored in a
map in the TaggedMetricRegistry, so there's little risk of causing
excessive heap pressure due to this cache.

* Add generated changelog entries
Fix precommit condition check order ()
Guard a couple debug logging statements with level checks ()

Unnecessary to do work if logging is not enabled.
AssertUtils.getDebuggingException returns a SafeLoggable Exception ()
Upgrade gradle-baseline to 0.57.0 ()

* Upgrade to gradle-baseline 0.57.0

* release notes

* Suppress CatchBlockLogException for ExpectedFailureRule

* Fix broken develop.

* enable stacktrace

* bump baseline again

* bump shadow

* try baseline 0.40.0

* baseline to 0.35.0

* baseline to 0.33.0

* baseline to 0.31.0 :(

* baseline to 0.30.0 :(

* Revert ""baseline to 0.30.0 :(""

This reverts commit 8b218a2d

* downgrade errorprone to 2.3.2 but 0.31.0 baseline

* back to error prone 2.3.3

* 0.32.0 which supports new syntax but downgrading errorprone

* monitor all processes

* permissions on script

* artifacts

* make the directory before hand

* active processor count = 8

* active processor count = 4

* active processor count = 6

* actually set it to 6

* actually set it to 8, eurgh

* update jdk to version that supports active processor count

* try latest jdk

* exclude jepsen tests check from check

* syntax

* 2.3.3 errorprone

* 0.66.1 baseline

* 1.9.0 baseline

* 1.8.2 baseline
[PDS-94229] TimeLock - Thread Leak in Async Lock Service ()

* Close the timeout executor in Async Lock

* Add generated changelog entries

* Test that executors are shutdown
Use better reservoir for TS metrics ()
Allow dropping tables when not writing to the sweep queue ()

* Rack up contributions

* Allow dropping tables when not writing to sweep queue

* Undo change from other PR

* Add generated changelog entries

* Add generated changelog entries
[Sunsetting Background Sweep] Don't run BS if TS is fully enabl… ()

* Change serialization to separately recognize unspecified

* Refactor and fix broken test

* Should Run BG Sweep Supplier

* Wiring in TM

* Add ete test

* TestKvsMigrationCommand

* Add generated changelog entries

* Improved log line

* as and ul

* BooleanSupplier and condense tests

* Remove enableSweep() from base config

* Appease checkstyle.
Automated refactors from baseline 1.10.1 (does not upgrade base… ()

* Apply refaster suggested fixes

* Apply error prone fixes

* fix imports

* apply idea inspection: Unnecessary fully qualified name

* Fix up checkstyle, replace default import of Preconditions to be safe as opposed to guava.

* Second round of checkstyle.
Autorelease 0.152.1","Type
Description
Link
Improvement
We no longer run Background Sweep by default if Targeted Sweep is fully enabled (that is, writes to the sweep queue and reading from the sweep queue are both enabled). Background Sweep may still be enabled in this case by explicitly setting sweep#enabled to true in runtime configuration.
Improvement
Use a simple Caffeine cache around MetricName construction
Fix
TimeLock no longer leaks threads when an async lock service is shut down (e.g. as part of a leader election). Previously we would not shut the lock request timeout thread down, leading to (number of clients) many threads left in limbo after each time a node loses leadership.
Fix
TransactionManagers now creates the ClearsTable during initialisation regardless of whether or not Targeted Sweep is enabled."
"Autorelease 0.162.4
Actually reap lock when we say we will ()

If the immutable timestamp says it can't be valid,
then ignore whatever is refreshing the lock. Reap it.
Remove CoordinationStore metrics. ()

* Remove CoordinationStore metrics.

* Add generated changelog entries
Update GZIP stream store compression changelog ()

* 4311 is the merged gzip pr, not 4220

* specify how to use it and limitations for adding it
[Conjure Java Runtime] Part 15: Revise Parameters for ClientOptions ()

* Revise parameters for ClientOptions

* Add generated changelog entries

* Add generated changelog entries
Autorelease 0.162.5","Type
Description
Link
Improvement
Our Conjure-Java-Runtime client is now more resilient to transient failures or rolling upgrades of TimeLock Server. Previously, we would give up after an expected 1.5 seconds of being unable to contact TimeLock; we now try for an expected 10 seconds. Feign client users are unaffected.
Improvement
Remove CoordinationStore metrics."
"Autorelease 0.167.1
Route 50% of queries to the same AZ ()

* Route 50% of queries to the same AZ

* Add generated changelog entries
Autorelease 0.167.2","Type
Description
Link
Improvement
Route 50% of queries to the same AZ"
"Autorelease 0.171.0
update postgres jdbc [ 42.2.1 --> 42.2.8 ] ()

* update postgres jdbc [ 42.2.1 --> 42.2.8 ]

* Add generated changelog entries
[Conjure Java Runtime] Part 19: Retrying is Futile... Sometimes. ()

* Fix buggy test

* Fix self-CR

* Add generated changelog entries

* Add generated changelog entries

* Add generated changelog entries

* Fix indentation
Autorelease 0.171.1","Type
Description
Link
Fix
We no longer create a FastFailoverProxy when creating a single node proxy. Previously, if this was created when talking to an individual TimeLock node that was not the leader (or a service that would otherwise return 308s), we would spin for about 10 seconds before returning. Users of failover proxies to TimeLock (e.g. if using the timestamp or lock services from a TransactionManager) are unaffected.
Improvement
Postgres JDBC driver was updated from 42.2.1 to 42.2.8(relevant: minor perf and upsert fixes)"
"Autorelease 0.174.0
Prevent exceptions for 0 CQL contact points ()

* Prevent errors when 0 entries are discovered for CQL contact points.

* Add generated changelog entries

* Refactor.

* Fix ordering.
Autorelease 0.174.1","Type
Description
Link
Fix
Prevent startup errors with configs which do not manage to discover any CQL contact points."
"[RevAPI] Set reference point and acknowledge breaks correctly ()

* Set reference point and acknowledge breaks correctly

* Version party

* More fixes
Do not use RevAPI for Atlas ()
CQL driver version bump ()

* Bumped datastax driver version.

* Changed gradle shadowing.

* Rename accumulator class.

* Paging test ()

* Paging tests.

* Renamed.

* Add annotation for tests, add the right access modifier.

* Refactorings based on comments.

* Standardize.

* Renamed constants.
Autorelease 0.172.1","Type
Description
Link
Improvement
Bumping the Datastax Cassandra driver to the newest version along with necessary refactoring."
"Autorelease 0.173.3
[Conjure Java Runtime] Part 23 - Guest PR: Random retries ()

* Don't assert on the message for `ExceptionMatchers`

* If we're no longer eligible for leadership, don't bother pinging.

* When using conjure, pick a random node instead of the next node.

* Add generated changelog entries
Autorelease 0.173.4","Type
Description
Link
Improvement
Under certain circumstances, clients will fail to recognise a new timelock leader until the old leader has rebooted/is available. This would lead to unavailability for the duration of the reboot, or an outage if the old leader stays unreachable. We now randomise the next timelock host for a client to try instead of a fixed host."
"Autorelease 0.173.4
Upgrade CJR ()

* Commit

* Add generated changelog entries

* Add generated changelog entries
Autorelease 0.173.5","Type
Description
Link
Improvement
Conjure-Java-Runtime has been upgraded from 4.38.1 to 4.42.0. Previously, response bodies of requests were sometimes leaked when said requests were cancelled. This does manifest in Paxos quorum checks. These leaks have been fixed."
"Autorelease 0.173.5
Fun with AutoDelegates <3 ()

* Fun with AutoDelegates <3

* Add generated changelog entries

* Add generated changelog entries
Autorelease 0.173.6","Type
Description
Link
Fix
AutoDelegate implementations of TimelockService now delegate isInitialized and tryUnlock correctly. Previously, they would call the default methods - this manifested as AtlasDB clients making synchronous calls to TimeLock when unlocking things at the end of a transaction, as opposed to using an autobatcher to asynchronously do these."
"check replication factor against cluster size
fix typo
Updated sweep tests to cover case of in progress sweep on table deletion
add back in nullwrapper support
clean up timestampcommand output
Adding checkstyle to catch unused imports
Fix expiring stream store reusing byte array references

Follow up to
always delete; clean up print statements
fix test
Avoid double buffering streams
Improve MessageDigest instance creation

Avoid lock contention on java.security.Provider.getService by using
MessageDigest prototypes as a workaround for
https://bugs.openjdk.java.net/browse/JDK-7092821, similar to Guava's
workaround https://github.com/google/guava/issues/1197
cleanTransactionRange always deletes
Fix Cassandra connection pool retrying

When a Cassandra connection is not available from the pool, a
NoSuchElementException is thrown from CassandraClientPoolingContainer,
and that exception is now properly handled in the
RetriableManyHostPoolingContainer to allow for retrying.
Add null wrapping / unwrapping to map installation
Switch NullWrapper to enum
clean up executors so maps aren't shared
iterate over immutable map
add nulls test
ensure methods are being called
use other local from another's methods
add comment
Add missing @override
Encapsulate MessageDigestPrototype in Sha256Hash

Avoid potential class shadowing conflicts by embedding
MessageDigestPrototype in Sha256Hash.
Handle unknown source locations in stack traces

StackTraceElement special-cases null filenames to ""Unknown Source"",
but PaxosProtos special-cases null to the empty string, which leads
to a bug involving classes with no debug information attached, such
that round-trip serialization and deserialization of exceptions is
not stable. By way of example:

before: <com.sun.proxy.$Proxy2.processTestClass(Unknown Source)>
after: <com.sun.proxy.$Proxy2.processTestClass()>

In general, this occurs with any stack trace element from rt.jar.

Instead of coercing nulls to empty strings on our end, just leave
the field unset in the protobuf and check for its presence during
deserialization.
fix unit test
Change KVS api to use TableReference

* Change KVS api to use TableReference

instead of using strings everywhere

* refactor Jdbc and Rocks KVS to use TableReferences

* fix sweep test issues

* ignore flaky sweeper tests

created an issue --> https://github.com/palantir/atlasdb/issues/308

* make TableReference jackson serializable

also add jersey hacks (toString and fromString) until we decide what to
do with the RemotingKVS jersey endpoint

* fix jdbc table name refactor issues

* import fixes
atlas console without dropwizard dependency

* separate atlas server into dropwizard and non-dropwizard parts

* rely on dropwizard-jackson to get kvs service discovery

* centralize AtlasDbConfig loading
Check file streams
Avoid auto-boxing during long comparisons
Add testLookupStreamIdsByHash test
Add testStoreCopy test
Use Long.compare
Use Long.compare
Add testStreamMetadataConflictDeleteFirst test
Add testStreamMetadataConflictWriteFirst test
Remove duplication between testStreamMetadataConflictDeleteFirst and ..WriteFirst
Revert ""Change KVS api to use TableReference"" ()

This reverts commit 9aa4a4d5e4a75b3ada0b64a235dc9e3c9bb4734e.
Test all three retrieval methods (loadStream, loadStreams, loadStreamAsFile)
Revert making deleteStreams public
Ignore background sweep tests until refactor can expose the necessary control ()
Change KVS api to use TableReference

instead of using strings everywhere

This is a revised version of
https://github.com/palantir/atlasdb/commit/9aa4a4d5e4a75b3ada0b64a235dc9e3c9bb4734e
that was reverted in
https://github.com/palantir/atlasdb/pull/320

* refactor Jdbc and Rocks KVS to use TableReferences

* fix sweep test issues

* ignore flaky sweeper tests

created an issue -->

* make TableReference jackson serializable

also add jersey hacks (toString and fromString) until we decide what to
do with the RemotingKVS jersey endpoint

* fix jdbc table name refactor issues

* import fixes
Move KVS migration utilities to OSS

This doesn't include any setup or infra around actually running this, just a
straight move of the business logic classes.
cleanup unsused and output
Bring in refactored KeyValueServiceMigrator
Kvs migration CLI

And some very basic tests along with it. We still have more tests we can move out from internal code.
Don't wait so long on AGGRESSIVE_HARD_DELETE

We use AGGRESSIVE_HARD_DELETE in tests, to ensure that streams we've
written get cleaned up if they're capable of being cleaned up.

This takes a bunch of time, because it calls Scrubber.scrubImmediately
twice, which waits if the immutable timestamp < the commit timestamp.

Because the immutable timestamp is memoized for up to 1 second, the
first check will fail all of the time, and so the thread will go to
sleep for 2 seconds.

This means that each test takes 4 seconds.

This PR makes the retry rate 500ms instead, which should make our tests
run in expected time 1.75 seconds, I think, at the cost of a 50% chance
of an extra line in the logs. CPU cost is basically nothing as it's just
comparing two timestamps.

More generally, it'd be nice to get the immutable timestamp updating at
a rate of greater than once per second - but this one seems like an easy
win for us.
use new protobuf to json that uses base64 encoding ()
Do not add hidden tables to metadata map
change Long.compare to Longs.compare for java6 compatability ()
Constant for partition count
Logging cleanup
Add super cool bintray badge
Update travis to continue check if possible to capture all problems in one build
setup circle ci ()
fix protobuf to/from json marshalling
Add failing test
Remove memoization
Add comment to explain why this is necessary
new client pool (ported across bobby change)
random small fixes and extra debugging to CCP
synchronize on pool refresh
Use InMemoryTestRunner rather than RockDBTestRunner
Adds var/data/rocksdb to .gitignore
Remove unnecessary config files
Add parallelism to cassandra tests
Update circle with new gradle settings
Try not limiting workers
Try using multiple containers
Try with 3 containers
actually check leader config preconditions
protobuf dep is never used ()

this dependency was added before we forked the proto -> json format
Remove lingering checkstyle rules","Fix timestamp server regression
Change KVS api to use TableReference"
"Autorelease 0.173.7
[Conjure Java Runtime] Part 25: Fast Failover Proxy Needs To Be… ()

* AtlasDbDependencyException

* Fix

* Unify decoration of proxy

* Add generated changelog entries
Autorelease 0.173.8","Type
Description
Link
Improvement
Non-live reloading proxies created via AtlasDbHttpClients now correctly perform fast failover. Previously, they would throw relatively quickly when encountering 308s, which may occur when TimeLock Server (or services running embedded leader blocks) have a leader election."
"Autorelease 0.173.9
[Timelock Partitioning] Part 44: `LeadershipContextFactory` ()

* Wire together everything that's sufficient for single leader paxos!

* Use the new code path in timelock.

* Weird checkstyle failure that should have happened on develop.

* Address CR comments.

* Actually delete `PaxosLeadershipCreator`.

* Address CR comments.
upgrade HikariCP [2.4.7 -> 3.4.1] ()

* upgrade HikariCP [2.4.7 -> 3.4.1]

* Add generated changelog entries
Fix develop ()

* If `AwaitingLeadershipProxy` is closed, stop trying to gain leadership.

* Try to shutdown `DisruptorAutobatcher` for 10 seconds.
Log an error if it takes longer.

* Throw new interrupted exception (sticking to the contract) when leader
is ineligible.

* Try to step down, but don't throw if we can't step down.

* Amend paxos consensus fast test to deal with new semantics.

* Get rid of race.

* Address comments.
CLI/KVS Migration docs fixes ()
Remove populateIoCacheOnFlush from TableCreator ()

* Remove populateIoCacheOnFlush from TableCreator

* Add generated changelog entries

* Style fix.

* Update changelog/@unreleased/pr-4422.v2.yml

Co-Authored-By: Felix de Souza <fdesouza@palantir.com>
add metrics to scrubber ()

* add metrics to scrubber

* lazy registration of scrub metrics for cost savings
Autorelease 0.173.10","Type
Description
Link
Feature
The scrubber has been instrumented with metrics.
Improvement
HikariCP was upgraded 2.4.7 -> 3.4.1There are minor API and metrics changes/breaks.
Fix
Remove the populateIoCacheOnFlush field from the CassandraTableCreator."
"Autorelease 0.173.2
[Conjure Java Runtime] Part 22: Martin Lewis's Muse ()

* Relocate timed

* Add annotations for leader based things

* Remove unnecessarily timed methods as per PR comments
[Conjure Java Runtime] Part 21: Global Conjuration ()

* Always Be Conjuring

* Always Be Conjuring, II

* nullables

* Restore LockService metrics and wire up leader blocks to new service

* More defaulting

* Add generated changelog entries

* Use instrumentTimed()
Autorelease 0.173.3","Type
Description
Link
Feature
Services configured to use leader blocks now use CJR by default."
"Autorelease 0.173.10
[PDS-95791] Resilient if timelock doesn't have the endpoint. ()

* resilient if timelock doesn't have endpoint.

* Add generated changelog entries
PTExecutors does not propagate state to recurring tasks ()

* Add generated changelog entries

* PTExecutors does not propagate state to recurring tasks

Previously both tracing and ExecutorInheritableThreadLocal state
were retained by recurring tasks, which lead to background activity
referencing state from when a task is first scheduled. There are
several places where we lazily start scheduled background tasks,
this inadvertantly attributes background work to the first user
to exercise the codepath.

* imports
Number of hosts in C* config fix. ()

* Fixed number of hosts.

* Add generated changelog entries

* Add generated changelog entries

* Update changelog.

* Thread pool size fixed.
Autorelease 0.173.11","Type
Description
Link
Improvement
[PDS-95791] Ensure we don't fail the diagnostic collection when calls to timelock fail.
Improvement
PTExecutors does not propagate state to recurring tasksPreviously both tracing and ExecutorInheritableThreadLocal statewere retained by recurring tasks, which lead to background activityreferencing state from when a task is first scheduled. There areseveral places where we lazily start scheduled background tasks,this inadvertently attributes background work to the first userto exercise the codepath.
Fix
Fixes the problem for configurations which have different number of CQL and Thrift C* hosts."
"Autorelease 0.174.2
Tracing for futures processing. ()

* Tracing.

* Reverted and renamed.

* Reverted and renamed.

* Add generated changelog entries

* Style fix.
Autorelease 0.174.3","Type
Description
Link
Fix
AtlasFutures now maintains correct tracing information."
"Autorelease 0.174.1
[PDS-10{3841,4895}] Part 5: Don't Reuse Streams In The Stream Store ()

* Effectively cherrypick Jack's fix

* test

* Better stream tests

* Add generated changelog entries

* Add generated changelog entries

* Doh

* Add generated changelog entries

* Fix maps

* Make class final

* Add generated changelog entries

* Add generated changelog entries

* Add generated changelog entries
Autorelease 0.174.2","Type
Description
Link
Fix
We no longer read and physically store streams lazily in the AtlasDB store when transactionally storing a stream (via storeStreams()). Previously, users who stored and marked streams in a single transaction and subsequently referenced the returned Sha256Hash may fail in the following ways:- if the provided InputStreams throw when they are read after being closed, these exceptions would be thrown out to the user.- if the provided InputStreams do not throw when they are read after being closed, AtlasDB would erroneously write an empty block as the first block of the stream, and incorrect metadata of the stream being an empty stream."
"Autorelease 0.173.8
[Timelock Partitioning] Part 46: Test reorganisation/refactor ()

* Move tests that don't depend on timelock being in a particular
configuration to the single node configuration.

* Separate out single leader only tests

* Remove default client/namespace, rejig the tests.

* Checkstyle.

* Use conjure for `TestProxies`.

* Fix up initialisation issues with namespace.

* isolate the immutable timestamp test

* checkstyle again..

* fix initialisation again

* Cache last leader and start `currentLeader` and `nonLeaders` from there.

* Checkstyle.

* Error handling for current leader.

* Use random namespace everywhere.
Default to 100% local host weighting ()

* Default to 100% local host weighting

Rolled this out with no obvious issues - time to go the rest of the way.

* Add generated changelog entries
Autorelease 0.173.9","Type
Description
Link
Improvement
Default to 100% local host weighting."
"Autorelease 0.177.1
fix infinite loop in LocalOrRemoteProxy ()

* fix infinite loop in LocalOrRemoteProxy

previously LocalOrRemoteProxy would infinitely retry its call as long as
the delegate was throwing a NotCurrentLeaderException, regardless of
whether the thread was interrupted. Calling a local service behind a
AwaitingLeadershipProxy on an interrupted thread would trigger a
NotCurrentLeaderException without clearing the interrupt, leading to an
infinte loop.

* Add generated changelog entries

* cr feedback
Autorelease 0.177.2","Type
Description
Link
Fix
Services running with a leader block no longer get into infinite loops wheninterrupted and now deal with interrupts correctly."
"Autorelease 0.173.6
[Conjure Java Runtime] Part 24: Removing Feign From Jepsen, TM… ()

* Switch to tagged metrics for all

* CJR target factory

* Fix test proxies

* Jepsen

* Test updates

* Patch testabletimelockcluster

* SSL Config

* Fix up AtlasDbHttpClientsTest.

* Fix `AsyncTimelockServiceIntegrationTest` tests.

* Fix targeter tests
CQL resource management 3.x version ()

* Extracted code.

* Rename and clean the code.

* Add test.

* Update 3.x version

* Fix log message.

* Add generated changelog entries

* Added an import.

* Refactorings based on comments.
Autorelease 0.173.7","Type
Description
Link
Improvement
Improved resource management of CQL resources. Custom management logic should implement CassandraAsyncKeyValueServiceFactory."
"Autorelease 0.174.4
reduce sleep between scrub runs ()

* Add generated changelog entries

* reduce sleep between scrub runs

This will cause extra work to be performed in some cases, especially on initial startup.
This change is intended to fix issues where the scrub queue can easily become permanently behind.
This currently happens on our dev stack for a service that rolls every time a commit is made to a part of the codebase (that happens to need scrub for it to function, at least currently)

It is anticipated that [future deployments that are in the cloud and have cloud-y constant upgrades / upgrade management ] instead of the current user of this product [fairly restrictive on-prem sites that can only occasionally take upgrades] also might run into the same problem as the dev stack, where constant rolling of services can be at odds with this setting.
[Timelock Partitioning] Part 44b: Ensure same instance of `Lead… ()

* LeaderElectionService is reused so we don't have n times more requests.

* Add generated changelog entries

* Update pr-4448.v2.yml

* Update pr-4448.v2.yml

* Update pr-4448.v2.yml
Autorelease 0.174.5","Type
Description
Link
Improvement
Reduced the time between periods of background scrubber activity to account for services with short lifetimes.
Fix
Ensure we use the same instance of LeaderElectionService when in leader-for-all-clients mode, this brings request rates back to the same rate before PR 4340 merged. This addresses internal issue PDS-105806."
"Autorelease 0.174.3
Increase the timeout on CQL queries. ()
Autorelease 0.174.4","Type
Description
Link
Improvement
Set the timeout on CQL queries from the default 12 seconds to the socketQueryTimeoutMillis specified in CasssandraKeyValueServiceConfig."
"Autorelease 0.180.1
Remove PollingRefreshable. ()

* Remove PollingRefreshable.

* Add generated changelog entries

* Add generated changelog entries
Autorelease 0.180.2","Type
Description
Link
Improvement
Remove PollingRefreshable from the codebase to address thread leaks."
"Autorelease 0.176.1
[Timelock Partitioning] Part 44d: Revert partitioning refactors ()

* Revert ""[Timelock Partitioning] Part 44c: Restore batching behaviour. ()""

This reverts commit 722660dedacabc73ffb55fcb2ae42879c5b9e473.

* Revert ""[Timelock Partitioning] Part 44b: Ensure same instance of `Lead… ()""

This reverts commit 80c84b2391b35ea45645cd38d1753eda00dc7ebc.

* Revert ""[Timelock Partitioning] Part 44: `LeadershipContextFactory` ()""

This reverts commit 8148d2533519b17110bca104f0a747a832b6c529.

* Add generated changelog entries

* Add generated changelog entries

* Revert ""Fix develop ()""

This reverts commit 20babb5c3440b9286e0a7e198979f6ff4527a8a4.

* Add generated changelog entries
Autorelease 0.176.2","Type
Description
Link
Fix
Revert timelock partitioning changes until ready to investigate loss of metrics."
"Autorelease 0.181.1
Change logging level of Rollback Other Transaction Logline ()
Shorter Nonblocking Calls, Part 2: Configurable Support in Parameters ()

* Refactor ClientOptions

* Master key

* Checkstyle and test artifacts

* AtomicLong

* More unusedness

* Changelog

* PR comments

* move comments to constant
Downgrade transaction rollback during commit log line to debug ()
Shorter Nonblocking Calls, Part 3: Breaking the TimeLock Logjam ()

* Initial attempt

* Test

* immutables

* sensitive lock

* Create blocking lock rpc client

* Changelogs
Fix develop ()
Autorelease 0.181.2","Type
Description
Link
Improvement
Change logging level of Rollback Other Transaction LoglineChange the level of logging from info to debug for the message This isn't a bug but it should be very infrequent. Two transactions tried to roll back someone else's request with start: {} from SnapshotTransaction as we already have logging for when that happens.
Improvement
Users can now specify when creating HTTP clients whether the client is expected to support endpoints that may block for extended periods on the server (by default, this is supported as in previous versions).Client use-cases where endpoints are expected to return relatively quickly will benefit from having shouldSupportBlockingOperations being specified as false. In the event of connection failures or irregularities, the connection should be retried after approximately 12.6 seconds (as opposed to 65).
Improvement
Read timeouts for the majority of TimeLock calls have been reduced from 65 to approximately 12.6 seconds. This allows for faster client-side recovery in the presence of unresponsive TimeLock hosts."
"Instrument timestamp cache ()

* Instrument timestamp cache.

* Instrument timestamp cache with timed.
Fix potential flake in CassandraTimestampsEteTest ()

* Fix potential flake in CassandraTimestampsEteTest

* Add generated changelog entries
Granular health checks. ()
Autorelease 0.180.1","Type
Description
Link
Fix
Fix a potential flake in CassandraTimestampsEteTest."
"Autorelease 0.177.4
Remove PollingRefreshable from CJR codepath. ()
Autorelease 0.177.5","Type
Description
Link
Improvement
Remediate a thread leak when the we reload the http clients every 30 minutes."
"Small refactoring to fix visibility. ()

* Fixed errors.

* Fix mess.
Increase default buffer size to 2048 ()

* Increase default buffer size to 8192

We see issues internally when the buffer fills up - we think there's a bug in the Disruptor where it spinloops on LockSupport.park(1 nanosecond) and death spirals. Thankfully, the amount of stuff in the queue is proportional to the number of threads that block on it and so this is typically at most in the low thousands. I therefore think that while my other PR will work fine, this is much less churn, will not significantly bloat memory, and will take us out of the woods.

* Add generated changelog entries
Autorelease 0.184.1","Type
Description
Link
Improvement
Increase default autobatcher buffer size to 2048"
"Autorelease 0.177.6
Throwables.rewrap does not attempt to replace stack frames ()

The old behaviuor lead to unreadable stack traces that are not
helpful for debugging. For an example, add a dependency on
`slf4j-simple` in `leader-election-impl/build.gradle` and run
PaxosConsensusFastTest. It takes a very long time to run, and
the stack trace doesn't make sense.
Add metrics for off-heap timestamp cache. ()

* Start

* Metrics.

* Cache size metric.

* Added resettable counter for cache size metric.

* Added tests for counter.

* Simplified.

* Single gauge register for cache.
Excavator: Migrate annotation processors to native gradle imple… ()
[Timelock Partitioning] Part 44f: More metrics fixes ()

* Failing test.

* Fix for failing metrics.

* Add generated changelog entries
Autorelease 0.177.7","Type
Description
Link
Fix
Metrics should now be produced with the new Timelock Partitioning code path."
"Autorelease 0.177.8
Ensure that `NotCurrentLeaderExceptionMapper` can leverage the… ()

* Wire in ability to detect leader all the way to `LeaderElectionService`.

* Pipe through the host and port to the `AwaitingLeaderProxy`

* NotCurrentLeaderExceptionMapper now pipes the service hint to the RedirectRetryTargeter and reacts accordingly.

* Fix up redirect retry targeter tests

* Add generated changelog entries

* Update pr-4481.v2.yml

* Actually wire it in.

* Checkstyle

* Fix up tests.

* Remove config option from `PaxosRuntimeConfiguration`

* Shuffle around isSuccessful to make more sense.

* Checkstyle.

* Add generated changelog entries

* Use URL everywhere...

* Fix unresolved compile errors.

* Stop trying to add the protocol.

* Fix up whitespace and have some semblance of back compat with URL and HostAndPort

* Revert ""Use URL everywhere...""

This reverts commit b86200d9a130bf456e7251041eefd6a88e38250d.

* Generate host and port correctly.

* Revert ""Fix unresolved compile errors.""

This reverts commit f871b721

* Wire in leader address cache ttl to the new stuff.

* Be clearer in the docs.

* Make changes taking into account Timelock partitioning.
Autorelease 0.177.9","Type
Description
Link
Improvement
Fix issue where we could get into a retry loop which when exhausted would manifest in a non-actionable and non-retryable error resulting in visible failures."
"Autorelease 0.185.5
[Timelock Partitioning] Collapse silly code ()

* Get rid of earlier structures that are unnecessarily complicated now.

* Set the batch timestamp paxos stuff.

* Minor change.

* Actually get rid of the `PaxosUseCaseContext`.
Add eggtimer. ()

* Add eggtimer.

* Add generated changelog entries
Autorelease 0.185.6","Type
Description
Link
Improvement
Add eggtimer.Goals (and why):Make sure releases happen often.Implementation Description (bullets):I don't know if this will actually work.Testing (What was existing testing like?  What have you done to improve it?):Concerns (what feedback would you like?):Where should we start reviewing?:Priority (whenever / two weeks / yesterday):<!---Please remember to:- Add any necessary release notes (including breaking changes)- Make sure the documentation is up to date for your change--->"
"Be better, one day at a time. Also fix nasty concurrency issue. ()
Safer workflow for getting rows from CassandraKvs ()

* Prototype

* Minor changes.

* Use multiget_multislice

* Make read limit configurable + cleanup

* Add todos

* Test clean up

* Bug Fix

* Refactor | part 1

* Refactor | credits - Felix

* Minor refactor

* Bug fix

* Remove unnecessary change

* Address comments

* Modify read limit

* Test added

* Minor test refactor

* Add generated changelog entries

* Update pr-4588.v2.yml

* Address comments

* Update pr-4588.v2.yml

* Checkstyles
Autorelease 0.190.1","Type
Description
Link
Improvement
To avoid very large reads on Cassandra, the getRows endpoint now splits a read query into number of serial requests with limited reads instead of fetching all the cells (all the versions) for a given list of rows from Cassandra. It is maintained that all the cells are read and only (some) older versions of cells may be skipped while reading from Cassandra.The read limit per request is configurable."
"Update certs again. ()
Remove targeted sweep rate limiting from Timelock. ()

* Remove targeted sweep rate limiting from Timelock.

* Add generated changelog entries
safe-tag connection pool logging ()

* Add generated changelog entries

* safe-tag connection pool logging
Autorelease 0.188.1","Type
Description
Link
Improvement
Added safeLogging tags to SQL connection pool logging.
Improvement
Remove targeted sweep rate limiting from Timelock."
"Autorelease 0.185.1
Reset the Cassandra cluster after runs of Single/DoubleNodeDown ETE Test ()

* Add generated changelog entries

* Reset the Cassandra cluster after runs of Single/DoubleNodeDown ETE Test

* Update MultiCassandraUtils.java
Improve Metrics Logging To Indicate Sources ()

* I exist to show you the stack trace

* Add generated changelog entries
Autorelease 0.185.2","Type
Description
Link
Fix
Reset the Cassandra cluster after runs of Single/DoubleNodeDown ETE Test.
Improvement
Indicate the source of instrumentation (stack trace) when logging that something was instrumented. Internal reference PDS-109071."
"Autorelease 0.185.2
Fix coalescing supplier ()

* Fix coalescing supplier

Let's just take out a lock - and write a test that covers it. It's more
obviously correct.

* Refactor

* Refactor fix

* remove lock

* Add generated changelog entries

* Add generated changelog entries
Autorelease 0.185.3","Type
Description
Link
Fix
Fix coalescing supplier race condition"
"Autorelease 0.190.5
Refactor out an AsyncRetrier to allow for better testing ()

* Add generated changelog entries

* Refactor out an AsyncRetrier to allow for better testing

* Execute
Autorelease 0.190.6","Type
Description
Link
Improvement
Refactor out an AsyncRetrier to allow for better testing"
"Autorelease 0.185.3
Configurable perister creation ()

* add ability to reuse persistor instance in bytes hydrater implementation for user specified persister

* annotate reusable persisters

* remove redundant code

* refactor

* refactor

* add test to verify generated code when persister is reusable

* minor refactor

* Add generated changelog entries

* update changelog

* Address comments(1) | refactor

* Address comments(2) | add comment

* Test with reusable stringValuePersister

* Modify existing test

* Address comments

* Update changelog
[Timelock Partitioning] Part 50: Wire up multi leader paxos ()

* Necessary changes to support multi leader pingers

* Add config option for the paxos leader mode.

* Wire the new stuff in.

* Log paxos configuration when the test timelock server starts up.

* Wire existing tests for multi leader.

* Checkstyle.

* Propagate leader mode everywhere.

* Nits.

* Rebalancing.

* LeaderPingerFactoryContainer class

* Change to info.
[Timelock Partitioning] Part 50b: Fix develop ()
Excavator: Migrate annotation processors to native gradle implementation ()
Excavator: Ensure consistent gradle/publish-(jar|dist).gradle files ()
Timelock Metric Fixes ()

* Remove double reporting of metrics.

* Instrument individual learner/acceptor network clients

* Remove version selecting client to stop double reporting metrics.

* Fix compile errors.

* Add generated changelog entries

* Fix tests to actually go through the conjure path.

* Ensure we're instrumenting the remote wrappers via enhanceRemotes.
[LW] Part 9(?): Lock Descriptor Utils ()

* LockDescriptor inverse mapping utils

* Address CR
[LW] 2nd Prequel to Part 5: LockWatchStateUpdater ()

* Get the trivial stuff out of the way

* Add last update to VLWS, fix matchers in tests

* Add LWSUpdater and tests

* Fix
Refactor sweep strategy manager ()

* Refector sweep strategy manager

The primary motivation here is to automatically recompute the cache of
sweep strategies if a request is made for an unknown table reference.
Previously, we were just returning a null sweep strategy (which we
happened to only compare with for reference equality so it never npe'd).

* changelog

Co-authored-by: twilson-palantir <twilson-palantir@users.noreply.github.com>
[PDS-110262] Meter for Cassandra pool exhaustion events ()
Better log when rolled back by someone else ()
Make max threadpool size for Cass calls track connection pool sizes. ()
Autorelease 0.185.4","Type
Description
Link
Improvement
Ability to make persister reusable (through specifying the @reusable annotation) and not to create a new instance on each hydration. Schemas must be regenerated in order to enable this.Note: Persisters are only reusable if they're thread-safe and stateless.The default behaviour is to create a new instance of persister on each hydration to avoid issues with persisters which are stateful.
Fix
The SweepStrategyManager now reloads sweep strategies when the strategy foran unknown table is requested. This fixes consumers of sweep strategies forclients who dynamically create tables or change table metadata.
Improvement
Correctly report metrics for certain popular Timelock endpoints. Reduced the places where we over report/double count the number of calls of a particular metric
Improvement
AtlasDB now publishes a metric that can be used to monitor Cassandra connection pool exhaustion.
Improvement
Make max threadpool size for Cass calls track connection pool sizes and improve instrumentation around queueing duration."
"Autorelease 0.185.6
Range request explicit column selection ()

* Include all columns in rangeRequest explicitly when columnSelection is empty.

* Augment columnSelection for getAllRowsUnordered | range scan is turned off

* Fix copyright

* Regenerate schemas

* Add generated changelog entries

* Address comments + Refactor

* Refactor

* Refactor

* Regenerate schema

* Address comments

* Regenerate Schema

* Remove quotes from changelog description
Fix yaml formatting in changelog ()
Autorelease 0.185.7","Type
Description
Link
Improvement
AtlasDB generated code now optimises getRanges and getRangesLazy toselect only required columns. This is known to improve performance for single-columntables (Nathan's optimization). This does not affect dynamic column tables.AtlasDB users that check in their schemas need to regenerate them to benefit from this improvement."
"Autorelease 0.190.3
[Conjure Undertow, Part 2] Upgrade timelock dependency and inline ()

* Upgrade timelock dependency and inline

* Update LockLeaseService.java

* Add generated changelog entries

* Update LockLeaseService.java

* Fixes

* checkstyle

Co-authored-by: James Baker <j.baker@outlook.com>
Autorelease 0.190.4","Type
Description
Link
Improvement
Actually use conjure undertow endpoints"
"Autorelease 0.189.1
SweepStrategyManagers use RecomputingSupplier to initialize async ()
Autorelease 0.189.2","Type
Description
Link
Fix
SweepStrategyManagers uses RecomputingSupplier again to initialize async while still ensuring that only one thread loads metadata for all tables at once."
"Autorelease 0.190.2
[LW] Snapshot Updates ()

* Be better, one day at a time. Also fix nasty concurrency issue.

* Rework lock watch updates and registration

* Do not filter unlocks for replayer

* Add test for snapshot reflecting events logged during open locks calculation

* Address CR
switch to using lighter-weight JDBC connection testing ()

* switch to using lighter JDBC connection testing

* Add generated changelog entries
Autorelease 0.190.3","Type
Description
Link
Improvement
Switched to using lighter-weight JDBC connection testing on pool check-in and check-out"
"Autorelease 0.188.2
Excavator: All Repositories use https ()
[Timelock OOMs] Stop `PaxosQuorumChecker` cancellation ()

* Pass BooleanSupplier everywhere to configure whether or not we should cancel remaining calls.

* Wire the config through.

* Ensure it's fully wired through.

* Add generated changelog entries

* No live reloading, and if we're in timelock just introduce a constant.

* CR comments.
Autorelease 0.188.3","Type
Description
Link
Fix
Add the ability to stop cancelling remaining calls in PaxosQuorumChecker."
"Autorelease 0.185.4
[PDS-109527 FLUP] TimeLock Invariant Enforcement Part 1: Only One Leader Allowed ()

* Invariants

* stash

* Wire up check

* Checkstyle

* Switch to delegating model

* Tests

* Refactor

* Add generated changelog entries

* bugfix

* Imports

* Actually track issued timestamps, update tests to reflect that

* Add generated changelog entries

* Add generated changelog entries

Co-authored-by: gmaretic <grgapm@gmail.com>
Autorelease 0.185.5","Type
Description
Link
Improvement
TimeLock now logs ERROR messages if multiple nodes are believed to be servicing timestamps for a given namespace that are non-monotonic. We intend to gather confidence that our detection mechanisms don't have false positives, and then stop the server in this case."
"Autorelease 0.190.4
Remove c3p0 ()

* Remove c3p0

* Remove libVersions.c3p0
[LW] Expose LW Info in TM ()

* Be better, one day at a time. Also fix nasty concurrency issue.

* Rework lock watch updates and registration

* Do not filter unlocks for replayer

* Add test for snapshot reflecting events logged during open locks calculation

* Expose the interface that we need to get lock watch updates as an atlas client

* Some refactoring

* Address CR and move to a better package
Revert ""switch to using lighter-weight JDBC connection testing ()"" ()

* Revert ""switch to using lighter-weight JDBC connection testing ()""

This reverts commit 2cc4e39d618d9b09d495e10061bdb076af136636.

* Add generated changelog entries
Autorelease 0.190.5","Type
Description
Link
Improvement
Revert ""switch to using lighter-weight JDBC connection testing ()"""
"Prefixed path for persistent storage ()

* Prerequisites.

* No more static state.

* Fix tests.

* Simple fixes.

* Fixed tests.

* Fix tests.

* Fixed.
Log metrics registration ()

* Log metrics registration

* Add generated changelog entries
Autorelease 0.185.1","Type
Description
Link
Improvement
AtlasDB now logs whenever an interface is instrumented via AtlasDbMetrics."
"Autorelease 0.193.2
[Large Internal Product] Oracle config builders must be public ()

* careless with abstract classes

* Add generated changelog entries
Autorelease 0.193.3","Type
Description
Link
Fix
Fix bug that prevented programmatic creation of Oracle connection configuration."
"Autorelease 0.193.1
[PDS-113136/PDS-113116] Corroboration Check Exception Logging ()

* Log the exception

* Add generated changelog entries
Autorelease 0.193.2","Type
Description
Link
Improvement
Timestamp corroboration checks now log the exception when unable to get a timestamp."
"Autorelease 0.191.3
Add Conjureable analogues for remaining endpoints ()

* Add generated changelog entries

* Add Conjureable analogues for remaining endpoints

* Less jank

* Fix lock log
Autorelease 0.191.4","Type
Description
Link
Improvement
Add Conjureable analogues for remaining endpointsMost of the remaining endpoints in timelockrpcclient end up being Conjured (including lock endpoints)."
"Autorelease 0.191.4
[Timelock Partitioning] Part 52: ManualBatchingLeaderPinger ()

* Put exceptions in the correct place for logs.

* Don't spin up a new thread just so we can have timeouts.

* Try bounded leader pinger.

* Actually wire in the ping rate.

* Log when the pinger itself times out, and also make sure the timeout logic is correct.

* Update comments and log lines.

* Remove tag from testing.

* Add tests for ManualBatchingPingableLeader

* Address PR comments.
Remove some metrics that are dominating the actual computation ()

* Add generated changelog entries

* Remove some metrics
[PDS-105073] Support Specifying Service Name in Oracle Connection Config ()

* Allow specifying of a service name for Oracle config.

* Update docs

* Not expected because of ordering issue

* Add generated changelog entries

* CS

* PR comments

* Docs

* DbKVS test

* Add generated changelog entries
Autorelease 0.191.5","Type
Description
Link
Improvement
Oracle users may now connect to an Oracle database via serviceNameConfiguration as opposed to sid.
Improvement
Remove some metrics that are dominating the actual computation"
"Autorelease 0.191.1
Improve observability of DisruptorAutobatcher. ()

* Autobatchers can now take safe tags.

* Add simple test.

* Bump tracing

* Add ability to trace autobatchers.

* Separate out `TracingEventHandler` and add tests for it.

* Amend current tests to verify that we call the delegate.

* Fix up checkstyle.
SweepStrategyManagers first init is synchronous ()
SweepStrategyManagers use RecomputingSupplier to initialize async ()
Autorelease 0.191.2","Type
Description
Link
Improvement
First initialization of SweepStrategyManagers is synchronous. Thishelps avoid a scenario where multiple queries all try to load all tables' metadataat the same time.Also, add a duration for that cache so that tables that tables that get deleted caneventually leave the cache.
Fix
SweepStrategyManagers uses RecomputingSupplier again to initialize async while still ensuring that only one thread loads metadata for all tables at once."
"Add implementation of getFreshTimestamps to the conjure timelock service ()

* Add implementation of getFreshTimestamps to the conjure timelock service

Should be dead easy to validate as correct.

* Fix compile
[LW] Batched get commit timestamps endpoint ()

* Batched get commit timestamps

* Add generated changelog entries

* Update timelock-impl/src/main/java/com/palantir/atlasdb/timelock/AsyncTimelockServiceImpl.java

Co-Authored-By: Felix de Souza <fdesouza@palantir.com>

Co-authored-by: Felix de Souza <desouza.felix.93@gmail.com>
SweepStrategyManagers only load one table metadata on cache miss ()
If a method returned by AwaitingLeadershipProxy returns ListenableFuture, the leadership check is also asynchronous ()

* Checkpoint with jeremy

* PR comments

* refactor

* Refactor out an AsyncRetrier to allow for better testing

* Add a benchmark for awaiting leadership proxy

* PR test failures

* Refactor coalescingsupplier

* merge conflict

* Extra test

* cleanup

* checkstyel

* PR commetns

* Add generated changelog entries

* PR comments

* Move a bunch more stuff to async

means our current hot codepaths stay hot even before moving them to
conjure

* Thread pool

* rewrapping...
Autorelease 0.191.1","Type
Description
Link
Fix
After first initialization, SweepStrategyManagers now only loads one table metadata on a cache miss, rather thanloading all tables' metadata each time (which could include a LOT of tables). This should improve performancewhen there are many dynamic tables being created.
Improvement
If a method returned by AwaitingLeadershipProxy returns ListenableFuture, the leadership check is also asynchronous.
Improvement
Added a batched endpoint for getting commit timestamps with lock watch state"
"Autorelease 0.191.2
[LW] Add LW to conjure start transactions ()

* Break the API to support LW

* Do not break API

* Fix

* Add generated changelog entries

* Fix conjure

* Amend changelog with product dependency info
Autorelease 0.191.3","Type
Description
Link
Improvement
Start transactions requests now return lock watch state information. This forces a product dependency on timelockserver version 0.144.0 and higher."
"Autorelease 0.194.0
Fix bug in CoalescingSupplier ()

* Don't propagate cancellation through the coalescing supplier

* Fix bug in CoalescingSupplier

Currently doesn't handle cancellation. This totally fucks up the state
machine, because it means that the future is complete before next is
set (and next may never be set) which means that it can all totally
crash.

* fix

* undo

* Add generated changelog entries

* Add generated changelog entries

* Move CRV annotation

Co-authored-by: Jeremy Kong <jeremykong@hotmail.com>
Autorelease 0.194.1","Type
Description
Link
Feature
Fix bug in CoalescingSupplier that leads to the async method cancellation messing up the state."
"Autorelease 0.191.5
[Conjure Java Runtime] Part 28: Modernisation and Recovery of Jepsen ()

* Use openjdk

* Security

* More stuff

* Fix bad naming

* CR feedback

* Give certs expiry dates probably long after AtlasDB stops being used.

* Fix timestamp client

* Make us assume stuff blocks
Client side changes for conjure endpoints ()

* Client side changes for conjure

* Test fixes

* Fixes

* $

* Optimize imports

* Add generated changelog entries
Autorelease 0.191.6","Type
Description
Link
Improvement
All AtlasDB calls to timelock use Conjure in normal operation"
"Reintroduce default impl for LWM until it's fully wired in ()
[PDS-113120] Conjure TimeLock Service had blocking and non-bloc… ()

* Blocking and non blocking services

* test

* Add generated changelog entries
Autorelease 0.193.1","Type
Description
Link
Fix
RPC calls to TimeLock via Conjure now correctly block for either a short (10s) or long (60s) duration depending on what the call does. Previously, these were swapped, which manifested as lock requests on contended locks aborting from the client side after 10 seconds even though they could be served."
"Add missing test to ReplaceIfExceptionMatchingProxy. ()
[PDS-113120] Block Enforcing (Client-Side) Lock Service ()

* Failing test

* ASLS

* simplify multinode test

* Wait for locks

* Patch

* Refactor

* Test

* Add generated changelog entries

* Cleanup

* update tests

* cs

* James PR comments

* one ete
Autorelease 0.195.1","Type
Description
Link
Fix
Lock and waitForLocks requests to the V2 lock service that had blocking timeouts of more than 60 seconds should now work properly if invoked through the lock service in AtlasDB. Previously, these would fail with SocketTimeoutExceptions."
"Autorelease 0.194.1
Change conjure client replacement logic to replace ASAP  ()

* Replace if exception matching

* Change conjure client replacement logic to replace ASAP

Rebase of https://github.com/palantir/atlasdb/pull/4584

* Fix up

* Fix test

* Delete selfrefreshingproxy

* Add generated changelog entries

* Add log line

* Fix

* Logging fix

* Remove unnecessary test.

* Move synchronized block.

* Use AbstractInvocationHandler.

* Fixup changelog.

Co-authored-by: jakubk <jakubk@palantir.com>
Autorelease 0.194.2","Type
Description
Link
Improvement
Change conjure client replacement logic to replace clients ASAP instead of on a schedule."
"Autorelease 0.198.7
[Timelock Perf] Disruptor future ()

* Add generated changelog entries

* DisruptorFutures now have traces for each portion.

* Fix up usages everywhere.

* Checkstyle.

* Update changelog/@unreleased/pr-4674.v2.yml

Co-Authored-By: Jeremy Kong <jeremykong@hotmail.com>

Co-authored-by: Jeremy Kong <jeremykong@hotmail.com>
Autorelease 0.198.8","Type
Description
Link
Improvement
Disruptor Autobatchers now trace their calls. Time spent waiting for the batch to start and for the batch to be processed are also tracked in child spans."
"[Timelock Partitioning] Part 51: Wiremock integration tests for… ()

* Add wiremock capabilities to the tests.

* Add some multi leader tests.

* Fix checkstyle and broken tests.

* Use correct truststore and password.

* Checkstyle and remove truststore.

* Address comments.

* Support conjure endpoints.
[Timelock Partitioning] Part 55: Takeover primitive ()

* Add ability to take over leadership via an endpoint.

* Batch Namespace Takeover resource.

* Checkstyle.

* Update leader-election-api/src/main/java/com/palantir/leader/LeaderElectionService.java

Co-Authored-By: Jeremy Kong <jeremykong@hotmail.com>

* Address comments.

* Delete SerializingProxy.java

Co-authored-by: Jeremy Kong <jeremykong@hotmail.com>
Async Metrics ()

* Add Timer cache to metrics.

* Async Metrics Handling

* Add generated changelog entries

* Add generated changelog entries

* Get rid of random block.

* PR comment

* Refactor.

* Add extra check.

* Revert refactor.
Autorelease 0.198.1","Type
Description
Link
Improvement
Methods returning ListenableFutures now have their metrics accurately tracked."
"Autorelease 0.198.4
Include extra tags for failure metrics ()

* Add generated changelog entries

* include extra tags for failure metrics

* Error prone.
[Timelock Partitioning] Part 53b: Fix insiduous cache bug ()
Make #close safer. ()
Autorelease 0.198.5","Type
Description
Link
Improvement
Instrumented method failures now include any supplied extra tags in the failure metric name."
"Autorelease 0.198.1
[PDS-113496] Martin Lewis's Muse Part 1: Snapshot Transaction ()

* Snapshot Transaction Read and Cell Filter Metrics

* Add generated changelog entries

* Remove unused method

* No more meters
Autorelease 0.198.2","Type
Description
Link
Improvement
SnapshotTransaction now produces counters instead of meters for previously counter-backed CellFilterMetrics, and also for numCellsRead and numCellsReturnedAfterFiltering."
"Autorelease 0.198.6
[PDS-114184] Increase transaction read timeout in CLI to 8 hours ()

* override transaction timeout millis in CLI

* Add generated changelog entries

* use non-retriable txns

* remove accidental character

* update timeout

* Add generated changelog entries

* temp remove changelog
The Wrath of Indonesia: JavaX -> Jakarta Migration ()

* test

* http2

* Add jakarta

* No need to pin validation-api

* substitution hell

* cleanup

* argh

* aargh

* Dependencies

* Revert

* This is probably a very bad idea

* Bad ideas

* Es ist schwer zu sagen...

* Remove BCU: verified that no jakarta/javax stuff is involved in conflicts

* Add generated changelog entries

* old metrics

* bla

* maybe:

* blargh

* maybe?
Autorelease 0.198.7","Type
Description
Link
Improvement
Conjure Java Runtime is upgraded to 4.70.1.
Improvement
[PDS-114184] Increase transaction read timeout in CLI to 8 hours, and disable retries on the validation transactions."
"Autorelease 0.198.2
[PDS-111849] Trace Parts of AwaitingLeadershipProxy ()

* Trace parts of AwaitingLeadershipProxy.

* Add generated changelog entries

* Tracing tests and fix

* Trace individual attempts.

* baseline

* sad

* Test tracing

* Golden traces

* Revert ""Golden traces""

This reverts commit d3f7386bbf32c1b89e18b0bce97f4965febac858.

* Revert ""Test tracing""

This reverts commit b30c9babf11c93ea96de2bdfba31e401ed2fbb89.

* Revert ""sad""

This reverts commit 140677eaeec52c28fce04a0201a9d5b75c5d87ae.
Autorelease 0.198.3","Type
Description
Link
Improvement
AwaitingLeadershipProxy now opens spans for checking it is still the leader and then actually executing the relevant method on the delegate."
"Autorelease 0.198.5
Increase default buffer size to 4096  ()

* Increase default buffer size to 4096

* Add generated changelog entries
Autorelease 0.198.6","Type
Description
Link
Improvement
Increase default autobatcher buffer size to 4096"
"Autorelease 0.198.8
Optimize getRowsColumnRange ()

* Optimize getRowsColumnRange

We're seeing perf issues internally on the random getRowsColumnRange
implementation that works better on Postgres and Oracle. This is the way
to make it both simpler, and faster.

* fix compilation

* checkstyle

* add tests for getRowsColumnRange single iterator version

* Add generated changelog entries

* Add generated changelog entries

Co-authored-by: Michael Wintermeyer <michaelw@palantir.com>
Autorelease 0.198.9","Type
Description
Link
Improvement
Performance of getRowsColumnRange has been improved, especially when querying many rows at the same time."
"Autorelease 0.202.1
getRowsColumnRange always has cells grouped by row ()

Ensure that throughout the iterator manipulation that happens
internally to getRowsColumnRange that we maintain the invariant
that all cells for a given row will be grouped together at the end.
Autorelease 0.202.2","Type
Description
Link
Fix
Fixes a bug in 0.198.9. Transaction#getRowsColumnRange (the 4 parameter version) will now properly return cells for a row all grouped together in one batch (no cells from other rows mixed in)."
"Autorelease 0.202.2
[PDS-111849] Rolling in the Deep, Part 2: Bounded Executors for Acceptors (Single and Batched) ()

* Fix single leader version

* Wire up everything

* Explain reasoning around paxos executors

* Testing

* Add generated changelog entries

* aargh

* baseline

* Fix underprovisioned circle boxes

* watch the parallelism on container 7

* Kick the Circle build

* bounded shared executor

* smaller PR comments

* Apply suggestions from code review

Co-Authored-By: gmaretic <gmaretic@palantir.com>

* Rejection tracking policy

* Compile break

* More compile breaks

* checkstyleg

Co-authored-by: gmaretic <gmaretic@palantir.com>
Autorelease 0.202.3","Type
Description
Link
Improvement
TimeLock Server (and leaders in embedded configurations) should now be much more resilient to a slowly responding individual cluster node. Previously, the number of threads involved in validating consensus could potentially grow unbounded."
"Tag remote hosts for internode communication ()
[CentOS Migration] Part 1: Configurable Ban on New Clients ()

* Wiring and tests

* Improve tests

* Add generated changelog entries

* Refactor directory-does-not-exist to its own method
Autorelease 0.209.1","Type
Description
Link
Improvement
Allow timelock to be configured to prohibit new clients from being created (via setting can-create-new-clients to false). The operation of extracting all live clients is common in operational workflows.Note that this configuration takes place on a node level. Thus, if there are clients where some nodes never participated in any quorum, then these nodes may reject requests made for these clients. The cluster will be able to service clients which a majority of nodes knew about before this configuration option was enabled."
"Autorelease 0.204.1
fix ServiceLoader in ServiceDiscoveringAtlasSupplier ()

* fix ServiceLoader in ServiceDiscoveringAtlasSupplier

ServiceLoader is not thread safe

* Add generated changelog entries

* Update pr-4696.v2.yml

Co-authored-by: Tim Wilson <twilson@palantir.com>
Autorelease 0.204.2","Type
Description
Link
Fix
ServiceDiscoveringAtlasSupplier now properly searches for AtlasDbFactory implementations in a thread safe manner."
"[TimeLock Partitioning] Part 57: Single Leader Mode Exposes Both Solo And Batch Modes ()

* Leader paxos resources

* Wire up both new and old endpoints

* Dont change test unexpectedly
ProfilingTimelockService delegates initialization check ()

* Add generated changelog entries

* ProfilingTimelockService delegates initialization check
Autorelease 0.202.1","Type
Description
Link
Fix
Timelock and timestamp services used in transaction managers now correctly report whether or not they are initialized."
"[LW] Remove old client and resource and use undertow ()

* Remove old client and resource and use undertow

* Remove double newline
[PDS-111849] Rolling in the Deep, Part 4: Relax Shared Executor Bound ()

* Revert to unbounded shared executor for now

* O checkstyle

* Add generated changelog entries
Autorelease 0.204.1","Type
Description
Link
Fix
TimeLock rolling bounces should be more stable - previously if there were a number of inflight requests at the time of the rolling bounce there would be an outage owing to thread saturation on a thread pool. We have relaxed the bounds on that pool; metrics for the pool's size should continue to be monitored."
"Autorelease 0.210.1
Use refreshable for runtime config ()
Autorelease 0.210.2","Type
Description
Link
Improvement
Introduced the ability to pass a Refreshable for AtlasDbRuntimeConfig, instead of a Supplier."
"[PaxosLog] Use JDBI and add namespacing ()

* Use JDBI

* Package private

* Prevent test connection from closing so we don't need to have funky factory in production code

* Address CR

* CR
[PDS-117161] Add additional logging on close of Snapshot Transaction Manager ()
Remove deprecation until downstream services catch up. ()
Autorelease 0.211.1","Type
Description
Link
Improvement
Remove deprecation on TransactionManagers#runtimeConfigSupplier until downstream services catch up."
"Autorelease 0.213.1
Revert revert stream corruption ()

* Add generated changelog entries

* Add generated changelog entries

* Add generated changelog entries

* Add generated changelog entries

* Demo | Update metadata cleanup task to delete unreferenced streams

* Demo | Update metadata cleanup task to delete unreferenced streams

* rm

* Modify renderer

* Fix style

* rm

* Regenerate schemas

* Fix tests

* Modify codegen | bug fix

* Regenerate schemas

* Remove redundant test

* Checkstyle
PG-148649: AgnosticLightResultSetImpl doesn't fill the finalizer queue ()

* PG-148649: AgnosticLightResultSetImpl doesn't fill the finalizer queue

Objects which implement `finalize` end up on the single-threaded
finalizer queue which causes servers to oom.

* Add generated changelog entries
Autorelease 0.213.2","Type
Description
Link
Fix
Stream store metadata cleanup tasks now clear up streams that are stored if they have zero entries in the index table. Previously, if a service crashed between storing a stream non-transactionally and marking it (or otherwise chose not to mark the stream as used), the stream data for the unmarked stream would never be cleared from the database.Note that this change does not apply retroactively to streams that were already leaked as described above.Users who have checked in the generated AtlasDB schema code will need to regenerate their schemas once they are on this version of AtlasDB. Users that re-generate this via buildscripts do not need to perform any manual tasks.
Fix
Fix OOM caused by AgnosticLightResultSetImpl filling the finalizer queue under heavy load."
"[PaxosLog] VerifyingPaxosStateLog ()

* sqlite

* Checkpoint

* Clean up a bit and add tests

* Improve test

* MigrationPaxosStateLog and part of tests

* Migration -> Verifying

* Address CR, add tests

* Checkstyle

Co-authored-by: Jeremy Kong <jeremykong@hotmail.com>
Standardize on NamedThreadFactory for observability ()

* Standardize on NamedThreadFactory for observability

Instead of using a mix between ThreadFactoryBuilder and
NamedThreadFactory, we standardize on the latter for standard
instrumentation.

* Add generated changelog entries

* daemon
Autorelease 0.213.1","Type
Description
Link
Improvement
Standardize on NamedThreadFactory for observability. All Executors produce tagged thread-factory instrumentation."
"Autorelease 0.220.1
[Dialogue] Part 6b: api not impl ()

* api not impl

* Add generated changelog entries

* Add generated changelog entries
Autorelease 0.220.2","Type
Description
Link
Fix
Dialogue users no longer need to explicitly declare a dependency on dialogue-clients; previously they had to."
"Autorelease 0.216.1
Implement better TM closing ()

* Implement better TM closing

* Add generated changelog entries

* Address CR:
Autorelease 0.216.2","Type
Description
Link
Improvement
Transaction Manager closing is now more resilient to a single subtask blocking indefinitely."
"Upgrade dialogue & conjure-java ()

* Upgrade dialogue & conjure-java

* jboss-threads
[PaxosStateLog] Validate without migration ()

* Again don't do migrations

* Validate but do not migrate

* Update

* Add generated changelog entries

* Do better verification
Autorelease 0.221.1","Type
Description
Link
Improvement
AtlasDB now supports Paxos state logs that validate themselves using an alternative implementation. Please contact the AtlasDB team should you wish to use this feature."
"Autorelease 0.211.1
allow disabling sweepstats kvs live ()

Co-authored-by: Stephen Freiberg <sfreiberg@palantir.com>
[PaxosLog] Part 3: Namespacing SqlitePaxosStateLog ()

* Namespaced paxos state log

* Add test for namespacing

* Wiring up learners to expose

* Compile break

Co-authored-by: Grgur Petric Maretic <grgapm@gmail.com>
Fix flaky test ()
Get all namespaces ()

* Resource and loader

* Wiring creation

* Fix

* Null check

* Address comments

* Address comments - I

* Address comments

Co-authored-by: Jeremy Kong <jeremykong@hotmail.com>
Autorelease 0.211.2","Type
Description
Link
Improvement
Added a flag to SweepStatsKeyValueService to allow online disabling it."
"Autorelease 0.218.0
Filter out leaderPaxos from list of namespaces ()

* Filter out leaderPaxos from list of namespaces

* Add generated changelog entries

* Fix imports

* Add generated changelog entries

* Tests

* Resolve conflict

* Modify test

* Address comments -1

* Address comments - 2
[Dialogue] Part 2: Translation from AtlasDB Services to ServiceConfigBlocks ()

* Add generated changelog entries

* versions

* HRD and refactoring

* ADDSP impl

* DialogueClientOptionsTest and bugfix

* don't put ADDSP in this commit

* fix funky test

* salts test

* DACTS not in this PR

* baseline

* baseline 2

* baseline

* Revert ""Add generated changelog entries""

This reverts commit f8da751a5606d084f07c9ff120971f36255707fd.

* CR
[Dialogue] Part 3: AtlasDbDialogueServiceProvider ()

* Add generated changelog entries

* ADDSP impl

* DACTS not in this PR

* Revert ""don't put ADDSP in this commit""

This reverts commit 0b20b83e8fc021971d4f979b8d4d5da4eb403296.

* Revert ""DACTS not in this PR""

This reverts commit e746ac95672c2192281777b4b502e880f07005e0.

* sp test

* Fix test

* Dialogue 1.40.1 and combine once-failing tests because they now pass

* bleh

* borked changelog

* debug

* 5 seconds instead of 10 to avoid flakes

* oops

* CR feedback

* test
Excavator: Update policy-bot config ()

Co-authored-by: svc-excavator-bot <svc-excavator-bot@palantir.com>
Excavator: Update open-source publishing plugins ()

Co-authored-by: svc-excavator-bot <svc-excavator-bot@palantir.com>
Autorelease 0.218.1","Type
Description
Link
Fix
leaderPaxos will not be returned as a namespace. Previously, leaderPaxos was incorrectly considered as a namespace."
"[PaxosLog] Part 7b: Configuration Sketch :fire: CONTENTIOUS :fire: ()

* some changes

* Testing

* fix

* Checkstyle

* CR

* Fix bad mocks in test

* PaxosInstallConfigIntegrationTest fix

Co-authored-by: Grgur Petric Maretic <grgapm@gmail.com>
Fix case when fail to register lock after starting transaction ()

* Fix bug when fail to register lock

* Remove unnecessary diff

* Add generated changelog entries

* Add generated changelog entries

* Add generated changelog entries
Log an error if it takes >10 seconds to close executors when shutting down STM ()

* log on slow close

* Add generated changelog entries

* Add generated changelog entries

* add test

* Fix whitespace around if

* Rename executorService to deleteExecutor
Fix bug in transaction starter if it fails midway through the batch ()

* Add unlock if failing mid-way through starting txns

* Remove unused param

* Fix method args

* Revert static flow to be closer to original
[ETE] Batching Txns, Attempt 2 ()

Make start transaction batched throughout Atlas.
Add namespace validation as a param to KvTableMappingService ()

Currently products are subclassing KvTableMappingService
to override namespace validation. This exposes the validation
as an optional parameter, with the default remaining the
'strict' validator.

Co-authored-by: Stephen Freiberg <sfreiberg@palantir.com>
Autorelease 0.215.1","Type
Description
Link
Improvement
Replaced the singular setupRunTaskWithConditionThrowOnConflict with a batched method setupRunTaskBatchWithConditionThrowOnConflict, and changed underlying methods to accommodate starting a batch of transactions.
Improvement
Log an error if it takes >10 seconds to close executors when shutting down a SnapshotTransactionManager
Fix
Fixes the bug where TimeLockClient started a transaction but threw when registering a lock, and so would not unlock the immutableTs lock."
"Autorelease 0.218.2
[PaxosStateLog] Implement Different Migration States ()

* Implement different state support

* Add migrated state
Allow invalidating SweepStrategyManager cache ()

* Allow invalidating SweepStrategyManager cache

Useful to change the sweep strategy on an existing table without
bouncing the service.

* Add generated changelog entries
Autorelease 0.218.3","Type
Description
Link
Improvement
Expose a new method on SweepStrategyManager to allow invalidating the table metadata cache on specific tables. Useful for clients that want to change the sweep strategy on an existing table without bouncing the service."
"[PaxosStateLog] Use WAL and remove locking ()

* Use WAL and remove locking

* Remove accidental newline

* wat

* Reduce the load in the high concurrency test
[Dialogue] Part 9: Shims for Lesser Used Services: AtlasDB -> TimeLock ()

* Shims

* Dialogue shim factory

* More descriptive builders

* Imports

* Add generated changelog entries
Autorelease 0.223.1","Type
Description
Link
Improvement
If Dialogue on clients is enabled, then communications to the V1 Lock, Timestamp Management and TimelockRpcClient now take place through Dialogue as well. Previously even if this was enabled they would go through CJR."
"Autorelease 0.220.2
Implement locking for SqlitePSL ()
[PaxosStateLog] Reintroduce Migration and Verification with Locks ()

* Revert ""Revert ""[PaxosStateLog] Wire up and Migrate To Verifying PSL ()"" ()""

This reverts commit 89a0cd4b40f7f79074758dd1db94300eef53bd74.

* Reintroduce migration for verification

* Also lock for migration state

* Add logging

* Add generated changelog entries
Autorelease 0.220.3","Type
Description
Link
Improvement
Reintroduced writing timelock paxos state logs both to the file system and into a sqlite implementation on disk. This was previously reverted due to a locking issue in sqlite."
"Autorelease 0.223.1
[PDS-120786, PaxosLog] Avoid Overhead From Repeatedly Taking Locks And Starting New Connections ()

* Use a single shared connection to SQLite to avoid unnecessary overheads

* SqliteConns

* Evil evil proxy

* Add unit tests for proxy and fix checkstyle

* Add generated changelog entries

* Overhaul

* Address CR

Co-authored-by: Grgur Petric Maretic <grgapm@gmail.com>
Autorelease 0.223.2","Type
Description
Link
Improvement
TimeLock now uses a single resilient database connection when interacting with SQLite. This should lead to substantially improved performance."
"Autorelease 0.224.1
[PaxosStateLog] Migrate ()

* Run migration eagerly

* Wire everything and improve integration tests

* Remove now unused verifying paxos state log

* Add generated changelog entries

* Bleh

* Address CR and increase TimelockAgent schema version

* Style
Autorelease 0.224.2","Type
Description
Link
Migration
This version performs a blocking migration for timelock paxos state logs. Consumers of atlasdb other than timelock server are unaffected."
"Autorelease 0.223.2
Make Circle Builds ~4:30 Faster ()
Filter out leaderPaxos from list of namespaces ()

* Filter out leaderPaxos from list of namespaces

* Update test

* Add generated changelog entries

* Fix test

* Add generated changelog entries

* Add generated changelog entries

* Address comments | test fix

Co-authored-by: Jeremy Kong <jeremykong@hotmail.com>

* Fix import

Co-authored-by: Jeremy Kong <jeremykong@hotmail.com>
Autorelease 0.223.3","Type
Description
Link
Fix
leaderPaxos is filtered out from the set of persisted namespaces. Previously if, and only if, you had used SQLite, leaderPaxos would be returned as part of the set of persisted namespaces."
"Autorelease 0.226.3
Avoid setting insecure hostname verification ()

* Avoid setting insecure hostname verification

Insecure hostname verification isn't a good idea.
Modern versions of jaxrs-clients do not allow this to be set.

* Add generated changelog entries
Autorelease 0.226.4","Type
Description
Link
Fix
Avoid setting insecure hostname verification"
"Autorelease 0.226.2
[PDS-115789] API Contracts for Snapshot Transaction Methods ()

* Transaction javadoc

* Add generated changelog entries

* .

* Clarifications, plus a demonstrative test

* wat

* Add test and switch to ISM backing for iterator

* Simpler docs changes

* Patch tests

* Avoid param reassignment

* Define getRows semantics

* CR feedback

* Ordering of map test

* MCTT

* baseline

* remove bad test

* CR feedback

* CR feedback, additional tests

* restrict non-unique rows
[Dialogue] Part 8: Legacy Lock Service Locks ()

* conjurize lock

* Gradle

* New resource

* Git out of here

* test

* Add generated changelog entries

* JAXRS is tough

* first version

* Add integ test

* Integ tests

* simplify and add better test

* CR feedback

* first version

* Add integ test

* Integ tests

* simplify and add better test

* CR: fix misleading line

* CR

* bad merge

* Merge badness
Autorelease 0.226.3","Type
Description
Link
Improvement
SnapshotTransaction get methods now have more precise contracts.
Improvement
TimeLock exposes new Conjure-Undertow versions of refreshLockRefreshTokens and unlockSimple. This may be useful for Dialogue users."
"[GCV Blocker] Don't use org.json.simple ()

* NMD Test

* NMD and tests

* Don't use orgjson

* Finish removal of jsonsimple

* valuetype test

* no conjure

* CR feedback

* Bad test
[Dialogue] Part 10: :hot_pepper: TimeLock Internode by Shim ()

* TLDSP

* checkpoint

* Wire it all through

* Add generated changelog entries

* Imports

* Optional, and don't set useless ShouldRetry

* Extract method

* Silly bugs

* :Revert ""Silly bugs""

This reverts commit 715361f29c94a7722af5d4d5e5bcbd15cb964066.

* Revert ""Optional, and don't set useless ShouldRetry""

This reverts commit 18f876b1d463238e41b6a0d5f6b8431d3d79ab5e.

* graaaaaargh

* Revert "":Revert ""Silly bugs""""

This reverts commit e5754da2372270bc725daa418e517067abc35243.

* Revert ""Revert ""Optional, and don't set useless ShouldRetry""""

This reverts commit caf337d076510dcaf23833e260e554f97329c18e.

* DCO
Autorelease 0.227.1","Type
Description
Link
Improvement
TimeLock internode communications now takes place via Dialogue over the JAX-RS shim. In this way, we should go down from piles of different clients to just six."
"Autorelease 0.227.1
[PDS-119625] Log the Exception, not UnsafeArg.of(exceptionMessage) ()

* Log exception, not Unsafe message

* Add generated changelog entries
[Dialogue] Part 11: Lock V1 Client Uses >99% Pure Dialogue ()

* conjurize lock

* Gradle

* New resource

* Git out of here

* test

* Add generated changelog entries

* JAXRS is tough

* CR feedback

* first version

* Add integ test

* Integ tests

* simplify and add better test

* CR: fix misleading line

* [Dialogue] Part 9: Shims for Lesser Used Services: AtlasDB -> TimeLock ()

* Shims

* Dialogue shim factory

* More descriptive builders

* Imports

* Add generated changelog entries

* Dependency setup

* Dialogue composing client

* Checkstyles

* Change ETE test to leverage the Dialogue endpoints

* I actually kind of like this api

* Tests

* checkstyle

* Fix bad merge
[PDS-95791/Post Mortems] Local Lock Trackers ()

* Lock tracking

* More lock tracking

* nit

* Log changes

* Refactor

* LockDiagnosticComponents

* Imports

* I need to do the tasks

* Add generated changelog entries
Autorelease 0.227.2","Type
Description
Link
Improvement
If Dialogue on clients is enabled, then communications to the V1 Lock, Timestamp Management and TimelockRpcClient now take place through Dialogue as well. Previously even if this was enabled they would go through CJR.
Fix
The type and stack trace of Exceptions when talking to Cassandra are now logged (and in the case of Safe exceptions, the exception message will also be available). Previously, only the exception message was logged, and this was always Unsafe.
Improvement
Locks and unlocks are tracked client side when conducting a transaction post mortem."
"Autorelease 0.226.1
Fix incorrect getRangeSlices trace span names ()

* Fix incorrect getRangeSlices traces

* nit

* Add generated changelog entries
[PaxosLog] Correctly Log Operation Durations ()

* Don't fly blind

* Add generated changelog entries
Autorelease 0.226.2","Type
Description
Link
Fix
Fix incorrect getRangeSlices trace span names for the Cassandra client; previously the number of columns was reported as the number of rows, and the batch hint was reported as the number of columns.
Fix
The Paxos state log migration now correctly logs durations as safe. Previously they weren't wrapped in an Arg and thus treated as unsafe."
"Autorelease 0.227.4
[Dialogue] Part 12: Fix Misdeclared Product Dependencies ()

* Bad formatting and wrong version

* Apply deps correctly

* Add generated changelog entries
Autorelease 0.227.5","Type
Description
Link
Fix
The Conjure version of the V1 lock service now correctly depends on a version of TimeLock server that exposes these endpoints. Previously this wasn't the case, and a service which attempted to use the Conjure version would run into 404s when attempting to acquire or release locks."
"Autorelease 0.227.12
[PD$-110002] Part 2: Economising Snapshot Transaction commitWrites() Timers ()

* Tracing only for certain sections

* Add generated changelog entries

* CR: shore up explanations
Autorelease 0.227.13","Type
Description
Link
Improvement
Snapshot Transaction no longer publishes metrics for- punching the _punch table: this operation is asynchronous- refreshing commit locks: consider ConjureTimelockServiceBlocking.refreshLockLeases- putting a commit timestamp into the database: consider TransactionService.putUnlessExists- unlocking lock tokens after a commit: this operation is asynchronous"
"Autorelease 0.227.5
Adjudication 1 ()

* timeLock metrics | poc

* remove redundant code

* Address comments - 1

* try with resource

* remove redundant imports

* refactor

* Add generated changelog entries

* liscence config update

* Address comments

* build fix
Autorelease 0.227.6","Type
Description
Link
Improvement
Instrument leaderTime and startTransactions end points with timer metrics for TimeLock Adjudication."
"Autorelease 0.227.7
[PDS-119588] Relax Cassandra Schema Version Check ()

* checkpoint

* Remove quorum check

* docs

* Test updates

* Add generated changelog entries

* Fail on a quorum of unreachables

* Update tests

* Don't pass config directly into waitForSchemaVersions

* waitForSchemaVersions docs

* Add generated changelog entries

* Remove suspect test

* rename test

* imports
Autorelease 0.227.8","Type
Description
Link
Improvement
AtlasDB is now more resilient to Cassandra migrations involving changes in the cluster size relative to the original install config. Previously, if a Cassandra cluster was downsized at runtime, schema operations would consistently fail until the service was bounced."
"Autorelease 0.227.3
Close resource in RemoteTimelockServiceAdapter ()

* Close resource in RemoteTimelockServiceAdapter

* Add generated changelog entries
Autorelease 0.227.4","Type
Description
Link
Fix
Fix a resource leak in RemoteTimelockServiceAdapter."
"Autorelease 0.227.2
Gradle consistent versions ()

* Use gcv

* FIx compile

* Fix up

* Remove some deps

* don't resolve configurations- bug in gcv

* Unused pins

* Fix failing tests

* Some forces

* Fix

* Jvm metrics

* Foo

* Remove tests.props

* Hack for dropwizard metrics

* Fix hamcrest

* Fix compile

Co-authored-by: Jeremy Kong <jeremykong@hotmail.com>
[LW] Change TransactionLockWatchEvents interface ()

* bring over necessary changes

* Add generated changelog entries

* rename

* fix annoying mistake
Autorelease 0.227.3","Type
Description
Link
Improvement
Remove the visitor pattern from TransactionLockWatchEvents."
"Autorelease 0.227.13
[PD$-110002] Part 3: Remove transactionsReadFromDB ()

* Make transactionsReadFromDb a counter

* Actually, remove it

* Add generated changelog entries

* Remove unused constant
Autorelease 0.227.14","Type
Description
Link
Improvement
AtlasDB no longer publishes transactionsReadFromDB: it was a high cardinality metric of limited value. Consider using TransactionService.get if attempting to determine the total number of start-commit timestamp mappings looked up from the transactions tables. Otherwise, consider enabling TRACE logging to get this data."
"Autorelease 0.227.8
PG-151833: Apply the default cancel-remaining-calls value globally ()

* PG-151833: Apply the default cancel-remaining-calls value globally

* Add generated changelog entries

* style

* one more
Autorelease 0.227.9","Type
Description
Link
Fix
Apply the default cancel-remaining-calls value globally to prevent excessive handshaking due to lack of connection reuse when request are interrupted."
"Autorelease 0.234.1
Feedback integration ii ()

* Basic layer

* remove todo

* Address comments

* Tests

* Moree tests

* Add generated changelog entries

* Modify HealthState + tests

* Refactor

* Address comments

* error rate

* Address comments

* Min unhealthy services

* Address comment | refactor

* Address comment | reefactor

* Message with unhealthy state

* Refactor + typo

* Fix tests for now

* Add linespace

* Fix fake ticker

* Bug fix | time in nanos

* SLO specification refactor ()

* Address comments

* save from NaN

* Some more

Co-authored-by: Jeremy Kong <jeremykong@hotmail.com>
Autorelease 0.234.2","Type
Description
Link
Improvement
TimeLock analyzes feedback from clients to adjudicate itself."
"Autorelease 0.229.0
[LW] Client side event cache ()

* some move over

* more progress

* tidy up

* merge in develop

* fix javadoc

* fix invalidate call

* remove extraneous also

* Split line

* tidy javadoc

* reworked to be smoother

* process events

* implement snapshot thing

* clean some things

* take updates from lw-client-updater

* merge in interface change

* move to different place and begin writing tests

* rework a little

* remove extraneous if statement

* begin cleaning up tests

* fix failing test

* change to use queue for better concurrency

* fix up tests further

* further tidy

* move events change to lwec

* further tidy up and move to proper place

* update snapshotter

* merge from above

* begin writing tests

* further improvement

* fix out-by-ones

* change to return immutable sets

* rework tests and tidy

* remove no op implementations

* add preconditions check

* tidy lwec

* rework test for LWEC

* clean up impls some more

* tidy up lwel tests

* write snapshotter tests

* remove concurrent skip list map from lwec

* merge in and add commit update - DOES NOT USE LOCK TOKEN YET

* action some comments

* change comparable to comparator

* fix test

* on the path to greatness

* rework to remove dedupe (somewhat)

* add exception message to comparator

* even more failed checks

* fix commit lock token thing

* beefy changes

* remove incorrect json serialisation

* more cleanup throughout

* resolve build errors

* add more tests

* remove unused line

* slight refactor

* change to google error prone

* slap synchronised on everything

* rework to use non-union type

* fix tests and remove unused type

* more cleanup of diff

* fix test

* Add generated changelog entries

* remove extraneous guarded by annotations

* remove notes on concurrency

* rename method

* wire in cache

* even more synchreo

* use proxy with event cache instad of implementing with methods

* Remove builder return type

* change static constructor

* change to use exceptions instead

* remove synchro

* fix up a few more things

* fix exception problem

* work the integration test

* fix diff

* rename method

* Fail to start transaction no longer leaks to LW map

* Avoid hashmap and tree multimap

* fix checkstyle

* fixup ttvm per comments

* rename methods

* tidy commit update a bit

* remove unused imports

* fix fake version to have different uuid each time

* modify failure checking cache

* comments

* fix test

* rename

* Fix typos

* add timestamp to version map test

* fix up more comments

* change type to sortedsetmap and oneline it

* add metric to cache

* fix bug

* rename ttvm

* put throws on multi put

* more comments

* invert check statement

* fix tests and improve flow

* move remove

* use collections instead

* fix test

* rename method

* rename some things

* fix last comments

* fix some checkstyle things

* hopefully checkstyle is happy now

* rename updater

* fix merge conflict

* fix checkstyle

* remove empty file

* split more things out

* moved a load of things

* more changes per review

* fixup last tests

* add store test

* checkstyle hurrah

* clean up a load of things; tests are probably broken

* bleh

* json test approach

* remove old tests

* rewrite json testing stuff

* remove unused block

* remove unused property flag

* remove unused json

* fix bug

* fix tests

* remove unused import
Autorelease 0.229.1","Type
Description
Link
Improvement
Implement Atlas client-side lock watch event cache, log, and snapshot updater."
"Error rates ()

* commit rough work

* scheme update to record errors

* record errors

* typo

* Update conjureTimeLockFeedback model

* tests

* indent

* Address comment

* Modify tests

* Update product dependency

* Fix errors
bump version of timeLock product dependency ()

* bump version of timeLock product dependency

* Add generated changelog entries
Autorelease 0.232.1","Type
Description
Link
Fix
The TimeLock product dependency needs to be bumped for to incorporate changes in TimeLock Adjudication metrics schema."
"RowResult#getColumns NavigableMap. ()
Name key count logged safe parameter ()

* Name key count logged safe parameter

Use `keyCount` logging argument to avoid incorrect duplicate `rowCount`
safe logging parameter.

* Add generated changelog entries

* Add generated changelog entries
Local and remote health pinger ()

* Local and remote health pinger

* clean up

* fix

* minor refactor

* Minor refactor

* Add generated changelog entries

* Add generated changelog entries

* remove todo

* Add generated changelog entries

* Remove comment

* Address comments
Autorelease 0.233.1","Type
Description
Link
Improvement
The TimeLock client feedback resource only processes feedback for clients for which it is the leader.
Fix
ProfilingCassandraClient no longer uses a duplicate rowCount safe logging parameter - we now call the number of keys supplied to the Thrift endpoints the keyCount."
"Autorelease 0.232.1
Upgrade dialogue to get rid of apache-hc4 constraint ()

* Upgrade dialogue to pick up apache hc5

* bring back serde

* Add generated changelog entries
Autorelease 0.232.2","Type
Description
Link
Feature
Upgrade dialogue to get rid of hc4 constraint"
"Increase gradle build memory to 2 GB ()

Full builds of atlasdb sometimes fail due to gradle running out of memory. The gradle wrapper does not allow passing JVM arguments for the build VM on the command-line, so it must be done in gradle.properties instead. Increasing the maximum amount of memory that can be allocated from the default of 512M to 2G.
[PD$-110002] Part 8: Make Disjoint Metric Set Disjoint ()

* fix and tests

* argh

* CR

* Add generated changelog entries

* Add generated changelog entries
Autorelease 0.235.1","Type
Description
Link
Fix
We now no longer use exactly the same metric name for the tagged and legacy invocation handlers. Previously, these used the same metric name, meaning that which metric was logged was non-deterministic, and furthermore once an error occurred once each on both a tagged and legacy-instrumented object, getting metrics from AtlasDB would cause an error."
"Remove LockWatchStateUpdate#Failed. ()

* Naive fix for this.

* Remove fancy synchronization.

* Fixup

* Cleanup some more.

* Fix test

* Add a bit of comments and rename methods.

* Cleanup test

* Reflow.

* CR
[Dialogue] Part 14: Pure Dialogue for LockWatchingService ()

* Use Dialogue for watching

* import

* Add generated changelog entries

* unused thing

* fix build
Autorelease 0.234.1","Type
Description
Link
Improvement
ConjureLockWatchingService now goes through pure Dialogue as opposed to the Dialogue shim."
"Autorelease 0.236.1
Fix baseline error prone ExecutorSubmitRunnableFutureIgnored ()

* Add generated changelog entries

* Add generated changelog entries

* Fix baseline error prone ExecutorSubmitRunnableFutureIgnored

Uncaught exceptions from ExecutorService.submit are not logged by
the uncaught exception handler because it is assumed that the
returned future is used to watch for failures.
When the returned future is ignored, using ExecutorService.execute
is preferred because failures are recorded.
Autorelease 0.236.2","Type
Description
Link
Fix
Fix baseline error prone ExecutorSubmitRunnableFutureIgnored"
"Autorelease 0.236.7
[PD$-110002] Part 9: Cassandra Client Pool II - Distribution Outlier Controllers ()

* DOF

* bleh

* tricky

* Minor refactors

* Refactor - DOF isn't really a filter

* propagate

* Add generated changelog entries

* Tweak some thresholds plus add test

* Actually add test.

* stuff

* Revert ""stuff""

This reverts commit 0e7ed58224e37eee3728e22b05f396e49d606f7a.

* Don't include my SQLite experiments

* aaaargh

* More integrationy test

* Imports

* nits

* Concurrency

* Baseline
Autorelease 0.236.8","Type
Description
Link
Improvement
We now publish fewer Cassandra client pool metrics. We publish pool: mean, and the metrics for individual pools if they diverge by more than a certain tolerance from said mean. Consult CassandraClientPoolHostLevelMetric for details on these tolerances."
"Autorelease 0.236.3
QueuedViewExecutor concurrency: state is guarded by lock ()

* QueuedViewExecutor concurrency: state is guarded by lock

see https://github.com/jbossas/jboss-threads/pull/93

* Add generated changelog entries

* Add generated changelog entries
Autorelease 0.236.4","Type
Description
Link
Fix
Fixed fixed-size executor view thread safety. State is always updated under a lock. Previously this could result in awaitTermination waiting the full duration or tasks failing to be interrupted."
"[PD$-110002] Part 11: Top-N Tables | Toplist Delta Filtering Controller ()

* Controller

* Controller test

* Delta gauge and tests

* Toplist Delta

* baseline

* Register filter before creating

* Remove unusable test
Make all logging HikariCPConnectionManager SLS ()

* SLS logging the rest

* Add generated changelog entries

* PR comments
Autorelease 0.239.1","Type
Description
Link
Fix
Make all logging in HikariCPConnectionManager SLS"
"Autorelease 0.289.2
Suppress deprecation warnings in generated code ()

* Add generated changelog entries

* Suppress deprecation warnings in generated code
Autorelease 0.289.3","Type
Description
Link
Fix
Deprecation warnings are now suppressed in generated code."
"[LE] Server Side Metrics Accumulator For Leadership Duration ()

* Transfer changes from other branches

* Pull in the right things

* rename

* Implementation and some tests

* Should fix tests

* Make tests great again

* Bleh

* Pull out only necessary files

* address aggressive autoformat

* current value metric

* Cleanup, more tests

* add testing to LERTST

* comments

* WIP

* Working implementation with tests

* Wire, fix test

* WAT

* Some cleanup

* Bleh

* action comments

* revert spooky diff

* fix test bug

Co-authored-by: Jolyon Shah <jshah@palantir.com>
[LE] Wire in the metrics from client to server ()

* make some things static

* update build.gradle

* Add generated changelog entries
Autorelease 0.265.1","Type
Description
Link
Improvement
Wire through the leader election metrics to Timelock."
"Autorelease 0.240.1
[PDS-129897] Fix Memory Leak in the Publication Controller ()

* fix memory leak

* Update atlasdb-impl-shared/src/test/java/com/palantir/atlasdb/transaction/impl/metrics/MemoizingTableLevelMetricsControllerTest.java

* Update atlasdb-impl-shared/src/test/java/com/palantir/atlasdb/transaction/impl/metrics/MemoizingTableLevelMetricsControllerTest.java

* Add generated changelog entries

* Autorelease 0.240.1-rc2

* Kick allowing new tag

* Autorelease 0.240.1-rc3

* Add generated changelog entries

* CR comments
Autorelease 0.240.2","Type
Description
Link
Improvement
Fix memory leak in TopNMetricPublicationController."
"Autorelease 0.236.2
Namespace in TM ()

* Namespace in TM

* Fix

* Add generated changelog entries

* Add generated changelog entries

* Address comments

* docs
Autorelease 0.236.3","Type
Description
Link
Improvement
Client feedback report for TimeLock can now have the original namespace along with the overridden service name."
"Autorelease 0.283.1
[TS] Allow configuration of lower batch size ()

* Wip

* Add config for cells threshold in sweep batch

* Wire into SweepDelay

* Add generated changelog entries

* Address CR and reduce default sweep batch size as discussed offline

* Allow setting the config back to 100k

* Add generated changelog entries
Autorelease 0.283.2","Type
Description
Link
Feature
Targeted sweep now has a runtime configuration batchCellThreshold that allows specifying a batch size lower than the previous default of 100k. This may be useful to make sweep iterations faster and more uniform at the expense of slightly slower progress. The new default has also been reduced to 10k."
"Autorelease 0.240.5
Bg gain leadership ()

* Merge

* Draft | Log when leader is on older version

* Old version metric

* Tests

* Test

* Fix

* TimeLock dependency

* Add generated changelog entries

* Add generated changelog entries

* Add generated changelog entries

* Comment

* Revert ""TimeLock dependency""

This reverts commit 8c774fa48e11996c06d126dfaf90e6c9e0b7d4ec.

* Rate limited logs

* Schema update

* Revert ""Schema update""

This reverts commit e027d9f78e84cf2dfd7f8afa6f73bb215a1037a7.
Autorelease 0.240.6","Type
Description
Link
Improvement
TimeLock node on newer version than current leader now tries to gain leadership. Earlier, the upgrading node would not try to gain leadership rendering adjudication ineffective."
"Autorelease 0.236.8
Adjust AssertUtils to be safelogging compatible ()

* Adjust AssertUtils to be safelogging compatible

Format string and args will be passed to slf4j directly,
instead of doing our own manual formatting.

* Add generated changelog entries

* Fixup order of arguments

* Address gradle-baseline issues

* Fix PostgresVersionCheckTest

* Actually fix it

* organize imports

Co-authored-by: David Xiao <dxiao@palantir.com>
[LW] Test for lock watch updates that are too far behind ()

* add test for new case

* extend message

* fix test
Autorelease 0.236.9","Type
Description
Link
Improvement
Adjust AssertUtils to be safelogging compatible"
"Autorelease 0.275.4
[Cross Client Batching LeaderTimes - 3b] | AtlasDb accepts external request batcher for LeaderTime api ()

* BatcherProviders - Wip

* Fix build

* Fix tests

* Change signature

* Modify batcherProvider api

* Update service

* Add generated changelog entries

* Add generated changelog entries

* Refactor

* Rename

* Spotless

* Address comments

* Add generated changelog entries

* Add generated changelog entries

* Spotless
Autorelease 0.275.5","Type
Description
Link
Feature
AtlasDb can now be configured by its clients to use a custom request batcher for batching requests to leaderTime api on Timelock. In the absence of a custom batcher, we fall back to a legacy leaderTime request coalescing batcher."
"Autorelease 0.236.5
Add logging to initialisation path ()

* Add logging to initialisation path

* Log the exception

* Add generated changelog entries

* womp
Autorelease 0.236.6","Type
Description
Link
Improvement
AtlasDB logs more information on its initialisation path, especially when working with callback chains."
"Bufix/pds 129897 ()

* PD$-129897 Fix mistake with MetricPublicationArbiter fix in

* add test

* Checkstyle

Co-authored-by: David Xiao <dxiao@palantir.com>
Co-authored-by: Sudiksha Nanda <snanda@palantir.com>
[PDS-128523] Fewer leader time calls. ()
Autorelease 0.240.1","Type
Description
Link
Fix
There are now fewer getLeaderTime calls when reading the iterator returned by getRowsColumnRangeIterator."
"Fix hashCode related error-prone checks ()

* Upgrade gradle-baseline to 3.44.0

* Fix baseline DeprecatedGuavaObjects

```
./gradlew compileJava compileTestJava -PerrorProneApply=DeprecatedGuavaObjects --rerun-tasks --no-build-cache
./gradlew format --rerun-tasks --no-build-cache
```

* Apply ObjectsHashCodeUnnecessaryVarargs

```
./gradlew compileJava compileTestJava -PerrorProneApply=ObjectsHashCodeUnnecessaryVarargs --rerun-tasks --no-build-cache
./gradlew format
```

* Apply ObjectsHashCodePrimitive fixes

```
./gradlew compileJava compileTestJava -PerrorProneApply=ObjectsHashCodePrimitive --rerun-tasks --no-build-cache
./gradlew format --rerun-tasks --no-build-cache
```

* LockRequest cached hashCode is a transient non-volatile int

* Retain Namespace hashCode values

Co-authored-by: Carter Kozak <ckozak@palantir.com>
[TimeLock Corruption] | Implement progress tracker ()

* Wire through - part 1

* WIP

* Wire

* WIP

* Tests

* Refactor

* Remove redundant

* Major bux fix

* Refactor - 1

* Modify algo - 1

* Unit tests

* Address comments - 2

* Test refactor

* Format

* Fix broken tests

* Refactor

* Bug fix

* Small

* Let's start reverting messy changes - 1

* SequenceBounds -> HistoryQuerySequenceBounds

* Name correction - 1

* Refactor

* Refactor

* Add generated changelog entries

* Fix build

* Fix build - attempt II

* This should not break my build
Leader Election Metrics 2a: Server side wiring  ()

* Transfer changes from other branches

* Pull in the right things

* rename

* Implementation and some tests

* Should fix tests

* Make tests great again

* Bleh

* Pull out only necessary files

* address aggressive autoformat

* current value metric

* Cleanup, more tests

* add testing to LERTST

* comments

* Separate changes into new PR

* very well

* revert

Co-authored-by: Grgur Petric Maretic <grgapm@gmail.com>
[PSL] Better Logging and Option to Skip Validation + Truncate for PSL Migration ()

* Commit

* Be more defensive

* Luckily have tests

* Add logging

* Better yet logging
Autorelease 0.260.1","Type
Description
Link
Feature
Adds a ProgressTracker to keep track of last verified sequence numbers for respective (namespace, useCase) pairs for TimeLock corruption checks. This ensures that TimeLock will resume corruption checks from after the lastVerifiedSequence if the node is bounced."
"Autorelease 0.276.5
Make EC2 Location supplier memoize on failures ()

* Make EC2 Location supplier memoize on failures

* Add generated changelog entries

* Update atlasdb-cassandra/src/test/java/com/palantir/atlasdb/keyvalue/cassandra/pool/HostLocationSupplierTest.java

Co-authored-by: Jolyon <jshah@palantir.com>

* Update HostLocationSupplierTest.java

Co-authored-by: Jolyon <jshah@palantir.com>
Autorelease 0.276.6","Type
Description
Link
Improvement
Make EC2 Location supplier memoize on failures"
"Autorelease 0.275.2
[LW] ETE tests ()

* actually filter out the right token

* Add generated changelog entries

* fresh start

* better

* force circle

* revert change

* changeup

* temp

* step in the right dir

* fixup

* cleanup tests

* make non private

* remove redundant method

* remove unreleased

* add cheeky test

* uncomment tests

* add test to other suites

* fix compile issues

* fix another bug

* use boxed

* fix stupid fails

* make tests simpler

* remove unused method

* please work

* review comments

* Add generated changelog entries

* grgur you are a champion
Autorelease 0.275.3","Type
Description
Link
Fix
TimelockResource no longer supports namespaces that start with lw (in addition to the current banned prefix of tl)."
"[LW] Log some more ()
[LW] Add logging to Timelock ()

* add further logging

* cut down logging

* Add generated changelog entries

* remove public

* eh
Autorelease 0.276.1","Type
Description
Link
Fix
Add further logging to Timelock to log the current watched references."
"Autorelease 0.240.8
Update config.yml ()

* Update config.yml

* Update config.yml

* Update config.yml

* Update config.yml

* Update config.yml

* Update config.yml

* Update config.yml

* Update config.yml

* Update run-circle-tests.sh

* Update run-circle-tests.sh

* Update shared.gradle

* Update run-circle-tests.sh

* Update conf.py

* Update run-circle-tests.sh

* Update config.yml

* Update run-circle-tests.sh

* Update config.yml

* Update run-circle-tests.sh

* Update run-circle-tests.sh

* Update config.yml
Reuse Dialogue Factory in Timelock Adjudication Service ()

* Reuse in adjudicaiton

* Add generated changelog entries

* Add generated changelog entries

* use default cached exec

* Actuallly fix Carter's comment

* unused import
Autorelease 0.240.9","Type
Description
Link
Fix
AtlasDB clients now re-use a Dialogue ReloadingFactory across standard TimeLock and Adjudication use-cases, and correctly respect user-provided factories for the latter."
"More logging for Object pools ()
[TS] Calculate exact TS lag and allow configuring per shard lag metrics ()
Autorelease 0.295.1","Type
Description
Link
Improvement
Targeted sweep lag metrics are no longer capped at 7 days. Furthermore, MetricsConfiguration can now be used to track TS lag per shard for desired strategies. Note that this is potentially expensive, and is therefore disabled by default."
"Autorelease 0.278.1
[WIP] Publish github pages correctly. ()

* Revert ""Revert ""Actually build the docs"" ()""

This reverts commit e4dd6b171b0a31c4b2da7cff03f5a9f0e72e6567.

* publish github page still needs to be the atlasdb user, not palantir

* Revert ""publish github page still needs to be the atlasdb user, not palantir""

This reverts commit 7cea2386e7e0f6747a3e6db0c32479cde26399bd.

* update config
Don't try to publish internal docs from external CircleCI! ()
Excavator: Upgrades Baseline to the latest version ()

Co-authored-by: svc-excavator-bot <svc-excavator-bot@palantir.com>
[LW] No Op cache tracks version ()

* hah, lets not fail

* mess

* get it right

* Add generated changelog entries

* Add generated changelog entries

* Add generated changelog entries

* validate equality

* javadoc
Autorelease 0.278.2","Type
Description
Link
Fix
The no-op lock watch event cache now correctly tracks the latest known version for the sake of requesting information from Timelock."
"Autorelease 0.240.10
[PDS-130107] Enable Divergent KVS Namespaces and TimeLock Clients ()

* config

* Add generated changelog entries

* flatmpa

* nit

* baseline
Autorelease 0.240.11","Type
Description
Link
Improvement
AtlasDB now allows configuration to accept different KVS namespaces and timelock clients, provided this is explicitly enabled AND the user is not using Cassandra. This was previously banned in all cases."
"Autorelease 0.236.4
Atlas dialogue consumption provides a ptexecutor cached pool ()

* Add generated changelog entries

* Atlas dialogue consumption provides a ptexecutor cached pool

This executor is used heavily, so we're better off reusing threads
between dialogue and PTExecutors thread pools.
Add original client namespace while sending adjudication feedback ()

* Add original client namespace while sending adjudication feedback

* Feedback handler uses original namespace for leadership check

* Add generated changelog entries

* Add generated changelog entries

* Refactor

* Add generated changelog entries

* Bug fix
Autorelease 0.236.5","Type
Description
Link
Improvement
Atlas dialogue consumption provides a ptexecutor cached pool. This executor is used heavily, so we're better off reusing threadsbetween dialogue and PTExecutors thread pools.
Improvement
Include original client namespace while sending adjudication feedback to TimeLock."
"Bump TimeLock product dependency ()
Excavator: Ensure consistent gradle/publish-(jar|dist).gradle files ()

Co-authored-by: svc-excavator-bot <svc-excavator-bot@palantir.com>
Excavator: Upgrades gradle wrapper to the latest version ()

Co-authored-by: svc-excavator-bot <svc-excavator-bot@palantir.com>
Excavator: Prefer AssertJ ()

* Excavator: Prefer AssertJ

* Fix up

Co-authored-by: svc-excavator-bot <svc-excavator-bot@palantir.com>
Co-authored-by: Grgur Petric Maretic <grgapm@gmail.com>
Remove unused project ()

* remove unused project

* Remove hamcrest-library

* derp

* Remove more stuff:

* Unflake ridiculous test
Add serialize/deserialize annotations for Oracle service name configuration ()

* Add serialize/deserialize annotations for Oracle service name configuration

* Add changelog

* Update changelog/@unreleased/pr-5124.v2.yml

Co-authored-by: Jolyon <jolyonshah@googlemail.com>

Co-authored-by: James Fitzsimmons <jfitzsimmons@palantir.com>
Co-authored-by: Jeremy Kong <jeremykong@hotmail.com>
Co-authored-by: Jolyon <jolyonshah@googlemail.com>
Autorelease 0.275.1","Type
Description
Link
Fix
Fixed an issue that caused an exception to be thrown when deserializing Oracle service name configuration"
"[TimeLock] Fix Antiquated cURL Instructions From TimeLock Documentation ()

* Bad Curls

* more fixes

* Fix
Read from palantir system table to try and use hostnames instead of ips ()

* Read from palantir system table to try and use hostnames instead of ips

* Add generated changelog entries

* Refactor code to be better

* Fix checkstyle

* Address comments
Autorelease 0.254.1","Type
Description
Link
Improvement
Read from palantir system table to try and use hostnames instead of ips when creating connections to Cassandra"
"Autorelease 0.275.3
[PDS-146501] Cast DEFAULT_TARGETED_SWEEP_SHARDS=1 down into the briny deeps ()

* Cast down into the briny deeps

* Add generated changelog entries

* 16

* fix
Autorelease 0.275.4","Type
Description
Link
Improvement
Targeted sweep now uses 16 shards by default. The default number of threads is unaffected."
"Leader Election Metrics 1a: Client Side Wiring ()

* Transfer changes from other branches

* Pull in the right things

* rename
stuff ()
Unify LeaderClock's LeadershipId with Lock Watch Log's Leader ID ()

* rewire leadership id

* Add generated changelog entries

* add test to check times are the same
Do not kill timelock for no reason ()
Autorelease 0.255.1","Type
Description
Link
Improvement
Unify LeaderClock's LeadershipId with Lock Watch Log's Leader ID"
"Excavator: Update policy-bot config ()

Co-authored-by: svc-excavator-bot <svc-excavator-bot@palantir.com>
[Productionizing GetSortedColumns] Part 1: Row Column Range Traps ()

* broken test with iterator

* fixes part 1

* bv version test

* SnapTrans

* updates

* Add generated changelog entries

* fixes

* argha2932j h24031

* unsignedbytes

* Move AbSTT tests to AbTT
Autorelease 0.277.1","Type
Description
Link
Fix
getRowsColumnRange and getRowsColumnRangeIterator now return a single iterator for a given row. Previously, users could obtain multiple distinct views wrapping an underlying iterator, which can lead to misleading or incorrect results e.g. because iterators may pre-load some of their elements."
"Refactor corruption detectors ()

* Move TL zombifying logic to tl-corruption-detection project

* Fix dependencies

* Checkstyle
[TS] Enable TS autotuning ()

* Enable TS autotuning

* Add generated changelog entries
Autorelease 0.248.1","Type
Description
Link
Feature
Targeted Sweep background task auto-tuning, which automatically modifies the number of parallel background tasks and pauses between iterations as needed is now turned on by default."
"Autorelease 0.235.1
[PD$-110002] Part 7: Cassandra Client Pool ()

* Low hanging fruit CCPC

* one more

* Add generated changelog entries

* Two more

* why would we pick that one
[PD$-110002] Part 6: One-Shots and Legacies ()

* Only log background sweep batch size if <1

* Do not instrument TimestampManagement

* Remove transactions2 migration profiling

* timelockSuccessful and timelockFailedRequest

* fix

* Add generated changelog entries

* CR and checkstyle

* checkstyle
Autorelease 0.235.2","Type
Description
Link
Fix
Four small metrics cuts:- Only log the background sweep batch multiplier if <1.- Don't instrument TimestampManagementService endpoints (used only in timelock migration): saves 10 series.- Don't instrument CoordinationService endpoints (used only in transactions2 migration): saves 10 series.- Don't publish timelockSuccessfulRequest and timelockFailedRequest: saves 4 series.Please contact the AtlasDB team if the removal of these series will be an issue.
Improvement
Some Cassandra client pool metrics have been removed, to save costs:- approximatePoolSize: please use numIdle + numActive instead.- proportionDestroyedByEvictor: please use destroyedByEvictor / created instead.- destroyedByBorrower and proportionDestroyedByBorrower: these have been 0 everywhere in production for the past year, because we do not do any validation on objects returned from the pool (at least, within the object pooling framework)."
"Autorelease 0.295.2
Excavator: Upgrade dependencies ()
Docs, docs everywhere ()
[PDS-146088] Log and metrics for a few more edge cases ()
Autorelease 0.295.3","Type
Description
Link
Improvement
Added further logging around possible edge cases when evicting objects from the Cassandra client pooling containers. Also added a metric that tracks the number of active eviction tasks."
"Autorelease 0.278.3
[PDS-146088] Additional logging around Cassandra client pool issues ()

* debugging

* Only log negative

* Add generated changelog entries

* Spotless

* fix log line

* final
Autorelease 0.278.4","Type
Description
Link
Improvement
CassandraClientPoolingContainer now supports more detailed debug logging when decisions are made not to evict its clients."
"More errorprone checks enabled ()

* Unignore CheckReturnValue

* Constant Set ->ImmutableSet

* another check

* another check

* delete bogus fake isDone assertion

* rogue source set

* Fix integ test

* More fixes

Co-authored-by: Grgur Petric Maretic <grgapm@gmail.com>
Make TransactionLockAcquisitionTimeoutException retryable ()

* make retryable

* Add generated changelog entries
Autorelease 0.284.1","Type
Description
Link
Improvement
TransactionLockAcquisitionTimeoutExceptions are now retryable. The main implications of this are that clients will attempt to retry when lock acquisition times out, which typically happens due to a leader election. However, this also means that requests will retry in cases where lock acquisition timing out is a non-transient issue."
"Autorelease 0.248.1
[Part 3 | Paxos history] Consolidate local and remote histories ()

* WIP

* WIP

* Use PaxosAcceptorData

* Add test + clean up

* Modify docs

* Add generated changelog entries

* WIP

* Address comments

* Checkstyle

* Address comments

* Fix typo

* Checkstyles

* Test update

* Test update

* Checkstyle

* Minor cleanup
Autorelease 0.248.2","Type
Description
Link
Feature
This change integrates local and remote Paxos histories for TimeLock corruption analysis."
"Autorelease 0.253.2
Fix build
Revert ""Fix build""

This reverts commit fd5e1c13363c568d5262ad708bebadc73b7587de.
Fix broken build after 5033 ()
[LW] Don't compare Longs using == ()

* this is painful

* Add generated changelog entries
Autorelease 0.253.3","Type
Description
Link
Fix
Fix comparison bug when comparing versions in the lock watch event cache."
"Autorelease 0.241.3
Don't Register Duplicate Metrics ()

* proxies

* Fix

* Add generated changelog entries

* CR comments
Autorelease 0.241.4","Type
Description
Link
Fix
Metrics for TimestampService, LockService and TimestampManagementService are no longer doubly registered for users that use embedded timestamp and lock services with a leader block."
"Autorelease 0.289.1
update ojdbc driver to 21.1.0.0 ()

* Add generated changelog entries

* update ojdbc driver to 21.1.0.0

Also fixes an incorrect use of wildcards in versions.props for this dep.
The different deps in this group do not all have the same set of
versions available, so this should not use wildcards. It would also
probably cause problems if we had multiple dependencies coming from this
same group (e.g. you should have only one of ojdbc8 or ojdbc11; not
both).

* Add generated changelog entries

* Add generated changelog entries
Autorelease 0.289.2","Type
Description
Link
Improvement
Update Ojdbc driver to 21.1.0.0"
"Autorelease 0.240.6
Much less ram used by disruptors ()

* Reattempt

* Add generated changelog entries

* Not actually a batch element

* Args are nullable

* checkstyle

Co-authored-by: Jeremy Kong <jeremykong@hotmail.com>
Autorelease 0.240.7","Type
Description
Link
Improvement
Much less ram used by disruptors."
"Autorelease 0.247.6
Remote history resource ()

* Local history loader

* Refactor

* Minor cleanup

* Refactor

* Test

* Refactor + remove todos

* More tests

* Remove redundant + refactor

* Fix test?

* Address comments - 1 | Refactor

* Address comments - 2 | Rename project

* Add generated changelog entries

* WIP | conjure

* History provider resource

* Fixes

* Tests + bug fix

* Add tests

* Address comments - 1

* Move api to timelock-corruption-detection

* Nits

* Refactor

* gitignore conjure

* Remove redundant

* Checkstyle

* Bump schema

* Remote history response pojo

* Address comments - 1 | tests

* Address comments - 2

* Address comments - 3 | Major refactor

* bug fix | optional fields

* remove redundant code + comment

* Wire

* Address comments

* Autorelease 0.247.2-rc2

* Checkstyles

* CheckstyleTest

* FIx

* Bug fix + refactor

* Minor

* Bug fix + checkstyle

* Add generated changelog entries

* Bump schema

* Minor refactor

* remove redundant

* Schema bump not required
Autorelease 0.247.7","Type
Description
Link
Feature
We now have remote endpoints to provide paxos history which is required for TimeLock corruption detecting checks."
"Autorelease 0.241.4
[PD$-110002] Part 15: MetricsFilterEvaluationContext ()

* Shared context test

* Shared contexts

* Refine docs

* More tests

* filter evaluation contexts

* fix build

* circles

* Add generated changelog entries

* Checkstyles

* Autorelease 0.240.10-rc2

* changelog

* Autorelease 0.241.5-rc1

* changelog to develop
Autorelease 0.241.5","Type
Description
Link
Improvement
AtlasDB now allows users to specify a MetricsFilterEvaluationContext, allowing for shared decisions on metric publication when working with multiple Transaction Managers in the same JVM."
"Better metrics ()

* Better metrics

* spotless
[Cross Client Batching LeaderTimes - 2b] | MultiClientConjureTimelockService Dialogue Clients ()

* Fix tests + remove redundant tests

* Refactor LeaderTimeGetter

* Configurable bufferSize

* Implement LeaderTimeCoalescingBatcher

* Wire LeaderTimeGetter

* Fix build

* Address comments

* Remove redundant line

* Fix tests

* Add generated changelog entries

* Dialogue proxy for MultiClientConjureTimelockService

* Spotless

* Remove responsibilty of concrete class from DialogueServiceProvider

* Dependency Inversion

* Add change so previous commit makes sense

* Refactor

* Rename
LockServiceImpl should ThreadInterrupt all Blocked threads ()

* Track all blocked threads

* nit

* Add generated changelog entries

Co-authored-by: Lam Tran <ltran@palantir.com>
Autorelease 0.273.1","Type
Description
Link
Improvement
LockServiceImpl now interrupts all blocked threads upon closing."
"Autorelease 0.267.1
[LW] Check the correct client versions range ()

* caught another one

* Add generated changelog entries

* literally just change a comment
Autorelease 0.267.2","Type
Description
Link
Fix
Fixed a bug which could erroneously throw a bug when getting versions from the lock watch cache."
"Autorelease 0.278.2
[LW] Handle Snapshots into Empty Successes Correctly ()

* Nasty case

* Golden records

* Add generated changelog entries

* I think we can reuse latest version

* spotless

* CI

* Add generated changelog entries
Autorelease 0.278.3","Type
Description
Link
Fix
Lock Watches no longer generate client updates instructing users to clear their caches after a snapshot if they indicate that their last known version is the version of the snapshot. Previously, whenever a snapshot was taken, we would insist that clients always clear their cache, even after they have demonstrated that they knew about the snapshot."
"Autorelease 0.276.3
Set dclocal_read_repair chance to 0 ()

* set dclocal read repair chance to 0 as it is not needed

* update the actual cf def

* update chance in separate location

* add changelog

Co-authored-by: Sam Kramer <skramer@palantir.com>
Autorelease 0.276.4","Type
Description
Link
Improvement
AtlasDB now sets dclocal_read_repair_chance chance to 0"
"Autorelease 0.239.10
Fix duplicate registration of MetricPublicationFilters ()

* Fix duplicate registration of MetricPublicationFilters

See internal ticket PG-154380

* Add generated changelog entries

* Add generated changelog entries

* fix tests

* baseline

* rules

* Add generated changelog entries

* CR feedback

* Small changes

Co-authored-by: David Xiao <dxiao@palantir.com>
Co-authored-by: Jeremy Kong <jeremykong@hotmail.com>
Autorelease 0.239.11","Type
Description
Link
Fix
Fix duplicate registration of MetricPublicationFilters. Previously, the same filter could be registered multiple times leading to unnecessary evaluations and possibly significant performance regressions in the leader block case.See internal ticket PG-154380."
"Autorelease 0.248.3
[DB TimeLock] 1B, 1C: DB TimeLock for Multiple Series ()

* Refactor

* rename

* multi seq

* refactoring

* utils

* updates

* multiseries tests

* Baseline

* audit previous legacy tables

* refactor

* CR feedback

* This is why type checking is important
Dbkvs invalidate ()

* Invalidate DB Kvs store

* Test

* Checkstyle

* Minor

* Add generated changelog entries

* Refactor + Address comments

* Address comments - 1

* Refactor

* Refactor

* Fail fast

* Rebase

* Clean up

* Add generated changelog entries
[LW] Retention LWEC on max size ()

* Initial pass on retention

* Initial pass on retention

* initial processing around the broken invariant

* thing

* Further work

* further refactors

* Remove further extraneous things

* Fix tests

* add further tests

* further tidy

* Add generated changelog entries

* Range refactor

* add leader check

* add extra test for commit update too

* fix spaghetti

* a few minor tweaks

* bad copy-pasta

* reorder a whole load of things to fix some bugs

* minor change to comment

* ugh puppycrawl

* resolve yet another sneaky edge case

* Move version range present check to lock watch events

* rename method from map to toTransactionsLockWatchUpdate

* Condense to use summary stats

* Extract check for non-empty map

* Next wave of comments

* Fix test

* Finally

* Last tidy

* Remove unused imports
Autorelease 0.248.4","Type
Description
Link
Feature
This change adds the mechanism for reading a timestamp bound from a DbKVS store and poisoning it. This is required for automated migration from DbKVS backed embedded services to a TimeLock server.
Improvement
Refactored the lock watch event cache to retention events based on the size of the cache, instead of keeping alive only relevant versions."
"Revert 5010 ()
Mostly sketched out, will obviously fail because of the weird dependence on Jersey annotated interfaces.
All of AsyncTimelockService is async.
Rename stuff.
LockService is async now.
Shard/pin clients to particular executors.
Fixup
Fixup
Fixup
Bring back old code for ease of testing and benchmarking.
Implement eager operation execution.
Revert changes.
Move things around, hopefully now everything compiles alright.
Fixup
Fixup
Fixup
Fixup
Fixup
Add generated changelog entries
Switch the proxy to the new one globally.
Fixup logging.
Revert silly stuff: can't shove non-async computations straight away onto a non-blocking limited pool.
Autorelease 0.249.1","Type
Description
Link
Improvement
Changelog for RC.<!---Please remember to:- Add any necessary release notes (including breaking changes)- Make sure the documentation is up to date for your change--->"
"Autorelease 0.241.1
memoize ssl socket factory creation ()

* memoize ssl socket factory creation

each ssl socket factory holds a presized 16k entry ssl session cache.
At present AtlasDB-proxy creates a new ssl socket factory per-host,
per-namespace. These really should all be the same ssl socket factory,
since the ssl configuration is the same.

We now memoize these. The config point is not the right place to do
this, since internally we mutate the configs to add extra options in a
few places - can't work via config equality.

* fix

* Add generated changelog entries
Autorelease 0.241.2","Type
Description
Link
Improvement
memoize ssl socket factory creation"
"Autorelease 0.266.1
Fix MaskedValue Jackson 2.12 compatibility ()

* Fix MaskedValue Jackson 2.12 compatibility

Previously we relied on Jackson magically deserializing a string
value into a MaskedValue. This no longer works in Jackson 2.12
snapshots, and I'm not convinced it ever should have worked. Other
proejcts represent MaskedValue as a string in configuration, so we
must add explicit handling and test coverage.

* Add generated changelog entries

Co-authored-by: Carter Kozak <ckozak@palantir.com>
Autorelease 0.266.2","Type
Description
Link
Improvement
Fix MaskedValue Jackson 2.12-snapshot compatibility"
"Autorelease 0.247.1
remove unnecessary oracle config restrictions ()

* remove unnecessary oracle config restrictions

Forbidding configuring the keystore/truststore when the oracle protocol
is not TCPS makes it a lot harder to automate configs. It is much easier
to allow our config automation to always fill in these values even when
they won't be used.

This does not remove the validation that checks they are present when
they really are required.

* Add generated changelog entries
Autorelease 0.247.2","Type
Description
Link
Improvement
Configuring the oracle keystore/truststore is now allowed even if itwill not be used."
"Autorelease 0.276.1
[LW] Smile for the snapshot ()

* really let us make this right

* Add generated changelog entries
Autorelease 0.276.2","Type
Description
Link
Fix
If the lock watch user version is X, and the transaction versions are [Y, Z], and X < Y-1000, then only check that events enclose [Y,Z] instead of [X, Z] (which will always fail)."
"Autorelease 0.239.5
[PDS-127121] Log refreshed Cassandra hosts at info level ()

* set debug logging to info

* Add generated changelog entries

* factor out log method

* make method static
Only log if auto-refresh is on. ()

* Only log if auto-refresh is on.

* Add generated changelog entries
Autorelease 0.239.6","Type
Description
Link
Improvement
Log refreshed Cassandra hosts at info level instead of debug.
Improvement
Reduce log noise when auto-refresh is off."
"Fix build fail ()

* bleh

* Bump DPR

* Update DPR

* Awaitlity

* Durations

* Spotless

* test fix

Co-authored-by: Jeremy Kong <jeremykong@hotmail.com>
[LE] Add timing to additional endpoints ()

* add tests

* temp

* spotless

* Add generated changelog entries
[TimeLock Corruption Detection] | Integration tests ()

* Basic tests

* Integration tests

* Minor | Modify java doc

* Fix build + spotless

* WIP

* Experimental

* Address comments

* Cleanup

* Lets write clean code

* Fix access modifiers

* Do no push wrong changes

* Make util methods static

* Cleanup

* Address nits

* Stress test
Enable TimeLock Corruption Detection ()

* Enable TimeLock Corruption Detection

* Add generated changelog entries

* Autorelease 0.260.1-rc1

* Add generated changelog entries

* Autorelease 0.261.1-rc1

* Add generated changelog entries
Autorelease 0.264.1","Type
Description
Link
Feature
The TimeLock corruption detecting checks are now enabled. As of now, all the violations are configured to only trigger alerts and not make TimeLock shoot itself.
Improvement
Time further endpoints for the leader election metrics reporting flow."
"Autorelease 0.254.4
Lock lease service should short circuit on unlock ()

* Lock lease service should short circuit on unlock

* Update LockLeaseService.java

* Add generated changelog entries
Autorelease 0.254.5","Type
Description
Link
Improvement
Lock lease service should short circuit on unlock"
"Leader Election service isn't null ()
Excavator: Ensure consistent gradle/publish-(jar|dist).gradle files ()
Avoid creating thousands of get-ranges threads ()
Autorelease 0.290.1","Type
Description
Link
Fix
Avoid creating thousands of serializabletransactionmanager-get-ranges threads by using the efficient PTExecutors ExecutorService factory methods."
"Autorelease 0.252.2
[DB TimeLock] 3B.2 - DbTimeLockSingleLeaderPaxosSuite ()

* blah39g40 3v1j24 g213

* Reset to batched timestamp paxos

* meep

* baslein

* Immutables switch

* baseline

* fix
[TS] Parallelism is nice and should be respected ()

* Initial change

* Add metrics

* Add metrics

* add filtering

* Do not set metric initially to fix janky tests

* Address some comments, fix JavaDoc

* Add generated changelog entries

* STYLE
Autorelease 0.252.3","Type
Description
Link
Fix
Fixed a regression that caused targeted sweep to always run with only a single thread per strategy. As a consequence, targeted sweep auto scaling only affects the pause between iterations and has no bearing on the number of parallel tasks. Added a metric targetedSweepProgress.sweepDelay that tracks the latest delay per strategy in milliseconds."
"Autorelease 0.239.4
[PDS-127999] Improved Corroboration Checker ()

* Add generated changelog entries

* improve corroboration

* Add generated changelog entries

* fix
Autorelease 0.239.5","Type
Description
Link
Improvement
Timestamp corroboration checker now throws SafeIllegalStateException instead of AssertionError, declares some of its parameters to be safe, and logs more noisily. It also gives more nuanced information on whether problems were noted on timestamp or transactional operations."
"Excavator: Prefer AssertJ ()

* Excavator: Prefer AssertJ

* Spotless

* werror

* test

* Need to cast bytes

* Write skew messages

* Update atlasdb-tests-shared/src/test/java/com/palantir/atlasdb/schema/indexing/IndexTest.java

Co-authored-by: gmaretic <gmaretic@palantir.com>

* Update atlasdb-tests-shared/src/test/java/com/palantir/atlasdb/schema/indexing/IndexTest.java

Co-authored-by: gmaretic <gmaretic@palantir.com>

Co-authored-by: svc-excavator-bot <svc-excavator-bot@palantir.com>
Co-authored-by: Jeremy Kong <jeremykong@hotmail.com>
Co-authored-by: gmaretic <gmaretic@palantir.com>
[Autobatchers] Fix wonky metric name ()

* Fix wonky metric name

* Add generated changelog entries
Log the persistence mode of Timelock on startup ()

* add logging

* Add generated changelog entries
Autorelease 0.285.1","Type
Description
Link
Improvement
The metric for the batch size of an autobatcher has changed from atlasdb.autobatcherMeter to com.palantir.atlasdb.autobatch.BatchSizeRecorder.batchSize.
Improvement
Timelock now logs what persistence mode is used for timestamps on startup."
"Autorelease 0.240.3
Bound lock acquire timeout ()

* Bound lock acquire timeout

* Test effort 1

* Address comments

* Add generated changelog entries
Autorelease 0.240.4","Type
Description
Link
Improvement
Lock acquire timeout is now bounded by client read timeout."
"Actually build the docs ()
Revert ""Actually build the docs"" ()

This reverts commit 2053e13fbb3dd04a8486d6521cef15bf8dfdc9fb.
bump commons ()

* bump commons

* bump versions.lock

* move version to versions.props

* Add generated changelog entries

* Add generated changelog entries

Co-authored-by: Anjor Kanekar <akanekar@palantir.com>
Autorelease 0.278.1","Type
Description
Link
Improvement
Bump Apache commons-pool from 2.4.2 to 2.9.0."
"[LE] Add logging to debug metrics + fix bug ()

* Add logging and fix bug

* Fix bug and add logging

* Derp
Excavator: Prefer AssertJ ()

* Excavator: Prefer AssertJ

* Fix crappy hamcrest conditions

Co-authored-by: svc-excavator-bot <svc-excavator-bot@palantir.com>
Co-authored-by: Grgur Petric Maretic <grgapm@gmail.com>
Excavator: Upgrade dependencies ()

* Excavator: Upgrade dependencies

* Fix locks

Co-authored-by: svc-excavator-bot <svc-excavator-bot@palantir.com>
Co-authored-by: Grgur Petric Maretic <grgapm@gmail.com>
Revert revert 5131 ()

* Revert ""Revert ""Clock went backwards corruption check ()"" ()""

This reverts commit 7f6c373423e7907b7c7b4808a1478d7ae0d5633f.

* Timestamps dont have to be strictly increasing

* Add test

* Add generated changelog entries
Autorelease 0.283.1","Type
Description
Link
Improvement
TimeLock now validates the expected invariant for its timestamp bounds i.e. the timestamp bound must not decrease with increasing sequence numbers."
"Autorelease 0.275.1
Excavator: Update conjure plugins and dependencies ()

* Excavator: Update conjure plugins and dependencies

* seriously

* fml etc

Co-authored-by: svc-excavator-bot <svc-excavator-bot@palantir.com>
Co-authored-by: Grgur Petric Maretic <grgapm@gmail.com>
Excavator: Prefer AssertJ ()

* Excavator: Prefer AssertJ

* Fix jankiness

Co-authored-by: svc-excavator-bot <svc-excavator-bot@palantir.com>
Co-authored-by: Grgur Petric Maretic <grgapm@gmail.com>
Excavator: Upgrade dependencies ()

* Excavator: Upgrade dependencies

* Fixup

* Fixup

* I am a stable genius

* argh

Co-authored-by: svc-excavator-bot <svc-excavator-bot@palantir.com>
Co-authored-by: jakubk <jakubk@palantir.com>
Co-authored-by: Grgur Petric Maretic <grgapm@gmail.com>
Excavator: Upgrades Baseline to the latest version ()

* Excavator: Upgrades Baseline to the latest version

* MAGIC

Co-authored-by: svc-excavator-bot <svc-excavator-bot@palantir.com>
Co-authored-by: Grgur Petric Maretic <grgapm@gmail.com>
add initializeAsync for Db implementations ()

* add initializeAsync for Db implementations

* replace default value with DEFAULT_INITIALIZE_ASYNC

* format

* checkstyle

* Remove extra line

* Add generated changelog entries

* Add generated changelog entries

Co-authored-by: rzpt <>
Co-authored-by: Sudiksha Nanda <snanda@palantir.com>
Autorelease 0.275.2","Type
Description
Link
Feature
DbKvs can now be initialized asynchronously. Earlier, a service depending on it would crash if the Db was not up at initialization time."
"Autorelease 0.276.4
Excavator: Update conjure plugins and dependencies ()

Co-authored-by: svc-excavator-bot <svc-excavator-bot@palantir.com>
Excavator: Upgrades Baseline to the latest version ()

Co-authored-by: svc-excavator-bot <svc-excavator-bot@palantir.com>
[pds-147605] Upgrade Gradle SLS Packaging 4.10.1 -> 4.24.0 ()

* cli was broken, now it maybe works

* Add generated changelog entries
Autorelease 0.276.5","Type
Description
Link
Fix
AtlasDB CLI now actually calls its main class."
"Increase error-prone reference comparison strictness ()

* Fix non-ASCII character error

Resolves following error from non-breaking space in JavaDoc

atlasdb-commons/src/main/java/com/palantir/common/time/Clock.java:23: error: unmappable character (0xC2) for encoding US-ASCII
atlasdb-commons/src/main/java/com/palantir/common/time/Clock.java:23: error: unmappable character (0xA0) for encoding US-ASCII

* Treat ReferenceEquality as error

* Address ReferenceEquality findings

* Test coverage for ColumnFamilyDefinitions.equalsIgnoringClasspath

* Fix ReferenceEquality in generated stream store code

* StreamStoreRenderer prefers collection constructors

* Rendered stream store prefers collection constructors

* format after schema generation

* Remove unnecessary parentheses

Co-authored-by: Grgur Petric Maretic <grgapm@gmail.com>
add cache warming option to ssm ()

* add limited cache warming option to ssm

Adds a CacheWarming option that can control how the SweepStrategyManager
cache is warmed on initialization. The possible options are FULL,
LIMITED, and NONE. FULL remains the default (so default behavior is not
changing). LIMITED causes only a max of 50 tables to be used for warming
the cache. NONE skips warming the cache.

* Add generated changelog entries

* fix limited metadata tests for cassandra

The Cassandra integration tests leave table metadata in an inconsistent
state which was causing the new test to fail. Adds a workaround where
all tables are dropped at the start of this test.

* remove getLimited versions of get tables/metadata

To avoid complexity, reducing change to just support FULL and NONE as
possible options for cache warming. If desired we could implement
limited versions later with streams etc, but NONE should fix the
internal issue.
Autorelease 0.267.1","Type
Description
Link
Improvement
Adds a CacheWarming option that can control how the SweepStrategyManagercache is warmed on initialization. The possible options are FULL and NONE.FULL remains the default (so default behavior is not changing). NONE skipswarming the cache."
"Revert revert dvkvs invalidator ()

* Revert ""Revert 5010 ()""

This reverts commit 54b18788bff7a48d05a0a4ab3f828875d45defd9.

* Remove fail fast | remove incorrect hasColumns check

* Checkstyle

* Rollback, don't commit

* Add generated changelog entries

* Autorelease 0.249.1-rc1

* No metaData check works with Oracle

* Oh Oracle

* Address comments
Upgrade RocksDB-JNI ()

* upgrade rocksdbjni

* Add generated changelog entries
[LW] Check for bad version in the right place ()

* lets-not-fail

* add test

* Add generated changelog entries

* checkstyle pls
Autorelease 0.252.1","Type
Description
Link
Fix
Upgraded rocksdbjni to 6.11 which has a fix for https://nvd.nist.gov/vuln/detail/CVE-2019-12900.
Fix
Fix LockWatch bug where a leader election could cause all requests to get updates to fail."
"Autorelease 0.276.2
[LW] [PDS-148088] Close your eyes ()

* fun fun fun and games

* hahah

* Add generated changelog entries

* address comments

* Add generated changelog entries
Autorelease 0.276.3","Type
Description
Link
Fix
LockWatchManager now only re-registers the latest requested watches as opposed to all watches registered up to that point."
"Excavator: Upgrades Baseline to the latest version ()

* Excavator: Upgrades Baseline to the latest version

* Fix ClassInitializationDeadlock - 1

* ClassInitializationDeadlock fixes - 2

* ClassInitializationDeadlock fixes - 3

* ClassInitializationDeadlock fixes - 4

* Immutable annotations

* Fix build

* Address comments - 1

* Instrument batcher

* Revert ""Instrument batcher""

This reverts commit 0a5c83907e0600caf1e1393634deb7f2064479a7.

* Extract INITIAL Token

* Extract out constants

* Fix build

Co-authored-by: svc-excavator-bot <svc-excavator-bot@palantir.com>
Co-authored-by: Sudiksha Nanda <snanda@palantir.com>
[Fix develop] Fix a potential deadlock in SweepQueueReader ()

* Fix a potential deadlock in SweepQueueReader

Unsure how this passed baseline originally, but it's blocking
commits on develop.

I've searched internal sources and don't see any references
to the modified member.

* Add generated changelog entries

* bump

Co-authored-by: Carter Kozak <ckozak@palantir.com>
Autorelease 0.289.1","Type
Description
Link
Fix
Fix a potential class initialization deadlock in SweepQueueReader"
"[Cross Client Batching - 1d] | Modify leaderTimes api ()

* Modify leaderTimes api + remove getCommitTimestamps

* Fix tests + remove redundant tests

* Minor refactor

* Address comments

* Address comments
[Cross Client Batching LeaderTimes - 2a] | Refactor coalescing leaderTimeGetter ()

* Fix tests + remove redundant tests

* Refactor LeaderTimeGetter

* Configurable bufferSize

* Implement LeaderTimeCoalescingBatcher

* Wire LeaderTimeGetter

* Fix build

* Address comments

* Remove redundant line

* Fix tests

* Add generated changelog entries

* Fix nits
Autorelease 0.272.1","Type
Description
Link
Improvement
LeaderTimeGetter is an interface responsible for making leaderTime requests to TimeLock with the intend of adding a client side request batching layer. TimeLock adaptor on AtlasDB client now accepts custom implementation of the same."
"Autorelease 0.240.9
Add the Oracle driver into AtlasDB directly (No tests) ()

* Move Oracle stuff internal

* fix incorrect cast

* Consistency

* fix

* remove tests

* Add generated changelog entries

Co-authored-by: James Baker <jbaker@palantir.com>
Autorelease 0.240.10","Type
Description
Link
Improvement
Oracle drivers are now used directly in AtlasDB without the need for a separate driver pulled in separately."
